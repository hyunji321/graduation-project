{"ast":null,"code":"import { c as LocalizationContext, b as _slicedToArray } from './LocalizationContext-f9cc3a84.js';\nimport React__default, { useState, useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Sendbird from './SendbirdProvider.js';\nimport ChannelList from './ChannelList.js';\nimport Conversation from './Channel.js';\nimport ChannelSettings from './ChannelSettings.js';\nimport MessageSearch from './MessageSearch.js';\nimport { L as Label, a as LabelTypography, b as LabelColors, I as Icon, c as IconTypes, d as IconColors, e as Loader } from './index-48f41226.js';\nimport { I as IconButton } from './index-58bb39c7.js';\nimport 'sendbird';\nimport './actionTypes-f3a1a3e6.js';\nimport './index-49fe86ba.js';\nimport 'css-vars-ponyfill';\nimport './index-5bed92c4.js';\nimport './utils-0e572de6.js';\nimport './LeaveChannel-2edea8f9.js';\nimport './index-ccb0a3c2.js';\nimport './index-d00418ca.js';\nimport './index-e2d20807.js';\nimport './index-23738504.js';\nimport 'react-dom';\nimport './index-fc337826.js';\nvar COMPONENT_CLASS_NAME = 'sendbird-message-search-pannel';\nfunction MessageSearchPannel(props) {\n  var channelUrl = props.channelUrl,\n    onResultClick = props.onResultClick,\n    onCloseClick = props.onCloseClick;\n  var _a = useState(''),\n    searchString = _a[0],\n    setSearchString = _a[1];\n  var _b = useState(''),\n    inputString = _b[0],\n    setInputString = _b[1];\n  var _c = useState(false),\n    loading = _c[0],\n    setLoading = _c[1];\n  var stringSet = useContext(LocalizationContext).stringSet;\n  var timeout = null;\n  useEffect(function () {\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n    timeout = setTimeout(function () {\n      setSearchString(inputString);\n      setLoading(true);\n      timeout = null;\n    }, 500);\n  }, [inputString]);\n  var handleOnChangeInputString = function handleOnChangeInputString(e) {\n    setInputString(e.target.value);\n  };\n  var handleOnResultLoaded = function handleOnResultLoaded() {\n    setLoading(false);\n  };\n  var handleOnClickResetStringButton = function handleOnClickResetStringButton(e) {\n    e.stopPropagation();\n    setInputString('');\n    setSearchString('');\n  };\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: COMPONENT_CLASS_NAME\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: COMPONENT_CLASS_NAME + \"__header\"\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    className: COMPONENT_CLASS_NAME + \"__header__title\",\n    type: LabelTypography.H_2,\n    color: LabelColors.ONBACKGROUND_1\n  }, stringSet.SEARCH_IN_CHANNEL), /*#__PURE__*/React__default.createElement(IconButton, {\n    className: COMPONENT_CLASS_NAME + \"__header__close-button\",\n    width: \"32px\",\n    height: \"32px\",\n    onClick: onCloseClick\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    type: IconTypes.CLOSE,\n    fillColor: IconColors.ON_BACKGROUND_1,\n    width: \"22px\",\n    height: \"22px\"\n  }))), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: COMPONENT_CLASS_NAME + \"__input\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: COMPONENT_CLASS_NAME + \"__input__container\"\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    className: COMPONENT_CLASS_NAME + \"__input__container__search-icon\",\n    type: IconTypes.SEARCH,\n    fillColor: IconColors.ON_BACKGROUND_3,\n    width: \"24px\",\n    height: \"24px\"\n  }), /*#__PURE__*/React__default.createElement(\"input\", {\n    className: COMPONENT_CLASS_NAME + \"__input__container__input-area\",\n    placeholder: stringSet.SEARCH,\n    value: inputString,\n    onChange: handleOnChangeInputString\n  }), inputString && loading && /*#__PURE__*/React__default.createElement(Loader, {\n    className: COMPONENT_CLASS_NAME + \"__input__container__spinner\",\n    width: \"20px\",\n    height: \"20px\"\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    type: IconTypes.SPINNER,\n    fillColor: IconColors.PRIMARY,\n    width: \"20px\",\n    height: \"20px\"\n  })), !loading && inputString && /*#__PURE__*/React__default.createElement(Icon, {\n    className: COMPONENT_CLASS_NAME + \"__input__container__reset-input-button\",\n    type: IconTypes.REMOVE,\n    fillColor: IconColors.ON_BACKGROUND_3,\n    width: \"20px\",\n    height: \"20px\",\n    onClick: handleOnClickResetStringButton\n  }))), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: COMPONENT_CLASS_NAME + \"__message-search\"\n  }, /*#__PURE__*/React__default.createElement(MessageSearch, {\n    channelUrl: channelUrl,\n    searchString: searchString,\n    onResultClick: onResultClick,\n    onResultLoaded: handleOnResultLoaded\n  })));\n}\nfunction App(props) {\n  var appId = props.appId,\n    userId = props.userId,\n    accessToken = props.accessToken,\n    theme = props.theme,\n    userListQuery = props.userListQuery,\n    nickname = props.nickname,\n    profileUrl = props.profileUrl,\n    _props$config = props.config,\n    config = _props$config === void 0 ? {} : _props$config,\n    useReaction = props.useReaction,\n    replyType = props.replyType,\n    useMessageGrouping = props.useMessageGrouping,\n    colorSet = props.colorSet,\n    stringSet = props.stringSet,\n    dateLocale = props.dateLocale,\n    allowProfileEdit = props.allowProfileEdit,\n    disableUserProfile = props.disableUserProfile,\n    renderUserProfile = props.renderUserProfile,\n    showSearchIcon = props.showSearchIcon,\n    onProfileEditSuccess = props.onProfileEditSuccess,\n    imageCompression = props.imageCompression,\n    disableAutoSelect = props.disableAutoSelect;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentChannelUrl = _useState2[0],\n    setCurrentChannelUrl = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    showSettings = _useState4[0],\n    setShowSettings = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    showSearch = _useState6[0],\n    setShowSearch = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    highlightedMessage = _useState8[0],\n    setHighlightedMessage = _useState8[1];\n  var _useState9 = useState(null),\n    _useState10 = _slicedToArray(_useState9, 2),\n    startingPoint = _useState10[0],\n    setStartingPoint = _useState10[1];\n  return /*#__PURE__*/React__default.createElement(Sendbird, {\n    stringSet: stringSet,\n    dateLocale: dateLocale,\n    appId: appId,\n    userId: userId,\n    accessToken: accessToken,\n    theme: theme,\n    nickname: nickname,\n    profileUrl: profileUrl,\n    userListQuery: userListQuery,\n    config: config,\n    colorSet: colorSet,\n    disableUserProfile: disableUserProfile,\n    renderUserProfile: renderUserProfile,\n    imageCompression: imageCompression,\n    useReaction: useReaction\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-app__wrap\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-app__channellist-wrap\"\n  }, /*#__PURE__*/React__default.createElement(ChannelList, {\n    allowProfileEdit: allowProfileEdit,\n    onProfileEditSuccess: onProfileEditSuccess,\n    onChannelSelect: function onChannelSelect(channel) {\n      setStartingPoint(null);\n      setHighlightedMessage(null);\n      if (channel && channel.url) {\n        setCurrentChannelUrl(channel.url);\n      } else {\n        setCurrentChannelUrl('');\n      }\n    },\n    disableAutoSelect: disableAutoSelect\n  })), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\\n            \".concat(showSettings ? 'sendbird-app__conversation--settings-open' : '', \"\\n            \").concat(showSearch ? 'sendbird-app__conversation--search-open' : '', \"\\n            sendbird-app__conversation-wrap\\n          \")\n  }, /*#__PURE__*/React__default.createElement(Conversation, {\n    channelUrl: currentChannelUrl,\n    onChatHeaderActionClick: function onChatHeaderActionClick() {\n      setShowSearch(false);\n      setShowSettings(!showSettings);\n    },\n    onSearchClick: function onSearchClick() {\n      setShowSettings(false);\n      setShowSearch(!showSearch);\n    },\n    showSearchIcon: showSearchIcon,\n    startingPoint: startingPoint,\n    highlightedMessage: highlightedMessage,\n    useReaction: useReaction,\n    replyType: replyType,\n    useMessageGrouping: useMessageGrouping\n  })), showSettings && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-app__settingspanel-wrap\"\n  }, /*#__PURE__*/React__default.createElement(ChannelSettings, {\n    className: \"sendbird-channel-settings\",\n    channelUrl: currentChannelUrl,\n    onCloseClick: function onCloseClick() {\n      setShowSettings(false);\n    }\n  })), showSearch && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-app__searchpanel-wrap\"\n  }, /*#__PURE__*/React__default.createElement(MessageSearchPannel, {\n    channelUrl: currentChannelUrl,\n    onResultClick: function onResultClick(message) {\n      if (message.messageId === highlightedMessage) {\n        setHighlightedMessage(null);\n        setTimeout(function () {\n          setHighlightedMessage(message.messageId);\n        });\n      } else {\n        setStartingPoint(message.createdAt);\n        setHighlightedMessage(message.messageId);\n      }\n    },\n    onCloseClick: function onCloseClick() {\n      setShowSearch(false);\n    }\n  }))));\n}\nApp.propTypes = {\n  appId: PropTypes.string.isRequired,\n  userId: PropTypes.string.isRequired,\n  accessToken: PropTypes.string,\n  theme: PropTypes.string,\n  userListQuery: PropTypes.func,\n  nickname: PropTypes.string,\n  profileUrl: PropTypes.string,\n  allowProfileEdit: PropTypes.bool,\n  disableUserProfile: PropTypes.bool,\n  renderUserProfile: PropTypes.func,\n  onProfileEditSuccess: PropTypes.func,\n  config: PropTypes.shape({\n    // None Error Warning Info 'All/Debug'\n    logLevel: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)])\n  }),\n  dateLocale: PropTypes.shape({}),\n  useReaction: PropTypes.bool,\n  replyType: PropTypes.oneOf(['NONE', 'QUOTE_REPLY', 'THREAD']),\n  showSearchIcon: PropTypes.bool,\n  useMessageGrouping: PropTypes.bool,\n  stringSet: PropTypes.objectOf(PropTypes.string),\n  colorSet: PropTypes.objectOf(PropTypes.string),\n  imageCompression: PropTypes.shape({\n    compressionRate: PropTypes.number,\n    resizingWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    resizingHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n  }),\n  disableAutoSelect: PropTypes.bool\n};\nApp.defaultProps = {\n  accessToken: '',\n  theme: 'light',\n  nickname: '',\n  profileUrl: '',\n  userListQuery: null,\n  allowProfileEdit: false,\n  onProfileEditSuccess: null,\n  disableUserProfile: false,\n  showSearchIcon: false,\n  renderUserProfile: null,\n  config: {},\n  dateLocale: null,\n  useReaction: true,\n  replyType: 'NONE',\n  useMessageGrouping: true,\n  stringSet: null,\n  colorSet: null,\n  imageCompression: {},\n  disableAutoSelect: false\n};\nexport { App as default };","map":{"version":3,"names":["COMPONENT_CLASS_NAME","MessageSearchPannel","props","channelUrl","onResultClick","onCloseClick","_a","useState","searchString","setSearchString","_b","inputString","setInputString","_c","loading","setLoading","stringSet","useContext","LocalizationContext","timeout","useEffect","clearTimeout","setTimeout","handleOnChangeInputString","e","target","value","handleOnResultLoaded","handleOnClickResetStringButton","stopPropagation","React__default","createElement","className","Label","type","LabelTypography","H_2","color","LabelColors","ONBACKGROUND_1","SEARCH_IN_CHANNEL","IconButton","width","height","onClick","Icon","IconTypes","CLOSE","fillColor","IconColors","ON_BACKGROUND_1","SEARCH","ON_BACKGROUND_3","placeholder","onChange","Loader","SPINNER","PRIMARY","REMOVE","MessageSearch","onResultLoaded","App","appId","userId","accessToken","theme","userListQuery","nickname","profileUrl","_props$config","config","useReaction","replyType","useMessageGrouping","colorSet","dateLocale","allowProfileEdit","disableUserProfile","renderUserProfile","showSearchIcon","onProfileEditSuccess","imageCompression","disableAutoSelect","_useState","_useState2","_slicedToArray","currentChannelUrl","setCurrentChannelUrl","_useState3","_useState4","showSettings","setShowSettings","_useState5","_useState6","showSearch","setShowSearch","_useState7","_useState8","highlightedMessage","setHighlightedMessage","_useState9","_useState10","startingPoint","setStartingPoint","Sendbird","ChannelList","onChannelSelect","channel","url","concat","Conversation","onChatHeaderActionClick","onSearchClick","ChannelSettings","message","messageId","createdAt","propTypes","PropTypes","string","isRequired","func","bool","shape","logLevel","oneOfType","arrayOf","oneOf","objectOf","compressionRate","number","resizingWidth","resizingHeight","defaultProps"],"sources":["C:\\Users\\chji9\\OneDrive\\바탕 화면\\homeReviewSite\\src\\main\\chat-app\\node_modules\\sendbird-uikit\\src\\smart-components\\MessageSearch\\messageSearchPannel.tsx","C:\\Users\\chji9\\OneDrive\\바탕 화면\\homeReviewSite\\src\\main\\chat-app\\node_modules\\sendbird-uikit\\src\\smart-components\\App\\index.jsx"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport './messageSearchPannel.scss';\n\nimport MessageSearch from './index';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport Icon, { IconTypes, IconColors } from '../../ui/Icon';\nimport IconButton from '../../ui/IconButton';\nimport Label, { LabelTypography, LabelColors } from '../../ui/Label';\nimport Loader from '../../ui/Loader';\n\ninterface Props {\n  channelUrl: string;\n  onResultClick?: (message) => void;\n  onCloseClick?: () => void;\n}\n\nconst COMPONENT_CLASS_NAME = 'sendbird-message-search-pannel';\n\nfunction MessageSearchPannel(props: Props): JSX.Element {\n  const {\n    channelUrl,\n    onResultClick,\n    onCloseClick,\n  } = props;\n\n  const [searchString, setSearchString] = useState('');\n  const [inputString, setInputString] = useState('');\n  const [loading, setLoading] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n\n  let timeout = null;\n  useEffect(() => {\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n    timeout = setTimeout(() => {\n      setSearchString(inputString);\n      setLoading(true);\n      timeout = null;\n    }, 500);\n  }, [inputString]);\n\n  const handleOnChangeInputString = (e) => {\n    setInputString(e.target.value);\n  };\n\n  const handleOnResultLoaded = () => {\n    setLoading(false);\n  };\n\n  const handleOnClickResetStringButton = (e) => {\n    e.stopPropagation();\n    setInputString('');\n    setSearchString('');\n  };\n\n  return (\n    <div className={COMPONENT_CLASS_NAME}>\n      <div className={`${COMPONENT_CLASS_NAME}__header`}>\n        <Label\n          className={`${COMPONENT_CLASS_NAME}__header__title`}\n          type={LabelTypography.H_2}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {stringSet.SEARCH_IN_CHANNEL}\n        </Label>\n        <IconButton\n          className={`${COMPONENT_CLASS_NAME}__header__close-button`}\n          width=\"32px\"\n          height=\"32px\"\n          onClick={onCloseClick}\n        >\n          <Icon\n            type={IconTypes.CLOSE}\n            fillColor={IconColors.ON_BACKGROUND_1}\n            width=\"22px\"\n            height=\"22px\"\n          />\n        </IconButton>\n      </div>\n      <div className={`${COMPONENT_CLASS_NAME}__input`}>\n        <div className={`${COMPONENT_CLASS_NAME}__input__container`}>\n            <Icon\n              className={`${COMPONENT_CLASS_NAME}__input__container__search-icon`}\n              type={IconTypes.SEARCH}\n              fillColor={IconColors.ON_BACKGROUND_3}\n              width=\"24px\"\n              height=\"24px\"\n            />\n            <input\n              className={`${COMPONENT_CLASS_NAME}__input__container__input-area`}\n              placeholder={stringSet.SEARCH}\n              value={inputString}\n              onChange={handleOnChangeInputString}\n            />\n            {\n              inputString && loading && (\n                <Loader\n                  className={`${COMPONENT_CLASS_NAME}__input__container__spinner`}\n                  width=\"20px\"\n                  height=\"20px\"\n                >\n                  <Icon\n                    type={IconTypes.SPINNER}\n                    fillColor={IconColors.PRIMARY}\n                    width=\"20px\"\n                    height=\"20px\"\n                  />\n                </Loader>\n              )\n            }\n            {\n              !loading && inputString && (\n                <Icon\n                  className={`${COMPONENT_CLASS_NAME}__input__container__reset-input-button`}\n                  type={IconTypes.REMOVE}\n                  fillColor={IconColors.ON_BACKGROUND_3}\n                  width=\"20px\"\n                  height=\"20px\"\n                  onClick={handleOnClickResetStringButton}\n                />\n              )\n            }\n        </div>\n      </div>\n      <div className={`${COMPONENT_CLASS_NAME}__message-search`}>\n        <MessageSearch\n          channelUrl={channelUrl}\n          searchString={searchString}\n          onResultClick={onResultClick}\n          onResultLoaded={handleOnResultLoaded}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default MessageSearchPannel;\n","/**\n * This is a drop in Chat solution\n * Can also be used as an example for creating\n * default chat apps\n */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Sendbird from '../../lib/Sendbird';\n\nimport ChannelList from '../ChannelList';\nimport Conversation from '../Conversation';\nimport ChannelSettings from '../ChannelSettings';\nimport MessageSearchPannel from '../MessageSearch/messageSearchPannel';\n\nimport './index.scss';\n\nexport default function App(props) {\n  const {\n    appId,\n    userId,\n    accessToken,\n    theme,\n    userListQuery,\n    nickname,\n    profileUrl,\n    config = {},\n    useReaction,\n    replyType,\n    useMessageGrouping,\n    colorSet,\n    stringSet,\n    dateLocale,\n    allowProfileEdit,\n    disableUserProfile,\n    renderUserProfile,\n    showSearchIcon,\n    onProfileEditSuccess,\n    imageCompression,\n    disableAutoSelect,\n  } = props;\n  const [currentChannelUrl, setCurrentChannelUrl] = useState(null);\n  const [showSettings, setShowSettings] = useState(false);\n  const [showSearch, setShowSearch] = useState(false);\n  const [highlightedMessage, setHighlightedMessage] = useState(null);\n  const [startingPoint, setStartingPoint] = useState(null);\n\n  return (\n    <Sendbird\n      stringSet={stringSet}\n      dateLocale={dateLocale}\n      appId={appId}\n      userId={userId}\n      accessToken={accessToken}\n      theme={theme}\n      nickname={nickname}\n      profileUrl={profileUrl}\n      userListQuery={userListQuery}\n      config={config}\n      colorSet={colorSet}\n      disableUserProfile={disableUserProfile}\n      renderUserProfile={renderUserProfile}\n      imageCompression={imageCompression}\n      useReaction={useReaction}\n    >\n      <div className=\"sendbird-app__wrap\">\n        <div className=\"sendbird-app__channellist-wrap\">\n          <ChannelList\n            allowProfileEdit={allowProfileEdit}\n            onProfileEditSuccess={onProfileEditSuccess}\n            onChannelSelect={(channel) => {\n              setStartingPoint(null);\n              setHighlightedMessage(null);\n              if (channel && channel.url) {\n                setCurrentChannelUrl(channel.url);\n              } else {\n                setCurrentChannelUrl('');\n              }\n            }}\n            disableAutoSelect={disableAutoSelect}\n          />\n        </div>\n        <div\n          className={`\n            ${showSettings ? 'sendbird-app__conversation--settings-open' : ''}\n            ${showSearch ? 'sendbird-app__conversation--search-open' : ''}\n            sendbird-app__conversation-wrap\n          `}\n        >\n          <Conversation\n            channelUrl={currentChannelUrl}\n            onChatHeaderActionClick={() => {\n              setShowSearch(false);\n              setShowSettings(!showSettings);\n            }}\n            onSearchClick={() => {\n              setShowSettings(false);\n              setShowSearch(!showSearch);\n            }}\n            showSearchIcon={showSearchIcon}\n            startingPoint={startingPoint}\n            highlightedMessage={highlightedMessage}\n            useReaction={useReaction}\n            replyType={replyType}\n            useMessageGrouping={useMessageGrouping}\n          />\n        </div>\n        {showSettings && (\n          <div className=\"sendbird-app__settingspanel-wrap\">\n            <ChannelSettings\n              className=\"sendbird-channel-settings\"\n              channelUrl={currentChannelUrl}\n              onCloseClick={() => {\n                setShowSettings(false);\n              }}\n            />\n          </div>\n        )}\n        {showSearch && (\n          <div className=\"sendbird-app__searchpanel-wrap\">\n            <MessageSearchPannel\n              channelUrl={currentChannelUrl}\n              onResultClick={(message) => {\n                if (message.messageId === highlightedMessage) {\n                  setHighlightedMessage(null);\n                  setTimeout(() => {\n                    setHighlightedMessage(message.messageId);\n                  });\n                } else {\n                  setStartingPoint(message.createdAt);\n                  setHighlightedMessage(message.messageId);\n                }\n              }}\n              onCloseClick={() => {\n                setShowSearch(false);\n              }}\n            />\n          </div>\n        )}\n      </div>\n    </Sendbird>\n  );\n}\n\nApp.propTypes = {\n  appId: PropTypes.string.isRequired,\n  userId: PropTypes.string.isRequired,\n  accessToken: PropTypes.string,\n  theme: PropTypes.string,\n  userListQuery: PropTypes.func,\n  nickname: PropTypes.string,\n  profileUrl: PropTypes.string,\n  allowProfileEdit: PropTypes.bool,\n  disableUserProfile: PropTypes.bool,\n  renderUserProfile: PropTypes.func,\n  onProfileEditSuccess: PropTypes.func,\n  config: PropTypes.shape({\n    // None Error Warning Info 'All/Debug'\n    logLevel: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.string),\n    ]),\n  }),\n  dateLocale: PropTypes.shape({}),\n  useReaction: PropTypes.bool,\n  replyType: PropTypes.oneOf(['NONE', 'QUOTE_REPLY', 'THREAD']),\n  showSearchIcon: PropTypes.bool,\n  useMessageGrouping: PropTypes.bool,\n  stringSet: PropTypes.objectOf(PropTypes.string),\n  colorSet: PropTypes.objectOf(PropTypes.string),\n  imageCompression: PropTypes.shape({\n    compressionRate: PropTypes.number,\n    resizingWidth: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n    resizingHeight: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n  }),\n  disableAutoSelect: PropTypes.bool,\n};\n\nApp.defaultProps = {\n  accessToken: '',\n  theme: 'light',\n  nickname: '',\n  profileUrl: '',\n  userListQuery: null,\n  allowProfileEdit: false,\n  onProfileEditSuccess: null,\n  disableUserProfile: false,\n  showSearchIcon: false,\n  renderUserProfile: null,\n  config: {},\n  dateLocale: null,\n  useReaction: true,\n  replyType: 'NONE',\n  useMessageGrouping: true,\n  stringSet: null,\n  colorSet: null,\n  imageCompression: {},\n  disableAutoSelect: false,\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAgBA,IAAMA,oBAAoB,GAAG,gCAA7B;AAEA,SAASC,mBAATA,CAA6BC,KAA7B;EAEI,IAAAC,UAAU,GAGRD,KAAK,CAAAC,UAHP;IACAC,aAAa,GAEXF,KAAK,CAAAE,aAHP;IAEAC,YAAY,GACVH,KAAK,CAAAG,YAHP;EAKI,IAAAC,EAAA,GAAkCC,QAAQ,CAAC,EAAD,CAA1C;IAACC,YAAY,GAAAF,EAAA,GAAb;IAAeG,eAAe,GAAAH,EAAA,GAA9B;EACA,IAAAI,EAAA,GAAgCH,QAAQ,CAAC,EAAD,CAAxC;IAACI,WAAW,GAAAD,EAAA,GAAZ;IAAcE,cAAc,GAAAF,EAAA,GAA5B;EACA,IAAAG,EAAA,GAAwBN,QAAQ,CAAC,KAAD,CAAhC;IAACO,OAAO,GAAAD,EAAA,GAAR;IAAUE,UAAU,GAAAF,EAAA,GAApB;EACE,IAAAG,SAAS,GAAKC,UAAU,CAACC,mBAAD,CAAV,CAAAF,SAAd;EAER,IAAIG,OAAO,GAAG,IAAd;EACAC,SAAS,CAAC;IACR,IAAID,OAAJ,EAAa;MACXE,YAAY,CAACF,OAAD,CAAZ;IACD;IACDA,OAAO,GAAGG,UAAU,CAAC;MACnBb,eAAe,CAACE,WAAD,CAAf;MACAI,UAAU,CAAC,IAAD,CAAV;MACAI,OAAO,GAAG,IAAV;IACD,CAJmB,EAIjB,GAJiB,CAApB;EAKD,CATQ,EASN,CAACR,WAAD,CATM,CAAT;EAWA,IAAMY,yBAAyB,GAAG,SAA5BA,yBAA4BA,CAACC,CAAD;IAChCZ,cAAc,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;EACD,CAFD;EAIA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuBA,CAAA;IAC3BZ,UAAU,CAAC,KAAD,CAAV;EACD,CAFD;EAIA,IAAMa,8BAA8B,GAAG,SAAjCA,8BAAiCA,CAACJ,CAAD;IACrCA,CAAC,CAACK,eAAF;IACAjB,cAAc,CAAC,EAAD,CAAd;IACAH,eAAe,CAAC,EAAD,CAAf;EACD,CAJD;EAMA,oBACEqB,cAAA,CAAAC,aAAA;IAAKC,SAAS,EAAEhC;EAAhB,gBACE8B,cAAA,CAAAC,aAAA;IAAKC,SAAS,EAAKhC,oBAAoB;EAAvC,gBACE8B,cAAA,CAAAC,aAAA,CAACE,KAAD;IACED,SAAS,EAAKhC,oBAAoB,oBADpC;IAEEkC,IAAI,EAAEC,eAAe,CAACC,GAFxB;IAGEC,KAAK,EAAEC,WAAW,CAACC;EAHrB,GAKGvB,SAAS,CAACwB,iBALb,CADF,eAQEV,cAAA,CAAAC,aAAA,CAACU,UAAD;IACET,SAAS,EAAKhC,oBAAoB,2BADpC;IAEE0C,KAAK,EAAC,MAFR;IAGEC,MAAM,EAAC,MAHT;IAIEC,OAAO,EAAEvC;EAJX,gBAMEyB,cAAA,CAAAC,aAAA,CAACc,IAAD;IACEX,IAAI,EAAEY,SAAS,CAACC,KADlB;IAEEC,SAAS,EAAEC,UAAU,CAACC,eAFxB;IAGER,KAAK,EAAC,MAHR;IAIEC,MAAM,EAAC;EAJT,EANF,CARF,CADF,eAuBEb,cAAA,CAAAC,aAAA;IAAKC,SAAS,EAAKhC,oBAAoB;EAAvC,gBACE8B,cAAA,CAAAC,aAAA;IAAKC,SAAS,EAAKhC,oBAAoB;EAAvC,gBACI8B,cAAA,CAAAC,aAAA,CAACc,IAAD;IACEb,SAAS,EAAKhC,oBAAoB,oCADpC;IAEEkC,IAAI,EAAEY,SAAS,CAACK,MAFlB;IAGEH,SAAS,EAAEC,UAAU,CAACG,eAHxB;IAIEV,KAAK,EAAC,MAJR;IAKEC,MAAM,EAAC;EALT,EADJ,eAQIb,cAAA,CAAAC,aAAA;IACEC,SAAS,EAAKhC,oBAAoB,mCADpC;IAEEqD,WAAW,EAAErC,SAAS,CAACmC,MAFzB;IAGEzB,KAAK,EAAEf,WAHT;IAIE2C,QAAQ,EAAE/B;EAJZ,EARJ,EAeMZ,WAAW,IAAIG,OAAf,iBACEgB,cAAA,CAAAC,aAAA,CAACwB,MAAD;IACEvB,SAAS,EAAKhC,oBAAoB,gCADpC;IAEE0C,KAAK,EAAC,MAFR;IAGEC,MAAM,EAAC;EAHT,gBAKEb,cAAA,CAAAC,aAAA,CAACc,IAAD;IACEX,IAAI,EAAEY,SAAS,CAACU,OADlB;IAEER,SAAS,EAAEC,UAAU,CAACQ,OAFxB;IAGEf,KAAK,EAAC,MAHR;IAIEC,MAAM,EAAC;EAJT,EALF,CAhBR,EA+BM,CAAC7B,OAAD,IAAYH,WAAZ,iBACEmB,cAAA,CAAAC,aAAA,CAACc,IAAD;IACEb,SAAS,EAAKhC,oBAAoB,2CADpC;IAEEkC,IAAI,EAAEY,SAAS,CAACY,MAFlB;IAGEV,SAAS,EAAEC,UAAU,CAACG,eAHxB;IAIEV,KAAK,EAAC,MAJR;IAKEC,MAAM,EAAC,MALT;IAMEC,OAAO,EAAEhB;EANX,EAhCR,CADF,CAvBF,eAoEEE,cAAA,CAAAC,aAAA;IAAKC,SAAS,EAAKhC,oBAAoB;EAAvC,gBACE8B,cAAA,CAAAC,aAAA,CAAC4B,aAAD;IACExD,UAAU,EAAEA,UADd;IAEEK,YAAY,EAAEA,YAFhB;IAGEJ,aAAa,EAAEA,aAHjB;IAIEwD,cAAc,EAAEjC;EAJlB,EADF,CApEF,CADF;AA+ED;ACtHc,SAASkC,GAATA,CAAa3D,KAAb,EAAoB;EACjC,IACE4D,KADF,GAsBI5D,KAtBJ,CACE4D,KADF;IAEEC,MAFF,GAsBI7D,KAtBJ,CAEE6D,MAFF;IAGEC,WAHF,GAsBI9D,KAtBJ,CAGE8D,WAHF;IAIEC,KAJF,GAsBI/D,KAtBJ,CAIE+D,KAJF;IAKEC,aALF,GAsBIhE,KAtBJ,CAKEgE,aALF;IAMEC,QANF,GAsBIjE,KAtBJ,CAMEiE,QANF;IAOEC,UAPF,GAsBIlE,KAtBJ,CAOEkE,UAPF;IAAAC,aAAA,GAsBInE,KAtBJ,CAQEoE,MARF;IAQEA,MARF,GAAAD,aAAA,cAQW,EARX,GAAAA,aAAA;IASEE,WATF,GAsBIrE,KAtBJ,CASEqE,WATF;IAUEC,SAVF,GAsBItE,KAtBJ,CAUEsE,SAVF;IAWEC,kBAXF,GAsBIvE,KAtBJ,CAWEuE,kBAXF;IAYEC,QAZF,GAsBIxE,KAtBJ,CAYEwE,QAZF;IAaE1D,SAbF,GAsBId,KAtBJ,CAaEc,SAbF;IAcE2D,UAdF,GAsBIzE,KAtBJ,CAcEyE,UAdF;IAeEC,gBAfF,GAsBI1E,KAtBJ,CAeE0E,gBAfF;IAgBEC,kBAhBF,GAsBI3E,KAtBJ,CAgBE2E,kBAhBF;IAiBEC,iBAjBF,GAsBI5E,KAtBJ,CAiBE4E,iBAjBF;IAkBEC,cAlBF,GAsBI7E,KAtBJ,CAkBE6E,cAlBF;IAmBEC,oBAnBF,GAsBI9E,KAtBJ,CAmBE8E,oBAnBF;IAoBEC,gBApBF,GAsBI/E,KAtBJ,CAoBE+E,gBApBF;IAqBEC,iBArBF,GAsBIhF,KAtBJ,CAqBEgF,iBArBF;EAuBA,IAAAC,SAAA,GAAkD5E,QAAQ,CAAC,IAAD,CAA1D;IAAA6E,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAOG,iBAAP,GAAAF,UAAA;IAA0BG,oBAA1B,GAAAH,UAAA;EACA,IAAAI,UAAA,GAAwCjF,QAAQ,CAAC,KAAD,CAAhD;IAAAkF,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAOE,YAAP,GAAAD,UAAA;IAAqBE,eAArB,GAAAF,UAAA;EACA,IAAAG,UAAA,GAAoCrF,QAAQ,CAAC,KAAD,CAA5C;IAAAsF,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAOE,UAAP,GAAAD,UAAA;IAAmBE,aAAnB,GAAAF,UAAA;EACA,IAAAG,UAAA,GAAoDzF,QAAQ,CAAC,IAAD,CAA5D;IAAA0F,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAAOE,kBAAP,GAAAD,UAAA;IAA2BE,qBAA3B,GAAAF,UAAA;EACA,IAAAG,UAAA,GAA0C7F,QAAQ,CAAC,IAAD,CAAlD;IAAA8F,WAAA,GAAAhB,cAAA,CAAAe,UAAA;IAAOE,aAAP,GAAAD,WAAA;IAAsBE,gBAAtB,GAAAF,WAAA;EAEA,oBACEvE,cAAA,CAAAC,aAAA,CAACyE,QAAD;IACExF,SAAS,EAAEA,SADb;IAEE2D,UAAU,EAAEA,UAFd;IAGEb,KAAK,EAAEA,KAHT;IAIEC,MAAM,EAAEA,MAJV;IAKEC,WAAW,EAAEA,WALf;IAMEC,KAAK,EAAEA,KANT;IAOEE,QAAQ,EAAEA,QAPZ;IAQEC,UAAU,EAAEA,UARd;IASEF,aAAa,EAAEA,aATjB;IAUEI,MAAM,EAAEA,MAVV;IAWEI,QAAQ,EAAEA,QAXZ;IAYEG,kBAAkB,EAAEA,kBAZtB;IAaEC,iBAAiB,EAAEA,iBAbrB;IAcEG,gBAAgB,EAAEA,gBAdpB;IAeEV,WAAW,EAAEA;EAff,gBAiBEzC,cAAA,CAAAC,aAAA;IAAKC,SAAS,EAAC;EAAf,gBACEF,cAAA,CAAAC,aAAA;IAAKC,SAAS,EAAC;EAAf,gBACEF,cAAA,CAAAC,aAAA,CAAC0E,WAAD;IACE7B,gBAAgB,EAAEA,gBADpB;IAEEI,oBAAoB,EAAEA,oBAFxB;IAGE0B,eAAe,EAAE,SAAAA,gBAACC,OAAD,EAAa;MAC5BJ,gBAAgB,CAAC,IAAD,CAAhB;MACAJ,qBAAqB,CAAC,IAAD,CAArB;MACA,IAAIQ,OAAO,IAAIA,OAAO,CAACC,GAAvB,EAA4B;QAC1BrB,oBAAoB,CAACoB,OAAO,CAACC,GAAT,CAApB;MACD,CAFD,MAEO;QACLrB,oBAAoB,CAAC,EAAD,CAApB;MACD;IACF,CAXH;IAYEL,iBAAiB,EAAEA;EAZrB,EADF,CADF,eAiBEpD,cAAA,CAAAC,aAAA;IACEC,SAAS,mBAAA6E,MAAA,CACLnB,YAAY,GAAG,2CAAH,GAAiD,EADxD,oBAAAmB,MAAA,CAELf,UAAU,GAAG,yCAAH,GAA+C,EAFpD;EADX,gBAOEhE,cAAA,CAAAC,aAAA,CAAC+E,YAAD;IACE3G,UAAU,EAAEmF,iBADd;IAEEyB,uBAAuB,EAAE,SAAAA,wBAAA,EAAM;MAC7BhB,aAAa,CAAC,KAAD,CAAb;MACAJ,eAAe,CAAC,CAACD,YAAF,CAAf;IACD,CALH;IAMEsB,aAAa,EAAE,SAAAA,cAAA,EAAM;MACnBrB,eAAe,CAAC,KAAD,CAAf;MACAI,aAAa,CAAC,CAACD,UAAF,CAAb;IACD,CATH;IAUEf,cAAc,EAAEA,cAVlB;IAWEuB,aAAa,EAAEA,aAXjB;IAYEJ,kBAAkB,EAAEA,kBAZtB;IAaE3B,WAAW,EAAEA,WAbf;IAcEC,SAAS,EAAEA,SAdb;IAeEC,kBAAkB,EAAEA;EAftB,EAPF,CAjBF,EA0CGiB,YAAY,iBACX5D,cAAA,CAAAC,aAAA;IAAKC,SAAS,EAAC;EAAf,gBACEF,cAAA,CAAAC,aAAA,CAACkF,eAAD;IACEjF,SAAS,EAAC,2BADZ;IAEE7B,UAAU,EAAEmF,iBAFd;IAGEjF,YAAY,EAAE,SAAAA,aAAA,EAAM;MAClBsF,eAAe,CAAC,KAAD,CAAf;IACD;EALH,EADF,CA3CJ,EAqDGG,UAAU,iBACThE,cAAA,CAAAC,aAAA;IAAKC,SAAS,EAAC;EAAf,gBACEF,cAAA,CAAAC,aAAA,CAAC9B,mBAAD;IACEE,UAAU,EAAEmF,iBADd;IAEElF,aAAa,EAAE,SAAAA,cAAC8G,OAAD,EAAa;MAC1B,IAAIA,OAAO,CAACC,SAAR,KAAsBjB,kBAA1B,EAA8C;QAC5CC,qBAAqB,CAAC,IAAD,CAArB;QACA7E,UAAU,CAAC,YAAM;UACf6E,qBAAqB,CAACe,OAAO,CAACC,SAAT,CAArB;QACD,CAFS,CAAV;MAGD,CALD,MAKO;QACLZ,gBAAgB,CAACW,OAAO,CAACE,SAAT,CAAhB;QACAjB,qBAAqB,CAACe,OAAO,CAACC,SAAT,CAArB;MACD;IACF,CAZH;IAaE9G,YAAY,EAAE,SAAAA,aAAA,EAAM;MAClB0F,aAAa,CAAC,KAAD,CAAb;IACD;EAfH,EADF,CAtDJ,CAjBF,CADF;AA+FD;AAEDlC,GAAG,CAACwD,SAAJ,GAAgB;EACdvD,KAAK,EAAEwD,SAAS,CAACC,MAAV,CAAiBC,UADV;EAEdzD,MAAM,EAAEuD,SAAS,CAACC,MAAV,CAAiBC,UAFX;EAGdxD,WAAW,EAAEsD,SAAS,CAACC,MAHT;EAIdtD,KAAK,EAAEqD,SAAS,CAACC,MAJH;EAKdrD,aAAa,EAAEoD,SAAS,CAACG,IALX;EAMdtD,QAAQ,EAAEmD,SAAS,CAACC,MANN;EAOdnD,UAAU,EAAEkD,SAAS,CAACC,MAPR;EAQd3C,gBAAgB,EAAE0C,SAAS,CAACI,IARd;EASd7C,kBAAkB,EAAEyC,SAAS,CAACI,IAThB;EAUd5C,iBAAiB,EAAEwC,SAAS,CAACG,IAVf;EAWdzC,oBAAoB,EAAEsC,SAAS,CAACG,IAXlB;EAYdnD,MAAM,EAAEgD,SAAS,CAACK,KAAV,CAAgB;IACtB;IACAC,QAAQ,EAAEN,SAAS,CAACO,SAAV,CAAoB,CAC5BP,SAAS,CAACC,MADkB,EAE5BD,SAAS,CAACQ,OAAV,CAAkBR,SAAS,CAACC,MAA5B,CAF4B,CAApB;EAFY,CAAhB,CAZM;EAmBd5C,UAAU,EAAE2C,SAAS,CAACK,KAAV,CAAgB,EAAhB,CAnBE;EAoBdpD,WAAW,EAAE+C,SAAS,CAACI,IApBT;EAqBdlD,SAAS,EAAE8C,SAAS,CAACS,KAAV,CAAgB,CAAC,MAAD,EAAS,aAAT,EAAwB,QAAxB,CAAhB,CArBG;EAsBdhD,cAAc,EAAEuC,SAAS,CAACI,IAtBZ;EAuBdjD,kBAAkB,EAAE6C,SAAS,CAACI,IAvBhB;EAwBd1G,SAAS,EAAEsG,SAAS,CAACU,QAAV,CAAmBV,SAAS,CAACC,MAA7B,CAxBG;EAyBd7C,QAAQ,EAAE4C,SAAS,CAACU,QAAV,CAAmBV,SAAS,CAACC,MAA7B,CAzBI;EA0BdtC,gBAAgB,EAAEqC,SAAS,CAACK,KAAV,CAAgB;IAChCM,eAAe,EAAEX,SAAS,CAACY,MADK;IAEhCC,aAAa,EAAEb,SAAS,CAACO,SAAV,CAAoB,CACjCP,SAAS,CAACY,MADuB,EAEjCZ,SAAS,CAACC,MAFuB,CAApB,CAFiB;IAMhCa,cAAc,EAAEd,SAAS,CAACO,SAAV,CAAoB,CAClCP,SAAS,CAACY,MADwB,EAElCZ,SAAS,CAACC,MAFwB,CAApB;EANgB,CAAhB,CA1BJ;EAqCdrC,iBAAiB,EAAEoC,SAAS,CAACI;AArCf,CAAhB;AAwCA7D,GAAG,CAACwE,YAAJ,GAAmB;EACjBrE,WAAW,EAAE,EADI;EAEjBC,KAAK,EAAE,OAFU;EAGjBE,QAAQ,EAAE,EAHO;EAIjBC,UAAU,EAAE,EAJK;EAKjBF,aAAa,EAAE,IALE;EAMjBU,gBAAgB,EAAE,KAND;EAOjBI,oBAAoB,EAAE,IAPL;EAQjBH,kBAAkB,EAAE,KARH;EASjBE,cAAc,EAAE,KATC;EAUjBD,iBAAiB,EAAE,IAVF;EAWjBR,MAAM,EAAE,EAXS;EAYjBK,UAAU,EAAE,IAZK;EAajBJ,WAAW,EAAE,IAbI;EAcjBC,SAAS,EAAE,MAdM;EAejBC,kBAAkB,EAAE,IAfH;EAgBjBzD,SAAS,EAAE,IAhBM;EAiBjB0D,QAAQ,EAAE,IAjBO;EAkBjBO,gBAAgB,EAAE,EAlBD;EAmBjBC,iBAAiB,EAAE;AAnBF,CAAnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}