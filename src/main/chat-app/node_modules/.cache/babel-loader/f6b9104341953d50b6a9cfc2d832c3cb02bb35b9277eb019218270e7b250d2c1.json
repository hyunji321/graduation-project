{"ast":null,"code":"import { b as _slicedToArray, c as LocalizationContext, d as __spreadArray, _ as __assign, w as withSendbirdContext, u as uuidv4, e as _toConsumableArray } from './LocalizationContext-f9cc3a84.js';\nimport React__default, { useRef, useState, useContext, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { M as Modal, T as Type, a as TextButton, C as ContextMenu, I as IconButton, b as MenuItems, c as MenuItem, B as Button, d as ButtonTypes, e as ButtonSizes, U as UserProfileContext, f as ConnectedUserProfile, g as getSdk, h as UserProfileProvider } from './index-58bb39c7.js';\nimport { I as InviteMembers$1, B as Badge, c as createDefaultUserListQuery, L as LeaveChannel } from './LeaveChannel-2edea8f9.js';\nimport { A as Avatar, L as Label, a as LabelTypography, b as LabelColors, I as Icon, c as IconTypes, d as IconColors, P as PlaceHolder, f as PlaceHolderTypes } from './index-48f41226.js';\nimport { I as InputLabel, a as Input, n as noop, U as UserListItem$2, M as MutedAvatarOverlay } from './index-ccb0a3c2.js';\nimport { C as ChannelAvatar } from './index-5bed92c4.js';\nimport { A as AccordionGroup, a as Accordion } from './index-fc337826.js';\nimport 'react-dom';\nimport './index-49fe86ba.js';\nimport './utils-0e572de6.js';\nvar EditDetails = function EditDetails(props) {\n  var _onSubmit = props.onSubmit,\n    onCancel = props.onCancel,\n    channel = props.channel,\n    userId = props.userId,\n    theme = props.theme;\n  var inputRef = useRef(null);\n  var formRef = useRef(null);\n  var hiddenInputRef = useRef(null);\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentImg = _useState2[0],\n    setCurrentImg = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    newFile = _useState4[0],\n    setNewFile = _useState4[1];\n  var _useContext = useContext(LocalizationContext),\n    stringSet = _useContext.stringSet;\n  var title = channel.name;\n  return /*#__PURE__*/React__default.createElement(Modal, {\n    titleText: stringSet.MODAL__CHANNEL_INFORMATION__TITLE,\n    submitText: stringSet.BUTTON__SAVE,\n    onCancel: onCancel,\n    onSubmit: function onSubmit() {\n      if (title !== '' && !inputRef.current.value) {\n        if (formRef.current.reportValidity) {\n          // might not work in explorer\n          formRef.current.reportValidity();\n        }\n        return;\n      }\n      _onSubmit(newFile, inputRef.current.value);\n      onCancel();\n    },\n    type: Type.PRIMARY\n  }, /*#__PURE__*/React__default.createElement(\"form\", {\n    className: \"channel-profile-form\",\n    ref: formRef,\n    onSubmit: function onSubmit(e) {\n      e.preventDefault();\n    }\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"channel-profile-form__img-section\"\n  }, /*#__PURE__*/React__default.createElement(InputLabel, null, stringSet.MODAL__CHANNEL_INFORMATION__CHANNEL_IMAGE), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"channel-profile-form__avatar\"\n  }, currentImg ? /*#__PURE__*/React__default.createElement(Avatar, {\n    height: \"80px\",\n    width: \"80px\",\n    src: currentImg\n  }) : /*#__PURE__*/React__default.createElement(ChannelAvatar, {\n    height: 80,\n    width: 80,\n    channel: channel,\n    userId: userId,\n    theme: theme\n  })), /*#__PURE__*/React__default.createElement(\"input\", {\n    ref: hiddenInputRef,\n    type: \"file\",\n    accept: \"image/gif, image/jpeg, image/png\",\n    style: {\n      display: 'none'\n    },\n    onChange: function onChange(e) {\n      setCurrentImg(URL.createObjectURL(e.target.files[0]));\n      setNewFile(e.target.files[0]);\n      hiddenInputRef.current.value = '';\n    }\n  }), /*#__PURE__*/React__default.createElement(TextButton, {\n    className: \"channel-profile-form__avatar-button\",\n    onClick: function onClick() {\n      return hiddenInputRef.current.click();\n    },\n    notUnderline: true\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.BUTTON_1,\n    color: LabelColors.PRIMARY\n  }, stringSet.MODAL__CHANNEL_INFORMATION__UPLOAD))), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"channel-profile-form__name-section\"\n  }, /*#__PURE__*/React__default.createElement(InputLabel, null, stringSet.MODAL__CHANNEL_INFORMATION__CHANNEL_NAME), /*#__PURE__*/React__default.createElement(Input, {\n    required: title !== '',\n    name: \"channel-profile-form__name\",\n    ref: inputRef,\n    value: title,\n    placeHolder: stringSet.MODAL__CHANNEL_INFORMATION__INPUT__PLACE_HOLDER\n  }))));\n};\nEditDetails.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  channel: PropTypes.shape({\n    name: PropTypes.string\n  }).isRequired,\n  userId: PropTypes.string.isRequired,\n  theme: PropTypes.string.isRequired\n};\nvar ChannelProfile = function ChannelProfile(props) {\n  var disabled = props.disabled,\n    channel = props.channel,\n    userId = props.userId,\n    theme = props.theme,\n    onChannelInfoChange = props.onChannelInfoChange;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    showModal = _useState2[0],\n    setShowModal = _useState2[1];\n  var _useContext = useContext(LocalizationContext),\n    stringSet = _useContext.stringSet;\n  var getChannelName = function getChannelName() {\n    if (channel && channel.name && channel.name !== 'Group Channel') {\n      return channel.name;\n    }\n    if (channel && (channel.name === 'Group Channel' || !channel.name)) {\n      return channel.members.map(function (member) {\n        return member.nickname || stringSet.NO_NAME;\n      }).join(', ');\n    }\n    return stringSet.NO_TITLE;\n  };\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-profile\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-profile--inner\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-profile__avatar\"\n  }, /*#__PURE__*/React__default.createElement(ChannelAvatar, {\n    channel: channel,\n    userId: userId,\n    theme: theme,\n    width: 80,\n    height: 80\n  })), /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-channel-profile__title\",\n    type: LabelTypography.SUBTITLE_2,\n    color: LabelColors.ONBACKGROUND_1\n  }, getChannelName()), /*#__PURE__*/React__default.createElement(TextButton, {\n    disabled: disabled,\n    className: \"sendbird-channel-profile__edit\",\n    onClick: function onClick() {\n      if (disabled) {\n        return;\n      }\n      setShowModal(true);\n    },\n    notUnderline: true\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.BUTTON_1,\n    color: disabled ? LabelColors.ONBACKGROUND_2 : LabelColors.PRIMARY\n  }, stringSet.CHANNEL_SETTING__PROFILE__EDIT)), showModal && /*#__PURE__*/React__default.createElement(EditDetails, {\n    onCancel: function onCancel() {\n      return setShowModal(false);\n    },\n    onSubmit: onChannelInfoChange,\n    channel: channel,\n    userId: userId,\n    theme: theme\n  })));\n};\nChannelProfile.propTypes = {\n  channel: PropTypes.shape({\n    name: PropTypes.string,\n    members: PropTypes.arrayOf(PropTypes.shape({\n      nickname: PropTypes.string\n    }))\n  }).isRequired,\n  userId: PropTypes.string.isRequired,\n  theme: PropTypes.string,\n  disabled: PropTypes.bool,\n  onChannelInfoChange: PropTypes.func\n};\nChannelProfile.defaultProps = {\n  theme: 'light',\n  disabled: false,\n  onChannelInfoChange: function onChannelInfoChange() {}\n};\nfunction MembersModal(_a) {\n  var hideModal = _a.hideModal,\n    channel = _a.channel,\n    currentUser = _a.currentUser;\n  var _b = useState([]),\n    members = _b[0],\n    setMembers = _b[1];\n  var _c = useState(null),\n    memberQuery = _c[0],\n    setMemberQuery = _c[1];\n  useEffect(function () {\n    var memberListQuery = channel.createMemberListQuery();\n    memberListQuery.limit = 20;\n    memberListQuery.next(function (members, error) {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n    });\n    setMemberQuery(memberListQuery);\n  }, []);\n  return /*#__PURE__*/React__default.createElement(\"div\", null, /*#__PURE__*/React__default.createElement(Modal, {\n    hideFooter: true,\n    onCancel: function onCancel() {\n      return hideModal();\n    },\n    onSubmit: noop,\n    titleText: \"All Members\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-more-members__popup-scroll\",\n    onScroll: function onScroll(e) {\n      var hasNext = memberQuery.hasNext;\n      var target = e.target;\n      var fetchMore = target.clientHeight + target.scrollTop === target.scrollHeight;\n      if (hasNext && fetchMore) {\n        memberQuery.next(function (o, error) {\n          if (error) {\n            return;\n          }\n          setMembers(__spreadArray(__spreadArray([], members, true), o, true));\n        });\n      }\n    }\n  }, members.map(function (member) {\n    return /*#__PURE__*/React__default.createElement(UserListItem$2, {\n      user: member,\n      key: member.userId,\n      currentUser: currentUser,\n      action: function action(_a) {\n        var parentRef = _a.parentRef,\n          actionRef = _a.actionRef;\n        return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, channel.myRole === 'operator' && /*#__PURE__*/React__default.createElement(ContextMenu, {\n          menuTrigger: function menuTrigger(toggleDropdown) {\n            return /*#__PURE__*/React__default.createElement(IconButton, {\n              className: \"sendbird-user-message__more__menu\",\n              width: \"32px\",\n              height: \"32px\",\n              onClick: toggleDropdown\n            }, /*#__PURE__*/React__default.createElement(Icon, {\n              width: \"24px\",\n              height: \"24px\",\n              type: IconTypes.MORE,\n              fillColor: IconColors.CONTENT_INVERSE\n            }));\n          },\n          menuItems: function menuItems(closeDropdown) {\n            return /*#__PURE__*/React__default.createElement(MenuItems, {\n              parentContainRef: parentRef,\n              parentRef: actionRef // for catching location(x, y) of MenuItems\n              ,\n\n              closeDropdown: closeDropdown,\n              openLeft: true\n            }, /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                if (member.role !== 'operator') {\n                  channel.addOperators([member.userId], function () {\n                    setMembers(members.map(function (m) {\n                      if (m.userId === member.userId) {\n                        return __assign(__assign({}, member), {\n                          role: 'operator'\n                        });\n                      }\n                      return m;\n                    }));\n                    closeDropdown();\n                  });\n                } else {\n                  channel.removeOperators([member.userId], function () {\n                    setMembers(members.map(function (m) {\n                      if (m.userId === member.userId) {\n                        return __assign(__assign({}, member), {\n                          role: ''\n                        });\n                      }\n                      return m;\n                    }));\n                    closeDropdown();\n                  });\n                }\n              }\n            }, member.role !== 'operator' ? 'Promote to operator' : 'Demote operator'),\n            // No muted members in broadcast channel\n            !channel.isBroadcast && /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                if (member.isMuted) {\n                  channel.unmuteUser(member, function () {\n                    setMembers(members.map(function (m) {\n                      if (m.userId === member.userId) {\n                        return __assign(__assign({}, member), {\n                          isMuted: false\n                        });\n                      }\n                      return m;\n                    }));\n                    closeDropdown();\n                  });\n                } else {\n                  channel.muteUser(member, function () {\n                    setMembers(members.map(function (m) {\n                      if (m.userId === member.userId) {\n                        return __assign(__assign({}, member), {\n                          isMuted: true\n                        });\n                      }\n                      return m;\n                    }));\n                    closeDropdown();\n                  });\n                }\n              }\n            }, member.isMuted ? 'Unmute' : 'Mute'), /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                channel.banUser(member, -1, '', function () {\n                  setMembers(members.filter(function (_a) {\n                    var userId = _a.userId;\n                    return userId !== member.userId;\n                  }));\n                });\n              }\n            }, \"Ban\"));\n          }\n        }));\n      }\n    });\n  }))));\n}\nvar SHOWN_MEMBER_MAX = 10;\nvar UserListItem$1 = function UserListItem(_ref) {\n  var _ref$member = _ref.member,\n    member = _ref$member === void 0 ? {} : _ref$member,\n    _ref$currentUser = _ref.currentUser,\n    currentUser = _ref$currentUser === void 0 ? '' : _ref$currentUser;\n  var avatarRef = useRef(null);\n  var _useContext = useContext(UserProfileContext),\n    disableUserProfile = _useContext.disableUserProfile,\n    renderUserProfile = _useContext.renderUserProfile;\n  var _useContext2 = useContext(LocalizationContext),\n    stringSet = _useContext2.stringSet;\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-members-accordion__member\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-members-accordion__member-avatar\"\n  }, /*#__PURE__*/React__default.createElement(ContextMenu, {\n    menuTrigger: function menuTrigger(toggleDropdown) {\n      return /*#__PURE__*/React__default.createElement(Avatar, {\n        onClick: function onClick() {\n          if (!disableUserProfile) {\n            toggleDropdown();\n          }\n        },\n        ref: avatarRef,\n        src: member.profileUrl,\n        width: 24,\n        height: 24\n      });\n    },\n    menuItems: function menuItems(closeDropdown) {\n      return /*#__PURE__*/React__default.createElement(MenuItems, {\n        openLeft: true,\n        parentRef: avatarRef // for catching location(x, y) of MenuItems\n        ,\n\n        parentContainRef: avatarRef // for toggling more options(menus & reactions)\n        ,\n\n        closeDropdown: closeDropdown,\n        style: {\n          paddingTop: 0,\n          paddingBottom: 0\n        }\n      }, renderUserProfile ? renderUserProfile({\n        user: member,\n        currentUserId: currentUser,\n        close: closeDropdown\n      }) : /*#__PURE__*/React__default.createElement(ConnectedUserProfile, {\n        user: member,\n        currentUserId: currentUser,\n        onSuccess: closeDropdown\n      }));\n    }\n  })), /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.SUBTITLE_2,\n    color: LabelColors.ONBACKGROUND_1\n  }, member.nickname || stringSet.NO_NAME, currentUser === member.userId && stringSet.CHANNEL_SETTING__MEMBERS__YOU));\n};\nUserListItem$1.propTypes = {\n  member: PropTypes.shape({\n    userId: PropTypes.string,\n    profileUrl: PropTypes.string,\n    nickname: PropTypes.string\n  }).isRequired,\n  currentUser: PropTypes.string.isRequired\n};\nvar MembersAccordion = function MembersAccordion(_ref2) {\n  var channel = _ref2.channel,\n    disabled = _ref2.disabled,\n    currentUser = _ref2.currentUser,\n    userQueryCreator = _ref2.userQueryCreator,\n    onInviteMembers = _ref2.onInviteMembers,\n    swapParams = _ref2.swapParams;\n  var members = channel.members || [];\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    showMoreModal = _useState2[0],\n    setShowMoreModal = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    showAddUserModal = _useState4[0],\n    setShowAddUserModal = _useState4[1];\n  var _useContext3 = useContext(LocalizationContext),\n    stringSet = _useContext3.stringSet;\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-members-accordion\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-members-accordion__list\"\n  }, members.slice(0, SHOWN_MEMBER_MAX).map(function (member) {\n    return /*#__PURE__*/React__default.createElement(UserListItem$1, {\n      member: member,\n      currentUser: currentUser,\n      key: member.userId\n    });\n  })), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-members-accordion__footer\"\n  }, members.length >= SHOWN_MEMBER_MAX && /*#__PURE__*/React__default.createElement(Button, {\n    className: \"sendbird-members-accordion__footer__all-members\",\n    type: ButtonTypes.SECONDARY,\n    size: ButtonSizes.SMALL,\n    onClick: function onClick() {\n      return setShowMoreModal(true);\n    }\n  }, stringSet.CHANNEL_SETTING__MEMBERS__SEE_ALL_MEMBERS), members.length >= SHOWN_MEMBER_MAX && showMoreModal && /*#__PURE__*/React__default.createElement(MembersModal, {\n    currentUser: currentUser,\n    hideModal: function hideModal() {\n      setShowMoreModal(false);\n    },\n    channel: channel\n  }), /*#__PURE__*/React__default.createElement(Button, {\n    className: \"sendbird-members-accordion__footer__invite-users\",\n    type: ButtonTypes.SECONDARY,\n    size: ButtonSizes.SMALL,\n    disabled: disabled,\n    onClick: function onClick() {\n      if (disabled) {\n        return;\n      }\n      setShowAddUserModal(true);\n    }\n  }, stringSet.CHANNEL_SETTING__MEMBERS__INVITE_MEMBER), showAddUserModal && /*#__PURE__*/React__default.createElement(InviteMembers$1, {\n    swapParams: swapParams,\n    titleText: stringSet.MODAL__INVITE_MEMBER__TITLE,\n    submitText: stringSet.BUTTON__INVITE,\n    closeModal: function closeModal() {\n      return setShowAddUserModal(false);\n    },\n    idsToFilter: members.map(function (member) {\n      return member.userId;\n    }),\n    userQueryCreator: userQueryCreator,\n    onSubmit: onInviteMembers\n  })));\n};\nMembersAccordion.propTypes = {\n  swapParams: PropTypes.bool,\n  disabled: PropTypes.bool,\n  channel: PropTypes.shape({\n    members: PropTypes.arrayOf(PropTypes.shape({}))\n  }),\n  currentUser: PropTypes.string,\n  userQueryCreator: PropTypes.func.isRequired,\n  onInviteMembers: PropTypes.func.isRequired\n};\nMembersAccordion.defaultProps = {\n  swapParams: false,\n  currentUser: '',\n  disabled: false,\n  channel: {}\n};\n\n// might move to reusable/UI\nvar COMPONENT_NAME = 'sendbird-user-list-item--small';\nvar UserListItem = function UserListItem(_a) {\n  var user = _a.user,\n    className = _a.className,\n    currentUser = _a.currentUser,\n    action = _a.action;\n  var actionRef = useRef(null);\n  var parentRef = useRef(null);\n  var avatarRef = useRef(null);\n  var stringSet = useContext(LocalizationContext).stringSet;\n  var _b = useContext(UserProfileContext),\n    disableUserProfile = _b.disableUserProfile,\n    renderUserProfile = _b.renderUserProfile;\n  var injectingClassNames = Array.isArray(className) ? className : [className];\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: parentRef,\n    className: __spreadArray([COMPONENT_NAME], injectingClassNames, true).join(' ')\n  }, user.isMuted && /*#__PURE__*/React__default.createElement(MutedAvatarOverlay, null), /*#__PURE__*/React__default.createElement(ContextMenu, {\n    menuTrigger: function menuTrigger(toggleDropdown) {\n      return /*#__PURE__*/React__default.createElement(Avatar, {\n        onClick: function onClick() {\n          if (!disableUserProfile) {\n            toggleDropdown();\n          }\n        },\n        ref: avatarRef,\n        className: COMPONENT_NAME + \"__avatar\",\n        src: user.profileUrl,\n        width: 24,\n        height: 24\n      });\n    },\n    menuItems: function menuItems(closeDropdown) {\n      return /*#__PURE__*/React__default.createElement(MenuItems, {\n        openLeft: true,\n        parentRef: avatarRef // for catching location(x, y) of MenuItems\n        ,\n\n        parentContainRef: avatarRef // for toggling more options(menus & reactions)\n        ,\n\n        closeDropdown: closeDropdown,\n        style: {\n          paddingTop: 0,\n          paddingBottom: 0\n        }\n      }, renderUserProfile ? renderUserProfile({\n        user: user,\n        currentUserId: currentUser,\n        close: closeDropdown\n      }) : /*#__PURE__*/React__default.createElement(ConnectedUserProfile, {\n        user: user,\n        currentUserId: currentUser,\n        onSuccess: closeDropdown\n      }));\n    }\n  }), /*#__PURE__*/React__default.createElement(Label, {\n    className: COMPONENT_NAME + \"__title\",\n    type: LabelTypography.SUBTITLE_1,\n    color: LabelColors.ONBACKGROUND_1\n  }, user.nickname || stringSet.NO_NAME, currentUser === user.userId && \" (You)\"),\n  // if there is now nickname, display userId\n  !user.nickname && /*#__PURE__*/React__default.createElement(Label, {\n    className: COMPONENT_NAME + \"__subtitle\",\n    type: LabelTypography.CAPTION_3,\n    color: LabelColors.ONBACKGROUND_2\n  }, user.userId), user.role === 'operator' && /*#__PURE__*/React__default.createElement(Label, {\n    className: COMPONENT_NAME + \"__operator\",\n    type: LabelTypography.SUBTITLE_2,\n    color: LabelColors.ONBACKGROUND_2\n  }, \"Operator\"), action && /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: actionRef,\n    className: COMPONENT_NAME + \"__action\"\n  }, action({\n    actionRef: actionRef,\n    parentRef: parentRef\n  })));\n};\nfunction OperatorsModal(_a) {\n  var hideModal = _a.hideModal,\n    channel = _a.channel,\n    currentUser = _a.currentUser;\n  var _b = useState([]),\n    operators = _b[0],\n    setOperators = _b[1];\n  var _c = useState(null),\n    operatorQuery = _c[0],\n    setOperatorQuery = _c[1];\n  useEffect(function () {\n    var operatorListQuery = channel.createOperatorListQuery();\n    operatorListQuery.limit = 20;\n    operatorListQuery.next(function (operators, error) {\n      if (error) {\n        return;\n      }\n      setOperators(operators);\n    });\n    setOperatorQuery(operatorListQuery);\n  }, []);\n  return /*#__PURE__*/React__default.createElement(\"div\", null, /*#__PURE__*/React__default.createElement(Modal, {\n    hideFooter: true,\n    onCancel: function onCancel() {\n      return hideModal();\n    },\n    onSubmit: noop,\n    titleText: \"All operators\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-more-members__popup-scroll\",\n    onScroll: function onScroll(e) {\n      var hasNext = operatorQuery.hasNext;\n      var target = e.target;\n      var fetchMore = target.clientHeight + target.scrollTop === target.scrollHeight;\n      if (hasNext && fetchMore) {\n        operatorQuery.next(function (o, error) {\n          if (error) {\n            return;\n          }\n          setOperators(__spreadArray(__spreadArray([], operators, true), o, true));\n        });\n      }\n    }\n  }, operators.map(function (member) {\n    return /*#__PURE__*/React__default.createElement(UserListItem$2, {\n      currentUser: currentUser,\n      user: member,\n      key: member.userId,\n      action: function action(_a) {\n        var parentRef = _a.parentRef,\n          actionRef = _a.actionRef;\n        return /*#__PURE__*/React__default.createElement(ContextMenu, {\n          menuTrigger: function menuTrigger(toggleDropdown) {\n            return /*#__PURE__*/React__default.createElement(IconButton, {\n              className: \"sendbird-user-message__more__menu\",\n              width: \"32px\",\n              height: \"32px\",\n              onClick: toggleDropdown\n            }, /*#__PURE__*/React__default.createElement(Icon, {\n              width: \"24px\",\n              height: \"24px\",\n              type: IconTypes.MORE,\n              fillColor: IconColors.CONTENT_INVERSE\n            }));\n          },\n          menuItems: function menuItems(closeDropdown) {\n            return /*#__PURE__*/React__default.createElement(MenuItems, {\n              parentContainRef: parentRef,\n              parentRef: actionRef // for catching location(x, y) of MenuItems\n              ,\n\n              closeDropdown: closeDropdown,\n              openLeft: true\n            }, /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                channel.removeOperators([member.userId], function (response, error) {\n                  if (error) {\n                    return;\n                  }\n                  setOperators(operators.filter(function (_a) {\n                    var userId = _a.userId;\n                    return userId !== member.userId;\n                  }));\n                });\n                closeDropdown();\n              }\n            }, \"Dismiss operator\"));\n          }\n        });\n      }\n    });\n  }))));\n}\nfunction AddOperatorsModal(_a) {\n  var hideModal = _a.hideModal,\n    channel = _a.channel,\n    _onSubmit = _a.onSubmit;\n  var _b = useState([]),\n    members = _b[0],\n    setMembers = _b[1];\n  var _c = useState({}),\n    selectedMembers = _c[0],\n    setSelectedMembers = _c[1];\n  var _d = useState(null),\n    memberQuery = _d[0],\n    setMemberQuery = _d[1];\n  var stringSet = useContext(LocalizationContext).stringSet;\n  useEffect(function () {\n    var memberListQuery = channel.createMemberListQuery();\n    memberListQuery.limit = 20;\n    memberListQuery.next(function (members, error) {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n    });\n    setMemberQuery(memberListQuery);\n  }, []);\n  var selectedCount = Object.keys(selectedMembers).filter(function (m) {\n    return selectedMembers[m];\n  }).length;\n  return /*#__PURE__*/React__default.createElement(\"div\", null, /*#__PURE__*/React__default.createElement(Modal, {\n    type: Type.PRIMARY,\n    submitText: \"Add\",\n    onCancel: function onCancel() {\n      return hideModal();\n    },\n    onSubmit: function onSubmit() {\n      var members = Object.keys(selectedMembers).filter(function (m) {\n        return selectedMembers[m];\n      });\n      _onSubmit(members);\n    },\n    titleText: \"Select members\"\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    color: selectedCount > 0 ? LabelColors.PRIMARY : LabelColors.ONBACKGROUND_3,\n    type: LabelTypography.CAPTION_1\n  }, selectedCount + \" \" + stringSet.MODAL__INVITE_MEMBER__SELECTEC), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-more-members__popup-scroll\",\n    onScroll: function onScroll(e) {\n      var hasNext = memberQuery.hasNext;\n      var target = e.target;\n      var fetchMore = target.clientHeight + target.scrollTop === target.scrollHeight;\n      if (hasNext && fetchMore) {\n        memberQuery.next(function (o, error) {\n          if (error) {\n            return;\n          }\n          setMembers(__spreadArray(__spreadArray([], members, true), o, true));\n        });\n      }\n    }\n  }, members.map(function (member) {\n    return /*#__PURE__*/React__default.createElement(UserListItem$2, {\n      checkBox: true,\n      checked: selectedMembers[member.userId],\n      onChange: function onChange(event) {\n        var _a;\n        var modifiedSelectedMembers = __assign(__assign({}, selectedMembers), (_a = {}, _a[event.target.id] = event.target.checked, _a));\n        if (!event.target.checked) {\n          delete modifiedSelectedMembers[event.target.id];\n        }\n        setSelectedMembers(modifiedSelectedMembers);\n      },\n      user: member,\n      key: member.userId\n    });\n  }))));\n}\nvar OperatorList = function OperatorList(_a) {\n  var sdk = _a.sdk,\n    channel = _a.channel;\n  var _b = useState([]),\n    operators = _b[0],\n    setOperators = _b[1];\n  var _c = useState(false),\n    showMore = _c[0],\n    setShowMore = _c[1];\n  var _d = useState(false),\n    showAdd = _d[0],\n    setShowAdd = _d[1];\n  var _e = useState(false),\n    hasNext = _e[0],\n    setHasNext = _e[1];\n  var stringSet = useContext(LocalizationContext).stringSet;\n  useEffect(function () {\n    if (!channel) {\n      setOperators([]);\n      return;\n    }\n    var operatorListQuery = channel.createOperatorListQuery();\n    operatorListQuery.limit = 10;\n    operatorListQuery.next(function (operators, error) {\n      if (error) {\n        return;\n      }\n      setOperators(operators);\n      setHasNext(operatorListQuery.hasNext);\n    });\n  }, [channel]);\n  var refershList = useCallback(function () {\n    if (!channel) {\n      setOperators([]);\n      return;\n    }\n    var operatorListQuery = channel.createOperatorListQuery();\n    operatorListQuery.limit = 10;\n    operatorListQuery.next(function (operators, error) {\n      if (error) {\n        return;\n      }\n      setOperators(operators);\n      setHasNext(operatorListQuery.hasNext);\n    });\n  }, [channel]);\n  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, operators.map(function (operator) {\n    return /*#__PURE__*/React__default.createElement(UserListItem, {\n      key: operator.userId,\n      user: operator,\n      currentUser: sdk.currentUser.userId,\n      action: function action(_a) {\n        var actionRef = _a.actionRef,\n          parentRef = _a.parentRef;\n        return /*#__PURE__*/React__default.createElement(ContextMenu, {\n          menuTrigger: function menuTrigger(toggleDropdown) {\n            return /*#__PURE__*/React__default.createElement(IconButton, {\n              className: \"sendbird-user-message__more__menu\",\n              width: \"32px\",\n              height: \"32px\",\n              onClick: toggleDropdown\n            }, /*#__PURE__*/React__default.createElement(Icon, {\n              width: \"24px\",\n              height: \"24px\",\n              type: IconTypes.MORE,\n              fillColor: IconColors.CONTENT_INVERSE\n            }));\n          },\n          menuItems: function menuItems(closeDropdown) {\n            return /*#__PURE__*/React__default.createElement(MenuItems, {\n              parentContainRef: parentRef,\n              parentRef: actionRef // for catching location(x, y) of MenuItems\n              ,\n\n              closeDropdown: closeDropdown,\n              openLeft: true\n            }, /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                channel.removeOperators([operator.userId], function (response, error) {\n                  if (error) {\n                    return;\n                  }\n                  setOperators(operators.filter(function (_a) {\n                    var userId = _a.userId;\n                    return userId !== operator.userId;\n                  }));\n                });\n                closeDropdown();\n              }\n            }, \"Dismiss operator\"));\n          }\n        });\n      }\n    });\n  }), hasNext && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-settings-accordion__footer\"\n  }, /*#__PURE__*/React__default.createElement(Button, {\n    type: ButtonTypes.SECONDARY,\n    size: ButtonSizes.SMALL,\n    onClick: function onClick() {\n      setShowMore(true);\n    }\n  }, stringSet.CHANNEL_SETTING__OPERATORS__TITLE_ALL), /*#__PURE__*/React__default.createElement(Button, {\n    type: ButtonTypes.SECONDARY,\n    size: ButtonSizes.SMALL,\n    onClick: function onClick() {\n      setShowAdd(true);\n    }\n  }, stringSet.CHANNEL_SETTING__OPERATORS__TITLE_ADD)), showMore && /*#__PURE__*/React__default.createElement(OperatorsModal, {\n    currentUser: sdk.currentUser.userId,\n    hideModal: function hideModal() {\n      setShowMore(false);\n      refershList();\n    },\n    channel: channel\n  }), showAdd && /*#__PURE__*/React__default.createElement(AddOperatorsModal, {\n    hideModal: function hideModal() {\n      return setShowAdd(false);\n    },\n    channel: channel,\n    onSubmit: function onSubmit(members) {\n      setShowAdd(false);\n      channel.addOperators(members, function () {\n        refershList();\n      });\n    }\n  }));\n};\nvar mapStoreToProps$3 = function mapStoreToProps(store) {\n  return {\n    sdk: getSdk(store)\n  };\n};\nvar OperatorList$1 = withSendbirdContext(OperatorList, mapStoreToProps$3);\nfunction InviteMembers(_a) {\n  var hideModal = _a.hideModal,\n    userQueryCreator = _a.userQueryCreator,\n    _onSubmit = _a.onSubmit;\n  var _b = useState([]),\n    members = _b[0],\n    setMembers = _b[1];\n  var _c = useState({}),\n    selectedMembers = _c[0],\n    setSelectedMembers = _c[1];\n  var _d = useState(null),\n    userQuery = _d[0],\n    setUserQuery = _d[1];\n  useEffect(function () {\n    var userListQuery = userQueryCreator();\n    userListQuery.limit = 20;\n    userListQuery.next(function (members, error) {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n    });\n    setUserQuery(userListQuery);\n  }, []);\n  return /*#__PURE__*/React__default.createElement(\"div\", null, /*#__PURE__*/React__default.createElement(Modal, {\n    disabled: Object.keys(selectedMembers).length === 0,\n    submitText: \"Invite\",\n    type: Type.PRIMARY,\n    onCancel: function onCancel() {\n      return hideModal();\n    },\n    onSubmit: function onSubmit() {\n      var members = Object.keys(selectedMembers).filter(function (m) {\n        return selectedMembers[m];\n      });\n      _onSubmit(members);\n    },\n    titleText: \"Select members\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-more-members__popup-scroll\",\n    onScroll: function onScroll(e) {\n      var hasNext = userQuery.hasNext;\n      var target = e.target;\n      var fetchMore = target.clientHeight + target.scrollTop === target.scrollHeight;\n      if (hasNext && fetchMore) {\n        userQuery.next(function (o, error) {\n          if (error) {\n            return;\n          }\n          setMembers(__spreadArray(__spreadArray([], members, true), o, true));\n        });\n      }\n    }\n  }, members.map(function (member) {\n    return /*#__PURE__*/React__default.createElement(UserListItem$2, {\n      checkBox: true,\n      checked: selectedMembers[member.userId],\n      onChange: function onChange(event) {\n        var _a;\n        var modifiedSelectedMembers = __assign(__assign({}, selectedMembers), (_a = {}, _a[event.target.id] = event.target.checked, _a));\n        if (!event.target.checked) {\n          delete modifiedSelectedMembers[event.target.id];\n        }\n        setSelectedMembers(modifiedSelectedMembers);\n      },\n      user: member,\n      key: member.userId\n    });\n  }))));\n}\nvar MemberList = function MemberList(_a) {\n  var sdk = _a.sdk,\n    channel = _a.channel,\n    userQueryCreator = _a.userQueryCreator,\n    userId = _a.userId;\n  var _b = useState([]),\n    members = _b[0],\n    setMembers = _b[1];\n  var _c = useState(false),\n    hasNext = _c[0],\n    setHasNext = _c[1];\n  var _d = useState(false),\n    showAllMembers = _d[0],\n    setShowAllMembers = _d[1];\n  var _e = useState(false),\n    showInviteMembers = _e[0],\n    setShowInviteMembers = _e[1];\n  useEffect(function () {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n    var memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.next(function (members, error) {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n  var refershList = useCallback(function () {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n    var memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.next(function (members, error) {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, members.map(function (member) {\n    return /*#__PURE__*/React__default.createElement(UserListItem, {\n      key: member.userId,\n      user: member,\n      currentUser: sdk.currentUser.userId,\n      action: userId !== member.userId ? function (_a) {\n        var actionRef = _a.actionRef,\n          parentRef = _a.parentRef;\n        return /*#__PURE__*/React__default.createElement(ContextMenu, {\n          menuTrigger: function menuTrigger(toggleDropdown) {\n            return /*#__PURE__*/React__default.createElement(IconButton, {\n              className: \"sendbird-user-message__more__menu\",\n              width: \"32px\",\n              height: \"32px\",\n              onClick: toggleDropdown\n            }, /*#__PURE__*/React__default.createElement(Icon, {\n              width: \"24px\",\n              height: \"24px\",\n              type: IconTypes.MORE,\n              fillColor: IconColors.CONTENT_INVERSE\n            }));\n          },\n          menuItems: function menuItems(closeDropdown) {\n            return /*#__PURE__*/React__default.createElement(MenuItems, {\n              parentContainRef: parentRef,\n              parentRef: actionRef // for catching location(x, y) of MenuItems\n              ,\n\n              closeDropdown: closeDropdown,\n              openLeft: true\n            }, /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                if (member.role !== 'operator') {\n                  channel.addOperators([member.userId], function () {\n                    refershList();\n                    closeDropdown();\n                  });\n                } else {\n                  channel.removeOperators([member.userId], function () {\n                    refershList();\n                    closeDropdown();\n                  });\n                }\n              }\n            }, member.role !== 'operator' ? 'Promote to operator' : 'Demote operator'),\n            // No muted members in broadcast channel\n            !channel.isBroadcast && /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                if (member.isMuted) {\n                  channel.unmuteUser(member, function () {\n                    refershList();\n                    closeDropdown();\n                  });\n                } else {\n                  channel.muteUser(member, function () {\n                    refershList();\n                    closeDropdown();\n                  });\n                }\n              }\n            }, member.isMuted ? 'Unmute' : 'Mute'), /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                channel.banUser(member, -1, '', function () {\n                  refershList();\n                  closeDropdown();\n                });\n              }\n            }, \"Ban\"));\n          }\n        });\n      } : null\n    });\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-settings-accordion__footer\"\n  }, hasNext && /*#__PURE__*/React__default.createElement(Button, {\n    type: ButtonTypes.SECONDARY,\n    size: ButtonSizes.SMALL,\n    onClick: function onClick() {\n      return setShowAllMembers(true);\n    }\n  }, \"All members\"), /*#__PURE__*/React__default.createElement(Button, {\n    type: ButtonTypes.SECONDARY,\n    size: ButtonSizes.SMALL,\n    onClick: function onClick() {\n      return setShowInviteMembers(true);\n    }\n  }, \"Invite members\")), showAllMembers && /*#__PURE__*/React__default.createElement(MembersModal, {\n    currentUser: sdk.currentUser.userId,\n    channel: channel,\n    hideModal: function hideModal() {\n      setShowAllMembers(false);\n      refershList();\n    }\n  }), showInviteMembers && /*#__PURE__*/React__default.createElement(InviteMembers, {\n    userQueryCreator: userQueryCreator,\n    onSubmit: function onSubmit(selectedMembers) {\n      channel.inviteWithUserIds(selectedMembers, function () {\n        setShowInviteMembers(false);\n        refershList();\n      });\n    },\n    channel: channel,\n    hideModal: function hideModal() {\n      return setShowInviteMembers(false);\n    }\n  }));\n};\nvar mapStoreToProps$2 = function mapStoreToProps(store) {\n  return {\n    sdk: getSdk(store)\n  };\n};\nvar MemberList$1 = withSendbirdContext(MemberList, mapStoreToProps$2);\nfunction BannedMembersModal(_a) {\n  var hideModal = _a.hideModal,\n    channel = _a.channel;\n  var _b = useState([]),\n    members = _b[0],\n    setMembers = _b[1];\n  var _c = useState(null),\n    memberQuery = _c[0],\n    setMemberQuery = _c[1];\n  useEffect(function () {\n    var bannedUserListQuery = channel.createBannedUserListQuery();\n    bannedUserListQuery.next(function (users, error) {\n      if (error) {\n        return;\n      }\n      setMembers(users);\n    });\n    setMemberQuery(bannedUserListQuery);\n  }, []);\n  return /*#__PURE__*/React__default.createElement(\"div\", null, /*#__PURE__*/React__default.createElement(Modal, {\n    hideFooter: true,\n    onCancel: function onCancel() {\n      return hideModal();\n    },\n    onSubmit: noop,\n    titleText: \"Muted members\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-more-members__popup-scroll\",\n    onScroll: function onScroll(e) {\n      var hasNext = memberQuery.hasNext;\n      var target = e.target;\n      var fetchMore = target.clientHeight + target.scrollTop === target.scrollHeight;\n      if (hasNext && fetchMore) {\n        memberQuery.next(function (o, error) {\n          if (error) {\n            return;\n          }\n          setMembers(__spreadArray(__spreadArray([], members, true), o, true));\n        });\n      }\n    }\n  }, members.map(function (member) {\n    return /*#__PURE__*/React__default.createElement(UserListItem$2, {\n      user: member,\n      key: member.userId,\n      action: function action(_a) {\n        var parentRef = _a.parentRef,\n          actionRef = _a.actionRef;\n        return /*#__PURE__*/React__default.createElement(ContextMenu, {\n          menuTrigger: function menuTrigger(toggleDropdown) {\n            return /*#__PURE__*/React__default.createElement(IconButton, {\n              className: \"sendbird-user-message__more__menu\",\n              width: \"32px\",\n              height: \"32px\",\n              onClick: toggleDropdown\n            }, /*#__PURE__*/React__default.createElement(Icon, {\n              width: \"24px\",\n              height: \"24px\",\n              type: IconTypes.MORE,\n              fillColor: IconColors.CONTENT_INVERSE\n            }));\n          },\n          menuItems: function menuItems(closeDropdown) {\n            return /*#__PURE__*/React__default.createElement(MenuItems, {\n              parentContainRef: parentRef,\n              parentRef: actionRef // for catching location(x, y) of MenuItems\n              ,\n\n              closeDropdown: closeDropdown,\n              openLeft: true\n            }, /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                channel.unbanUser(member, function () {\n                  closeDropdown();\n                  setMembers(members.filter(function (m) {\n                    return m.userId !== member.userId;\n                  }));\n                });\n              }\n            }, \"Unban\"));\n          }\n        });\n      }\n    });\n  }))));\n}\nvar BannedMemberList = function BannedMemberList(_a) {\n  var channel = _a.channel;\n  var _b = useState([]),\n    members = _b[0],\n    setMembers = _b[1];\n  var _c = useState(false),\n    hasNext = _c[0],\n    setHasNext = _c[1];\n  var _d = useState(false),\n    showModal = _d[0],\n    setShowModal = _d[1];\n  useEffect(function () {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n    var bannedUserListQuery = channel.createBannedUserListQuery();\n    bannedUserListQuery.next(function (users, error) {\n      if (error) {\n        return;\n      }\n      setMembers(users);\n      setHasNext(bannedUserListQuery.hasNext);\n    });\n  }, [channel]);\n  var refreshList = useCallback(function () {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n    var bannedUserListQuery = channel.createBannedUserListQuery();\n    bannedUserListQuery.next(function (users, error) {\n      if (error) {\n        return;\n      }\n      setMembers(users);\n      setHasNext(bannedUserListQuery.hasNext);\n    });\n  }, [channel]);\n  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, members.map(function (member) {\n    return /*#__PURE__*/React__default.createElement(UserListItem, {\n      key: member.userId,\n      user: member,\n      action: function action(_a) {\n        var actionRef = _a.actionRef,\n          parentRef = _a.parentRef;\n        return /*#__PURE__*/React__default.createElement(ContextMenu, {\n          menuTrigger: function menuTrigger(toggleDropdown) {\n            return /*#__PURE__*/React__default.createElement(IconButton, {\n              className: \"sendbird-user-message__more__menu\",\n              width: \"32px\",\n              height: \"32px\",\n              onClick: toggleDropdown\n            }, /*#__PURE__*/React__default.createElement(Icon, {\n              width: \"24px\",\n              height: \"24px\",\n              type: IconTypes.MORE,\n              fillColor: IconColors.CONTENT_INVERSE\n            }));\n          },\n          menuItems: function menuItems(closeDropdown) {\n            return /*#__PURE__*/React__default.createElement(MenuItems, {\n              parentContainRef: parentRef,\n              parentRef: actionRef // for catching location(x, y) of MenuItems\n              ,\n\n              closeDropdown: closeDropdown,\n              openLeft: true\n            }, /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                channel.unbanUser(member, function () {\n                  closeDropdown();\n                  refreshList();\n                });\n              }\n            }, \"Unban\"));\n          }\n        });\n      }\n    });\n  }), members && members.length === 0 && /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-channel-settings__empty-list\",\n    type: LabelTypography.SUBTITLE_2,\n    color: LabelColors.ONBACKGROUND_3\n  }, \"No banned members yet\"), hasNext && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-settings-accordion__footer\"\n  }, /*#__PURE__*/React__default.createElement(Button, {\n    type: ButtonTypes.SECONDARY,\n    size: ButtonSizes.SMALL,\n    onClick: function onClick() {\n      setShowModal(true);\n    }\n  }, \"All banned members\")), showModal && /*#__PURE__*/React__default.createElement(BannedMembersModal, {\n    channel: channel,\n    hideModal: function hideModal() {\n      setShowModal(false);\n      refreshList();\n    }\n  }));\n};\nvar mapStoreToProps$1 = function mapStoreToProps(store) {\n  return {\n    sdk: getSdk(store)\n  };\n};\nvar BannedMemberList$1 = withSendbirdContext(BannedMemberList, mapStoreToProps$1);\nfunction MutedMembersModal(_a) {\n  var hideModal = _a.hideModal,\n    channel = _a.channel,\n    currentUser = _a.currentUser;\n  var _b = useState([]),\n    members = _b[0],\n    setMembers = _b[1];\n  var _c = useState(null),\n    memberQuery = _c[0],\n    setMemberQuery = _c[1];\n  useEffect(function () {\n    var memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.mutedMemberFilter = 'muted';\n    memberUserListQuery.next(function (members, error) {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n    });\n    setMemberQuery(memberUserListQuery);\n  }, []);\n  return /*#__PURE__*/React__default.createElement(\"div\", null, /*#__PURE__*/React__default.createElement(Modal, {\n    hideFooter: true,\n    onCancel: function onCancel() {\n      return hideModal();\n    },\n    onSubmit: noop,\n    titleText: \"Muted members\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-more-members__popup-scroll\",\n    onScroll: function onScroll(e) {\n      var hasNext = memberQuery.hasNext;\n      var target = e.target;\n      var fetchMore = target.clientHeight + target.scrollTop === target.scrollHeight;\n      if (hasNext && fetchMore) {\n        memberQuery.next(function (o, error) {\n          if (error) {\n            return;\n          }\n          setMembers(__spreadArray(__spreadArray([], members, true), o, true));\n        });\n      }\n    }\n  }, members.map(function (member) {\n    return /*#__PURE__*/React__default.createElement(UserListItem$2, {\n      currentUser: currentUser,\n      user: member,\n      key: member.userId,\n      action: function action(_a) {\n        var actionRef = _a.actionRef,\n          parentRef = _a.parentRef;\n        return /*#__PURE__*/React__default.createElement(ContextMenu, {\n          menuTrigger: function menuTrigger(toggleDropdown) {\n            return /*#__PURE__*/React__default.createElement(IconButton, {\n              className: \"sendbird-user-message__more__menu\",\n              width: \"32px\",\n              height: \"32px\",\n              onClick: toggleDropdown\n            }, /*#__PURE__*/React__default.createElement(Icon, {\n              width: \"24px\",\n              height: \"24px\",\n              type: IconTypes.MORE,\n              fillColor: IconColors.CONTENT_INVERSE\n            }));\n          },\n          menuItems: function menuItems(closeDropdown) {\n            return /*#__PURE__*/React__default.createElement(MenuItems, {\n              parentContainRef: parentRef,\n              parentRef: actionRef // for catching location(x, y) of MenuItems\n              ,\n\n              closeDropdown: closeDropdown,\n              openLeft: true\n            }, /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                channel.unmuteUser(member, function () {\n                  closeDropdown();\n                  setMembers(members.filter(function (m) {\n                    return m.userId !== member.userId;\n                  }));\n                });\n              }\n            }, \"Unmute\"));\n          }\n        });\n      }\n    });\n  }))));\n}\nvar MutedMemberList = function MutedMemberList(_a) {\n  var sdk = _a.sdk,\n    channel = _a.channel;\n  var _b = useState([]),\n    members = _b[0],\n    setMembers = _b[1];\n  var _c = useState(false),\n    hasNext = _c[0],\n    setHasNext = _c[1];\n  var _d = useState(false),\n    showModal = _d[0],\n    setShowModal = _d[1];\n  useEffect(function () {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n    var memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.mutedMemberFilter = 'muted';\n    memberUserListQuery.next(function (members, error) {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n  var refreshList = useCallback(function () {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n    var memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.mutedMemberFilter = 'muted';\n    memberUserListQuery.next(function (members, error) {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, members.map(function (member) {\n    return /*#__PURE__*/React__default.createElement(UserListItem, {\n      key: member.userId,\n      user: member,\n      currentUser: sdk.currentUser.userId,\n      action: function action(_a) {\n        var actionRef = _a.actionRef,\n          parentRef = _a.parentRef;\n        return /*#__PURE__*/React__default.createElement(ContextMenu, {\n          menuTrigger: function menuTrigger(toggleDropdown) {\n            return /*#__PURE__*/React__default.createElement(IconButton, {\n              className: \"sendbird-user-message__more__menu\",\n              width: \"32px\",\n              height: \"32px\",\n              onClick: toggleDropdown\n            }, /*#__PURE__*/React__default.createElement(Icon, {\n              width: \"24px\",\n              height: \"24px\",\n              type: IconTypes.MORE,\n              fillColor: IconColors.CONTENT_INVERSE\n            }));\n          },\n          menuItems: function menuItems(closeDropdown) {\n            return /*#__PURE__*/React__default.createElement(MenuItems, {\n              closeDropdown: closeDropdown,\n              openLeft: true,\n              parentContainRef: parentRef,\n              parentRef: actionRef // for catching location(x, y) of MenuItems\n            }, /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                channel.unmuteUser(member, function () {\n                  refreshList();\n                  closeDropdown();\n                });\n              }\n            }, \"Unmute\"));\n          }\n        });\n      }\n    });\n  }), members && members.length === 0 && /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-channel-settings__empty-list\",\n    type: LabelTypography.SUBTITLE_2,\n    color: LabelColors.ONBACKGROUND_3\n  }, \"No muted members yet\"), hasNext && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-settings-accordion__footer\"\n  }, /*#__PURE__*/React__default.createElement(Button, {\n    type: ButtonTypes.SECONDARY,\n    size: ButtonSizes.SMALL,\n    onClick: function onClick() {\n      setShowModal(true);\n    }\n  }, \"All muted members\")), showModal && /*#__PURE__*/React__default.createElement(MutedMembersModal, {\n    currentUser: sdk.currentUser.userId,\n    channel: channel,\n    hideModal: function hideModal() {\n      setShowModal(false);\n      refreshList();\n    }\n  }));\n};\nvar mapStoreToProps = function mapStoreToProps(store) {\n  return {\n    sdk: getSdk(store)\n  };\n};\nvar MutedMemberList$1 = withSendbirdContext(MutedMemberList, mapStoreToProps);\nvar kFormatter$1 = function kFormatter(num) {\n  return Math.abs(num) > 999 ? (Math.abs(num) / 1000).toFixed(1) + \"K\" : num;\n};\nfunction AdminPannel(_a) {\n  var userQueryCreator = _a.userQueryCreator,\n    channel = _a.channel,\n    userId = _a.userId;\n  var _b = useState(false),\n    frozen = _b[0],\n    setFrozen = _b[1]; // work around for\n  // https://sendbird.slack.com/archives/G01290GCDCN/p1595922832000900\n  // SDK bug - after frozen/unfrozen myRole becomes \"none\"\n\n  useEffect(function () {\n    setFrozen(channel.isFrozen);\n  }, [channel]);\n  var stringSet = useContext(LocalizationContext).stringSet;\n  return /*#__PURE__*/React__default.createElement(AccordionGroup, {\n    className: \"sendbird-channel-settings__operator\"\n  }, /*#__PURE__*/React__default.createElement(Accordion, {\n    className: \"sendbird-channel-settings__operators-list\",\n    id: \"operators\",\n    renderTitle: function renderTitle() {\n      return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(Icon, {\n        type: IconTypes.OPERATOR,\n        fillColor: IconColors.PRIMARY,\n        width: 24,\n        height: 24,\n        className: \"sendbird-channel-settings__accordion-icon\"\n      }), /*#__PURE__*/React__default.createElement(Label, {\n        type: LabelTypography.SUBTITLE_1,\n        color: LabelColors.ONBACKGROUND_1\n      }, stringSet.CHANNEL_SETTING__OPERATORS__TITLE));\n    },\n    renderContent: function renderContent() {\n      return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(OperatorList$1, {\n        channel: channel\n      }));\n    }\n  }), /*#__PURE__*/React__default.createElement(Accordion, {\n    className: \"sendbird-channel-settings__members-list\",\n    id: \"members\",\n    renderTitle: function renderTitle() {\n      return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(Icon, {\n        type: IconTypes.MEMBERS,\n        fillColor: IconColors.PRIMARY,\n        width: 24,\n        height: 24,\n        className: \"sendbird-channel-settings__accordion-icon\"\n      }), /*#__PURE__*/React__default.createElement(Label, {\n        type: LabelTypography.SUBTITLE_1,\n        color: LabelColors.ONBACKGROUND_1\n      }, stringSet.CHANNEL_SETTING__MEMBERS__TITLE), /*#__PURE__*/React__default.createElement(Badge, {\n        count: kFormatter$1(channel.memberCount)\n      }));\n    },\n    renderContent: function renderContent() {\n      return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(MemberList$1, {\n        userQueryCreator: userQueryCreator,\n        channel: channel,\n        userId: userId\n      }));\n    }\n  }),\n  // No muted members in broadcast channel\n  !channel.isBroadcast && /*#__PURE__*/React__default.createElement(Accordion, {\n    id: \"mutedMembers\",\n    className: \"sendbird-channel-settings__muted-members-list\",\n    renderTitle: function renderTitle() {\n      return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(Icon, {\n        type: IconTypes.MUTE,\n        fillColor: IconColors.PRIMARY,\n        width: 24,\n        height: 24,\n        className: \"sendbird-channel-settings__accordion-icon\"\n      }), /*#__PURE__*/React__default.createElement(Label, {\n        type: LabelTypography.SUBTITLE_1,\n        color: LabelColors.ONBACKGROUND_1\n      }, stringSet.CHANNEL_SETTING__MUTED_MEMBERS__TITLE));\n    },\n    renderContent: function renderContent() {\n      return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(MutedMemberList$1, {\n        channel: channel\n      }));\n    }\n  }), /*#__PURE__*/React__default.createElement(Accordion, {\n    className: \"sendbird-channel-settings__banned-members-list\",\n    id: \"bannedMembers\",\n    renderTitle: function renderTitle() {\n      return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(Icon, {\n        type: IconTypes.BAN,\n        fillColor: IconColors.PRIMARY,\n        width: 24,\n        height: 24,\n        className: \"sendbird-channel-settings__accordion-icon\"\n      }), /*#__PURE__*/React__default.createElement(Label, {\n        type: LabelTypography.SUBTITLE_1,\n        color: LabelColors.ONBACKGROUND_1\n      }, stringSet.CHANNEL_SETTING__BANNED_MEMBERS__TITLE));\n    },\n    renderContent: function renderContent() {\n      return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(BannedMemberList$1, {\n        channel: channel\n      }));\n    }\n  }),\n  // cannot frozen broadcast channel\n  !channel.isBroadcast && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-settings__freeze\"\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    type: IconTypes.FREEZE,\n    fillColor: IconColors.PRIMARY,\n    width: 24,\n    height: 24,\n    className: \"sendbird-channel-settings__accordion-icon\"\n  }), /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.SUBTITLE_1,\n    color: LabelColors.ONBACKGROUND_1\n  }, stringSet.CHANNEL_SETTING__FREEZE_CHANNEL), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-settings__frozen-icon\"\n  }, frozen ? /*#__PURE__*/React__default.createElement(Icon, {\n    onClick: function onClick() {\n      channel.unfreeze(function () {\n        setFrozen(false);\n      });\n    },\n    type: IconTypes.TOGGLE_ON,\n    fillColor: IconColors.PRIMARY,\n    width: 44,\n    height: 24\n  }) : /*#__PURE__*/React__default.createElement(Icon, {\n    onClick: function onClick() {\n      channel.freeze(function () {\n        setFrozen(true);\n      });\n    },\n    type: IconTypes.TOGGLE_OFF,\n    fillColor: IconColors.PRIMARY,\n    width: 44,\n    height: 24\n  }))));\n}\nvar COMPONENT_CLASS_NAME = 'sendbird-channel-settings';\nvar kFormatter = function kFormatter(num) {\n  return Math.abs(num) > 999 ? \"\".concat((Math.abs(num) / 1000).toFixed(1), \"K\") : num;\n};\nfunction ChannelSettings(props) {\n  var className = props.className,\n    onCloseClick = props.onCloseClick,\n    channelUrl = props.channelUrl,\n    disableUserProfile = props.disableUserProfile,\n    renderUserProfile = props.renderUserProfile,\n    _onChannelModified = props.onChannelModified,\n    renderChannelProfile = props.renderChannelProfile,\n    onBeforeUpdateChannel = props.onBeforeUpdateChannel;\n  var sdkStore = props.stores.sdkStore,\n    _props$config = props.config,\n    userListQuery = _props$config.userListQuery,\n    theme = _props$config.theme,\n    userId = _props$config.userId,\n    logger = _props$config.logger,\n    isOnline = _props$config.isOnline,\n    _props$queries = props.queries,\n    queries = _props$queries === void 0 ? {} : _props$queries;\n  var _props$config2 = props.config,\n    config = _props$config2 === void 0 ? {} : _props$config2;\n  var userDefinedDisableUserProfile = disableUserProfile || config.disableUserProfile;\n  var userDefinedRenderProfile = renderUserProfile || config.renderUserProfile;\n  var userFilledApplicationUserListQuery = queries.applicationUserListQuery;\n  var _useContext = useContext(LocalizationContext),\n    stringSet = _useContext.stringSet;\n  var sdk = sdkStore.sdk,\n    initialized = sdkStore.initialized; // hack to kepp track of channel updates by triggering useEffect\n\n  var _useState = useState(uuidv4()),\n    _useState2 = _slicedToArray(_useState, 2),\n    channelUpdateId = _useState2[0],\n    setChannelUpdateId = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    channel = _useState4[0],\n    setChannel = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    invalidChannel = _useState6[0],\n    setInvalidChannel = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    showAccordion = _useState8[0],\n    setShowAccordion = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    showLeaveChannelModal = _useState10[0],\n    setShowLeaveChannelModal = _useState10[1];\n  var componentClassNames = (Array.isArray(className) ? [COMPONENT_CLASS_NAME].concat(_toConsumableArray(className)) : [COMPONENT_CLASS_NAME, className]).join(' ');\n  useEffect(function () {\n    logger.info('ChannelSettings: Setting up');\n    if (!channelUrl || !initialized || !sdk) {\n      logger.warning('ChannelSettings: Setting up failed', 'No channelUrl or sdk uninitialized');\n      setInvalidChannel(false);\n    } else {\n      if (!sdk || !sdk.GroupChannel) {\n        logger.warning('ChannelSettings: No GroupChannel');\n        return;\n      }\n      sdk.GroupChannel.getChannel(channelUrl, function (groupChannel) {\n        if (!groupChannel) {\n          logger.warning('ChannelSettings: Channel not found');\n          setInvalidChannel(true);\n        } else {\n          logger.info('ChannelSettings: Fetched group channel', groupChannel);\n          setInvalidChannel(false);\n          setChannel(groupChannel);\n        }\n      });\n    }\n  }, [channelUrl, initialized, channelUpdateId]);\n  if (!channel || invalidChannel) {\n    return /*#__PURE__*/React__default.createElement(\"div\", {\n      className: componentClassNames\n    }, /*#__PURE__*/React__default.createElement(\"div\", {\n      className: \"sendbird-channel-settings__header\"\n    }, /*#__PURE__*/React__default.createElement(Label, {\n      type: LabelTypography.H_2,\n      color: LabelColors.ONBACKGROUND_1\n    }, stringSet.CHANNEL_SETTING__HEADER__TITLE), /*#__PURE__*/React__default.createElement(Icon, {\n      className: \"sendbird-channel-settings__close-icon\",\n      type: IconTypes.CLOSE,\n      height: \"24px\",\n      width: \"24px\",\n      onClick: function onClick() {\n        logger.info('ChannelSettings: Click close');\n        onCloseClick();\n      }\n    })), /*#__PURE__*/React__default.createElement(\"div\", null, /*#__PURE__*/React__default.createElement(PlaceHolder, {\n      type: PlaceHolderTypes.WRONG\n    })));\n  }\n  return /*#__PURE__*/React__default.createElement(UserProfileProvider, {\n    className: componentClassNames,\n    disableUserProfile: userDefinedDisableUserProfile,\n    renderUserProfile: userDefinedRenderProfile\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-settings__header\"\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.H_2,\n    color: LabelColors.ONBACKGROUND_1\n  }, stringSet.CHANNEL_SETTING__HEADER__TITLE), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-settings__header-icon\"\n  }, /*#__PURE__*/React__default.createElement(IconButton, {\n    width: \"32px\",\n    height: \"32px\",\n    onClick: function onClick() {\n      logger.info('ChannelSettings: Click close');\n      onCloseClick();\n    }\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    className: \"sendbird-channel-settings__close-icon\",\n    type: IconTypes.CLOSE,\n    height: \"22px\",\n    width: \"22px\"\n  })))), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-settings__scroll-area\"\n  }, renderChannelProfile ? renderChannelProfile({\n    channel: channel\n  }) : /*#__PURE__*/React__default.createElement(ChannelProfile, {\n    disabled: !isOnline,\n    channel: channel,\n    userId: userId,\n    theme: theme,\n    onChannelInfoChange: function onChannelInfoChange(currentImg, currentTitle) {\n      logger.info('ChannelSettings: Channel information being updated');\n      var swapParams = sdk.getErrorFirstCallback();\n      if (onBeforeUpdateChannel) {\n        var params = onBeforeUpdateChannel(currentTitle, currentImg, channel.data); // swapParams\n\n        channel.updateChannel(params, function (response, error) {\n          var groupChannel = response;\n          if (swapParams) {\n            groupChannel = error;\n          }\n          _onChannelModified(groupChannel);\n          setChannelUpdateId(uuidv4());\n        });\n        return;\n      }\n      channel.updateChannel(currentTitle, currentImg, channel.data, function (response, error) {\n        var groupChannel = response;\n        if (swapParams) {\n          groupChannel = error;\n        }\n        logger.info('ChannelSettings: Channel information updated', groupChannel);\n        _onChannelModified(groupChannel);\n        setChannelUpdateId(uuidv4());\n      });\n    }\n  }), channel.myRole === 'operator' ? /*#__PURE__*/React__default.createElement(AdminPannel, {\n    channel: channel,\n    userId: userId,\n    onChannelModified: function onChannelModified(groupChannel) {\n      // setChannelUpdateId(uuidv4());\n      _onChannelModified(groupChannel);\n    },\n    userQueryCreator: function userQueryCreator() {\n      return userListQuery && typeof userListQuery === 'function' ? userListQuery() : createDefaultUserListQuery({\n        sdk: sdk,\n        userFilledApplicationUserListQuery: userFilledApplicationUserListQuery\n      });\n    }\n  }) : /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: ['sendbird-channel-settings__panel-item', 'sendbird-channel-settings__members'].join(' '),\n    role: \"switch\",\n    \"aria-checked\": showAccordion,\n    onKeyDown: function onKeyDown() {\n      return setShowAccordion(!showAccordion);\n    },\n    onClick: function onClick() {\n      return setShowAccordion(!showAccordion);\n    },\n    tabIndex: 0\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    className: \"sendbird-channel-settings__panel-icon-left\",\n    type: IconTypes.MEMBERS,\n    fillColor: IconColors.PRIMARY,\n    height: \"24px\",\n    width: \"24px\"\n  }), /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.SUBTITLE_1,\n    color: LabelColors.ONBACKGROUND_1\n  }, stringSet.CHANNEL_SETTING__MEMBERS__TITLE, /*#__PURE__*/React__default.createElement(Badge, {\n    count: kFormatter(channel.memberCount)\n  })), /*#__PURE__*/React__default.createElement(Icon, {\n    className: ['sendbird-channel-settings__panel-icon-right', 'sendbird-channel-settings__panel-icon--chevron', showAccordion ? 'sendbird-channel-settings__panel-icon--open' : ''].join(' '),\n    type: IconTypes.CHEVRON_RIGHT,\n    height: \"24px\",\n    width: \"24px\"\n  })), showAccordion && /*#__PURE__*/React__default.createElement(MembersAccordion, {\n    currentUser: userId,\n    disabled: !isOnline // eslint-disable-next-line\n    ,\n\n    userQueryCreator: function userQueryCreator() {\n      return userListQuery && typeof userListQuery === 'function' ? userListQuery() : createDefaultUserListQuery({\n        sdk: sdk,\n        userFilledApplicationUserListQuery: userFilledApplicationUserListQuery\n      });\n    },\n    swapParams: sdk && sdk.getErrorFirstCallback && sdk.getErrorFirstCallback(),\n    channel: channel,\n    members: channel.members,\n    onInviteMembers: function onInviteMembers(selectedMembers) {\n      logger.info('ChannelSettings: Inviting new users');\n      channel.inviteWithUserIds(selectedMembers).then(function (res) {\n        _onChannelModified(res);\n        setChannelUpdateId(uuidv4());\n        logger.info('ChannelSettings: Inviting new users success!', res);\n      });\n    }\n  })), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: ['sendbird-channel-settings__panel-item', 'sendbird-channel-settings__leave-channel', !isOnline ? 'sendbird-channel-settings__panel-item__disabled' : ''].join(' '),\n    role: \"button\",\n    disabled: true,\n    onKeyDown: function onKeyDown() {\n      if (!isOnline) {\n        return;\n      }\n      setShowLeaveChannelModal(true);\n    },\n    onClick: function onClick() {\n      if (!isOnline) {\n        return;\n      }\n      setShowLeaveChannelModal(true);\n    },\n    tabIndex: 0\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    className: ['sendbird-channel-settings__panel-icon-left', 'sendbird-channel-settings__panel-icon__leave'].join(' '),\n    type: IconTypes.LEAVE,\n    fillColor: IconColors.ERROR,\n    height: \"24px\",\n    width: \"24px\"\n  }), /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.SUBTITLE_1,\n    color: LabelColors.ONBACKGROUND_1\n  }, stringSet.CHANNEL_SETTING__LEAVE_CHANNEL__TITLE)), showLeaveChannelModal && /*#__PURE__*/React__default.createElement(LeaveChannel, {\n    onCloseModal: function onCloseModal() {\n      return setShowLeaveChannelModal(false);\n    },\n    onLeaveChannel: function onLeaveChannel() {\n      logger.info('ChannelSettings: Leaving channel', channel);\n      channel.leave().then(function () {\n        logger.info('ChannelSettings: Leaving channel successful!', channel);\n        onCloseClick();\n      });\n    }\n  })));\n}\nChannelSettings.propTypes = {\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  onCloseClick: PropTypes.func,\n  onChannelModified: PropTypes.func,\n  onBeforeUpdateChannel: PropTypes.func,\n  renderChannelProfile: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\n  disableUserProfile: PropTypes.bool,\n  renderUserProfile: PropTypes.func,\n  channelUrl: PropTypes.string.isRequired,\n  queries: PropTypes.shape({\n    applicationUserListQuery: PropTypes.shape({\n      limit: PropTypes.number,\n      userIdsFilter: PropTypes.arrayOf(PropTypes.string),\n      metaDataKeyFilter: PropTypes.string,\n      metaDataValuesFilter: PropTypes.arrayOf(PropTypes.string)\n    })\n  }),\n  // from withSendbirdContext\n  stores: PropTypes.shape({\n    sdkStore: PropTypes.shape({\n      sdk: PropTypes.shape({\n        getErrorFirstCallback: PropTypes.func,\n        GroupChannel: PropTypes.oneOfType([PropTypes.shape({\n          getChannel: PropTypes.func\n        }), PropTypes.func]),\n        createApplicationUserListQuery: PropTypes.any\n      }),\n      initialized: PropTypes.bool\n    })\n  }).isRequired,\n  config: PropTypes.shape({\n    userId: PropTypes.string,\n    theme: PropTypes.string,\n    userListQuery: PropTypes.func,\n    isOnline: PropTypes.bool,\n    logger: PropTypes.shape({\n      info: PropTypes.func,\n      error: PropTypes.func,\n      warning: PropTypes.func\n    })\n  }).isRequired\n};\nChannelSettings.defaultProps = {\n  className: '',\n  onBeforeUpdateChannel: null,\n  queries: {},\n  disableUserProfile: false,\n  renderUserProfile: null,\n  renderChannelProfile: null,\n  onCloseClick: function onCloseClick() {},\n  onChannelModified: function onChannelModified() {}\n};\nvar ChannelSettings$1 = withSendbirdContext(ChannelSettings);\nexport { ChannelSettings$1 as default };","map":{"version":3,"names":["EditDetails","props","_onSubmit","onSubmit","onCancel","channel","userId","theme","inputRef","useRef","formRef","hiddenInputRef","_useState","useState","_useState2","_slicedToArray","currentImg","setCurrentImg","_useState3","_useState4","newFile","setNewFile","_useContext","useContext","LocalizationContext","stringSet","title","name","React__default","createElement","Modal","titleText","MODAL__CHANNEL_INFORMATION__TITLE","submitText","BUTTON__SAVE","current","value","reportValidity","type","Type","PRIMARY","className","ref","e","preventDefault","InputLabel","MODAL__CHANNEL_INFORMATION__CHANNEL_IMAGE","Avatar","height","width","src","ChannelAvatar","accept","style","display","onChange","URL","createObjectURL","target","files","TextButton","onClick","click","notUnderline","Label","LabelTypography","BUTTON_1","color","LabelColors","MODAL__CHANNEL_INFORMATION__UPLOAD","MODAL__CHANNEL_INFORMATION__CHANNEL_NAME","Input","required","placeHolder","MODAL__CHANNEL_INFORMATION__INPUT__PLACE_HOLDER","propTypes","PropTypes","func","isRequired","shape","string","ChannelProfile","disabled","onChannelInfoChange","showModal","setShowModal","getChannelName","members","map","member","nickname","NO_NAME","join","NO_TITLE","SUBTITLE_2","ONBACKGROUND_1","ONBACKGROUND_2","CHANNEL_SETTING__PROFILE__EDIT","arrayOf","bool","defaultProps","MembersModal","_a","hideModal","currentUser","_b","setMembers","_c","memberQuery","setMemberQuery","useEffect","memberListQuery","createMemberListQuery","limit","next","error","hideFooter","noop","onScroll","hasNext","fetchMore","clientHeight","scrollTop","scrollHeight","o","__spreadArray","UserListItem$2","user","key","action","parentRef","actionRef","Fragment","myRole","ContextMenu","menuTrigger","toggleDropdown","IconButton","Icon","IconTypes","MORE","fillColor","IconColors","CONTENT_INVERSE","menuItems","closeDropdown","MenuItems","parentContainRef","openLeft","MenuItem","role","addOperators","m","__assign","removeOperators","isBroadcast","isMuted","unmuteUser","muteUser","banUser","filter","SHOWN_MEMBER_MAX","UserListItem$1","UserListItem","_ref","_ref$member","_ref$currentUser","avatarRef","UserProfileContext","disableUserProfile","renderUserProfile","_useContext2","profileUrl","paddingTop","paddingBottom","currentUserId","close","ConnectedUserProfile","onSuccess","CHANNEL_SETTING__MEMBERS__YOU","MembersAccordion","_ref2","userQueryCreator","onInviteMembers","swapParams","showMoreModal","setShowMoreModal","showAddUserModal","setShowAddUserModal","_useContext3","slice","length","Button","ButtonTypes","SECONDARY","size","ButtonSizes","SMALL","CHANNEL_SETTING__MEMBERS__SEE_ALL_MEMBERS","CHANNEL_SETTING__MEMBERS__INVITE_MEMBER","InviteMembers$1","MODAL__INVITE_MEMBER__TITLE","BUTTON__INVITE","closeModal","idsToFilter","COMPONENT_NAME","injectingClassNames","Array","isArray","MutedAvatarOverlay","SUBTITLE_1","CAPTION_3","OperatorsModal","operators","setOperators","operatorQuery","setOperatorQuery","operatorListQuery","createOperatorListQuery","response","AddOperatorsModal","selectedMembers","setSelectedMembers","_d","selectedCount","Object","keys","ONBACKGROUND_3","CAPTION_1","MODAL__INVITE_MEMBER__SELECTEC","checkBox","checked","event","modifiedSelectedMembers","id","OperatorList","sdk","showMore","setShowMore","showAdd","setShowAdd","_e","setHasNext","refershList","useCallback","operator","CHANNEL_SETTING__OPERATORS__TITLE_ALL","CHANNEL_SETTING__OPERATORS__TITLE_ADD","mapStoreToProps$3","mapStoreToProps","store","getSdk","OperatorList$1","withSendbirdContext","InviteMembers","userQuery","setUserQuery","userListQuery","MemberList","showAllMembers","setShowAllMembers","showInviteMembers","setShowInviteMembers","memberUserListQuery","inviteWithUserIds","mapStoreToProps$2","MemberList$1","BannedMembersModal","bannedUserListQuery","createBannedUserListQuery","users","unbanUser","BannedMemberList","refreshList","mapStoreToProps$1","BannedMemberList$1","MutedMembersModal","mutedMemberFilter","MutedMemberList","MutedMemberList$1","kFormatter$1","kFormatter","num","Math","abs","toFixed","AdminPannel","frozen","setFrozen","isFrozen","AccordionGroup","Accordion","renderTitle","OPERATOR","CHANNEL_SETTING__OPERATORS__TITLE","renderContent","MEMBERS","CHANNEL_SETTING__MEMBERS__TITLE","Badge","count","memberCount","MUTE","CHANNEL_SETTING__MUTED_MEMBERS__TITLE","BAN","CHANNEL_SETTING__BANNED_MEMBERS__TITLE","FREEZE","CHANNEL_SETTING__FREEZE_CHANNEL","unfreeze","TOGGLE_ON","freeze","TOGGLE_OFF","COMPONENT_CLASS_NAME","concat","ChannelSettings","onCloseClick","channelUrl","_onChannelModified","onChannelModified","renderChannelProfile","onBeforeUpdateChannel","sdkStore","stores","_props$config","config","logger","isOnline","_props$queries","queries","_props$config2","userDefinedDisableUserProfile","userDefinedRenderProfile","userFilledApplicationUserListQuery","applicationUserListQuery","initialized","uuidv4","channelUpdateId","setChannelUpdateId","setChannel","_useState5","_useState6","invalidChannel","setInvalidChannel","_useState7","_useState8","showAccordion","setShowAccordion","_useState9","_useState10","showLeaveChannelModal","setShowLeaveChannelModal","componentClassNames","_toConsumableArray","info","warning","GroupChannel","getChannel","groupChannel","H_2","CHANNEL_SETTING__HEADER__TITLE","CLOSE","PlaceHolder","PlaceHolderTypes","WRONG","UserProfileProvider","currentTitle","getErrorFirstCallback","params","data","updateChannel","createDefaultUserListQuery","onKeyDown","tabIndex","CHEVRON_RIGHT","then","res","LEAVE","ERROR","CHANNEL_SETTING__LEAVE_CHANNEL__TITLE","LeaveChannel","onCloseModal","onLeaveChannel","leave","oneOfType","element","number","userIdsFilter","metaDataKeyFilter","metaDataValuesFilter","createApplicationUserListQuery","any","ChannelSettings$1"],"sources":["C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\components\\EditDetails.jsx","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\components\\ChannelProfile.jsx","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\components\\AdminPanel\\MembersModal.tsx","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\components\\MembersAccordion.jsx","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\components\\UserListItem.tsx","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\components\\AdminPanel\\OperatorsModal.tsx","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\components\\AdminPanel\\AddOperatorsModal.tsx","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\components\\AdminPanel\\OperatorList.tsx","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\components\\AdminPanel\\InviteMembersModal.tsx","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\components\\AdminPanel\\MemberList.tsx","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\components\\AdminPanel\\BannedMembersModal.tsx","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\components\\AdminPanel\\BannedMemberList.tsx","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\components\\AdminPanel\\MutedMembersModal.tsx","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\components\\AdminPanel\\MutedMemberList.tsx","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\components\\AdminPanel\\index.tsx","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\index.jsx"],"sourcesContent":["import React, { useState, useRef, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport Modal from '../../../ui/Modal';\nimport Input, { InputLabel } from '../../../ui/Input';\nimport Avatar from '../../../ui/Avatar/index';\nimport { Type as ButtonType } from '../../../ui/Button/type';\nimport Label, { LabelColors, LabelTypography } from '../../../ui/Label';\nimport TextButton from '../../../ui/TextButton';\nimport ChannelAvatar from '../../../ui/ChannelAvatar/index';\n\nconst EditDetails = (props) => {\n  const {\n    onSubmit,\n    onCancel,\n    channel,\n    userId,\n    theme,\n  } = props;\n  const inputRef = useRef(null);\n  const formRef = useRef(null);\n  const hiddenInputRef = useRef(null);\n  const [currentImg, setCurrentImg] = useState(null);\n  const [newFile, setNewFile] = useState(null);\n  const { stringSet } = useContext(LocalizationContext);\n  const title = channel.name;\n  return (\n    <Modal\n      titleText={stringSet.MODAL__CHANNEL_INFORMATION__TITLE}\n      submitText={stringSet.BUTTON__SAVE}\n      onCancel={onCancel}\n      onSubmit={() => {\n        if (title !== '' && !inputRef.current.value) {\n          if (formRef.current.reportValidity) { // might not work in explorer\n            formRef.current.reportValidity();\n          }\n          return;\n        }\n        onSubmit(newFile, inputRef.current.value);\n        onCancel();\n      }}\n      type={ButtonType.PRIMARY}\n    >\n      <form\n        className=\"channel-profile-form\"\n        ref={formRef}\n        onSubmit={(e) => { e.preventDefault(); }}\n      >\n        <div className=\"channel-profile-form__img-section\">\n          <InputLabel>\n            {stringSet.MODAL__CHANNEL_INFORMATION__CHANNEL_IMAGE}\n          </InputLabel>\n          <div className=\"channel-profile-form__avatar\">\n            {\n              currentImg\n                ? (\n                  <Avatar\n                    height=\"80px\"\n                    width=\"80px\"\n                    src={currentImg}\n                  />\n                ) : (\n                  <ChannelAvatar\n                    height={80}\n                    width={80}\n                    channel={channel}\n                    userId={userId}\n                    theme={theme}\n                  />\n                )\n              }\n          </div>\n          <input\n            ref={hiddenInputRef}\n            type=\"file\"\n            accept=\"image/gif, image/jpeg, image/png\"\n            style={{ display: 'none' }}\n            onChange={(e) => {\n              setCurrentImg(URL.createObjectURL(e.target.files[0]));\n              setNewFile(e.target.files[0]);\n              hiddenInputRef.current.value = '';\n            }}\n          />\n          <TextButton\n            className=\"channel-profile-form__avatar-button\"\n            onClick={() => hiddenInputRef.current.click()}\n            notUnderline\n          >\n            <Label type={LabelTypography.BUTTON_1} color={LabelColors.PRIMARY}>\n              {stringSet.MODAL__CHANNEL_INFORMATION__UPLOAD}\n            </Label>\n          </TextButton>\n        </div>\n        <div className=\"channel-profile-form__name-section\">\n          <InputLabel>\n            {stringSet.MODAL__CHANNEL_INFORMATION__CHANNEL_NAME}\n          </InputLabel>\n          <Input\n            required={title !== ''}\n            name=\"channel-profile-form__name\"\n            ref={inputRef}\n            value={title}\n            placeHolder={stringSet.MODAL__CHANNEL_INFORMATION__INPUT__PLACE_HOLDER}\n          />\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\nEditDetails.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  channel: PropTypes.shape({\n    name: PropTypes.string,\n  }).isRequired,\n  userId: PropTypes.string.isRequired,\n  theme: PropTypes.string.isRequired,\n};\n\nexport default EditDetails;\n","import React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './channel-profile.scss';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport Label, { LabelColors, LabelTypography } from '../../../ui/Label';\nimport EditDetailsModal from './EditDetails';\nimport TextButton from '../../../ui/TextButton';\nimport ChannelAvatar from '../../../ui/ChannelAvatar/index';\n\nconst ChannelProfile = (props) => {\n  const {\n    disabled,\n    channel,\n    userId,\n    theme,\n    onChannelInfoChange,\n  } = props;\n  const [showModal, setShowModal] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n\n  const getChannelName = () => {\n    if (channel && channel.name && channel.name !== 'Group Channel') {\n      return channel.name;\n    }\n    if (channel && (channel.name === 'Group Channel' || !channel.name)) {\n      return channel.members.map((member) => member.nickname || stringSet.NO_NAME).join(', ');\n    }\n    return stringSet.NO_TITLE;\n  };\n\n  return (\n    <div className=\"sendbird-channel-profile\">\n      <div className=\"sendbird-channel-profile--inner\">\n        <div className=\"sendbird-channel-profile__avatar\">\n          <ChannelAvatar\n            channel={channel}\n            userId={userId}\n            theme={theme}\n            width={80}\n            height={80}\n          />\n        </div>\n        <Label\n          className=\"sendbird-channel-profile__title\"\n          type={LabelTypography.SUBTITLE_2}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {getChannelName()}\n        </Label>\n        <TextButton\n          disabled={disabled}\n          className=\"sendbird-channel-profile__edit\"\n          onClick={() => {\n            if (disabled) { return; }\n            setShowModal(true);\n          }}\n          notUnderline\n        >\n          <Label\n            type={LabelTypography.BUTTON_1}\n            color={disabled ? LabelColors.ONBACKGROUND_2 : LabelColors.PRIMARY}\n          >\n            {stringSet.CHANNEL_SETTING__PROFILE__EDIT}\n          </Label>\n        </TextButton>\n        {\n          showModal && (\n            <EditDetailsModal\n              onCancel={() => setShowModal(false)}\n              onSubmit={onChannelInfoChange}\n              channel={channel}\n              userId={userId}\n              theme={theme}\n            />\n          )\n        }\n      </div>\n    </div>\n  );\n};\n\nChannelProfile.propTypes = {\n  channel: PropTypes.shape({\n    name: PropTypes.string,\n    members: PropTypes.arrayOf(\n      PropTypes.shape({\n        nickname: PropTypes.string,\n      }),\n    ),\n  }).isRequired,\n  userId: PropTypes.string.isRequired,\n  theme: PropTypes.string,\n  disabled: PropTypes.bool,\n  onChannelInfoChange: PropTypes.func,\n};\n\nChannelProfile.defaultProps = {\n  theme: 'light',\n  disabled: false,\n  onChannelInfoChange: () => { },\n};\n\nexport default ChannelProfile;\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react'\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport { noop } from '../../../../utils/utils';\n\ninterface Props {\n  hideModal(): void;\n  currentUser?: string;\n  channel: SendbirdTypes[\"GroupChannel\"];\n}\n\nexport default function MembersModal({\n  hideModal,\n  channel,\n  currentUser,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [memberQuery, setMemberQuery] = useState(null);\n\n  useEffect(() => {\n    const memberListQuery = channel.createMemberListQuery();\n    memberListQuery.limit = 20;\n    memberListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n    });\n    setMemberQuery(memberListQuery);\n  }, [])\n  return (\n    <div>\n      <Modal\n        hideFooter\n        onCancel={() => hideModal()}\n        onSubmit={noop}\n        titleText=\"All Members\"\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              memberQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setMembers([\n                  ...members,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              user={member}\n              key={member.userId}\n              currentUser={currentUser}\n              action={({ parentRef, actionRef }) => (\n                <>\n                  {channel.myRole === 'operator' && (\n                    <ContextMenu\n                      menuTrigger={(toggleDropdown) => (\n                        <IconButton\n                          className=\"sendbird-user-message__more__menu\"\n                          width=\"32px\"\n                          height=\"32px\"\n                          onClick={toggleDropdown}\n                        >\n                          <Icon\n                            width=\"24px\"\n                            height=\"24px\"\n                            type={IconTypes.MORE}\n                            fillColor={IconColors.CONTENT_INVERSE}\n                          />\n                        </IconButton>\n                      )}\n                      menuItems={(closeDropdown) => (\n                        <MenuItems\n                          parentContainRef={parentRef}\n                          parentRef={actionRef} // for catching location(x, y) of MenuItems\n                          closeDropdown={closeDropdown}\n                          openLeft\n                        >\n                          <MenuItem\n                            onClick={() => {\n                              if ((member.role !== 'operator')) {\n                                channel.addOperators([member.userId], () => {\n                                  setMembers(members.map(m => {\n                                    if(m.userId === member.userId) {\n                                      return {\n                                        ...member,\n                                        role: 'operator',\n                                      };\n                                    }\n                                    return m;\n                                  }));\n                                  closeDropdown();\n                                });\n                              } else {\n                                channel.removeOperators([member.userId], () => {\n                                  setMembers(members.map(m => {\n                                    if(m.userId === member.userId) {\n                                      return {\n                                        ...member,\n                                        role: '',\n                                      };\n                                    }\n                                    return m;\n                                  }));\n                                  closeDropdown();\n                                });\n                              }\n                            }}\n                          >\n                            { member.role !== 'operator' ? 'Promote to operator' : 'Demote operator'}\n                          </MenuItem>\n                          {\n                            // No muted members in broadcast channel\n                            !channel.isBroadcast && (\n                              <MenuItem\n                                onClick={() => {\n                                  if (member.isMuted) {\n                                    channel.unmuteUser(member, () => {\n                                      setMembers(members.map(m => {\n                                        if(m.userId === member.userId) {\n                                          return {\n                                            ...member,\n                                            isMuted: false,\n                                          };\n                                        }\n                                        return m;\n                                      }));\n                                      closeDropdown();\n                                    })\n                                  } else {\n                                    channel.muteUser(member, () => {\n                                      setMembers(members.map(m => {\n                                        if(m.userId === member.userId) {\n                                          return {\n                                            ...member,\n                                            isMuted: true,\n                                          };\n                                        }\n                                        return m;\n                                      }));\n                                      closeDropdown();\n                                    });\n                                  }\n                                }}\n                              >\n                                { member.isMuted ? 'Unmute' : 'Mute' }\n                              </MenuItem>\n                            )\n                          }\n                          <MenuItem\n                            onClick={() => {\n                              channel.banUser(member, -1, '', () => {\n                                setMembers(members.filter(({ userId }) => {\n                                  return userId !== member.userId;\n                                }));\n                              });\n                            }}\n                          >\n                            Ban\n                          </MenuItem>\n                        </MenuItems>\n                      )}\n                    />\n                  )}\n                </>\n              )}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, { useState, useRef, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './members-accordion.scss';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport { UserProfileContext } from '../../../lib/UserProfileContext';\nimport Button, { ButtonTypes, ButtonSizes } from '../../../ui/Button';\nimport Avatar from '../../../ui/Avatar/index';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport InviteMembers from '../../InviteMembers';\nimport MembersModal from './AdminPanel/MembersModal';\nimport UserProfile from '../../../ui/UserProfile';\nimport ContextMenu, { MenuItems } from '../../../ui/ContextMenu';\n\nconst SHOWN_MEMBER_MAX = 10;\n\nconst UserListItem = ({ member = {}, currentUser = '' }) => {\n  const avatarRef = useRef(null);\n  const {\n    disableUserProfile,\n    renderUserProfile,\n  } = useContext(UserProfileContext);\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-members-accordion__member\">\n      <div className=\"sendbird-members-accordion__member-avatar\">\n        <ContextMenu\n          menuTrigger={(toggleDropdown) => (\n            <Avatar\n              onClick={() => {\n                if (!disableUserProfile) {\n                  toggleDropdown();\n                }\n              }}\n              ref={avatarRef}\n              src={member.profileUrl}\n              width={24}\n              height={24}\n            />\n          )}\n          menuItems={(closeDropdown) => (\n            <MenuItems\n              openLeft\n              parentRef={avatarRef}\n              // for catching location(x, y) of MenuItems\n              parentContainRef={avatarRef}\n              // for toggling more options(menus & reactions)\n              closeDropdown={closeDropdown}\n              style={{ paddingTop: 0, paddingBottom: 0 }}\n            >\n              {\n                renderUserProfile\n                  ? renderUserProfile({\n                    user: member,\n                    currentUserId: currentUser,\n                    close: closeDropdown,\n                  })\n                  : (\n                    <UserProfile\n                      user={member}\n                      currentUserId={currentUser}\n                      onSuccess={closeDropdown}\n                    />\n                  )\n              }\n            </MenuItems>\n          )}\n        />\n      </div>\n      <Label type={LabelTypography.SUBTITLE_2} color={LabelColors.ONBACKGROUND_1}>\n        {member.nickname || stringSet.NO_NAME}\n        {\n          (currentUser === member.userId) && (\n            stringSet.CHANNEL_SETTING__MEMBERS__YOU\n          )\n        }\n      </Label>\n    </div>\n  );\n};\n\nUserListItem.propTypes = {\n  member: PropTypes.shape({\n    userId: PropTypes.string,\n    profileUrl: PropTypes.string,\n    nickname: PropTypes.string,\n  }).isRequired,\n  currentUser: PropTypes.string.isRequired,\n};\n\nconst MembersAccordion = ({\n  channel,\n  disabled,\n  currentUser,\n  userQueryCreator,\n  onInviteMembers,\n  swapParams,\n}) => {\n  const members = channel.members || [];\n  const [showMoreModal, setShowMoreModal] = useState(false);\n  const [showAddUserModal, setShowAddUserModal] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-members-accordion\">\n      <div className=\"sendbird-members-accordion__list\">\n        {\n          members.slice(0, SHOWN_MEMBER_MAX).map((member) => (\n            <UserListItem\n              member={member}\n              currentUser={currentUser}\n              key={member.userId}\n            />\n          ))\n        }\n      </div>\n      <div className=\"sendbird-members-accordion__footer\">\n        {\n          members.length >= SHOWN_MEMBER_MAX && (\n            <Button\n              className=\"sendbird-members-accordion__footer__all-members\"\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => setShowMoreModal(true)}\n            >\n              {stringSet.CHANNEL_SETTING__MEMBERS__SEE_ALL_MEMBERS}\n            </Button>\n          )\n        }\n        {\n          members.length >= SHOWN_MEMBER_MAX && showMoreModal && (\n            <MembersModal\n              currentUser={currentUser}\n              hideModal={() => {\n                setShowMoreModal(false);\n              }}\n              channel={channel}\n            />\n          )\n        }\n        <Button\n          className=\"sendbird-members-accordion__footer__invite-users\"\n          type={ButtonTypes.SECONDARY}\n          size={ButtonSizes.SMALL}\n          disabled={disabled}\n          onClick={() => {\n            if (disabled) { return; }\n            setShowAddUserModal(true);\n          }}\n        >\n          {stringSet.CHANNEL_SETTING__MEMBERS__INVITE_MEMBER}\n        </Button>\n        {\n          showAddUserModal && (\n            <InviteMembers\n              swapParams={swapParams}\n              titleText={stringSet.MODAL__INVITE_MEMBER__TITLE}\n              submitText={stringSet.BUTTON__INVITE}\n              closeModal={() => setShowAddUserModal(false)}\n              idsToFilter={members.map((member) => (member.userId))}\n              userQueryCreator={userQueryCreator}\n              onSubmit={onInviteMembers}\n            />\n          )\n        }\n      </div>\n    </div>\n  );\n};\n\nMembersAccordion.propTypes = {\n  swapParams: PropTypes.bool,\n  disabled: PropTypes.bool,\n  channel: PropTypes.shape({\n    members: PropTypes.arrayOf(PropTypes.shape({})),\n  }),\n  currentUser: PropTypes.string,\n  userQueryCreator: PropTypes.func.isRequired,\n  onInviteMembers: PropTypes.func.isRequired,\n};\n\nMembersAccordion.defaultProps = {\n  swapParams: false,\n  currentUser: '',\n  disabled: false,\n  channel: {},\n};\n\nexport default MembersAccordion;\n","// might move to reusable/UI\n\nimport React, { ReactElement, useRef, useContext } from 'react';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport { UserProfileContext } from '../../../lib/UserProfileContext';\nimport Avatar from '../../../ui/Avatar/index';\nimport MutedAvatarOverlay from '../../../ui/Avatar/MutedAvatarOverlay';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport UserProfile from '../../../ui/UserProfile';\nimport ContextMenu, { MenuItems } from '../../../ui/ContextMenu';\n\nimport './user-list-item.scss';\nimport { SendbirdTypes } from '../../../types';\n\nconst COMPONENT_NAME = 'sendbird-user-list-item--small';\n\ninterface ActionProps {\n  actionRef: React.RefObject<HTMLInputElement>;\n  parentRef: React.RefObject<HTMLInputElement>;\n}\n\ntype CustomUser = SendbirdTypes['User'] & {\n  isMuted: boolean;\n  role: string;\n};\n\ninterface Props {\n  user: CustomUser;\n  currentUser?: string;\n  className?: string;\n  action?(props: ActionProps): ReactElement;\n}\n\nconst UserListItem = ({\n  user,\n  className,\n  currentUser,\n  action,\n}: Props): ReactElement => {\n  const actionRef = useRef(null);\n  const parentRef = useRef(null);\n  const avatarRef = useRef(null);\n  const { stringSet } = useContext(LocalizationContext);\n  const {\n    disableUserProfile,\n    renderUserProfile,\n  } = useContext(UserProfileContext);\n  const injectingClassNames = Array.isArray(className) ? className : [className];\n  return (\n    <div\n      ref={parentRef}\n      className={[\n        COMPONENT_NAME, ...injectingClassNames,\n      ].join(' ')}\n    >\n      {\n        user.isMuted && (\n          <MutedAvatarOverlay />\n        )\n      }\n      <ContextMenu\n        menuTrigger={(toggleDropdown) => (\n          <Avatar\n            onClick={() => {\n              if (!disableUserProfile) {\n                toggleDropdown();\n              }\n            }}\n            ref={avatarRef}\n            className={`${COMPONENT_NAME}__avatar`}\n            src={user.profileUrl}\n            width={24}\n            height={24}\n          />\n        )}\n        menuItems={(closeDropdown) => (\n          <MenuItems\n            openLeft\n            parentRef={avatarRef}\n            // for catching location(x, y) of MenuItems\n            parentContainRef={avatarRef}\n            // for toggling more options(menus & reactions)\n            closeDropdown={closeDropdown}\n            style={{ paddingTop: 0, paddingBottom: 0 }}\n          >\n            {\n              renderUserProfile\n                ? renderUserProfile({\n                  user,\n                  currentUserId: currentUser,\n                  close: closeDropdown,\n                })\n                : (\n                  <UserProfile\n                    user={user}\n                    currentUserId={currentUser}\n                    onSuccess={closeDropdown}\n                  />\n                )\n            }\n          </MenuItems>\n        )}\n      />\n      <Label\n        className={`${COMPONENT_NAME}__title`}\n        type={LabelTypography.SUBTITLE_1}\n        color={LabelColors.ONBACKGROUND_1}\n      >\n        {user.nickname || stringSet.NO_NAME}\n        {\n          (currentUser === user.userId) && (\n            \" (You)\"\n          )\n        }\n      </Label>\n      { // if there is now nickname, display userId\n        !user.nickname && (\n          <Label\n            className={`${COMPONENT_NAME}__subtitle`}\n            type={LabelTypography.CAPTION_3}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {user.userId}\n          </Label>\n        )\n      }\n      {\n        user.role === 'operator' && (\n          <Label\n            className={`${COMPONENT_NAME}__operator`}\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            Operator\n          </Label>\n        )\n      }\n      {\n        action && (\n          <div ref={actionRef} className={`${COMPONENT_NAME}__action`}>\n            { action({ actionRef, parentRef }) }\n          </div>\n        )\n      }\n    </div>\n  );\n}\n\nexport default UserListItem;\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react'\n\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport { noop } from '../../../../utils/utils';\n\ninterface Props {\n  hideModal(): void;\n  channel: SendbirdTypes[\"GroupChannel\"];\n  currentUser?: string;\n}\n\nexport default function OperatorsModal({\n  hideModal,\n  channel,\n  currentUser,\n}: Props): ReactElement {\n  const [operators, setOperators] = useState([]);\n  const [operatorQuery, setOperatorQuery] = useState(null);\n\n  useEffect(() => {\n    const operatorListQuery = channel.createOperatorListQuery();\n    operatorListQuery.limit = 20;\n    operatorListQuery.next((operators, error) => {\n      if (error) {\n        return;\n      }\n      setOperators(operators);\n    });\n    setOperatorQuery(operatorListQuery);\n  }, [])\n  return (\n    <div>\n      <Modal\n        hideFooter\n        onCancel={() => hideModal()}\n        onSubmit={noop}\n        titleText=\"All operators\"\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = operatorQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              operatorQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setOperators([\n                  ...operators,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { operators.map((member) => (\n            <UserListItem\n              currentUser={currentUser}\n              user={member}\n              key={member.userId}\n              action={({ parentRef, actionRef }) => (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.removeOperators([member.userId], (response, error) => {\n                            if (error) {\n                              return;\n                            }\n                            setOperators(operators.filter(({ userId }) => {\n                              return userId !== member.userId;\n                            }));\n                          });\n                          closeDropdown();\n                        }}\n                      >\n                        Dismiss operator\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              )}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  )\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useContext,\n} from 'react'\n\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport Modal from '../../../../ui/Modal';\nimport Label, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport { Type as ButtonType } from '../../../../ui/Button/type';\nimport UserListItem from '../../../../ui/UserListItem';\n\ninterface Props {\n  hideModal(): void;\n  onSubmit(members: Array<string>): void;\n  channel: SendbirdTypes[\"GroupChannel\"];\n}\n\nexport default function AddOperatorsModal({\n  hideModal,\n  channel,\n  onSubmit,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [selectedMembers, setSelectedMembers] = useState({});\n  const [memberQuery, setMemberQuery] = useState(null);\n  const { stringSet } = useContext(LocalizationContext);\n\n  useEffect(() => {\n    const memberListQuery = channel.createMemberListQuery();\n    memberListQuery.limit = 20;\n    memberListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n    });\n    setMemberQuery(memberListQuery);\n  }, [])\n\n  const selectedCount = Object.keys(selectedMembers).filter((m) => selectedMembers[m]).length;\n  return (\n    <div>\n      <Modal\n        type={ButtonType.PRIMARY}\n        submitText=\"Add\"\n        onCancel={() => hideModal()}\n        onSubmit={() => {\n          const members = Object.keys(selectedMembers).filter((m) => selectedMembers[m]);\n          onSubmit(members);\n        }}\n        titleText=\"Select members\"\n      >\n        <Label\n          color={(selectedCount > 0) ? LabelColors.PRIMARY : LabelColors.ONBACKGROUND_3}\n          type={LabelTypography.CAPTION_1}\n        >\n          {`${selectedCount} ${stringSet.MODAL__INVITE_MEMBER__SELECTEC}`}\n        </Label>\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              memberQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setMembers([\n                  ...members,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              checkBox\n              checked={selectedMembers[member.userId]}\n              onChange={\n                (event) => {\n                  const modifiedSelectedMembers = {\n                    ...selectedMembers,\n                    [event.target.id]: event.target.checked,\n                  };\n                  if (!event.target.checked) {\n                    delete modifiedSelectedMembers[event.target.id];\n                  }\n                  setSelectedMembers(modifiedSelectedMembers);\n                }\n              }\n              user={member}\n              key={member.userId}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n  useContext,\n} from 'react';\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport withSendbirdContext from '../../../../lib/SendbirdSdkContext';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport { getSdk } from '../../../../lib/selectors';\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport UserListItem from '../UserListItem';\nimport OperatorsModal from './OperatorsModal';\nimport AddOperatorsModal from './AddOperatorsModal';\n\ninterface Props {\n  sdk: SendbirdTypes[\"SendBirdInstance\"];\n  channel: SendbirdTypes[\"GroupChannel\"];\n}\n\nexport const OperatorList = ({ sdk, channel }: Props): ReactElement => {\n  const [operators, setOperators] = useState([]);\n  const [showMore, setShowMore] = useState(false);\n  const [showAdd, setShowAdd] = useState(false);\n  const [hasNext, setHasNext] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n\n  useEffect(() => {\n    if (!channel) {\n      setOperators([]);\n      return;\n    }\n\n    const operatorListQuery = channel.createOperatorListQuery();\n    operatorListQuery.limit = 10;\n    operatorListQuery.next((operators, error) => {\n      if (error) {\n        return;\n      }\n      setOperators(operators);\n      setHasNext(operatorListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refershList = useCallback(\n    () => {\n      if (!channel) {\n        setOperators([]);\n        return;\n      }\n      const operatorListQuery = channel.createOperatorListQuery();\n      operatorListQuery.limit = 10;\n      operatorListQuery.next((operators, error) => {\n        if (error) {\n          return;\n        }\n        setOperators(operators);\n        setHasNext(operatorListQuery.hasNext);\n      });\n    },\n    [channel],\n  );\n\n  return (\n    <>\n      {\n        operators.map((operator) => (\n          <UserListItem\n            key={operator.userId}\n            user={operator}\n            currentUser={sdk.currentUser.userId}\n            action={({ actionRef, parentRef }) => {\n              return (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.removeOperators([operator.userId], (response, error) => {\n                            if (error) {\n                              return;\n                            }\n                            setOperators(operators.filter(({ userId }) => {\n                              return userId !== operator.userId;\n                            }))\n                          });\n                          closeDropdown();\n                        }}\n                      >\n                        Dismiss operator\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              );\n            }}\n          />\n        ))\n      }\n      {\n        hasNext && (\n          <div\n            className=\"sendbird-channel-settings-accordion__footer\"\n          >\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowMore(true);\n              }}\n            >\n              {stringSet.CHANNEL_SETTING__OPERATORS__TITLE_ALL}\n            </Button>\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowAdd(true);\n              }}\n            >\n              {stringSet.CHANNEL_SETTING__OPERATORS__TITLE_ADD}\n            </Button>\n          </div>\n        )\n      }\n      {\n        showMore && (\n          <OperatorsModal\n            currentUser={sdk.currentUser.userId}\n            hideModal={() => {\n              setShowMore(false);\n              refershList();\n            }}\n            channel={channel}\n          />\n        )\n      }\n      {\n        showAdd && (\n          <AddOperatorsModal\n            hideModal={() => setShowAdd(false)}\n            channel={channel}\n            onSubmit={(members) => {\n              setShowAdd(false);\n              channel.addOperators(members, () => {\n                refershList();\n              });\n            }}\n          />\n        )\n      }\n    </>\n  );\n}\n\nconst mapStoreToProps = (store) => ({\n  sdk: getSdk(store),\n});\n\nexport default withSendbirdContext(OperatorList, mapStoreToProps);\n","import React, { ReactElement, useEffect, useState } from 'react'\n\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport Modal from '../../../../ui/Modal';\nimport { Type as ButtonType } from '../../../../ui/Button/type';\nimport UserListItem from '../../../../ui/UserListItem';\n\ninterface Props {\n  hideModal(): void;\n  onSubmit(members: Array<string>): void;\n  channel: SendbirdTypes['GroupChannel'];\n  userQueryCreator(): SendbirdTypes['UserListQuery'];\n}\n\nexport default function InviteMembers({\n  hideModal,\n  userQueryCreator,\n  onSubmit,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [selectedMembers, setSelectedMembers] = useState({});\n  const [userQuery, setUserQuery] = useState(null);\n\n  useEffect(() => {\n    const userListQuery = userQueryCreator();\n    userListQuery.limit = 20;\n    userListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n    });\n    setUserQuery(userListQuery);\n  }, [])\n  return (\n    <div>\n      <Modal\n        disabled={Object.keys(selectedMembers).length === 0}\n        submitText=\"Invite\"\n        type={ButtonType.PRIMARY}\n        onCancel={() => hideModal()}\n        onSubmit={() => {\n          const members = Object.keys(selectedMembers).filter((m) => selectedMembers[m]);\n          onSubmit(members);\n        }}\n        titleText=\"Select members\"\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = userQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              userQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setMembers([\n                  ...members,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              checkBox\n              checked={selectedMembers[member.userId]}\n              onChange={\n                (event) => {\n                  const modifiedSelectedMembers = {\n                    ...selectedMembers,\n                    [event.target.id]: event.target.checked,\n                  };\n                  if (!event.target.checked) {\n                    delete modifiedSelectedMembers[event.target.id];\n                  }\n                  setSelectedMembers(modifiedSelectedMembers);\n                }\n              }\n              user={member}\n              key={member.userId}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n} from 'react';\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport withSendbirdContext from '../../../../lib/SendbirdSdkContext';\nimport { getSdk } from '../../../../lib/selectors';\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport UserListItem from '../UserListItem';\nimport MembersModal from './MembersModal';\nimport InviteMembers from './InviteMembersModal';\n\ninterface Props {\n  sdk: SendbirdTypes['SendBirdInstance'];\n  channel: SendbirdTypes['GroupChannel'];\n  userQueryCreator(): SendbirdTypes['UserListQuery'];\n  userId: string;\n}\n\nexport const MemberList = ({\n  sdk,\n  channel,\n  userQueryCreator,\n  userId,\n}: Props): ReactElement => {\n  const [members, setMembers] = useState([]);\n  const [hasNext, setHasNext] = useState(false);\n  const [showAllMembers, setShowAllMembers] = useState(false);\n  const [showInviteMembers, setShowInviteMembers] = useState(false);\n\n  useEffect(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refershList = useCallback(\n    () => {\n      if (!channel) {\n        setMembers([]);\n        return;\n      }\n      const memberUserListQuery = channel.createMemberListQuery();\n      memberUserListQuery.limit = 10;\n      memberUserListQuery.next((members, error) => {\n        if (error) {\n          return;\n        }\n        setMembers(members);\n        setHasNext(memberUserListQuery.hasNext);\n      });\n    },\n    [channel],\n  );\n\n  return (\n    <>\n      {\n        members.map((member) => (\n          <UserListItem\n            key={member.userId}\n            user={member}\n            currentUser={sdk.currentUser.userId}\n            action={\n              (userId !== member.userId)\n                ? ({ actionRef, parentRef }) => (\n                  <ContextMenu\n                    menuTrigger={(toggleDropdown) => (\n                      <IconButton\n                        className=\"sendbird-user-message__more__menu\"\n                        width=\"32px\"\n                        height=\"32px\"\n                        onClick={toggleDropdown}\n                      >\n                        <Icon\n                          width=\"24px\"\n                          height=\"24px\"\n                          type={IconTypes.MORE}\n                          fillColor={IconColors.CONTENT_INVERSE}\n                        />\n                      </IconButton>\n                    )}\n                    menuItems={(closeDropdown) => (\n                      <MenuItems\n                        parentContainRef={parentRef}\n                        parentRef={actionRef} // for catching location(x, y) of MenuItems\n                        closeDropdown={closeDropdown}\n                        openLeft\n                      >\n                        <MenuItem\n                          onClick={() => {\n                            if ((member.role !== 'operator')) {\n                              channel.addOperators([member.userId], () => {\n                                refershList();\n                                closeDropdown();\n                              });\n                            } else {\n                              channel.removeOperators([member.userId], () => {\n                                refershList();\n                                closeDropdown();\n                              });\n                            }\n                          }}\n                        >\n                          {member.role !== 'operator' ? 'Promote to operator' : 'Demote operator'}\n                        </MenuItem>\n                        {\n                          // No muted members in broadcast channel\n                          !channel.isBroadcast && (\n                            <MenuItem\n                              onClick={() => {\n                                if (member.isMuted) {\n                                  channel.unmuteUser(member, () => {\n                                    refershList();\n                                    closeDropdown();\n                                  })\n                                } else {\n                                  channel.muteUser(member, () => {\n                                    refershList();\n                                    closeDropdown();\n                                  });\n                                }\n                              }}\n                            >\n                              { member.isMuted ? 'Unmute' : 'Mute'}\n                            </MenuItem>\n                          )\n                        }\n                        <MenuItem\n                          onClick={() => {\n                            channel.banUser(member, -1, '', () => {\n                              refershList();\n                              closeDropdown();\n                            });\n                          }}\n                        >\n                          Ban\n                    </MenuItem>\n                      </MenuItems>\n                    )}\n                  />\n                )\n                : null\n            }\n          />\n        ))\n      }\n      <div\n        className=\"sendbird-channel-settings-accordion__footer\"\n      >\n        {\n          hasNext && (\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => setShowAllMembers(true)}\n            >\n              All members\n            </Button>\n          )\n        }\n        <Button\n          type={ButtonTypes.SECONDARY}\n          size={ButtonSizes.SMALL}\n          onClick={() => setShowInviteMembers(true)}\n        >\n          Invite members\n        </Button>\n      </div>\n      {\n        showAllMembers && (\n          <MembersModal\n            currentUser={sdk.currentUser.userId}\n            channel={channel}\n            hideModal={() => {\n              setShowAllMembers(false);\n              refershList();\n            }}\n          />\n        )\n      }\n      {\n        showInviteMembers && (\n          <InviteMembers\n            userQueryCreator={userQueryCreator}\n            onSubmit={(selectedMembers: Array<string>) => {\n              channel.inviteWithUserIds(selectedMembers, () => {\n                setShowInviteMembers(false);\n                refershList();\n              });\n            }}\n            channel={channel}\n            hideModal={() => setShowInviteMembers(false)}\n          />\n        )\n      }\n    </>\n  );\n}\n\nconst mapStoreToProps = (store) => ({\n  sdk: getSdk(store),\n});\n\nexport default withSendbirdContext(MemberList, mapStoreToProps);\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react'\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport { noop } from '../../../../utils/utils';\n\ninterface Props {\n  hideModal(): void;\n  channel: SendbirdTypes[\"GroupChannel\"];\n}\n\nexport default function BannedMembersModal({\n  hideModal,\n  channel,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [memberQuery, setMemberQuery] = useState(null);\n\n  useEffect(() => {\n    const bannedUserListQuery = channel.createBannedUserListQuery();\n    bannedUserListQuery.next((users, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(users);\n    });\n    setMemberQuery(bannedUserListQuery);\n  }, []);\n  return (\n    <div>\n      <Modal\n        hideFooter\n        onCancel={() => hideModal()}\n        onSubmit={noop}\n        titleText=\"Muted members\"\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              memberQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setMembers([\n                  ...members,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              user={member}\n              key={member.userId}\n              action={({ parentRef, actionRef }) => (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.unbanUser(member, () => {\n                            closeDropdown();\n                            setMembers(members.filter(m => {\n                              return (m.userId !== member.userId);\n                            }));\n                          })\n                        }}\n                      >\n                        Unban\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              )\n              }\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n} from 'react';\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport withSendbirdContext from '../../../../lib/SendbirdSdkContext';\nimport { getSdk } from '../../../../lib/selectors';\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport\n  Label, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport UserListItem from '../UserListItem';\nimport BannedMembersModal from './BannedMembersModal';\n\ninterface Props {\n  sdk: SendbirdTypes[\"SendBirdInstance\"];\n  channel: SendbirdTypes[\"GroupChannel\"];\n}\n\nexport const BannedMemberList = ({ channel }: Props): ReactElement => {\n  const [members, setMembers] = useState([]);\n  const [hasNext, setHasNext] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const bannedUserListQuery = channel.createBannedUserListQuery();\n    bannedUserListQuery.next((users, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(users);\n      setHasNext(bannedUserListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refreshList = useCallback(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const bannedUserListQuery = channel.createBannedUserListQuery();\n    bannedUserListQuery.next(function(users, error) {\n      if (error) {\n        return;\n      }\n      setMembers(users);\n      setHasNext(bannedUserListQuery.hasNext);\n    });\n  }, [channel]);\n  return (\n    <>\n      {\n        members.map((member) => (\n          <UserListItem\n            key={member.userId}\n            user={member}\n            action={({ actionRef, parentRef }) => {\n              return (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.unbanUser(member, () => {\n                            closeDropdown();\n                            refreshList();\n                          })\n                        }}\n                      >\n                        Unban\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              )\n            }}\n          />\n        ))\n      }\n      {\n        members && members.length === 0 && (\n          <Label\n            className=\"sendbird-channel-settings__empty-list\"\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_3}\n          >\n            No banned members yet\n          </Label>\n        )\n      }\n      {\n        hasNext && (\n          <div\n            className=\"sendbird-channel-settings-accordion__footer\"\n          >\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowModal(true);\n              }}\n            >\n              All banned members\n            </Button>\n          </div>\n        )\n      }\n      {\n        showModal && (\n          <BannedMembersModal\n            channel={channel}\n            hideModal={() => {\n              setShowModal(false);\n              refreshList();\n            }}\n          />\n        )\n      }\n    </>\n  );\n}\n\nconst mapStoreToProps = (store) => ({\n  sdk: getSdk(store),\n});\n\nexport default withSendbirdContext(BannedMemberList, mapStoreToProps);\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react'\n\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport { noop } from '../../../../utils/utils';\n\ninterface Props {\n  hideModal(): void;\n  channel: SendbirdTypes[\"GroupChannel\"];\n  currentUser?: string;\n}\n\nexport default function MutedMembersModal({\n  hideModal,\n  channel,\n  currentUser,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [memberQuery, setMemberQuery] = useState(null);\n\n  useEffect(() => {\n    const memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.mutedMemberFilter = 'muted';\n    memberUserListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n    });\n    setMemberQuery(memberUserListQuery);\n  }, []);\n  return (\n    <div>\n      <Modal\n        hideFooter\n        onCancel={() => hideModal()}\n        onSubmit={noop}\n        titleText=\"Muted members\"\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              memberQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setMembers([\n                  ...members,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              currentUser={currentUser}\n              user={member}\n              key={member.userId}\n              action={({ actionRef, parentRef }) => (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.unmuteUser(member, () => {\n                            closeDropdown();\n                            setMembers(members.filter(m => {\n                              return (m.userId !== member.userId);\n                            }));\n                          })\n                        }}\n                      >\n                        Unmute\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              )}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n} from 'react';\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport withSendbirdContext from '../../../../lib/SendbirdSdkContext';\nimport { getSdk } from '../../../../lib/selectors';\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport\n  Label, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport UserListItem from '../UserListItem';\nimport MutedMembersModal from './MutedMembersModal';\n\ninterface Props {\n  sdk: SendbirdTypes[\"SendBirdInstance\"];\n  channel: SendbirdTypes[\"GroupChannel\"];\n}\n\nexport const MutedMemberList = ({ sdk, channel }: Props): ReactElement => {\n  const [members, setMembers] = useState([]);\n  const [hasNext, setHasNext] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.mutedMemberFilter = 'muted';\n    memberUserListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refreshList = useCallback(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.mutedMemberFilter = 'muted';\n    memberUserListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n  return (\n    <>\n      {\n        members.map((member) => (\n          <UserListItem\n            key={member.userId}\n            user={member}\n            currentUser={sdk.currentUser.userId}\n            action={({ actionRef, parentRef }) => {\n              return (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.unmuteUser(member, () => {\n                            refreshList();\n                            closeDropdown();\n                          })\n                        }}\n                      >\n                        Unmute\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              );\n            }\n            }\n          />\n        ))\n      }\n      {\n        members && members.length === 0 && (\n          <Label\n            className=\"sendbird-channel-settings__empty-list\"\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_3}\n          >\n            No muted members yet\n          </Label>\n        )\n      }\n      {\n        hasNext && (\n          <div\n            className=\"sendbird-channel-settings-accordion__footer\"\n          >\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowModal(true);\n              }}\n            >\n              All muted members\n            </Button>\n          </div>\n        )\n      }\n      {\n        showModal && (\n          <MutedMembersModal\n            currentUser={sdk.currentUser.userId}\n            channel={channel}\n            hideModal={() => {\n              setShowModal(false);\n              refreshList();\n            }}\n          />\n        )\n      }\n    </>\n  );\n}\n\nconst mapStoreToProps = (store) => ({\n  sdk: getSdk(store),\n});\n\nexport default withSendbirdContext(MutedMemberList, mapStoreToProps);\n","import './index.scss';\nimport React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useContext,\n} from 'react';\nimport { SendbirdTypes } from '../../../../types';\n\nimport Accordion, { AccordionGroup } from '../../../../ui/Accordion';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport\n  Label, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport Badge from '../../../../ui/Badge';\n\nimport OperatorList from './OperatorList';\nimport MemberList from './MemberList';\nimport BannedMemberList from './BannedMemberList';\nimport MutedMemberList from './MutedMemberList';\n\nconst kFormatter = (num: number): string|number => {\n  return Math.abs(num) > 999\n    ? `${(Math.abs(num)/1000).toFixed(1)}K`\n    : num;\n}\n\ninterface Props {\n  channel: SendbirdTypes['GroupChannel'];\n  userQueryCreator(): SendbirdTypes['UserListQuery'];\n  userId: string;\n}\n\nexport default function AdminPannel({\n  userQueryCreator,\n  channel,\n  userId,\n}: Props): ReactElement {\n  const [frozen, setFrozen] = useState(false);\n\n  // work around for\n  // https://sendbird.slack.com/archives/G01290GCDCN/p1595922832000900\n  // SDK bug - after frozen/unfrozen myRole becomes \"none\"\n  useEffect(() => {\n    setFrozen(channel.isFrozen);\n  }, [channel]);\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <AccordionGroup className=\"sendbird-channel-settings__operator\">\n      <Accordion\n        className=\"sendbird-channel-settings__operators-list\"\n        id=\"operators\"\n        renderTitle={() => (\n          <>\n            <Icon\n              type={IconTypes.OPERATOR}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__OPERATORS__TITLE}\n            </Label>\n          </>\n        )}\n        renderContent={() => (\n          <>\n            <OperatorList channel={channel} />\n          </>\n        )}\n      />\n      <Accordion\n        className=\"sendbird-channel-settings__members-list\"\n        id=\"members\"\n        renderTitle={() => (\n          <>\n            <Icon\n              type={IconTypes.MEMBERS}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__MEMBERS__TITLE}\n            </Label>\n            <Badge count={kFormatter(channel.memberCount)} />\n          </>\n        )}\n        renderContent={() => (\n          <>\n            <MemberList\n              userQueryCreator={userQueryCreator}\n              channel={channel}\n              userId={userId}\n            />\n          </>\n        )}\n      />\n      {\n        // No muted members in broadcast channel\n        !channel.isBroadcast && (\n          <Accordion\n            id=\"mutedMembers\"\n            className=\"sendbird-channel-settings__muted-members-list\"\n            renderTitle={() => (\n              <>\n                <Icon\n                  type={IconTypes.MUTE}\n                  fillColor={IconColors.PRIMARY}\n                  width={24}\n                  height={24}\n                  className=\"sendbird-channel-settings__accordion-icon\"\n                />\n                <Label\n                  type={LabelTypography.SUBTITLE_1}\n                  color={LabelColors.ONBACKGROUND_1}\n                >\n                  {stringSet.CHANNEL_SETTING__MUTED_MEMBERS__TITLE}\n                </Label>\n              </>\n            )}\n            renderContent={() => (\n              <>\n                <MutedMemberList channel={channel} />\n              </>\n            )}\n          />\n        )\n      }\n      <Accordion\n        className=\"sendbird-channel-settings__banned-members-list\"\n        id=\"bannedMembers\"\n        renderTitle={() => (\n          <>\n            <Icon\n              type={IconTypes.BAN}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__BANNED_MEMBERS__TITLE}\n            </Label>\n          </>\n        )}\n        renderContent={() => (\n          <>\n            <BannedMemberList channel={channel} />\n          </>\n        )}\n      />\n      {\n        // cannot frozen broadcast channel\n        !channel.isBroadcast && (\n          <div className=\"sendbird-channel-settings__freeze\">\n            <Icon\n              type={IconTypes.FREEZE}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__FREEZE_CHANNEL}\n            </Label>\n            <div className=\"sendbird-channel-settings__frozen-icon\">\n              {\n                frozen\n                  ? (\n                    <Icon\n                      onClick={() => {\n                        channel.unfreeze(() => {\n                          setFrozen(false);\n                        });\n                      }}\n                      type={IconTypes.TOGGLE_ON}\n                      fillColor={IconColors.PRIMARY}\n                      width={44}\n                      height={24}\n                    />\n                  )\n                  : (\n                    <Icon\n                      onClick={() => {\n                        channel.freeze(() => {\n                          setFrozen(true);\n                        });\n                      }}\n                      type={IconTypes.TOGGLE_OFF}\n                      fillColor={IconColors.PRIMARY}\n                      width={44}\n                      height={24}\n                    />\n                  )\n              }\n            </div>\n          </div>\n        )\n      }\n    </AccordionGroup>\n  );\n}\n","import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport withSendbirdContext from '../../lib/SendbirdSdkContext';\nimport { UserProfileProvider } from '../../lib/UserProfileContext';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nimport './index.scss';\nimport Badge from '../../ui/Badge';\nimport Label, { LabelTypography, LabelColors } from '../../ui/Label';\nimport Icon, { IconTypes, IconColors } from '../../ui/Icon';\nimport IconButton from '../../ui/IconButton';\n\nimport ChannelProfile from './components/ChannelProfile';\nimport MembersAccordion from './components/MembersAccordion';\nimport LeaveChannelModal from './components/LeaveChannel';\nimport AdminPanel from './components/AdminPanel';\nimport PlaceHolder from '../../ui/PlaceHolder';\nimport PlaceHolderTypes from '../../ui/PlaceHolder/type';\nimport { uuidv4 } from '../../utils/uuid';\nimport { createDefaultUserListQuery } from '../ChannelList/components/utils';\n\nconst COMPONENT_CLASS_NAME = 'sendbird-channel-settings';\n\nconst kFormatter = (num) => (\n  Math.abs(num) > 999\n    ? `${(Math.abs(num) / 1000).toFixed(1)}K`\n    : num\n);\n\nfunction ChannelSettings(props) {\n  const {\n    className,\n    onCloseClick,\n    channelUrl,\n    disableUserProfile,\n    renderUserProfile,\n    onChannelModified,\n    renderChannelProfile,\n    onBeforeUpdateChannel,\n  } = props;\n\n  const {\n    stores: { sdkStore },\n    config: {\n      userListQuery,\n      theme,\n      userId,\n      logger,\n      isOnline,\n    },\n    queries = {},\n  } = props;\n\n  const { config = {} } = props;\n  const userDefinedDisableUserProfile = disableUserProfile || config.disableUserProfile;\n  const userDefinedRenderProfile = renderUserProfile || config.renderUserProfile;\n\n  const userFilledApplicationUserListQuery = queries.applicationUserListQuery;\n  const { stringSet } = useContext(LocalizationContext);\n\n  const { sdk, initialized } = sdkStore;\n\n  // hack to kepp track of channel updates by triggering useEffect\n  const [channelUpdateId, setChannelUpdateId] = useState(uuidv4());\n  const [channel, setChannel] = useState(null);\n  const [invalidChannel, setInvalidChannel] = useState(false);\n  const [showAccordion, setShowAccordion] = useState(false);\n  const [showLeaveChannelModal, setShowLeaveChannelModal] = useState(false);\n\n  const componentClassNames = (\n    Array.isArray(className)\n      ? [COMPONENT_CLASS_NAME, ...className]\n      : [COMPONENT_CLASS_NAME, className]\n  ).join(' ');\n\n  useEffect(() => {\n    logger.info('ChannelSettings: Setting up');\n    if (!channelUrl || !initialized || !sdk) {\n      logger.warning('ChannelSettings: Setting up failed', 'No channelUrl or sdk uninitialized');\n      setInvalidChannel(false);\n    } else {\n      if (!sdk || !sdk.GroupChannel) {\n        logger.warning('ChannelSettings: No GroupChannel');\n        return;\n      }\n      sdk.GroupChannel.getChannel(channelUrl, (groupChannel) => {\n        if (!groupChannel) {\n          logger.warning('ChannelSettings: Channel not found');\n          setInvalidChannel(true);\n        } else {\n          logger.info('ChannelSettings: Fetched group channel', groupChannel);\n          setInvalidChannel(false);\n          setChannel(groupChannel);\n        }\n      });\n    }\n  }, [channelUrl, initialized, channelUpdateId]);\n\n  if (!channel || invalidChannel) {\n    return (\n      <div className={componentClassNames}>\n        <div className=\"sendbird-channel-settings__header\">\n          <Label type={LabelTypography.H_2} color={LabelColors.ONBACKGROUND_1}>\n            {stringSet.CHANNEL_SETTING__HEADER__TITLE}\n          </Label>\n          <Icon\n            className=\"sendbird-channel-settings__close-icon\"\n            type={IconTypes.CLOSE}\n            height=\"24px\"\n            width=\"24px\"\n            onClick={() => {\n              logger.info('ChannelSettings: Click close');\n              onCloseClick();\n            }}\n          />\n        </div>\n        <div>\n          <PlaceHolder type={PlaceHolderTypes.WRONG} />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <UserProfileProvider\n      className={componentClassNames}\n      disableUserProfile={userDefinedDisableUserProfile}\n      renderUserProfile={userDefinedRenderProfile}\n    >\n      <div className=\"sendbird-channel-settings__header\">\n        <Label type={LabelTypography.H_2} color={LabelColors.ONBACKGROUND_1}>\n          {stringSet.CHANNEL_SETTING__HEADER__TITLE}\n        </Label>\n        <div className=\"sendbird-channel-settings__header-icon\">\n          <IconButton\n            width=\"32px\"\n            height=\"32px\"\n            onClick={() => {\n              logger.info('ChannelSettings: Click close');\n              onCloseClick();\n            }}\n          >\n            <Icon\n              className=\"sendbird-channel-settings__close-icon\"\n              type={IconTypes.CLOSE}\n              height=\"22px\"\n              width=\"22px\"\n            />\n          </IconButton>\n        </div>\n      </div>\n      <div className=\"sendbird-channel-settings__scroll-area\">\n        {\n          renderChannelProfile\n            ? renderChannelProfile({ channel })\n            : (\n              <ChannelProfile\n                disabled={!isOnline}\n                channel={channel}\n                userId={userId}\n                theme={theme}\n                onChannelInfoChange={(currentImg, currentTitle) => {\n                  logger.info('ChannelSettings: Channel information being updated');\n                  const swapParams = sdk.getErrorFirstCallback();\n                  if (onBeforeUpdateChannel) {\n                    const params = onBeforeUpdateChannel(currentTitle, currentImg, channel.data);\n                    // swapParams\n                    channel.updateChannel(params, (response, error) => {\n                      let groupChannel = response;\n                      if (swapParams) {\n                        groupChannel = error;\n                      }\n\n                      onChannelModified(groupChannel);\n                      setChannelUpdateId(uuidv4());\n                    });\n                    return;\n                  }\n                  channel.updateChannel(\n                    currentTitle,\n                    currentImg,\n                    channel.data,\n                    (response, error) => {\n                      let groupChannel = response;\n                      if (swapParams) {\n                        groupChannel = error;\n                      }\n                      logger.info('ChannelSettings: Channel information updated', groupChannel);\n                      onChannelModified(groupChannel);\n                      setChannelUpdateId(uuidv4());\n                    },\n                  );\n                }}\n              />\n            )\n        }\n        {\n          channel.myRole === 'operator'\n            ? (\n              <AdminPanel\n                channel={channel}\n                userId={userId}\n                onChannelModified={(groupChannel) => {\n                  // setChannelUpdateId(uuidv4());\n                  onChannelModified(groupChannel);\n                }}\n                userQueryCreator={\n                  () => ((userListQuery && typeof userListQuery === 'function')\n                    ? userListQuery()\n                    : createDefaultUserListQuery({ sdk, userFilledApplicationUserListQuery })\n                  )\n                }\n              />\n            )\n            : (\n              <>\n                {/* Move to different file */}\n                <div\n                  className={[\n                    'sendbird-channel-settings__panel-item',\n                    'sendbird-channel-settings__members',\n                  ].join(' ')}\n                  role=\"switch\"\n                  aria-checked={showAccordion}\n                  onKeyDown={() => setShowAccordion(!showAccordion)}\n                  onClick={() => setShowAccordion(!showAccordion)}\n                  tabIndex={0}\n                >\n                  <Icon\n                    className=\"sendbird-channel-settings__panel-icon-left\"\n                    type={IconTypes.MEMBERS}\n                    fillColor={IconColors.PRIMARY}\n                    height=\"24px\"\n                    width=\"24px\"\n                  />\n                  <Label\n                    type={LabelTypography.SUBTITLE_1}\n                    color={LabelColors.ONBACKGROUND_1}\n                  >\n                    {stringSet.CHANNEL_SETTING__MEMBERS__TITLE}\n                    <Badge count={kFormatter(channel.memberCount)} />\n                  </Label>\n                  <Icon\n                    className={[\n                      'sendbird-channel-settings__panel-icon-right',\n                      'sendbird-channel-settings__panel-icon--chevron',\n                      (showAccordion ? 'sendbird-channel-settings__panel-icon--open' : ''),\n                    ].join(' ')}\n                    type={IconTypes.CHEVRON_RIGHT}\n                    height=\"24px\"\n                    width=\"24px\"\n                  />\n                </div>\n                {\n                  showAccordion && (\n                    <MembersAccordion\n                      currentUser={userId}\n                      disabled={!isOnline}\n                      // eslint-disable-next-line\n                      userQueryCreator={\n                        () => ((userListQuery && typeof userListQuery === 'function')\n                          ? userListQuery()\n                          : createDefaultUserListQuery({ sdk, userFilledApplicationUserListQuery })\n                        )\n                      }\n                      swapParams={\n                        sdk && sdk.getErrorFirstCallback && sdk.getErrorFirstCallback()\n                      }\n                      channel={channel}\n                      members={channel.members}\n                      onInviteMembers={(selectedMembers) => {\n                        logger.info('ChannelSettings: Inviting new users');\n                        channel.inviteWithUserIds(selectedMembers)\n                          .then((res) => {\n                            onChannelModified(res);\n                            setChannelUpdateId(uuidv4());\n                            logger.info('ChannelSettings: Inviting new users success!', res);\n                          });\n                      }}\n                    />\n                  )\n                }\n              </>\n            )\n        }\n\n        <div\n          className={[\n            'sendbird-channel-settings__panel-item',\n            'sendbird-channel-settings__leave-channel',\n            !isOnline ? 'sendbird-channel-settings__panel-item__disabled' : '',\n          ].join(' ')}\n          role=\"button\"\n          disabled\n          onKeyDown={() => {\n            if (!isOnline) { return; }\n            setShowLeaveChannelModal(true);\n          }}\n          onClick={() => {\n            if (!isOnline) { return; }\n            setShowLeaveChannelModal(true);\n          }}\n          tabIndex={0}\n        >\n          <Icon\n            className={[\n              'sendbird-channel-settings__panel-icon-left',\n              'sendbird-channel-settings__panel-icon__leave',\n            ].join(' ')}\n            type={IconTypes.LEAVE}\n            fillColor={IconColors.ERROR}\n            height=\"24px\"\n            width=\"24px\"\n          />\n          <Label\n            type={LabelTypography.SUBTITLE_1}\n            color={LabelColors.ONBACKGROUND_1}\n          >\n            {stringSet.CHANNEL_SETTING__LEAVE_CHANNEL__TITLE}\n          </Label>\n        </div>\n        {\n          showLeaveChannelModal && (\n            <LeaveChannelModal\n              onCloseModal={() => setShowLeaveChannelModal(false)}\n              onLeaveChannel={() => {\n                logger.info('ChannelSettings: Leaving channel', channel);\n                channel.leave()\n                  .then(() => {\n                    logger.info('ChannelSettings: Leaving channel successful!', channel);\n                    onCloseClick();\n                  });\n              }}\n            />\n          )\n        }\n      </div>\n    </UserProfileProvider>\n  );\n}\n\nChannelSettings.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  onCloseClick: PropTypes.func,\n  onChannelModified: PropTypes.func,\n  onBeforeUpdateChannel: PropTypes.func,\n  renderChannelProfile: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  disableUserProfile: PropTypes.bool,\n  renderUserProfile: PropTypes.func,\n  channelUrl: PropTypes.string.isRequired,\n  queries: PropTypes.shape({\n    applicationUserListQuery: PropTypes.shape({\n      limit: PropTypes.number,\n      userIdsFilter: PropTypes.arrayOf(PropTypes.string),\n      metaDataKeyFilter: PropTypes.string,\n      metaDataValuesFilter: PropTypes.arrayOf(PropTypes.string),\n    }),\n  }),\n  // from withSendbirdContext\n  stores: PropTypes.shape({\n    sdkStore: PropTypes.shape({\n      sdk: PropTypes.shape({\n        getErrorFirstCallback: PropTypes.func,\n        GroupChannel: PropTypes.oneOfType([\n          PropTypes.shape({\n            getChannel: PropTypes.func,\n          }),\n          PropTypes.func,\n        ]),\n        createApplicationUserListQuery: PropTypes.any,\n      }),\n      initialized: PropTypes.bool,\n    }),\n  }).isRequired,\n  config: PropTypes.shape({\n    userId: PropTypes.string,\n    theme: PropTypes.string,\n    userListQuery: PropTypes.func,\n    isOnline: PropTypes.bool,\n    logger: PropTypes.shape({\n      info: PropTypes.func,\n      error: PropTypes.func,\n      warning: PropTypes.func,\n    }),\n  }).isRequired,\n};\n\nChannelSettings.defaultProps = {\n  className: '',\n  onBeforeUpdateChannel: null,\n  queries: {},\n  disableUserProfile: false,\n  renderUserProfile: null,\n  renderChannelProfile: null,\n  onCloseClick: () => { },\n  onChannelModified: () => { },\n};\n\nexport default withSendbirdContext(ChannelSettings);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}