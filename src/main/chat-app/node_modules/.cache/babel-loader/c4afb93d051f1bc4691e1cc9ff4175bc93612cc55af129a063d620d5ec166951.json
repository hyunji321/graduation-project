{"ast":null,"code":"import React__default, { useMemo } from 'react';\nimport { I as Icon, c as IconTypes, d as IconColors, A as Avatar } from './index-48f41226.js';\nimport { u as useDefaultAvatar, a as getChannelAvatarSource } from './utils-0e572de6.js';\nfunction ChannelAvatar(_a) {\n  var channel = _a.channel,\n    userId = _a.userId,\n    theme = _a.theme,\n    _b = _a.width,\n    width = _b === void 0 ? 56 : _b,\n    _c = _a.height,\n    height = _c === void 0 ? 56 : _c;\n  var isBroadcast = channel.isBroadcast;\n  var memoizedAvatar = useMemo(function () {\n    return isBroadcast ? useDefaultAvatar(channel) ? /*#__PURE__*/React__default.createElement(\"div\", {\n      className: \"sendbird-chat-header--default-avatar\",\n      style: {\n        width: width,\n        height: height,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      }\n    }, /*#__PURE__*/React__default.createElement(Icon, {\n      type: IconTypes.BROADCAST,\n      fillColor: IconColors.CONTENT,\n      width: width * 0.575,\n      height: height * 0.575\n    })) : /*#__PURE__*/React__default.createElement(Avatar, {\n      className: \"sendbird-chat-header--avatar--broadcast-channel\",\n      src: getChannelAvatarSource(channel, userId),\n      width: width,\n      height: height,\n      alt: channel.name\n    }) : /*#__PURE__*/React__default.createElement(Avatar, {\n      className: \"sendbird-chat-header--avatar--group-channel\",\n      src: getChannelAvatarSource(channel, userId),\n      width: width + \"px\",\n      height: height + \"px\",\n      alt: channel.name\n    });\n  }, [channel.members, channel.coverUrl, theme]);\n  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, memoizedAvatar);\n}\nexport { ChannelAvatar as C };","map":{"version":3,"names":["ChannelAvatar","_a","channel","userId","theme","_b","width","_c","height","isBroadcast","memoizedAvatar","useMemo","useDefaultAvatar","React__default","createElement","className","style","display","justifyContent","alignItems","Icon","type","IconTypes","BROADCAST","fillColor","IconColors","CONTENT","Avatar","src","getChannelAvatarSource","alt","name","members","coverUrl","Fragment"],"sources":["C:\\Users\\chji9\\OneDrive\\바탕 화면\\homeReviewSite\\src\\main\\chat-app\\node_modules\\sendbird-uikit\\src\\ui\\ChannelAvatar\\index.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport './index.scss';\n\nimport Avatar from '../Avatar/index';\nimport Icon, { IconTypes, IconColors } from '../Icon';\n\nimport * as utils from './utils';\n\ninterface Props {\n  channel: SendBird.GroupChannel;\n  userId: string;\n  theme: string;\n  width?: number,\n  height?: number,\n}\n\nfunction ChannelAvatar({\n  channel,\n  userId,\n  theme,\n  width = 56,\n  height = 56,\n}: Props): JSX.Element{\n  const { isBroadcast } = channel;\n  const memoizedAvatar = useMemo(() => (\n    isBroadcast\n      ? (\n        utils.useDefaultAvatar(channel)\n          ? (\n            <div\n              className=\"sendbird-chat-header--default-avatar\"\n              style={{\n                width,\n                height,\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}\n            >\n              <Icon\n                type={IconTypes.BROADCAST}\n                fillColor={IconColors.CONTENT}\n                width={width * 0.575}\n                height={height * 0.575}\n              />\n            </div>\n          )\n          : (\n            <Avatar\n              className=\"sendbird-chat-header--avatar--broadcast-channel\"\n              src={utils.getChannelAvatarSource(channel, userId)}\n              width={width}\n              height={height}\n              alt={channel.name}\n            />\n          )\n      )\n      : (\n        <Avatar\n          className=\"sendbird-chat-header--avatar--group-channel\"\n          src={utils.getChannelAvatarSource(channel, userId)}\n          width={`${width}px`}\n          height={`${height}px`}\n          alt={channel.name}\n        />\n      )\n  ),[channel.members, channel.coverUrl, theme]);\n  return (\n    <>{ memoizedAvatar }</>\n  );\n}\n\nexport default ChannelAvatar;\n"],"mappings":";;;AAgBA,SAASA,aAATA,CAAuBC,EAAvB;MACEC,OAAO,GAAAD,EAAA,CAAAC,OAAA;IACPC,MAAM,GAAAF,EAAA,CAAAE,MAAA;IACNC,KAAK,GAAAH,EAAA,CAAAG,KAAA;IACLC,EAAA,GAAAJ,EAAA,CAAAK,KAAA;IAAAA,KAAK,GAAAD,EAAA,cAAG,KAAAA,EAAA;IACRE,EAAA,GAAAN,EAAA,CAAAO,MAAA;IAAAA,MAAM,GAAAD,EAAA,cAAG,KAAAA,EAAA;EAED,IAAAE,WAAW,GAAKP,OAAO,CAAAO,WAAvB;EACR,IAAMC,cAAc,GAAGC,OAAO,CAAC;IAAM,OACnCF,WAAW,GAEPG,gBAAA,CAAuBV,OAAvB,iBAEIW,cAAA,CAAAC,aAAA;MACEC,SAAS,EAAC,sCADZ;MAEEC,KAAK,EAAE;QACLV,KAAK,EAAAA,KADA;QAELE,MAAM,EAAAA,MAFD;QAGLS,OAAO,EAAE,MAHJ;QAILC,cAAc,EAAE,QAJX;QAKLC,UAAU,EAAE;MALP;IAFT,gBAUEN,cAAA,CAAAC,aAAA,CAACM,IAAD;MACEC,IAAI,EAAEC,SAAS,CAACC,SADlB;MAEEC,SAAS,EAAEC,UAAU,CAACC,OAFxB;MAGEpB,KAAK,EAAEA,KAAK,GAAG,KAHjB;MAIEE,MAAM,EAAEA,MAAM,GAAG;IAJnB,EAVF,CAFJ,gBAqBIK,cAAA,CAAAC,aAAA,CAACa,MAAD;MACEZ,SAAS,EAAC,iDADZ;MAEEa,GAAG,EAAEC,sBAAA,CAA6B3B,OAA7B,EAAsCC,MAAtC,CAFP;MAGEG,KAAK,EAAEA,KAHT;MAIEE,MAAM,EAAEA,MAJV;MAKEsB,GAAG,EAAE5B,OAAO,CAAC6B;IALf,EAvBG,gBAiCPlB,cAAA,CAAAC,aAAA,CAACa,MAAD;MACEZ,SAAS,EAAC,6CADZ;MAEEa,GAAG,EAAEC,sBAAA,CAA6B3B,OAA7B,EAAsCC,MAAtC,CAFP;MAGEG,KAAK,EAAKA,KAAK,OAHjB;MAIEE,MAAM,EAAKA,MAAM,OAJnB;MAKEsB,GAAG,EAAE5B,OAAO,CAAC6B;IALf,EAlC+B;EA0CpC,CA1C6B,EA0C5B,CAAC7B,OAAO,CAAC8B,OAAT,EAAkB9B,OAAO,CAAC+B,QAA1B,EAAoC7B,KAApC,CA1C4B,CAA9B;EA2CA,oBACES,cAAA,CAAAC,aAAA,CAAAD,cAAA,CAAAqB,QAAA,QAAIxB,cAAJ,CADF;AAGD"},"metadata":{},"sourceType":"module","externalDependencies":[]}