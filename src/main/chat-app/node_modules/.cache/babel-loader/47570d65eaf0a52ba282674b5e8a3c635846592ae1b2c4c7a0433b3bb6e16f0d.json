{"ast":null,"code":"import { e as _toConsumableArray, a as _objectSpread2, u as uuidv4, b as _slicedToArray, c as LocalizationContext, f as _defineProperty, h as _inherits, i as _createSuper, j as _createClass, k as _classCallCheck, l as _assertThisInitialized, w as withSendbirdContext } from './LocalizationContext-f9cc3a84.js';\nimport React__default, { useEffect, useCallback, useRef, useMemo, useContext, useState, useLayoutEffect, Component, useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport { f as format, i as isSameDay } from './index-e2d20807.js';\nimport { k as SEND_USER_MESSAGE, S as SEND_MESSAGE_START, l as SEND_FILE_MESSAGE, j as UPDATE_USER_MESSAGE, D as DELETE_MESSAGE, E as EmojiListItems, C as ContextMenu, I as IconButton, b as MenuItems, c as MenuItem, a as TextButton, U as UserProfileContext, f as ConnectedUserProfile, M as Modal, d as ButtonTypes, h as UserProfileProvider } from './index-58bb39c7.js';\nimport { a as getOutgoingMessageStates, b as getSendingMessageStatus, c as filterMessageListParams, d as getOutgoingMessageState, e as isSentStatus, h as isUserMessage, j as isFailedMessage, k as isPendingMessage, l as isSentMessage, m as getClassName, n as copyToClipboard, o as getEmojiListAll, p as getEmojiMapAll, q as isReactedBy, r as getEmojiTooltipString, s as isEditedMessage, u as getUIKitFileType, t as truncateString, v as isVideoMessage, w as isGifMessage, x as isUrl, y as getUIKitFileTypes, z as isThumbnailMessage, A as isVideo, B as isGif, C as isFileMessage, D as isSupportedFileView, E as getUIKitMessageTypes, F as getSenderName, G as isTextMessage, H as isOGMessage, I as getUIKitMessageType, J as isImageMessage, K as isAudioMessage } from './index-49fe86ba.js';\nimport { c as compareIds, L as LinkLabel, D as DateSeparator, M as MessageInput, F as FileViewer } from './index-23738504.js';\nimport { h as ImageRenderer, I as Icon, c as IconTypes, d as IconColors, e as Loader, L as Label, a as LabelTypography, b as LabelColors, A as Avatar, P as PlaceHolder, i as PlaceHolderTypes, g as LabelStringSet } from './index-48f41226.js';\nimport { C as ChannelAvatar } from './index-5bed92c4.js';\nimport 'react-dom';\nimport './utils-0e572de6.js';\nvar RESET_MESSAGES = 'RESET_MESSAGES';\nvar RESET_STATE = 'RESET_STATE';\nvar CLEAR_SENT_MESSAGES = 'CLEAR_SENT_MESSAGES';\nvar GET_PREV_MESSAGES_START = 'GET_PREV_MESSAGES_START';\nvar GET_PREV_MESSAGES_SUCESS = 'GET_PREV_MESSAGES_SUCESS';\nvar GET_NEXT_MESSAGES_SUCESS = 'GET_NEXT_MESSAGES_SUCESS';\nvar GET_NEXT_MESSAGES_FAILURE = 'GET_NEXT_MESSAGES_FAILURE';\nvar SEND_MESSAGEGE_START = 'SEND_MESSAGEGE_START';\nvar SEND_MESSAGEGE_SUCESS = 'SEND_MESSAGEGE_SUCESS';\nvar SEND_MESSAGEGE_FAILURE = 'SEND_MESSAGEGE_FAILURE';\nvar RESEND_MESSAGEGE_START = 'RESEND_MESSAGEGE_START';\nvar ON_MESSAGE_RECEIVED = 'ON_MESSAGE_RECEIVED';\nvar UPDATE_UNREAD_COUNT = 'UPDATE_UNREAD_COUNT';\nvar ON_MESSAGE_UPDATED = 'ON_MESSAGE_UPDATED';\nvar ON_MESSAGE_THREAD_INFO_UPDATED = 'ON_MESSAGE_THREAD_INFO_UPDATED';\nvar ON_MESSAGE_DELETED = 'ON_MESSAGE_DELETED';\nvar ON_MESSAGE_DELETED_BY_REQ_ID = 'ON_MESSAGE_DELETED_BY_REQ_ID';\nvar SET_CURRENT_CHANNEL = 'SET_CURRENT_CHANNEL';\nvar SET_CHANNEL_INVALID = 'SET_CHANNEL_INVALID';\nvar MARK_AS_READ = 'MARK_AS_READ';\nvar ON_REACTION_UPDATED = 'ON_REACTION_UPDATED';\nvar SET_EMOJI_CONTAINER = 'SET_EMOJI_CONTAINER';\nvar MESSAGE_LIST_PARAMS_CHANGED = 'MESSAGE_LIST_PARAMS_CHANGED';\ngetOutgoingMessageStates();\nvar UNDEFINED = 'undefined';\nvar _getSendingMessageSta$1 = getSendingMessageStatus(),\n  SUCCEEDED$1 = _getSendingMessageSta$1.SUCCEEDED;\n_getSendingMessageSta$1.FAILED;\nvar PENDING$1 = _getSendingMessageSta$1.PENDING;\nvar scrollIntoLast = function scrollIntoLast() {\n  var intialTry = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var MAX_TRIES = 10;\n  var currentTry = intialTry;\n  if (currentTry > MAX_TRIES) {\n    return;\n  }\n  try {\n    var scrollDOM = document.querySelector('.sendbird-conversation__messages-padding'); // eslint-disable-next-line no-multi-assign\n\n    scrollDOM.scrollTop = scrollDOM.scrollHeight;\n  } catch (error) {\n    setTimeout(function () {\n      scrollIntoLast(currentTry + 1);\n    }, 500 * currentTry);\n  }\n};\nvar pubSubHandleRemover = function pubSubHandleRemover(subscriber) {\n  subscriber.forEach(function (s) {\n    try {\n      s.remove();\n    } catch (_unused) {//\n    }\n  });\n};\nvar pubSubHandler = function pubSubHandler(channelUrl, pubSub, dispatcher) {\n  var subscriber = new Map();\n  if (!pubSub || !pubSub.subscribe) return subscriber;\n  subscriber.set(SEND_USER_MESSAGE, pubSub.subscribe(SEND_USER_MESSAGE, function (msg) {\n    var channel = msg.channel,\n      message = msg.message;\n    scrollIntoLast();\n    if (channel && channelUrl === channel.url) {\n      dispatcher({\n        type: SEND_MESSAGEGE_SUCESS,\n        payload: message\n      });\n    }\n  }));\n  subscriber.set(SEND_MESSAGE_START, pubSub.subscribe(SEND_MESSAGE_START, function (msg) {\n    var channel = msg.channel,\n      message = msg.message;\n    if (channel && channelUrl === channel.url) {\n      dispatcher({\n        type: SEND_MESSAGEGE_START,\n        payload: message\n      });\n    }\n  }));\n  subscriber.set(SEND_FILE_MESSAGE, pubSub.subscribe(SEND_FILE_MESSAGE, function (msg) {\n    var channel = msg.channel,\n      message = msg.message;\n    scrollIntoLast();\n    if (channel && channelUrl === channel.url) {\n      dispatcher({\n        type: SEND_MESSAGEGE_SUCESS,\n        payload: message\n      });\n    }\n  }));\n  subscriber.set(UPDATE_USER_MESSAGE, pubSub.subscribe(UPDATE_USER_MESSAGE, function (msg) {\n    var channel = msg.channel,\n      message = msg.message,\n      fromSelector = msg.fromSelector;\n    if (fromSelector && channel && channelUrl === channel.url) {\n      dispatcher({\n        type: ON_MESSAGE_UPDATED,\n        payload: {\n          channel: channel,\n          message: message\n        }\n      });\n    }\n  }));\n  subscriber.set(DELETE_MESSAGE, pubSub.subscribe(DELETE_MESSAGE, function (msg) {\n    var channel = msg.channel,\n      messageId = msg.messageId;\n    if (channel && channelUrl === channel.url) {\n      dispatcher({\n        type: ON_MESSAGE_DELETED,\n        payload: messageId\n      });\n    }\n  }));\n  return subscriber;\n};\nvar isOperator = function isOperator() {\n  var groupChannel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var myRole = groupChannel.myRole;\n  return myRole === 'operator';\n};\nvar isDisabledBecauseFrozen = function isDisabledBecauseFrozen() {\n  var groupChannel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var isFrozen = groupChannel.isFrozen;\n  return isFrozen && !isOperator(groupChannel);\n};\nvar isDisabledBecauseMuted = function isDisabledBecauseMuted() {\n  var groupChannel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var myMutedState = groupChannel.myMutedState;\n  return myMutedState === 'muted';\n};\nvar getEmojiCategoriesFromEmojiContainer$1 = function getEmojiCategoriesFromEmojiContainer() {\n  var emojiContainer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return emojiContainer.emojiCategories ? emojiContainer.emojiCategories : [];\n};\nvar getAllEmojisFromEmojiContainer$1 = function getAllEmojisFromEmojiContainer() {\n  var emojiContainer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _emojiContainer$emoji = emojiContainer.emojiCategories,\n    emojiCategories = _emojiContainer$emoji === void 0 ? [] : _emojiContainer$emoji;\n  var allEmojis = [];\n  for (var categoryIndex = 0; categoryIndex < emojiCategories.length; categoryIndex += 1) {\n    var emojis = emojiCategories[categoryIndex].emojis;\n    for (var emojiIndex = 0; emojiIndex < emojis.length; emojiIndex += 1) {\n      allEmojis.push(emojis[emojiIndex]);\n    }\n  }\n  return allEmojis;\n};\nvar getEmojisFromEmojiContainer$1 = function getEmojisFromEmojiContainer() {\n  var emojiContainer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var emojiCategoryId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return emojiContainer.emojiCategories ? emojiContainer.emojiCategories.filter(function (emojiCategory) {\n    return emojiCategory.id === emojiCategoryId;\n  })[0].emojis : [];\n};\nvar getAllEmojisMapFromEmojiContainer = function getAllEmojisMapFromEmojiContainer() {\n  var emojiContainer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _emojiContainer$emoji2 = emojiContainer.emojiCategories,\n    emojiCategories = _emojiContainer$emoji2 === void 0 ? [] : _emojiContainer$emoji2;\n  var allEmojisMap = new Map();\n  for (var categoryIndex = 0; categoryIndex < emojiCategories.length; categoryIndex += 1) {\n    var emojis = emojiCategories[categoryIndex].emojis;\n    for (var emojiIndex = 0; emojiIndex < emojis.length; emojiIndex += 1) {\n      var _emojis$emojiIndex = emojis[emojiIndex],\n        key = _emojis$emojiIndex.key,\n        url = _emojis$emojiIndex.url;\n      allEmojisMap.set(key, url);\n    }\n  }\n  return allEmojisMap;\n};\nvar getNicknamesMapFromMembers = function getNicknamesMapFromMembers() {\n  var members = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var nicknamesMap = new Map();\n  for (var memberIndex = 0; memberIndex < members.length; memberIndex += 1) {\n    var _members$memberIndex = members[memberIndex],\n      userId = _members$memberIndex.userId,\n      nickname = _members$memberIndex.nickname;\n    nicknamesMap.set(userId, nickname);\n  }\n  return nicknamesMap;\n};\nvar getMessageCreatedAt = function getMessageCreatedAt(message) {\n  return format(message.createdAt, 'p');\n};\nvar isSameGroup = function isSameGroup(message, comparingMessage) {\n  var _message$sender, _comparingMessage$sen, _message$sender2, _comparingMessage$sen2;\n  if (!(message && comparingMessage && (message === null || message === void 0 ? void 0 : message.messageType) !== 'admin' && (comparingMessage === null || comparingMessage === void 0 ? void 0 : comparingMessage.messageType) !== 'admin' && message !== null && message !== void 0 && message.sender && comparingMessage !== null && comparingMessage !== void 0 && comparingMessage.sender && message !== null && message !== void 0 && message.createdAt && comparingMessage !== null && comparingMessage !== void 0 && comparingMessage.createdAt && message !== null && message !== void 0 && (_message$sender = message.sender) !== null && _message$sender !== void 0 && _message$sender.userId && comparingMessage !== null && comparingMessage !== void 0 && (_comparingMessage$sen = comparingMessage.sender) !== null && _comparingMessage$sen !== void 0 && _comparingMessage$sen.userId)) {\n    return false;\n  }\n  return (message === null || message === void 0 ? void 0 : message.sendingStatus) === (comparingMessage === null || comparingMessage === void 0 ? void 0 : comparingMessage.sendingStatus) && (message === null || message === void 0 ? void 0 : (_message$sender2 = message.sender) === null || _message$sender2 === void 0 ? void 0 : _message$sender2.userId) === (comparingMessage === null || comparingMessage === void 0 ? void 0 : (_comparingMessage$sen2 = comparingMessage.sender) === null || _comparingMessage$sen2 === void 0 ? void 0 : _comparingMessage$sen2.userId) && getMessageCreatedAt(message) === getMessageCreatedAt(comparingMessage);\n};\nvar compareMessagesForGrouping = function compareMessagesForGrouping(prevMessage, currMessage, nextMessage) {\n  var sendingStatus = (currMessage === null || currMessage === void 0 ? void 0 : currMessage.sendingStatus) || '';\n  var isAcceptable = sendingStatus !== 'pending' && sendingStatus !== 'failed';\n  return [isSameGroup(prevMessage, currMessage) && isAcceptable, isSameGroup(currMessage, nextMessage) && isAcceptable];\n};\nvar hasOwnProperty = function hasOwnProperty(property) {\n  return function (payload) {\n    // eslint-disable-next-line no-prototype-builtins\n    if (payload && payload.hasOwnProperty && payload.hasOwnProperty(property)) {\n      return true;\n    }\n    return false;\n  };\n};\nvar passUnsuccessfullMessages = function passUnsuccessfullMessages(allMessages, newMessage) {\n  var _newMessage$sendingSt = newMessage.sendingStatus,\n    sendingStatus = _newMessage$sendingSt === void 0 ? UNDEFINED : _newMessage$sendingSt;\n  if (sendingStatus === SUCCEEDED$1 || sendingStatus === PENDING$1) {\n    var lastIndexOfSucceededMessage = allMessages.map(function (message) {\n      return message.sendingStatus || (message.isAdminMessage && message.isAdminMessage() ? SUCCEEDED$1 : UNDEFINED);\n    }).lastIndexOf(SUCCEEDED$1);\n    if (lastIndexOfSucceededMessage + 1 < allMessages.length) {\n      var messages = _toConsumableArray(allMessages);\n      messages.splice(lastIndexOfSucceededMessage + 1, 0, newMessage);\n      return messages;\n    }\n  }\n  return [].concat(_toConsumableArray(allMessages), [newMessage]);\n};\nvar pxToNumber = function pxToNumber(px) {\n  if (typeof px === 'number') {\n    return px;\n  }\n  if (typeof px === 'string') {\n    var parsed = Number.parseFloat(px);\n    if (!Number.isNaN(parsed)) {\n      return parsed;\n    }\n  }\n  return null;\n};\nvar messagesInitialState = {\n  initialized: false,\n  loading: false,\n  allMessages: [],\n  currentGroupChannel: {\n    members: []\n  },\n  // for scrollup\n  hasMore: false,\n  lastMessageTimeStamp: 0,\n  // for scroll down\n  // onScrollDownCallback is added for navigation to different timestamps on messageSearch\n  // hasMoreToBottom, onScrollDownCallback -> scroll down\n  // hasMore, onScrollCallback -> scroll up(default behavior)\n  hasMoreToBottom: false,\n  latestFetchedMessageTimeStamp: 0,\n  emojiContainer: {},\n  unreadCount: 0,\n  unreadSince: null,\n  isInvalid: false,\n  messageListParams: null\n};\nvar _getSendingMessageSta = getSendingMessageStatus(),\n  SUCCEEDED = _getSendingMessageSta.SUCCEEDED,\n  FAILED = _getSendingMessageSta.FAILED,\n  PENDING = _getSendingMessageSta.PENDING;\nfunction reducer(state, action) {\n  switch (action.type) {\n    case RESET_STATE:\n      return messagesInitialState;\n    case RESET_MESSAGES:\n      return _objectSpread2(_objectSpread2({}, state), {}, {\n        // when user switches channel, if the previous channel `hasMore`\n        // the onScroll gets called twice, setting hasMore false prevents this\n        hasMore: false,\n        allMessages: []\n      });\n    case GET_PREV_MESSAGES_START:\n      return _objectSpread2(_objectSpread2({}, state), {}, {\n        loading: true\n      });\n    case CLEAR_SENT_MESSAGES:\n      return _objectSpread2(_objectSpread2({}, state), {}, {\n        allMessages: _toConsumableArray(state.allMessages.filter(function (m) {\n          return m.sendingStatus !== SUCCEEDED;\n        }))\n      });\n    case GET_PREV_MESSAGES_SUCESS:\n      {\n        var receivedMessages = action.payload.messages || [];\n        var _action$payload$curre = action.payload.currentGroupChannel,\n          currentGroupChannel = _action$payload$curre === void 0 ? {} : _action$payload$curre;\n        var stateChannel = state.currentGroupChannel || {};\n        var stateChannelUrl = stateChannel.url;\n        var actionChannelUrl = currentGroupChannel.url;\n        if (actionChannelUrl !== stateChannelUrl) {\n          return state;\n        } // remove duplicate messages\n\n        var duplicatedMessageIds = [];\n        var updatedAllMessages = state.allMessages.map(function (msg) {\n          var duplicatedMessage = receivedMessages.find(function (_ref) {\n            var messageId = _ref.messageId;\n            return compareIds(messageId, msg.messageId);\n          });\n          if (!duplicatedMessage) {\n            return msg;\n          }\n          duplicatedMessageIds.push(duplicatedMessage.messageId);\n          return duplicatedMessage.updatedAt > msg.updatedAt ? duplicatedMessage : msg;\n        });\n        var filteredNewMessages = duplicatedMessageIds.length > 0 ? receivedMessages.filter(function (msg) {\n          return !duplicatedMessageIds.find(function (messageId) {\n            return compareIds(messageId, msg.messageId);\n          });\n        }) : receivedMessages;\n        var hasHasMoreToBottom = hasOwnProperty('hasMoreToBottom')(action.payload);\n        var hasLatestFetchedMessageTimeStamp = hasOwnProperty('latestFetchedMessageTimeStamp')(action.payload);\n        return _objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2({}, state), {}, {\n          loading: false,\n          initialized: true,\n          hasMore: action.payload.hasMore,\n          lastMessageTimeStamp: action.payload.lastMessageTimeStamp\n        }, hasHasMoreToBottom && {\n          hasMoreToBottom: action.payload.hasMoreToBottom\n        }), hasLatestFetchedMessageTimeStamp && {\n          latestFetchedMessageTimeStamp: action.payload.latestFetchedMessageTimeStamp\n        }), {}, {\n          allMessages: [].concat(_toConsumableArray(filteredNewMessages), _toConsumableArray(updatedAllMessages))\n        });\n      }\n    case GET_NEXT_MESSAGES_SUCESS:\n      {\n        var _receivedMessages = action.payload.messages || [];\n        var _action$payload$curre2 = action.payload.currentGroupChannel,\n          _currentGroupChannel = _action$payload$curre2 === void 0 ? {} : _action$payload$curre2;\n        var _stateChannel = state.currentGroupChannel || {};\n        var _stateChannelUrl = _stateChannel.url;\n        var _actionChannelUrl = _currentGroupChannel.url;\n        if (_actionChannelUrl !== _stateChannelUrl) {\n          return state;\n        } // remove duplicate messages\n\n        var _duplicatedMessageIds = [];\n        var _updatedAllMessages = state.allMessages.map(function (msg) {\n          var duplicatedMessage = _receivedMessages.find(function (_ref2) {\n            var messageId = _ref2.messageId;\n            return compareIds(messageId, msg.messageId);\n          });\n          if (!duplicatedMessage) {\n            return msg;\n          }\n          _duplicatedMessageIds.push(duplicatedMessage.messageId);\n          return duplicatedMessage.updatedAt > msg.updatedAt ? duplicatedMessage : msg;\n        });\n        var _filteredNewMessages = _duplicatedMessageIds.length > 0 ? _receivedMessages.filter(function (msg) {\n          return !_duplicatedMessageIds.find(function (messageId) {\n            return compareIds(messageId, msg.messageId);\n          });\n        }) : _receivedMessages;\n        return _objectSpread2(_objectSpread2({}, state), {}, {\n          loading: false,\n          initialized: true,\n          hasMore: action.payload.hasMore,\n          lastMessageTimeStamp: action.payload.lastMessageTimeStamp,\n          hasMoreToBottom: action.payload.hasMoreToBottom,\n          latestFetchedMessageTimeStamp: action.payload.latestFetchedMessageTimeStamp,\n          allMessages: [].concat(_toConsumableArray(_updatedAllMessages), _toConsumableArray(_filteredNewMessages))\n        });\n      }\n    case GET_NEXT_MESSAGES_FAILURE:\n      {\n        return _objectSpread2({}, state);\n      }\n    case SEND_MESSAGEGE_START:\n      return _objectSpread2(_objectSpread2({}, state), {}, {\n        allMessages: [].concat(_toConsumableArray(state.allMessages), [_objectSpread2({}, action.payload)])\n      });\n    case SEND_MESSAGEGE_SUCESS:\n      {\n        var newMessages = state.allMessages.map(function (m) {\n          return compareIds(m.reqId, action.payload.reqId) ? action.payload : m;\n        });\n        _toConsumableArray(newMessages).sort(function (a, b) {\n          return a.sendingStatus && b.sendingStatus && a.sendingStatus === SUCCEEDED && (b.sendingStatus === PENDING || b.sendingStatus === FAILED) ? -1 : 1;\n        });\n        return _objectSpread2(_objectSpread2({}, state), {}, {\n          allMessages: newMessages\n        });\n      }\n    case SEND_MESSAGEGE_FAILURE:\n      {\n        // eslint-disable-next-line no-param-reassign\n        action.payload.failed = true;\n        return _objectSpread2(_objectSpread2({}, state), {}, {\n          allMessages: state.allMessages.map(function (m) {\n            return compareIds(m.reqId, action.payload.reqId) ? action.payload : m;\n          })\n        });\n      }\n    case SET_CURRENT_CHANNEL:\n      {\n        return _objectSpread2(_objectSpread2({}, state), {}, {\n          currentGroupChannel: action.payload,\n          isInvalid: false\n        });\n      }\n    case SET_CHANNEL_INVALID:\n      {\n        return _objectSpread2(_objectSpread2({}, state), {}, {\n          isInvalid: true\n        });\n      }\n    case UPDATE_UNREAD_COUNT:\n      {\n        var channel = action.payload.channel;\n        var _state$currentGroupCh = state.currentGroupChannel,\n          _currentGroupChannel2 = _state$currentGroupCh === void 0 ? {} : _state$currentGroupCh,\n          unreadCount = state.unreadCount;\n        var currentGroupChannelUrl = _currentGroupChannel2.url;\n        if (!compareIds(channel.url, currentGroupChannelUrl)) {\n          return state;\n        }\n        return _objectSpread2(_objectSpread2({}, state), {}, {\n          unreadSince: unreadCount + 1\n        });\n      }\n    case ON_MESSAGE_RECEIVED:\n      {\n        var _action$payload = action.payload,\n          _channel = _action$payload.channel,\n          message = _action$payload.message,\n          scrollToEnd = _action$payload.scrollToEnd;\n        var _unreadCount = 0;\n        var _state$currentGroupCh2 = state.currentGroupChannel,\n          _currentGroupChannel3 = _state$currentGroupCh2 === void 0 ? {} : _state$currentGroupCh2,\n          unreadSince = state.unreadSince;\n        var _currentGroupChannelUrl = _currentGroupChannel3.url;\n        if (!compareIds(_channel.url, _currentGroupChannelUrl)) {\n          return state;\n        } // Excluded overlapping messages\n\n        if (state.allMessages.some(function (msg) {\n          return msg.messageId === message.messageId;\n        })) {\n          return state;\n        } // Filter by userFilledQuery\n\n        if (state.messageListParams && !filterMessageListParams(state.messageListParams, message)) {\n          return state;\n        }\n        _unreadCount = state.unreadCount + 1; // reset unreadCount if have to scrollToEnd\n\n        if (scrollToEnd) {\n          _unreadCount = 0;\n        }\n        if (message.isAdminMessage && message.isAdminMessage()) {\n          return _objectSpread2(_objectSpread2({}, state), {}, {\n            allMessages: passUnsuccessfullMessages(state.allMessages, message)\n          });\n        }\n        return _objectSpread2(_objectSpread2({}, state), {}, {\n          unreadCount: _unreadCount,\n          unreadSince: _unreadCount === 1 ? format(new Date(), 'p MMM dd') : unreadSince,\n          allMessages: passUnsuccessfullMessages(state.allMessages, message)\n        });\n      }\n    case ON_MESSAGE_UPDATED:\n      {\n        var _action$payload2 = action.payload,\n          _channel2 = _action$payload2.channel,\n          _message = _action$payload2.message;\n        var _currentGroupChannelUrl2 = state.currentGroupChannel && state.currentGroupChannel.url || '';\n        if (!compareIds(_channel2.url, _currentGroupChannelUrl2)) {\n          return state; // Ignore event when it is not for the current channel\n        }\n\n        if (state.messageListParams && !filterMessageListParams(state.messageListParams, _message)) {\n          // Delete the message if it doesn't match to the params anymore\n          return _objectSpread2(_objectSpread2({}, state), {}, {\n            allMessages: state.allMessages.filter(function (m) {\n              return !compareIds(m.messageId, _message === null || _message === void 0 ? void 0 : _message.messageId);\n            })\n          });\n        }\n        return _objectSpread2(_objectSpread2({}, state), {}, {\n          allMessages: state.allMessages.map(function (m) {\n            return compareIds(m.messageId, action.payload.message.messageId) ? action.payload.message : m;\n          })\n        });\n      }\n    case ON_MESSAGE_THREAD_INFO_UPDATED:\n      {\n        var _action$payload3 = action.payload,\n          _channel3 = _action$payload3.channel,\n          event = _action$payload3.event;\n        var channelUrl = event.channelUrl,\n          threadInfo = event.threadInfo,\n          targetMessageId = event.targetMessageId;\n        var _currentGroupChannelUrl3 = state.currentGroupChannel && state.currentGroupChannel.url || '';\n        if (!compareIds(_channel3.url, _currentGroupChannelUrl3) || !compareIds(_channel3.url, channelUrl)) {\n          return state; // Ignore event when it is not for the current channel\n        }\n\n        return _objectSpread2(_objectSpread2({}, state), {}, {\n          allMessages: state.allMessages.map(function (m) {\n            if (compareIds(m.messageId, targetMessageId)) {\n              // eslint-disable-next-line no-param-reassign\n              m.threadInfo = threadInfo; // Upsert threadInfo to the target message\n            }\n\n            return m;\n          })\n        });\n      }\n    case RESEND_MESSAGEGE_START:\n      return _objectSpread2(_objectSpread2({}, state), {}, {\n        allMessages: state.allMessages.map(function (m) {\n          return compareIds(m.reqId, action.payload.reqId) ? action.payload : m;\n        })\n      });\n    case MARK_AS_READ:\n      return _objectSpread2(_objectSpread2({}, state), {}, {\n        unreadCount: 0,\n        unreadSince: null\n      });\n    case ON_MESSAGE_DELETED:\n      return _objectSpread2(_objectSpread2({}, state), {}, {\n        allMessages: state.allMessages.filter(function (m) {\n          return !compareIds(m.messageId, action.payload);\n        })\n      });\n    case ON_MESSAGE_DELETED_BY_REQ_ID:\n      return _objectSpread2(_objectSpread2({}, state), {}, {\n        allMessages: state.allMessages.filter(function (m) {\n          return !compareIds(m.reqId, action.payload);\n        })\n      });\n    case SET_EMOJI_CONTAINER:\n      {\n        return _objectSpread2(_objectSpread2({}, state), {}, {\n          emojiContainer: action.payload\n        });\n      }\n    case ON_REACTION_UPDATED:\n      {\n        return _objectSpread2(_objectSpread2({}, state), {}, {\n          allMessages: state.allMessages.map(function (m) {\n            if (compareIds(m.messageId, action.payload.messageId)) {\n              if (m.applyReactionEvent && typeof m.applyReactionEvent === 'function') {\n                m.applyReactionEvent(action.payload);\n              }\n              return m;\n            }\n            return m;\n          })\n        });\n      }\n    case MESSAGE_LIST_PARAMS_CHANGED:\n      {\n        return _objectSpread2(_objectSpread2({}, state), {}, {\n          messageListParams: action.payload\n        });\n      }\n    default:\n      return state;\n  }\n}\n\n/**\n * Handles ChannelEvents and send values to dispatcher using messagesDispatcher\n * messagesDispatcher: Dispatcher\n * sdk: sdkInstance\n * logger: loggerInstance\n * channelUrl: string\n * sdkInit: bool\n */\n\nfunction useHandleChannelEvents(_ref, _ref2) {\n  var currentGroupChannel = _ref.currentGroupChannel,\n    sdkInit = _ref.sdkInit,\n    hasMoreToBottom = _ref.hasMoreToBottom;\n  var messagesDispatcher = _ref2.messagesDispatcher,\n    sdk = _ref2.sdk,\n    logger = _ref2.logger,\n    scrollRef = _ref2.scrollRef,\n    setQuoteMessage = _ref2.setQuoteMessage;\n  var channelUrl = currentGroupChannel && (currentGroupChannel === null || currentGroupChannel === void 0 ? void 0 : currentGroupChannel.url);\n  useEffect(function () {\n    var messageReceiverId = uuidv4();\n    if (channelUrl && sdk && sdk.ChannelHandler) {\n      var ChannelHandler = new sdk.ChannelHandler();\n      logger.info('Channel | useHandleChannelEvents: Setup event handler', messageReceiverId);\n      ChannelHandler.onMessageReceived = function (channel, message) {\n        // donot update if hasMoreToBottom\n        if (compareIds(channel.url, channelUrl) && !hasMoreToBottom) {\n          var scrollToEnd = false;\n          try {\n            var current = scrollRef.current;\n            scrollToEnd = current.offsetHeight + current.scrollTop >= current.scrollHeight;\n          } catch (error) {//\n          }\n          logger.info('Channel | useHandleChannelEvents: onMessageReceived', message);\n          messagesDispatcher({\n            type: ON_MESSAGE_RECEIVED,\n            payload: {\n              channel: channel,\n              message: message,\n              scrollToEnd: scrollToEnd\n            }\n          });\n          if (scrollToEnd) {\n            try {\n              setTimeout(function () {\n                try {\n                  currentGroupChannel.markAsRead();\n                } catch (_unused) {//\n                }\n                scrollIntoLast();\n              });\n            } catch (error) {\n              logger.warning('Channel | onMessageReceived | scroll to end failed');\n            }\n          }\n        }\n        if (compareIds(channel.url, channelUrl) && hasMoreToBottom) {\n          messagesDispatcher({\n            type: UPDATE_UNREAD_COUNT,\n            payload: {\n              channel: channel\n            }\n          });\n        }\n      };\n      /**\n       * We need to update current channel with the channel,\n       * when onReadReceiptUpdated or onDeliveryReceiptUpdated are called,\n       * because cachedReadReceiptStatus and cachedDeliveryReceiptStatus properties were changed\n       */\n\n      ChannelHandler.onReadReceiptUpdated = function (channel) {\n        if (compareIds(channel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onReadReceiptUpdated', channel);\n          messagesDispatcher({\n            type: SET_CURRENT_CHANNEL,\n            payload: channel\n          });\n        }\n      };\n      ChannelHandler.onDeliveryReceiptUpdated = function (channel) {\n        if (compareIds(channel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onDeliveryReceiptUpdated', channel);\n          messagesDispatcher({\n            type: SET_CURRENT_CHANNEL,\n            payload: channel\n          });\n        }\n      };\n      ChannelHandler.onMessageUpdated = function (channel, message) {\n        logger.info('Channel | useHandleChannelEvents: onMessageUpdated', message);\n        messagesDispatcher({\n          type: ON_MESSAGE_UPDATED,\n          payload: {\n            channel: channel,\n            message: message\n          }\n        });\n      };\n      ChannelHandler.onThreadInfoUpdated = function (channel, event) {\n        logger.info('Channel | useHandleChannelEvents: onThreadInfoUpdated', event);\n        messagesDispatcher({\n          type: ON_MESSAGE_THREAD_INFO_UPDATED,\n          payload: {\n            channel: channel,\n            event: event\n          }\n        });\n      };\n      ChannelHandler.onMessageDeleted = function (_, messageId) {\n        logger.info('Channel | useHandleChannelEvents: onMessageDeleted', messageId);\n        setQuoteMessage(null);\n        messagesDispatcher({\n          type: ON_MESSAGE_DELETED,\n          payload: messageId\n        });\n      };\n      ChannelHandler.onReactionUpdated = function (_, reactionEvent) {\n        logger.info('Channel | useHandleChannelEvents: onReactionUpdated', reactionEvent);\n        messagesDispatcher({\n          type: ON_REACTION_UPDATED,\n          payload: reactionEvent\n        });\n      };\n      ChannelHandler.onChannelChanged = function (groupChannel) {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onChannelChanged', groupChannel);\n          messagesDispatcher({\n            type: SET_CURRENT_CHANNEL,\n            payload: groupChannel\n          });\n        }\n      };\n      ChannelHandler.onChannelFrozen = function (groupChannel) {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onChannelFrozen', groupChannel);\n          messagesDispatcher({\n            type: SET_CURRENT_CHANNEL,\n            payload: groupChannel\n          });\n        }\n      };\n      ChannelHandler.onChannelUnfrozen = function (groupChannel) {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onChannelUnFrozen', groupChannel);\n          messagesDispatcher({\n            type: SET_CURRENT_CHANNEL,\n            payload: groupChannel\n          });\n        }\n      };\n      ChannelHandler.onUserMuted = function (groupChannel) {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onUserMuted', groupChannel);\n          messagesDispatcher({\n            type: SET_CURRENT_CHANNEL,\n            payload: groupChannel\n          });\n        }\n      };\n      ChannelHandler.onUserUnmuted = function (groupChannel) {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onUserUnmuted', groupChannel);\n          messagesDispatcher({\n            type: SET_CURRENT_CHANNEL,\n            payload: groupChannel\n          });\n        }\n      };\n      ChannelHandler.onUserBanned = function (groupChannel) {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onUserBanned', groupChannel);\n          messagesDispatcher({\n            type: SET_CURRENT_CHANNEL,\n            payload: groupChannel\n          });\n        }\n      };\n      ChannelHandler.onOperatorUpdated = function (groupChannel) {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onOperatorUpdated', groupChannel);\n          messagesDispatcher({\n            type: SET_CURRENT_CHANNEL,\n            payload: groupChannel\n          });\n        }\n      }; // Add this channel event handler to the SendBird object.\n\n      sdk.addChannelHandler(messageReceiverId, ChannelHandler);\n    }\n    return function () {\n      if (sdk && sdk.removeChannelHandler) {\n        logger.info('Channel | useHandleChannelEvents: Removing message reciver handler', messageReceiverId);\n        sdk.removeChannelHandler(messageReceiverId);\n      }\n    };\n  }, [channelUrl, sdkInit]);\n}\nfunction useSetChannel(_ref, _ref2) {\n  var channelUrl = _ref.channelUrl,\n    sdkInit = _ref.sdkInit;\n  var messagesDispatcher = _ref2.messagesDispatcher,\n    sdk = _ref2.sdk,\n    logger = _ref2.logger;\n  useEffect(function () {\n    if (channelUrl && sdkInit && sdk && sdk.GroupChannel) {\n      logger.info('Channel | useSetChannel fetching channel', channelUrl);\n      sdk.GroupChannel.getChannel(channelUrl).then(function (groupChannel) {\n        logger.info('Channel | useSetChannel fetched channel', groupChannel);\n        messagesDispatcher({\n          type: SET_CURRENT_CHANNEL,\n          payload: groupChannel\n        });\n        logger.info('Channel: Mark as read', groupChannel); // this order is important - this mark as read should update the event handler up above\n\n        try {\n          groupChannel.markAsRead();\n        } catch (_unused) {//\n        }\n      }).catch(function (e) {\n        logger.warning('Channel | useSetChannel fetch channel failed', {\n          channelUrl: channelUrl,\n          e: e\n        });\n        messagesDispatcher({\n          type: SET_CHANNEL_INVALID\n        });\n      });\n      sdk.getAllEmoji(function (emojiContainer_, err) {\n        if (err) {\n          logger.error('Channel: Getting emojis failed', err);\n          return;\n        }\n        logger.info('Channel: Getting emojis success', emojiContainer_);\n        messagesDispatcher({\n          type: SET_EMOJI_CONTAINER,\n          payload: emojiContainer_\n        });\n      });\n    }\n  }, [channelUrl, sdkInit]);\n}\nvar PREV_RESULT_SIZE = 30;\nvar NEXT_RESULT_SIZE = 10;\nvar getLatestMessageTimeStamp = function getLatestMessageTimeStamp() {\n  var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var latestMessage = messages[messages.length - 1];\n  return latestMessage && latestMessage.createdAt || null;\n};\nfunction useInitialMessagesFetch(_ref, _ref2) {\n  var currentGroupChannel = _ref.currentGroupChannel,\n    userFilledMessageListQuery = _ref.userFilledMessageListQuery,\n    intialTimeStamp = _ref.intialTimeStamp,\n    replyType = _ref.replyType;\n  var sdk = _ref2.sdk,\n    logger = _ref2.logger,\n    messagesDispatcher = _ref2.messagesDispatcher;\n  var channelUrl = currentGroupChannel && currentGroupChannel.url;\n  useEffect(function () {\n    logger.info('Channel useInitialMessagesFetch: Setup started', currentGroupChannel);\n    messagesDispatcher({\n      type: RESET_MESSAGES\n    });\n    if (sdk && sdk.MessageListParams && currentGroupChannel && currentGroupChannel.getMessagesByTimestamp) {\n      var messageListParams = new sdk.MessageListParams();\n      messageListParams.prevResultSize = PREV_RESULT_SIZE;\n      messageListParams.isInclusive = true;\n      messageListParams.includeReplies = false;\n      messageListParams.includeReaction = true;\n      if (replyType && replyType === 'QUOTE_REPLY') {\n        messageListParams.includeThreadInfo = true;\n        messageListParams.includeParentMessageInfo = true;\n        messageListParams.replyType = 'only_reply_to_channel';\n      }\n      if (userFilledMessageListQuery) {\n        Object.keys(userFilledMessageListQuery).forEach(function (key) {\n          messageListParams[key] = userFilledMessageListQuery[key];\n        });\n      }\n      if (replyType && replyType === 'QUOTE_REPLY' || userFilledMessageListQuery) {\n        logger.info('Channel useInitialMessagesFetch: Setup messageListParams', messageListParams);\n        messagesDispatcher({\n          type: MESSAGE_LIST_PARAMS_CHANGED,\n          payload: messageListParams\n        });\n      }\n      logger.info('Channel: Fetching messages', {\n        currentGroupChannel: currentGroupChannel,\n        userFilledMessageListQuery: userFilledMessageListQuery\n      });\n      messagesDispatcher({\n        type: GET_PREV_MESSAGES_START\n      });\n      if (intialTimeStamp) {\n        messageListParams.nextResultSize = NEXT_RESULT_SIZE;\n        currentGroupChannel.getMessagesByTimestamp(intialTimeStamp, messageListParams).then(function (messages) {\n          var hasMore = messages && messages.length > 0;\n          var lastMessageTimeStamp = hasMore ? messages[0].createdAt : null;\n          var latestFetchedMessageTimeStamp = getLatestMessageTimeStamp(messages); // to make sure there are no more messages below\n\n          var nextMessageListParams = new sdk.MessageListParams();\n          nextMessageListParams.nextResultSize = NEXT_RESULT_SIZE;\n          nextMessageListParams.isInclusive = true;\n          nextMessageListParams.includeReplies = false;\n          nextMessageListParams.includeReaction = true;\n          if (replyType && replyType === 'QUOTE_REPLY') {\n            nextMessageListParams.includeThreadInfo = true;\n            nextMessageListParams.includeParentMessageInfo = true;\n            nextMessageListParams.replyType = 'only_reply_to_channel';\n          }\n          if (userFilledMessageListQuery) {\n            Object.keys(userFilledMessageListQuery).forEach(function (key) {\n              nextMessageListParams[key] = userFilledMessageListQuery[key];\n            });\n          }\n          currentGroupChannel.getMessagesByTimestamp(latestFetchedMessageTimeStamp || new Date().getTime(), nextMessageListParams).then(function (nextMessages) {\n            messagesDispatcher({\n              type: GET_PREV_MESSAGES_SUCESS,\n              payload: {\n                messages: messages,\n                hasMore: hasMore,\n                lastMessageTimeStamp: lastMessageTimeStamp,\n                currentGroupChannel: currentGroupChannel,\n                latestFetchedMessageTimeStamp: latestFetchedMessageTimeStamp,\n                hasMoreToBottom: nextMessages && nextMessages.length > 0\n              }\n            });\n          });\n        }).catch(function (error) {\n          logger.error('Channel: Fetching messages failed', error);\n          messagesDispatcher({\n            type: GET_PREV_MESSAGES_SUCESS,\n            payload: {\n              messages: [],\n              hasMore: false,\n              lastMessageTimeStamp: 0,\n              currentGroupChannel: currentGroupChannel\n            }\n          });\n        }).finally(function () {\n          if (!intialTimeStamp) {\n            setTimeout(function () {\n              return scrollIntoLast();\n            });\n          }\n          try {\n            currentGroupChannel.markAsRead();\n          } catch (_unused) {//\n          }\n        });\n      } else {\n        currentGroupChannel.getMessagesByTimestamp(new Date().getTime(), messageListParams).then(function (messages) {\n          var hasMore = messages && messages.length > 0;\n          var lastMessageTimeStamp = hasMore ? messages[0].createdAt : null;\n          var latestFetchedMessageTimeStamp = getLatestMessageTimeStamp(messages);\n          messagesDispatcher({\n            type: GET_PREV_MESSAGES_SUCESS,\n            payload: {\n              messages: messages,\n              hasMore: hasMore,\n              lastMessageTimeStamp: lastMessageTimeStamp,\n              currentGroupChannel: currentGroupChannel,\n              latestFetchedMessageTimeStamp: latestFetchedMessageTimeStamp,\n              hasMoreToBottom: false\n            }\n          });\n        }).catch(function (error) {\n          logger.error('Channel: Fetching messages failed', error);\n          messagesDispatcher({\n            type: GET_PREV_MESSAGES_SUCESS,\n            payload: {\n              messages: [],\n              hasMore: false,\n              lastMessageTimeStamp: 0,\n              currentGroupChannel: currentGroupChannel\n            }\n          });\n        }).finally(function () {\n          if (!intialTimeStamp) {\n            setTimeout(function () {\n              return scrollIntoLast();\n            });\n          }\n          try {\n            currentGroupChannel.markAsRead();\n          } catch (_unused2) {//\n          }\n        });\n      }\n    }\n  }, [channelUrl, userFilledMessageListQuery, intialTimeStamp]);\n  /**\n   * Note - useEffect(() => {}, [currentGroupChannel])\n   * was buggy, that is why we did\n   * const channelUrl = currentGroupChannel && currentGroupChannel.url;\n   * useEffect(() => {}, [channelUrl])\n   * Again, this hook is supposed to execute when currentGroupChannel changes\n   * The 'channelUrl' here is not the same memory reference from Conversation.props\n   */\n}\n\nfunction useHandleReconnect(_a, _b) {\n  var isOnline = _a.isOnline,\n    replyType = _a.replyType;\n  var logger = _b.logger,\n    sdk = _b.sdk,\n    currentGroupChannel = _b.currentGroupChannel,\n    messagesDispatcher = _b.messagesDispatcher,\n    userFilledMessageListQuery = _b.userFilledMessageListQuery;\n  useEffect(function () {\n    var wasOffline = !isOnline;\n    return function () {\n      var _a; // state changed from offline to online\n\n      if (wasOffline && (currentGroupChannel === null || currentGroupChannel === void 0 ? void 0 : currentGroupChannel.url)) {\n        logger.info('Refreshing conversation state');\n        var useReaction = ((_a = sdk === null || sdk === void 0 ? void 0 : sdk.appInfo) === null || _a === void 0 ? void 0 : _a.isUsingReaction) || false;\n        var messageListParams_1 = new sdk.MessageListParams();\n        messageListParams_1.prevResultSize = 30;\n        messageListParams_1.isInclusive = true;\n        messageListParams_1.includeReplies = false;\n        messageListParams_1.includeReaction = useReaction;\n        if (replyType && replyType === 'QUOTE_REPLY') {\n          messageListParams_1.includeThreadInfo = true;\n          messageListParams_1.includeParentMessageInfo = true;\n          messageListParams_1.replyType = 'only_reply_to_channel';\n        }\n        if (userFilledMessageListQuery) {\n          Object.keys(userFilledMessageListQuery).forEach(function (key) {\n            messageListParams_1[key] = userFilledMessageListQuery[key];\n          });\n        }\n        logger.info('Channel: Fetching messages', {\n          currentGroupChannel: currentGroupChannel,\n          userFilledMessageListQuery: userFilledMessageListQuery\n        });\n        messagesDispatcher({\n          type: GET_PREV_MESSAGES_START,\n          payload: null\n        });\n        sdk.GroupChannel.getChannel(currentGroupChannel.url).then(function (groupChannel) {\n          var lastMessageTime = new Date().getTime();\n          groupChannel.getMessagesByTimestamp(lastMessageTime, messageListParams_1).then(function (messages) {\n            messagesDispatcher({\n              type: CLEAR_SENT_MESSAGES,\n              payload: null\n            });\n            var hasMore = (messages === null || messages === void 0 ? void 0 : messages.length) > 0;\n            var lastMessageTimeStamp = hasMore ? messages[0].createdAt : null;\n            messagesDispatcher({\n              type: GET_PREV_MESSAGES_SUCESS,\n              payload: {\n                messages: messages,\n                hasMore: hasMore,\n                lastMessageTimeStamp: lastMessageTimeStamp,\n                currentGroupChannel: currentGroupChannel\n              }\n            });\n            setTimeout(function () {\n              return scrollIntoLast();\n            });\n          }).catch(function (error) {\n            logger.error('Channel: Fetching messages failed', error);\n          }).finally(function () {\n            var _a;\n            try {\n              (_a = currentGroupChannel.markAsRead) === null || _a === void 0 ? void 0 : _a.call(currentGroupChannel);\n            } catch (_b) {//\n            }\n          });\n        });\n      }\n    };\n  }, [isOnline, replyType]);\n}\nfunction useScrollCallback(_ref, _ref2) {\n  var currentGroupChannel = _ref.currentGroupChannel,\n    lastMessageTimeStamp = _ref.lastMessageTimeStamp,\n    userFilledMessageListQuery = _ref.userFilledMessageListQuery,\n    replyType = _ref.replyType;\n  var hasMore = _ref2.hasMore,\n    logger = _ref2.logger,\n    messagesDispatcher = _ref2.messagesDispatcher,\n    sdk = _ref2.sdk;\n  return useCallback(function (cb) {\n    if (!hasMore) {\n      return;\n    }\n    var _sdk$appInfo = sdk.appInfo,\n      appInfo = _sdk$appInfo === void 0 ? {} : _sdk$appInfo;\n    var useReaction = appInfo.isUsingReaction || false;\n    var messageListParams = new sdk.MessageListParams();\n    messageListParams.prevResultSize = 30;\n    messageListParams.isInclusive = true;\n    messageListParams.includeReplies = false;\n    messageListParams.includeReaction = useReaction;\n    if (replyType && replyType === 'QUOTE_REPLY') {\n      messageListParams.includeThreadInfo = true;\n      messageListParams.includeParentMessageInfo = true;\n      messageListParams.replyType = 'only_reply_to_channel';\n    }\n    if (userFilledMessageListQuery) {\n      Object.keys(userFilledMessageListQuery).forEach(function (key) {\n        messageListParams[key] = userFilledMessageListQuery[key];\n      });\n    }\n    logger.info('Channel: Fetching messages', {\n      currentGroupChannel: currentGroupChannel,\n      userFilledMessageListQuery: userFilledMessageListQuery\n    });\n    currentGroupChannel.getMessagesByTimestamp(lastMessageTimeStamp || new Date().getTime(), messageListParams).then(function (messages) {\n      var hasMoreMessages = messages && messages.length > 0;\n      var lastMessageTs = hasMoreMessages ? messages[0].createdAt : null;\n      messagesDispatcher({\n        type: GET_PREV_MESSAGES_SUCESS,\n        payload: {\n          messages: messages,\n          hasMore: hasMoreMessages,\n          lastMessageTimeStamp: lastMessageTs,\n          currentGroupChannel: currentGroupChannel\n        }\n      });\n      cb([messages, null]);\n    }).catch(function (error) {\n      logger.error('Channel: Fetching messages failed', error);\n      messagesDispatcher({\n        type: GET_PREV_MESSAGES_SUCESS,\n        payload: {\n          messages: [],\n          hasMore: false,\n          lastMessageTimeStamp: 0,\n          currentGroupChannel: currentGroupChannel\n        }\n      });\n      cb([null, error]);\n    }).finally(function () {\n      try {\n        currentGroupChannel.markAsRead();\n      } catch (_unused) {//\n      }\n    });\n  }, [currentGroupChannel, lastMessageTimeStamp, replyType]);\n}\nvar RESULT_SIZE = 30;\nfunction useScrollDownCallback(_ref, _ref2) {\n  var currentGroupChannel = _ref.currentGroupChannel,\n    latestFetchedMessageTimeStamp = _ref.latestFetchedMessageTimeStamp,\n    userFilledMessageListQuery = _ref.userFilledMessageListQuery,\n    hasMoreToBottom = _ref.hasMoreToBottom,\n    replyType = _ref.replyType;\n  var logger = _ref2.logger,\n    messagesDispatcher = _ref2.messagesDispatcher,\n    sdk = _ref2.sdk;\n  return useCallback(function (cb) {\n    if (!hasMoreToBottom) {\n      return;\n    }\n    var _sdk$appInfo = sdk.appInfo,\n      appInfo = _sdk$appInfo === void 0 ? {} : _sdk$appInfo;\n    var useReaction = appInfo.isUsingReaction || false;\n    var messageListParams = new sdk.MessageListParams();\n    messageListParams.nextResultSize = RESULT_SIZE;\n    messageListParams.isInclusive = true;\n    messageListParams.includeReplies = false;\n    messageListParams.includeReaction = useReaction;\n    if (replyType && replyType === 'QUOTE_REPLY') {\n      messageListParams.includeThreadInfo = true;\n      messageListParams.includeParentMessageInfo = true;\n      messageListParams.replyType = 'only_reply_to_channel';\n    }\n    if (userFilledMessageListQuery) {\n      Object.keys(userFilledMessageListQuery).forEach(function (key) {\n        messageListParams[key] = userFilledMessageListQuery[key];\n      });\n    }\n    logger.info('Channel: Fetching later messages', {\n      currentGroupChannel: currentGroupChannel,\n      userFilledMessageListQuery: userFilledMessageListQuery\n    });\n    currentGroupChannel.getMessagesByTimestamp(latestFetchedMessageTimeStamp || new Date().getTime(), messageListParams).then(function (messages) {\n      var messagesLength = messages && messages.length || 0;\n      var hasMoreMessages = messagesLength > 0 && messageListParams.nextResultSize === messagesLength;\n      var lastMessageTs = hasMoreMessages ? messages[messages.length - 1].createdAt : null;\n      messagesDispatcher({\n        type: GET_NEXT_MESSAGES_SUCESS,\n        payload: {\n          messages: messages,\n          hasMoreToBottom: hasMoreMessages,\n          latestFetchedMessageTimeStamp: lastMessageTs,\n          currentGroupChannel: currentGroupChannel\n        }\n      });\n      cb([messages, null]);\n    }).catch(function (error) {\n      logger.error('Channel: Fetching later messages failed', error);\n      messagesDispatcher({\n        type: GET_NEXT_MESSAGES_FAILURE,\n        payload: {\n          messages: [],\n          hasMoreToBottom: false,\n          latestFetchedMessageTimeStamp: 0,\n          currentGroupChannel: currentGroupChannel\n        }\n      });\n      cb([null, error]);\n    }).finally(function () {\n      try {\n        currentGroupChannel.markAsRead();\n      } catch (_unused) {//\n      }\n    });\n  }, [currentGroupChannel, latestFetchedMessageTimeStamp, hasMoreToBottom, replyType]);\n}\nfunction useDeleteMessageCallback(_ref, _ref2) {\n  var currentGroupChannel = _ref.currentGroupChannel,\n    messagesDispatcher = _ref.messagesDispatcher;\n  var logger = _ref2.logger;\n  return useCallback(function (message, cb) {\n    logger.info('Channel | useDeleteMessageCallback: Deleting message', message);\n    var requestState = message.requestState;\n    logger.info('Channel | useDeleteMessageCallback: Deleting message requestState:', requestState); // Message is only on local\n\n    if (requestState === 'failed' || requestState === 'pending') {\n      logger.info('Channel | useDeleteMessageCallback: Deleted message from local:', message);\n      messagesDispatcher({\n        type: ON_MESSAGE_DELETED_BY_REQ_ID,\n        payload: message.reqId\n      });\n      if (cb) {\n        cb();\n      }\n      return;\n    } // Message is on server\n\n    currentGroupChannel.deleteMessage(message, function (err) {\n      logger.info('Channel | useDeleteMessageCallback: Deleting message from remote:', requestState);\n      if (cb) {\n        cb(err);\n      }\n      if (!err) {\n        logger.info('Channel | useDeleteMessageCallback: Deleting message success!', message);\n        messagesDispatcher({\n          type: ON_MESSAGE_DELETED,\n          payload: message.messageId\n        });\n      } else {\n        logger.warning('Channel | useDeleteMessageCallback: Deleting message failed!', err);\n      }\n    });\n  }, [currentGroupChannel, messagesDispatcher]);\n}\nfunction useUpdateMessageCallback(_ref, _ref2) {\n  var currentGroupChannel = _ref.currentGroupChannel,\n    messagesDispatcher = _ref.messagesDispatcher,\n    onBeforeUpdateUserMessage = _ref.onBeforeUpdateUserMessage;\n  var logger = _ref2.logger,\n    pubSub = _ref2.pubSub,\n    sdk = _ref2.sdk;\n  return useCallback(function (messageId, text, cb) {\n    var createParamsDefault = function createParamsDefault(txt) {\n      var params = new sdk.UserMessageParams();\n      params.message = txt;\n      return params;\n    };\n    var createCustomPrams = onBeforeUpdateUserMessage && typeof onBeforeUpdateUserMessage === 'function';\n    if (createCustomPrams) {\n      logger.info('Channel: creating params using onBeforeUpdateUserMessage', onBeforeUpdateUserMessage);\n    }\n    var params = onBeforeUpdateUserMessage ? onBeforeUpdateUserMessage(text) : createParamsDefault(text);\n    currentGroupChannel.updateUserMessage(messageId, params, function (r, e) {\n      logger.info('Channel: Updating message!', params);\n      var swapParams = sdk.getErrorFirstCallback();\n      var message = r;\n      var err = e;\n      if (swapParams) {\n        message = e;\n        err = r;\n      }\n      if (cb) {\n        cb(err, message);\n      }\n      if (!err) {\n        logger.info('Channel: Updating message success!', message);\n        messagesDispatcher({\n          type: ON_MESSAGE_UPDATED,\n          payload: {\n            channel: currentGroupChannel,\n            message: message\n          }\n        });\n        pubSub.publish(UPDATE_USER_MESSAGE, {\n          message: message,\n          channel: currentGroupChannel\n        });\n      } else {\n        logger.warning('Channel: Updating message failed!', err);\n      }\n    });\n  }, [currentGroupChannel.url, messagesDispatcher, onBeforeUpdateUserMessage]);\n}\nfunction useResendMessageCallback(_ref, _ref2) {\n  var currentGroupChannel = _ref.currentGroupChannel,\n    messagesDispatcher = _ref.messagesDispatcher;\n  var logger = _ref2.logger;\n  return useCallback(function (failedMessage) {\n    logger.info('Channel: Resending message has started', failedMessage);\n    var messageType = failedMessage.messageType,\n      file = failedMessage.file;\n    if (failedMessage && typeof failedMessage.isResendable === 'function' && failedMessage.isResendable()) {\n      // eslint-disable-next-line no-param-reassign\n      failedMessage.requestState = 'pending';\n      messagesDispatcher({\n        type: RESEND_MESSAGEGE_START,\n        payload: failedMessage\n      }); // userMessage\n\n      if (messageType === 'user') {\n        currentGroupChannel.resendUserMessage(failedMessage).then(function (message) {\n          logger.info('Channel: Resending message success!', {\n            message: message\n          });\n          messagesDispatcher({\n            type: SEND_MESSAGEGE_SUCESS,\n            payload: message\n          });\n        }).catch(function (e) {\n          logger.warning('Channel: Resending message failed!', {\n            e: e\n          }); // eslint-disable-next-line no-param-reassign\n\n          failedMessage.requestState = 'failed';\n          messagesDispatcher({\n            type: SEND_MESSAGEGE_FAILURE,\n            payload: failedMessage\n          });\n        }); // eslint-disable-next-line no-param-reassign\n\n        failedMessage.requestState = 'pending';\n        messagesDispatcher({\n          type: RESEND_MESSAGEGE_START,\n          payload: failedMessage\n        });\n        return;\n      }\n      if (messageType === 'file') {\n        currentGroupChannel.resendFileMessage(failedMessage, file).then(function (message) {\n          logger.info('Channel: Resending file message success!', {\n            message: message\n          });\n          messagesDispatcher({\n            type: SEND_MESSAGEGE_SUCESS,\n            payload: message\n          });\n        }).catch(function (e) {\n          logger.warning('Channel: Resending file message failed!', {\n            e: e\n          }); // eslint-disable-next-line no-param-reassign\n\n          failedMessage.requestState = 'failed';\n          messagesDispatcher({\n            type: SEND_MESSAGEGE_FAILURE,\n            payload: failedMessage\n          });\n        }); // eslint-disable-next-line no-param-reassign\n\n        failedMessage.requestState = 'pending';\n        messagesDispatcher({\n          type: RESEND_MESSAGEGE_START,\n          payload: failedMessage\n        });\n      }\n    } else {\n      // to alert user on console\n      // eslint-disable-next-line no-console\n      console.error('Message is not resendable');\n      logger.warning('Message is not resendable', failedMessage);\n    }\n  }, [currentGroupChannel, messagesDispatcher]);\n}\nfunction useSendMessageCallback(_ref, _ref2) {\n  var currentGroupChannel = _ref.currentGroupChannel,\n    onBeforeSendUserMessage = _ref.onBeforeSendUserMessage;\n  var sdk = _ref2.sdk,\n    logger = _ref2.logger,\n    pubSub = _ref2.pubSub,\n    messagesDispatcher = _ref2.messagesDispatcher;\n  var messageInputRef = useRef(null);\n  var sendMessage = useCallback(function () {\n    var quoteMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var text = messageInputRef.current.value;\n    var createParamsDefault = function createParamsDefault(txt) {\n      var message = typeof txt === 'string' ? txt.trim() : txt;\n      var params = new sdk.UserMessageParams();\n      params.message = message;\n      if (quoteMessage) {\n        params.isReplyToChannel = true;\n        params.parentMessageId = quoteMessage.messageId;\n      }\n      return params;\n    };\n    var createCustomPrams = onBeforeSendUserMessage && typeof onBeforeSendUserMessage === 'function';\n    if (createCustomPrams) {\n      logger.info('Channel: creating params using onBeforeSendUserMessage', onBeforeSendUserMessage);\n    }\n    var params = onBeforeSendUserMessage ? onBeforeSendUserMessage(text, quoteMessage) : createParamsDefault(text);\n    logger.info('Channel: Sending message has started', params);\n    var pendingMsg = currentGroupChannel.sendUserMessage(params, function (res, err) {\n      var swapParams = sdk.getErrorFirstCallback();\n      var message = res;\n      var error = err;\n      if (swapParams) {\n        message = err;\n        error = res;\n      } // sending params instead of pending message\n      // to make sure that we can resend the message once it fails\n\n      if (error) {\n        logger.warning('Channel: Sending message failed!', {\n          message: message\n        });\n        messagesDispatcher({\n          type: SEND_MESSAGEGE_FAILURE,\n          payload: message\n        });\n        return;\n      }\n      logger.info('Channel: Sending message success!', message);\n      messagesDispatcher({\n        type: SEND_MESSAGEGE_SUCESS,\n        payload: message\n      });\n    });\n    pubSub.publish(SEND_MESSAGE_START, {\n      /* pubSub is used instead of messagesDispatcher\n        to avoid redundantly calling `messageActionTypes.SEND_MESSAGEGE_START` */\n      message: pendingMsg,\n      channel: currentGroupChannel\n    });\n    setTimeout(function () {\n      return scrollIntoLast();\n    });\n  }, [currentGroupChannel, onBeforeSendUserMessage]);\n  return [messageInputRef, sendMessage];\n}\nfunction useSendFileMessageCallback(_ref, _ref2) {\n  var currentGroupChannel = _ref.currentGroupChannel,\n    onBeforeSendFileMessage = _ref.onBeforeSendFileMessage,\n    _ref$imageCompression = _ref.imageCompression,\n    imageCompression = _ref$imageCompression === void 0 ? {} : _ref$imageCompression;\n  var sdk = _ref2.sdk,\n    logger = _ref2.logger,\n    pubSub = _ref2.pubSub,\n    messagesDispatcher = _ref2.messagesDispatcher;\n  var sendMessage = useCallback(function (file) {\n    var quoteMessage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var compressionRate = imageCompression.compressionRate,\n      resizingWidth = imageCompression.resizingWidth,\n      resizingHeight = imageCompression.resizingHeight;\n    var createCustomParams = onBeforeSendFileMessage && typeof onBeforeSendFileMessage === 'function';\n    var compressibleFileType = file.type === 'image/jpg' || file.type === 'image/png' || file.type === 'image/jpeg';\n    var compressibleRatio = compressionRate > 0 && compressionRate < 1; // pxToNumber returns null if values are invalid\n\n    var compressibleDiamensions = pxToNumber(resizingWidth) || pxToNumber(resizingHeight);\n    var canCompressImage = compressibleFileType && (compressibleRatio || compressibleDiamensions);\n    var createParamsDefault = function createParamsDefault(file_) {\n      var params = new sdk.FileMessageParams();\n      params.file = file_;\n      if (quoteMessage) {\n        params.isReplyToChannel = true;\n        params.parentMessageId = quoteMessage.messageId;\n      }\n      return params;\n    };\n    if (canCompressImage) {\n      // Using image compression\n      try {\n        var image = document.createElement('img');\n        image.src = URL.createObjectURL(file);\n        image.onload = function () {\n          URL.revokeObjectURL(image.src);\n          var canvas = document.createElement('canvas');\n          var imageWdith = image.naturalWidth || image.width;\n          var imageHeight = image.naturalHeight || image.height;\n          var targetWidth = pxToNumber(resizingWidth) || imageWdith;\n          var targetHeight = pxToNumber(resizingHeight) || imageHeight; // In canvas.toBlob(callback, mimeType, qualityArgument)\n          // qualityArgument doesnt work\n          // so in case compressibleDiamensions are not present, we use ratio\n\n          if (file.type === 'image/png' && !compressibleDiamensions) {\n            targetWidth *= compressionRate;\n            targetHeight *= compressionRate;\n          }\n          canvas.width = targetWidth;\n          canvas.height = targetHeight;\n          var context = canvas.getContext('2d');\n          context.drawImage(image, 0, 0, targetWidth, targetHeight);\n          context.canvas.toBlob(function (newImageBlob) {\n            var compressedFile = new File([newImageBlob], file.name, {\n              type: file.type\n            });\n            if (createCustomParams) {\n              logger.info('Channel: Creating params using onBeforeSendFileMessage', onBeforeSendFileMessage);\n            }\n            var params = createCustomParams ? onBeforeSendFileMessage(compressedFile, quoteMessage) : createParamsDefault(compressedFile);\n            logger.info('Channel: Uploading file message start!', params);\n            var pendingMessage = currentGroupChannel.sendFileMessage(params, function (response, err) {\n              var swapParams = sdk.getErrorFirstCallback();\n              var _ref3 = swapParams ? [err, response] : [response, err],\n                _ref4 = _slicedToArray(_ref3, 2),\n                message = _ref4[0],\n                error = _ref4[1];\n              if (error) {\n                // sending params instead of pending message\n                // to make sure that we can resend the message once it fails\n                logger.error('Channel: Sending file message failed!', {\n                  message: message,\n                  error: error\n                });\n                message.localUrl = URL.createObjectURL(compressedFile);\n                message.file = compressedFile;\n                messagesDispatcher({\n                  type: SEND_MESSAGEGE_FAILURE,\n                  payload: message\n                });\n                return;\n              }\n              logger.info('Channel: Sending file message success!', message);\n              messagesDispatcher({\n                type: SEND_MESSAGEGE_SUCESS,\n                payload: message\n              });\n            });\n            pubSub.publish(SEND_MESSAGE_START, {\n              /* pubSub is used instead of messagesDispatcher\n                to avoid redundantly calling `messageActionTypes.SEND_MESSAGEGE_START` */\n              message: _objectSpread2(_objectSpread2({}, pendingMessage), {}, {\n                url: URL.createObjectURL(compressedFile),\n                // pending thumbnail message seems to be failed\n                requestState: 'pending'\n              }),\n              channel: currentGroupChannel\n            });\n            setTimeout(function () {\n              return scrollIntoLast();\n            }, 1000);\n          }, file.type, compressionRate);\n        };\n      } catch (error) {\n        logger.error('Channel: Sending file message failed!', error);\n      }\n    } else {\n      // Not using image compression\n      if (createCustomParams) {\n        logger.info('Channel: creating params using onBeforeSendFileMessage', onBeforeSendFileMessage);\n      }\n      var params = onBeforeSendFileMessage ? onBeforeSendFileMessage(file, quoteMessage) : createParamsDefault(file);\n      logger.info('Channel: Uploading file message start!', params);\n      var pendingMsg = currentGroupChannel.sendFileMessage(params, function (response, err) {\n        var swapParams = sdk.getErrorFirstCallback();\n        var _ref5 = swapParams ? [err, response] : [response, err],\n          _ref6 = _slicedToArray(_ref5, 2),\n          message = _ref6[0],\n          error = _ref6[1];\n        if (error) {\n          // sending params instead of pending message\n          // to make sure that we can resend the message once it fails\n          logger.error('Channel: Sending file message failed!', {\n            message: message,\n            error: error\n          });\n          message.localUrl = URL.createObjectURL(file);\n          message.file = file;\n          messagesDispatcher({\n            type: SEND_MESSAGEGE_FAILURE,\n            payload: message\n          });\n          return;\n        }\n        logger.info('Channel: Sending message success!', message);\n        messagesDispatcher({\n          type: SEND_MESSAGEGE_SUCESS,\n          payload: message\n        });\n      });\n      pubSub.publish(SEND_MESSAGE_START, {\n        /* pubSub is used instead of messagesDispatcher\n          to avoid redundantly calling `messageActionTypes.SEND_MESSAGEGE_START` */\n        message: _objectSpread2(_objectSpread2({}, pendingMsg), {}, {\n          url: URL.createObjectURL(file),\n          // pending thumbnail message seems to be failed\n          requestState: 'pending'\n        }),\n        channel: currentGroupChannel\n      });\n      setTimeout(function () {\n        return scrollIntoLast();\n      }, 1000);\n    }\n  }, [currentGroupChannel, onBeforeSendFileMessage, imageCompression]);\n  return [sendMessage];\n}\nvar ReactionButton = /*#__PURE__*/React__default.forwardRef(function (props, ref) {\n  var className = props.className,\n    width = props.width,\n    height = props.height,\n    selected = props.selected,\n    _onClick = props.onClick,\n    children = props.children;\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: [].concat(_toConsumableArray(Array.isArray(className) ? className : [className]), [\"sendbird-reaction-button\".concat(selected ? '--selected' : '')]).join(' '),\n    ref: ref,\n    role: \"button\",\n    style: {\n      width: typeof width === 'string' ? \"\".concat(width.slice(0, -2) - 2, \"px\") : \"\".concat(width - 2, \"px\"),\n      height: typeof height === 'string' ? \"\".concat(height.slice(0, -2) - 2, \"px\") : \"\".concat(height - 2, \"px\")\n    },\n    onClick: function onClick(e) {\n      return _onClick(e);\n    },\n    onKeyDown: function onKeyDown(e) {\n      return _onClick(e);\n    },\n    tabIndex: 0\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-reaction-button__inner\"\n  }, children));\n});\nReactionButton.propTypes = {\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  selected: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.element.isRequired\n};\nReactionButton.defaultProps = {\n  className: '',\n  width: '36px',\n  height: '36px',\n  selected: false,\n  onClick: function onClick() {}\n};\nfunction useMemoizedEmojiListItems(_ref, _ref2) {\n  var emojiContainer = _ref.emojiContainer,\n    toggleReaction = _ref.toggleReaction;\n  var useReaction = _ref2.useReaction,\n    logger = _ref2.logger,\n    userId = _ref2.userId,\n    emojiAllList = _ref2.emojiAllList;\n\n  /* eslint-disable react/prop-types */\n  return useMemo(function () {\n    return function (_ref3) {\n      var parentRef = _ref3.parentRef,\n        parentContainRef = _ref3.parentContainRef,\n        message = _ref3.message,\n        closeDropdown = _ref3.closeDropdown,\n        _ref3$spaceFromTrigge = _ref3.spaceFromTrigger,\n        spaceFromTrigger = _ref3$spaceFromTrigge === void 0 ? {} : _ref3$spaceFromTrigge;\n      if (!useReaction || !(parentRef || parentContainRef || message || closeDropdown)) {\n        logger.warning('Channel: Invalid Params in memoizedEmojiListItems');\n        return null;\n      }\n      return /*#__PURE__*/React__default.createElement(EmojiListItems, {\n        parentRef: parentRef,\n        parentContainRef: parentContainRef,\n        closeDropdown: closeDropdown,\n        spaceFromTrigger: spaceFromTrigger\n      }, emojiAllList.map(function (emoji) {\n        var reactedReaction = message.reactions.filter(function (reaction) {\n          return reaction.key === emoji.key;\n        })[0];\n        var isReacted = reactedReaction ? !(reactedReaction.userIds.indexOf(userId) < 0) : false;\n        return /*#__PURE__*/React__default.createElement(ReactionButton, {\n          key: emoji.key,\n          width: \"36px\",\n          height: \"36px\",\n          selected: isReacted,\n          onClick: function onClick() {\n            closeDropdown();\n            toggleReaction(message, emoji.key, isReacted);\n          }\n        }, /*#__PURE__*/React__default.createElement(ImageRenderer, {\n          url: emoji.url,\n          width: \"28px\",\n          height: \"28px\",\n          defaultComponent: /*#__PURE__*/React__default.createElement(Icon, {\n            width: \"28px\",\n            height: \"28px\",\n            type: IconTypes.QUESTION\n          })\n        }));\n      }));\n    };\n  }, [emojiContainer, toggleReaction]);\n}\nfunction useToggleReactionCallback(_ref, _ref2) {\n  var currentGroupChannel = _ref.currentGroupChannel;\n  var logger = _ref2.logger;\n  return useCallback(function (message, key, isReacted) {\n    if (isReacted) {\n      currentGroupChannel.deleteReaction(message, key).then(function (res) {\n        logger.info('Delete reaction success', res);\n      }).catch(function (err) {\n        logger.warning('Delete reaction failed', err);\n      });\n      return;\n    }\n    currentGroupChannel.addReaction(message, key).then(function (res) {\n      logger.info('Add reaction success', res);\n    }).catch(function (err) {\n      logger.warning('Add reaction failed', err);\n    });\n  }, [currentGroupChannel]);\n}\nfunction useScrollToMessage(_a, _b) {\n  var setIntialTimeStamp = _a.setIntialTimeStamp,\n    setAnimatedMessageId = _a.setAnimatedMessageId,\n    allMessages = _a.allMessages;\n  var logger = _b.logger;\n  return useCallback(function (createdAt, messageId) {\n    var isPresent = allMessages.find(function (m) {\n      return m.messageId === messageId;\n    });\n    setAnimatedMessageId(null);\n    setTimeout(function () {\n      if (isPresent) {\n        logger.info('Channel: scroll to message - message is present');\n        setAnimatedMessageId(messageId);\n      } else {\n        logger.info('Channel: scroll to message - fetching older messages');\n        setIntialTimeStamp(null);\n        setIntialTimeStamp(createdAt);\n        setAnimatedMessageId(messageId);\n      }\n    });\n  }, [setIntialTimeStamp, setAnimatedMessageId, allMessages]);\n}\nvar MessageStatusTypes = getOutgoingMessageStates();\nfunction MessageStatus(_ref) {\n  var _iconType, _iconColor, _channel$getUnreadMem, _channel$getUndeliver;\n  var className = _ref.className,\n    message = _ref.message,\n    channel = _ref.channel;\n  var _useContext = useContext(LocalizationContext),\n    dateLocale = _useContext.dateLocale;\n  var showMessageStatusIcon = (channel === null || channel === void 0 ? void 0 : channel.isGroupChannel()) && !(channel !== null && channel !== void 0 && channel.isSuper) && !(channel !== null && channel !== void 0 && channel.isPublic) && !(channel !== null && channel !== void 0 && channel.isBroadcast);\n  var iconType = (_iconType = {}, _defineProperty(_iconType, MessageStatusTypes.SENT, IconTypes.DONE), _defineProperty(_iconType, MessageStatusTypes.DELIVERED, IconTypes.DONE_ALL), _defineProperty(_iconType, MessageStatusTypes.READ, IconTypes.DONE_ALL), _defineProperty(_iconType, MessageStatusTypes.FAILED, IconTypes.ERROR), _iconType);\n  var iconColor = (_iconColor = {}, _defineProperty(_iconColor, MessageStatusTypes.SENT, IconColors.SENT), _defineProperty(_iconColor, MessageStatusTypes.DELIVERED, IconColors.SENT), _defineProperty(_iconColor, MessageStatusTypes.READ, IconColors.READ), _defineProperty(_iconColor, MessageStatusTypes.FAILED, IconColors.ERROR), _iconColor);\n  var messageStatus = useMemo(function () {\n    return getOutgoingMessageState(channel, message);\n  }, [channel === null || channel === void 0 ? void 0 : (_channel$getUnreadMem = channel.getUnreadMemberCount) === null || _channel$getUnreadMem === void 0 ? void 0 : _channel$getUnreadMem.call(channel, message), channel === null || channel === void 0 ? void 0 : (_channel$getUndeliver = channel.getUndeliveredMemberCount) === null || _channel$getUndeliver === void 0 ? void 0 : _channel$getUndeliver.call(channel, message)]);\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: [].concat(_toConsumableArray(Array.isArray(className) ? className : [className]), ['sendbird-message-status']).join(' ')\n  }, showMessageStatusIcon && (messageStatus === MessageStatusTypes.PENDING ? /*#__PURE__*/React__default.createElement(Loader, {\n    className: \"sendbird-message-status__icon\",\n    width: \"16px\",\n    height: \"16px\"\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    type: IconTypes.SPINNER,\n    fillColor: IconColors.PRIMARY,\n    width: \"16px\",\n    height: \"16px\"\n  })) : /*#__PURE__*/React__default.createElement(Icon, {\n    className: \"sendbird-message-status__icon\",\n    type: iconType[messageStatus] || IconTypes.ERROR,\n    fillColor: iconColor[messageStatus],\n    width: \"16px\",\n    height: \"16px\"\n  })), isSentStatus(messageStatus) && /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-message-status__text\",\n    type: LabelTypography.CAPTION_3,\n    color: LabelColors.ONBACKGROUND_2\n  }, format(message === null || message === void 0 ? void 0 : message.createdAt, 'p', {\n    locale: dateLocale\n  })));\n}\nMessageStatus.propTypes = {\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  message: PropTypes.shape({\n    createdAt: PropTypes.number,\n    sender: PropTypes.shape({\n      friendName: PropTypes.string,\n      nickname: PropTypes.string,\n      userId: PropTypes.string,\n      profileUrl: PropTypes.string\n    }),\n    sendingStatus: PropTypes.string\n  }),\n  channel: PropTypes.shape({\n    isGroupChannel: PropTypes.func,\n    isSuper: PropTypes.bool,\n    isBroadcast: PropTypes.bool,\n    isPublic: PropTypes.bool,\n    getUnreadMemberCount: PropTypes.func,\n    getUndeliveredMemberCount: PropTypes.func\n  })\n};\nMessageStatus.defaultProps = {\n  className: '',\n  message: null,\n  channel: null\n};\nfunction MessageItemMenu(_a) {\n  var _b;\n  var className = _a.className,\n    message = _a.message,\n    channel = _a.channel,\n    _c = _a.isByMe,\n    isByMe = _c === void 0 ? false : _c,\n    _d = _a.disabled,\n    disabled = _d === void 0 ? false : _d,\n    replyType = _a.replyType,\n    showEdit = _a.showEdit,\n    showRemove = _a.showRemove,\n    resendMessage = _a.resendMessage,\n    setQuoteMessage = _a.setQuoteMessage,\n    setSupposedHover = _a.setSupposedHover;\n  var stringSet = useContext(LocalizationContext).stringSet;\n  var triggerRef = useRef(null);\n  var containerRef = useRef(null);\n  var showMenuItemCopy = isUserMessage(message);\n  var showMenuItemReply = replyType === 'QUOTE_REPLY' && !isFailedMessage(channel, message) && !isPendingMessage(channel, message);\n  var showMenuItemEdit = isUserMessage(message) && isSentMessage(channel, message) && isByMe;\n  var showMenuItemResend = isFailedMessage(channel, message) && ((_b = message === null || message === void 0 ? void 0 : message.isResendable) === null || _b === void 0 ? void 0 : _b.call(message)) && isByMe;\n  var showMenuItemDelete = !isPendingMessage(channel, message) && isByMe;\n  if (!(showMenuItemCopy || showMenuItemReply || showMenuItemEdit || showMenuItemResend || showMenuItemDelete)) {\n    return null;\n  }\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: getClassName([className, 'sendbird-message-item-menu']),\n    ref: containerRef\n  }, /*#__PURE__*/React__default.createElement(ContextMenu, {\n    menuTrigger: function menuTrigger(toggleDropdown) {\n      return /*#__PURE__*/React__default.createElement(IconButton, {\n        className: \"sendbird-message-item-menu__trigger\",\n        ref: triggerRef,\n        width: \"32px\",\n        height: \"32px\",\n        onClick: function onClick() {\n          toggleDropdown();\n          setSupposedHover(true);\n        },\n        onBlur: function onBlur() {\n          setSupposedHover(false);\n        }\n      }, /*#__PURE__*/React__default.createElement(Icon, {\n        className: \"sendbird-message-item-menu__trigger__icon\",\n        type: IconTypes.MORE,\n        fillColor: IconColors.CONTENT_INVERSE,\n        width: \"24px\",\n        height: \"24px\"\n      }));\n    },\n    menuItems: function menuItems(close) {\n      var _a;\n      var closeDropdown = function closeDropdown() {\n        close();\n        setSupposedHover(false);\n      };\n      return /*#__PURE__*/React__default.createElement(MenuItems, {\n        className: \"sendbird-message-item-menu__list\",\n        parentRef: triggerRef,\n        parentContainRef: containerRef,\n        closeDropdown: closeDropdown,\n        openLeft: isByMe\n      }, showMenuItemCopy && /*#__PURE__*/React__default.createElement(MenuItem, {\n        className: \"sendbird-message-item-menu__list__menu-item menu-item-copy\",\n        onClick: function onClick() {\n          var _a;\n          copyToClipboard((_a = message) === null || _a === void 0 ? void 0 : _a.message);\n          closeDropdown();\n        }\n      }, stringSet.MESSAGE_MENU__COPY), showMenuItemReply && /*#__PURE__*/React__default.createElement(MenuItem, {\n        className: \"sendbird-message-item-menu__list__menu-item menu-item-reply\",\n        onClick: function onClick() {\n          setQuoteMessage(message);\n          closeDropdown();\n        },\n        disable: (message === null || message === void 0 ? void 0 : message.parentMessageId) > 0\n      }, stringSet.MESSAGE_MENU__REPLY), showMenuItemEdit && /*#__PURE__*/React__default.createElement(MenuItem, {\n        className: \"sendbird-message-item-menu__list__menu-item menu-item-edit\",\n        onClick: function onClick() {\n          if (!disabled) {\n            showEdit(true);\n            closeDropdown();\n          }\n        }\n      }, stringSet.MESSAGE_MENU__EDIT), showMenuItemResend && /*#__PURE__*/React__default.createElement(MenuItem, {\n        className: \"sendbird-message-item-menu__list__menu-item menu-item-resend\",\n        onClick: function onClick() {\n          if (!disabled) {\n            resendMessage(message);\n            closeDropdown();\n          }\n        }\n      }, stringSet.MESSAGE_MENU__RESEND), showMenuItemDelete && /*#__PURE__*/React__default.createElement(MenuItem, {\n        className: \"sendbird-message-item-menu__list__menu-item menu-item-delete\",\n        onClick: function onClick() {\n          if (!disabled) {\n            showRemove(true);\n            closeDropdown();\n          }\n        },\n        disable: ((_a = message === null || message === void 0 ? void 0 : message.threadInfo) === null || _a === void 0 ? void 0 : _a.replyCount) > 0\n      }, stringSet.MESSAGE_MENU__DELETE));\n    }\n  }));\n}\nfunction MessageItemReactionMenu(_a) {\n  var className = _a.className,\n    message = _a.message,\n    channel = _a.channel,\n    userId = _a.userId,\n    _b = _a.spaceFromTrigger,\n    spaceFromTrigger = _b === void 0 ? {} : _b,\n    emojiContainer = _a.emojiContainer,\n    toggleReaction = _a.toggleReaction,\n    setSupposedHover = _a.setSupposedHover;\n  var triggerRef = useRef(null);\n  var containerRef = useRef(null);\n  if (isPendingMessage(channel, message) || isFailedMessage(channel, message)) {\n    return null;\n  }\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: getClassName([className, 'sendbird-message-item-reaction-menu']),\n    ref: containerRef\n  }, /*#__PURE__*/React__default.createElement(ContextMenu, {\n    menuTrigger: function menuTrigger(toggleDropdown) {\n      return /*#__PURE__*/React__default.createElement(IconButton, {\n        className: \"sendbird-message-item-reaction-menu__trigger\",\n        ref: triggerRef,\n        width: \"32px\",\n        height: \"32px\",\n        onClick: function onClick() {\n          toggleDropdown();\n          setSupposedHover(true);\n        },\n        onBlur: function onBlur() {\n          setSupposedHover(false);\n        }\n      }, /*#__PURE__*/React__default.createElement(Icon, {\n        className: \"sendbird-message-item-reaction-menu__trigger__icon\",\n        type: IconTypes.EMOJI_MORE,\n        fillColor: IconColors.CONTENT_INVERSE,\n        width: \"24px\",\n        height: \"24px\"\n      }));\n    },\n    menuItems: function menuItems(close) {\n      var closeDropdown = function closeDropdown() {\n        close();\n        setSupposedHover(false);\n      };\n      return /*#__PURE__*/React__default.createElement(EmojiListItems, {\n        parentRef: triggerRef,\n        parentContainRef: containerRef,\n        closeDropdown: closeDropdown,\n        spaceFromTrigger: spaceFromTrigger\n      }, getEmojiListAll(emojiContainer).map(function (emoji) {\n        var _a, _b, _c;\n        var isReacted = (_c = (_b = (_a = message === null || message === void 0 ? void 0 : message.reactions) === null || _a === void 0 ? void 0 : _a.filter(function (reaction) {\n          return reaction.key === emoji.key;\n        })[0]) === null || _b === void 0 ? void 0 : _b.userIds) === null || _c === void 0 ? void 0 : _c.some(function (reactorId) {\n          return reactorId === userId;\n        });\n        return /*#__PURE__*/React__default.createElement(ReactionButton, {\n          key: emoji.key,\n          width: \"36px\",\n          height: \"36px\",\n          selected: isReacted,\n          onClick: function onClick() {\n            closeDropdown();\n            toggleReaction(message, emoji.key, isReacted);\n          }\n        }, /*#__PURE__*/React__default.createElement(ImageRenderer, {\n          url: emoji.url,\n          width: \"28px\",\n          height: \"28px\",\n          placeHolder: function placeHolder(style) {\n            return /*#__PURE__*/React__default.createElement(\"div\", {\n              style: style\n            }, /*#__PURE__*/React__default.createElement(Icon, {\n              type: IconTypes.QUESTION,\n              fillColor: IconColors.ON_BACKGROUND_3,\n              width: \"28px\",\n              height: \"28px\"\n            }));\n          }\n        }));\n      }));\n    }\n  }));\n}\nfunction Tooltip(_ref) {\n  var className = _ref.className,\n    children = _ref.children;\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: [].concat(_toConsumableArray(Array.isArray(className) ? className : [className]), ['sendbird-tooltip']).join(' ')\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-tooltip__text\",\n    type: LabelTypography.CAPTION_2,\n    color: LabelColors.ONCONTENT_1\n  }, children));\n}\nTooltip.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.string), PropTypes.string])\n};\nTooltip.defaultProps = {\n  className: '',\n  children: ''\n};\nvar SPACE_FROM_TRIGGER = 8;\nfunction TooltipWrapper(_ref) {\n  var className = _ref.className,\n    children = _ref.children,\n    hoverTooltip = _ref.hoverTooltip;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    showHoverTooltip = _useState2[0],\n    setShowHoverTooltip = _useState2[1];\n  var childrenRef = useRef(null);\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: [].concat(_toConsumableArray(Array.isArray(className) ? className : [className]), ['sendbird-tooltip-wrapper']).join(' '),\n    onMouseOver: function onMouseOver() {\n      setShowHoverTooltip(true);\n    },\n    onFocus: function onFocus() {\n      setShowHoverTooltip(true);\n    },\n    onMouseOut: function onMouseOut() {\n      setShowHoverTooltip(false);\n    },\n    onBlur: function onBlur() {\n      setShowHoverTooltip(false);\n    }\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-tooltip-wrapper__children\",\n    ref: childrenRef\n  }, children), showHoverTooltip && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-tooltip-wrapper__hover-tooltip\",\n    style: {\n      bottom: \"calc(100% + \".concat(SPACE_FROM_TRIGGER, \"px)\")\n    }\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-tooltip-wrapper__hover-tooltip__inner\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-tooltip-wrapper__hover-tooltip__inner__tooltip-container\",\n    style: {\n      left: childrenRef.current && \"calc(\".concat(childrenRef.current.offsetWidth / 2, \"px - 50%)\")\n    }\n  }, hoverTooltip))));\n}\nTooltipWrapper.propTypes = {\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  children: PropTypes.element.isRequired,\n  hoverTooltip: PropTypes.oneOfType([PropTypes.element, PropTypes.func]).isRequired\n};\nTooltipWrapper.defaultProps = {\n  className: ''\n};\nvar ReactionBadge = /*#__PURE__*/React__default.forwardRef(function (props, ref) {\n  var className = props.className,\n    children = props.children,\n    count = props.count,\n    selected = props.selected,\n    isAdd = props.isAdd,\n    onClick = props.onClick;\n  var getClassNameTail = function getClassNameTail() {\n    if (selected && !isAdd) {\n      return '--selected';\n    }\n    if (isAdd) {\n      return '--is-add';\n    }\n    return '';\n  };\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: [].concat(_toConsumableArray(Array.isArray(className) ? className : [className]), [\"sendbird-reaction-badge\".concat(getClassNameTail())]).join(' '),\n    role: \"button\",\n    ref: ref,\n    onClick: onClick,\n    onKeyDown: onClick,\n    tabIndex: 0\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-reaction-badge__inner\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-reaction-badge__inner__icon\"\n  }, children), /*#__PURE__*/React__default.createElement(Label, {\n    className: children && count && 'sendbird-reaction-badge__inner__count',\n    type: LabelTypography.CAPTION_3,\n    color: LabelColors.ONBACKGROUND_1\n  }, count)));\n});\nReactionBadge.propTypes = {\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  children: PropTypes.element.isRequired,\n  count: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  selected: PropTypes.bool,\n  isAdd: PropTypes.bool,\n  onClick: PropTypes.func\n};\nReactionBadge.defaultProps = {\n  className: '',\n  count: '',\n  selected: false,\n  isAdd: false,\n  onClick: function onClick() {}\n};\nfunction EmojiReactions2(_a) {\n  var _b, _c;\n  var className = _a.className,\n    userId = _a.userId,\n    message = _a.message,\n    emojiContainer = _a.emojiContainer,\n    memberNicknamesMap = _a.memberNicknamesMap,\n    _d = _a.spaceFromTrigger,\n    spaceFromTrigger = _d === void 0 ? {} : _d,\n    _e = _a.isByMe,\n    isByMe = _e === void 0 ? false : _e,\n    toggleReaction = _a.toggleReaction;\n  var stringSet = useContext(LocalizationContext).stringSet;\n  var emojisMap = getEmojiMapAll(emojiContainer);\n  var addReactionRef = useRef(null);\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: getClassName([className, 'sendbird-emoji-reactions', isByMe ? 'outgoing' : 'incoming'])\n  }, ((_b = message === null || message === void 0 ? void 0 : message.reactions) === null || _b === void 0 ? void 0 : _b.length) > 0 && message.reactions.map(function (reaction) {\n    var _a, _b;\n    var reactedByMe = isReactedBy(userId, reaction);\n    return /*#__PURE__*/React__default.createElement(TooltipWrapper, {\n      className: \"sendbird-emoji-reactions__reaction-badge\",\n      key: reaction === null || reaction === void 0 ? void 0 : reaction.key,\n      hoverTooltip: ((_a = reaction === null || reaction === void 0 ? void 0 : reaction.userIds) === null || _a === void 0 ? void 0 : _a.length) > 0 && /*#__PURE__*/React__default.createElement(Tooltip, null, getEmojiTooltipString(reaction, userId, memberNicknamesMap, stringSet))\n    }, /*#__PURE__*/React__default.createElement(ReactionBadge, {\n      count: reaction.userIds.length,\n      selected: reactedByMe,\n      onClick: function onClick() {\n        return toggleReaction(message, reaction.key, reactedByMe);\n      }\n    }, /*#__PURE__*/React__default.createElement(ImageRenderer, {\n      circle: true,\n      url: ((_b = emojisMap.get(reaction === null || reaction === void 0 ? void 0 : reaction.key)) === null || _b === void 0 ? void 0 : _b.url) || '',\n      width: \"20px\",\n      height: \"20px\",\n      defaultComponent: /*#__PURE__*/React__default.createElement(Icon, {\n        width: \"20px\",\n        height: \"20px\",\n        type: IconTypes.QUESTION\n      })\n    })));\n  }), ((_c = message === null || message === void 0 ? void 0 : message.reactions) === null || _c === void 0 ? void 0 : _c.length) < emojisMap.size && /*#__PURE__*/React__default.createElement(ContextMenu, {\n    menuTrigger: function menuTrigger(toggleDropdown) {\n      return /*#__PURE__*/React__default.createElement(ReactionBadge, {\n        className: \"sendbird-emoji-reactions__add-reaction-badge\",\n        ref: addReactionRef,\n        isAdd: true,\n        onClick: toggleDropdown\n      }, /*#__PURE__*/React__default.createElement(Icon, {\n        type: IconTypes.EMOJI_MORE,\n        fillColor: IconColors.ON_BACKGROUND_3,\n        width: \"20px\",\n        height: \"20px\"\n      }));\n    },\n    menuItems: function menuItems(closeDropdown) {\n      return /*#__PURE__*/React__default.createElement(EmojiListItems, {\n        parentRef: addReactionRef,\n        parentContainRef: addReactionRef,\n        closeDropdown: closeDropdown,\n        spacefromTrigger: spaceFromTrigger\n      }, getEmojiListAll(emojiContainer).map(function (emoji) {\n        var _a, _b, _c;\n        var isReacted = (_c = (_b = (_a = message === null || message === void 0 ? void 0 : message.reactions) === null || _a === void 0 ? void 0 : _a.filter(function (reaction) {\n          return reaction.key === emoji.key;\n        })[0]) === null || _b === void 0 ? void 0 : _b.userIds) === null || _c === void 0 ? void 0 : _c.some(function (reactorId) {\n          return reactorId === userId;\n        });\n        return /*#__PURE__*/React__default.createElement(ReactionButton, {\n          key: emoji.key,\n          width: \"36px\",\n          height: \"36px\",\n          selected: isReacted,\n          onClick: function onClick() {\n            closeDropdown();\n            toggleReaction(message, emoji.key, isReacted);\n          }\n        }, /*#__PURE__*/React__default.createElement(ImageRenderer, {\n          url: (emoji === null || emoji === void 0 ? void 0 : emoji.url) || '',\n          width: \"28px\",\n          height: \"28px\",\n          placeHolder: function placeHolder(style) {\n            return /*#__PURE__*/React__default.createElement(\"div\", {\n              style: style\n            }, /*#__PURE__*/React__default.createElement(Icon, {\n              type: IconTypes.QUESTION,\n              fillColor: IconColors.ON_BACKGROUND_3,\n              width: \"28px\",\n              height: \"28px\"\n            }));\n          }\n        }));\n      }));\n    }\n  }));\n}\nfunction AdminMessage(_ref) {\n  var className = _ref.className,\n    message = _ref.message;\n  if (!(message.isAdminMessage || message.messageType) || !message.isAdminMessage() || message.messageType !== 'admin') {\n    return null;\n  }\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: [].concat(_toConsumableArray(Array.isArray(className) ? className : [className]), ['sendbird-admin-message']).join(' ')\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-admin-message__text\",\n    type: LabelTypography.CAPTION_2,\n    color: LabelColors.ONBACKGROUND_2\n  }, message.message));\n}\nAdminMessage.propTypes = {\n  message: PropTypes.shape({\n    message: PropTypes.string,\n    messageType: PropTypes.string,\n    isAdminMessage: PropTypes.func\n  }),\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)])\n};\nAdminMessage.defaultProps = {\n  message: {},\n  className: ''\n};\nfunction TextMessageItemBody(_a) {\n  var _b;\n  var className = _a.className,\n    message = _a.message,\n    _c = _a.isByMe,\n    isByMe = _c === void 0 ? false : _c,\n    _d = _a.mouseHover,\n    mouseHover = _d === void 0 ? false : _d;\n  var stringSet = useContext(LocalizationContext).stringSet;\n  return /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.BODY_1,\n    color: isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1\n  }, /*#__PURE__*/React__default.createElement(\"p\", {\n    className: getClassName([className, 'sendbird-text-message-item-body', isByMe ? 'outgoing' : 'incoming', mouseHover ? 'mouse-hover' : '', ((_b = message === null || message === void 0 ? void 0 : message.reactions) === null || _b === void 0 ? void 0 : _b.length) > 0 ? 'reactions' : ''])\n  }, message === null || message === void 0 ? void 0 : message.message, isEditedMessage(message) && /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-text-message-item-body__message edited\",\n    type: LabelTypography.BODY_1,\n    color: isByMe ? LabelColors.ONCONTENT_2 : LabelColors.ONBACKGROUND_2\n  }, \" \" + stringSet.MESSAGE_EDITED + \" \")));\n}\nfunction FileMessageItemBody(_a) {\n  var _b;\n  var className = _a.className,\n    message = _a.message,\n    _c = _a.isByMe,\n    isByMe = _c === void 0 ? false : _c,\n    _d = _a.mouseHover,\n    mouseHover = _d === void 0 ? false : _d;\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: getClassName([className, 'sendbird-file-message-item-body', isByMe ? 'outgoing' : 'incoming', mouseHover ? 'mouse-hover' : '', ((_b = message === null || message === void 0 ? void 0 : message.reactions) === null || _b === void 0 ? void 0 : _b.length) > 0 ? 'reactions' : ''])\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-file-message-item-body__file-icon\"\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    className: 'sendbird-file-message-item-body__file-icon__icon',\n    type: {\n      IMAGE: IconTypes.PHOTO,\n      VIDEO: IconTypes.PLAY,\n      AUDIO: IconTypes.FILE_AUDIO,\n      GIF: IconTypes.GIF,\n      OTHERS: IconTypes.FILE_DOCUMENT\n    }[getUIKitFileType(message === null || message === void 0 ? void 0 : message.type)],\n    fillColor: IconColors.PRIMARY,\n    width: \"24px\",\n    height: \"24px\"\n  })), /*#__PURE__*/React__default.createElement(TextButton, {\n    className: \"sendbird-file-message-item-body__file-name\",\n    onClick: function onClick() {\n      window.open(message === null || message === void 0 ? void 0 : message.url);\n    },\n    color: isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-file-message-item-body__file-name__text\",\n    type: LabelTypography.BODY_1,\n    color: isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1\n  }, truncateString((message === null || message === void 0 ? void 0 : message.name) || (message === null || message === void 0 ? void 0 : message.url)))));\n}\nfunction ThumbnailMessageItemBody(_a) {\n  var _b, _c;\n  var className = _a.className,\n    message = _a.message,\n    _d = _a.isByMe,\n    isByMe = _d === void 0 ? false : _d,\n    _e = _a.mouseHover,\n    mouseHover = _e === void 0 ? false : _e,\n    showFileViewer = _a.showFileViewer;\n  var _f = message.thumbnails,\n    thumbnails = _f === void 0 ? [] : _f;\n  var thumbnailUrl = thumbnails.length > 0 ? (_b = thumbnails[0]) === null || _b === void 0 ? void 0 : _b.url : '';\n  var _g = useState(false),\n    imageRendered = _g[0],\n    setImageRendered = _g[1];\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: getClassName([className, 'sendbird-thumbnail-message-item-body', isByMe ? 'outgoing' : 'incoming', mouseHover ? 'mouse-hover' : '', ((_c = message === null || message === void 0 ? void 0 : message.reactions) === null || _c === void 0 ? void 0 : _c.length) > 0 ? 'reactions' : '']),\n    onClick: function onClick() {\n      if ((message === null || message === void 0 ? void 0 : message.sendingStatus) === 'succeeded') {\n        showFileViewer(true);\n      }\n    }\n  }, /*#__PURE__*/React__default.createElement(ImageRenderer, {\n    className: \"sendbird-thumbnail-message-item-body__thumbnail\",\n    url: thumbnailUrl || (message === null || message === void 0 ? void 0 : message.url),\n    alt: message === null || message === void 0 ? void 0 : message.type,\n    width: \"360px\",\n    height: \"270px\",\n    onLoad: function onLoad() {\n      setImageRendered(true);\n    },\n    placeHolder: function placeHolder(style) {\n      return /*#__PURE__*/React__default.createElement(\"div\", {\n        className: \"sendbird-thumbnail-message-item-body__placeholder\",\n        style: style\n      }, /*#__PURE__*/React__default.createElement(\"div\", {\n        className: \"sendbird-thumbnail-message-item-body__placeholder__icon\"\n      }, /*#__PURE__*/React__default.createElement(Icon, {\n        type: isVideoMessage(message) ? IconTypes.PLAY : IconTypes.PHOTO,\n        fillColor: IconColors.ON_BACKGROUND_2,\n        width: \"34px\",\n        height: \"34px\"\n      })));\n    }\n  }), isVideoMessage(message) && !thumbnailUrl && !imageRendered && /*#__PURE__*/React__default.createElement(\"video\", {\n    className: \"sendbird-thumbnail-message-item-body__video\"\n  }, /*#__PURE__*/React__default.createElement(\"source\", {\n    src: message === null || message === void 0 ? void 0 : message.url,\n    type: message === null || message === void 0 ? void 0 : message.type\n  })), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-thumbnail-message-item-body__image-cover\"\n  }), (isVideoMessage(message) || isGifMessage(message)) && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-thumbnail-message-item-body__icon-wrapper\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-thumbnail-message-item-body__icon-wrapper__icon\"\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    type: isVideoMessage(message) ? IconTypes.PLAY : IconTypes.GIF,\n    fillColor: IconColors.GRAY,\n    width: \"34px\",\n    height: \"34px\"\n  }))));\n}\nfunction OGMessageItemBody(_a) {\n  var _b, _c, _d, _e, _f, _g, _h, _j;\n  var className = _a.className,\n    message = _a.message,\n    _k = _a.isByMe,\n    isByMe = _k === void 0 ? false : _k,\n    _l = _a.mouseHover,\n    mouseHover = _l === void 0 ? false : _l;\n  var stringSet = useContext(LocalizationContext).stringSet;\n  var openOGUrl = function openOGUrl() {\n    var _a, _b;\n    if ((_a = message === null || message === void 0 ? void 0 : message.ogMetaData) === null || _a === void 0 ? void 0 : _a.url) window.open((_b = message === null || message === void 0 ? void 0 : message.ogMetaData) === null || _b === void 0 ? void 0 : _b.url);\n  };\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: getClassName([className, 'sendbird-og-message-item-body', isByMe ? 'outgoing' : 'incoming', mouseHover ? 'mouse-hover' : '', ((_b = message === null || message === void 0 ? void 0 : message.reactions) === null || _b === void 0 ? void 0 : _b.length) > 0 ? 'reactions' : ''])\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    key: uuidv4(),\n    type: LabelTypography.BODY_1,\n    color: isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1\n  }, /*#__PURE__*/React__default.createElement(\"p\", {\n    className: \"sendbird-og-message-item-body__text-bubble\"\n  }, message === null || message === void 0 ? void 0 : message.message.split(' ').map(function (word) {\n    var _a;\n    var urlRegex = new RegExp(\"([a-zA-Z0-9]+://)?([a-zA-Z0-9_]+:[a-zA-Z0-9_]+@)?([a-zA-Z0-9.-]+\\\\.[A-Za-z]{2,4})(:[0-9]+)?(/.*)?\");\n    var targetUrl = (_a = urlRegex.exec(word)) === null || _a === void 0 ? void 0 : _a[0];\n    var stringUrl = {\n      front: '',\n      url: '',\n      back: ''\n    };\n    if (targetUrl) {\n      var targetUrlIndex = word.indexOf(targetUrl);\n      if (targetUrlIndex > 0) {\n        stringUrl.front = word.slice(0, targetUrlIndex);\n      }\n      stringUrl.url = word.slice(targetUrlIndex, targetUrlIndex + targetUrl.length);\n      if (targetUrlIndex + targetUrl.length < word.length) {\n        stringUrl.back = word.slice(targetUrlIndex + targetUrl.length);\n      }\n    }\n    if (targetUrl) {\n      return [stringUrl.front ? stringUrl.front : '', stringUrl.url ? /*#__PURE__*/React__default.createElement(LinkLabel, {\n        className: \"sendbird-word__url\",\n        key: uuidv4(),\n        src: stringUrl.url,\n        type: LabelTypography.BODY_1,\n        color: isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1\n      }, stringUrl.url) : null, stringUrl.back ? stringUrl.back : ''];\n    }\n    return isUrl(word) ? /*#__PURE__*/React__default.createElement(LinkLabel, {\n      className: \"sendbird-og-message-item-body__text-bubble__message\",\n      key: uuidv4(),\n      src: word,\n      type: LabelTypography.BODY_1,\n      color: isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1\n    }, word) : word + \" \";\n  }), isEditedMessage(message) && /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-og-message-item-body__text-bubble__message\",\n    type: LabelTypography.BODY_1,\n    color: isByMe ? LabelColors.ONCONTENT_2 : LabelColors.ONBACKGROUND_2\n  }, \" \" + stringSet.MESSAGE_EDITED + \" \"))), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-og-message-item-body__og-thumbnail\",\n    onClick: openOGUrl\n  }, /*#__PURE__*/React__default.createElement(ImageRenderer, {\n    className: \"sendbird-og-message-item-body__og-thumbnail__image\",\n    url: ((_d = (_c = message === null || message === void 0 ? void 0 : message.ogMetaData) === null || _c === void 0 ? void 0 : _c.defaultImage) === null || _d === void 0 ? void 0 : _d.url) || '',\n    alt: (_f = (_e = message === null || message === void 0 ? void 0 : message.ogMetaData) === null || _e === void 0 ? void 0 : _e.defaultImage) === null || _f === void 0 ? void 0 : _f.alt // TODO: Change fixing width and height lengths\n    ,\n\n    width: \"320px\",\n    height: \"180px\",\n    defaultComponent: /*#__PURE__*/React__default.createElement(\"div\", {\n      className: \"sendbird-og-message-item-body__og-thumbnail__place-holder\"\n    }, /*#__PURE__*/React__default.createElement(Icon, {\n      className: \"sendbird-og-message-item-body__og-thumbnail__place-holder__icon\",\n      type: IconTypes.THUMBNAIL_NONE,\n      width: \"56px\",\n      height: \"56px\"\n    }))\n  })), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-og-message-item-body__description\",\n    onClick: openOGUrl\n  }, ((_g = message === null || message === void 0 ? void 0 : message.ogMetaData) === null || _g === void 0 ? void 0 : _g.title) && /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-og-message-item-body__description__title\",\n    type: LabelTypography.SUBTITLE_2,\n    color: LabelColors.ONBACKGROUND_1\n  }, message.ogMetaData.title), ((_h = message === null || message === void 0 ? void 0 : message.ogMetaData) === null || _h === void 0 ? void 0 : _h.description) && /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-og-message-item-body__description__description\",\n    type: LabelTypography.BODY_2,\n    color: LabelColors.ONBACKGROUND_1\n  }, message.ogMetaData.description), ((_j = message === null || message === void 0 ? void 0 : message.ogMetaData) === null || _j === void 0 ? void 0 : _j.url) && /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-og-message-item-body__description__url\",\n    type: LabelTypography.CAPTION_3,\n    color: LabelColors.ONBACKGROUND_2\n  }, message.ogMetaData.url)), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-og-message-item-body__cover\"\n  }));\n}\nfunction UnknownMessageItemBody(_a) {\n  var _b;\n  var className = _a.className,\n    message = _a.message,\n    _c = _a.isByMe,\n    isByMe = _c === void 0 ? false : _c,\n    _d = _a.mouseHover,\n    mouseHover = _d === void 0 ? false : _d;\n  var stringSet = useContext(LocalizationContext).stringSet;\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: getClassName([className, 'sendbird-unknown-message-item-body', isByMe ? 'outgoing' : 'incoming', mouseHover ? 'mouse-hover' : '', ((_b = message === null || message === void 0 ? void 0 : message.reactions) === null || _b === void 0 ? void 0 : _b.length) > 0 ? 'reactions' : ''])\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-unknown-message-item-body__header\",\n    type: LabelTypography.BODY_1,\n    color: isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1\n  }, stringSet.UNKNOWN__UNKNOWN_MESSAGE_TYPE), /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-unknown-message-item-body__description\",\n    type: LabelTypography.BODY_1,\n    color: isByMe ? LabelColors.ONCONTENT_2 : LabelColors.ONBACKGROUND_2\n  }, stringSet.UNKNOWN__CANNOT_READ_MESSAGE));\n}\nfunction QuoteMessage(_a) {\n  var _b;\n  var _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n  var message = _a.message,\n    _p = _a.userId,\n    userId = _p === void 0 ? '' : _p,\n    _q = _a.isByMe,\n    isByMe = _q === void 0 ? false : _q,\n    className = _a.className,\n    _onClick = _a.onClick;\n  var stringSet = useContext(LocalizationContext).stringSet;\n  var parentMessage = message.parentMessage;\n  var parentMessageSender = (_c = parentMessage) === null || _c === void 0 ? void 0 : _c.sender;\n  var parentMessageSenderNickname = userId === (parentMessageSender === null || parentMessageSender === void 0 ? void 0 : parentMessageSender.userId) ? stringSet.QUOTED_MESSAGE__CURRENT_USER : parentMessageSender === null || parentMessageSender === void 0 ? void 0 : parentMessageSender.nickname;\n  var parentMessageUrl = ((_d = parentMessage) === null || _d === void 0 ? void 0 : _d.url) || '';\n  var parentMessageType = (_e = parentMessage) === null || _e === void 0 ? void 0 : _e.type;\n  var currentMessageSenderNickname = userId === ((_f = message === null || message === void 0 ? void 0 : message.sender) === null || _f === void 0 ? void 0 : _f.userId) ? stringSet.QUOTED_MESSAGE__CURRENT_USER : (_g = message === null || message === void 0 ? void 0 : message.sender) === null || _g === void 0 ? void 0 : _g.nickname;\n  var _r = useState(false),\n    isThumbnailLoaded = _r[0],\n    setThumbnailLoaded = _r[1];\n  var uikitFileTypes = getUIKitFileTypes();\n  var splitFileName = ((_h = parentMessage) === null || _h === void 0 ? void 0 : _h.name) ? parentMessage.name.split('/') : parentMessageUrl.split('/');\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: getClassName([className, 'sendbird-quote-message', isByMe ? 'outgoing' : 'incoming']),\n    key: parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.messageId,\n    onClick: function onClick() {\n      if (_onClick) _onClick();\n    }\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-quote-message__replied-to\"\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    className: \"sendbird-quote-message__replied-to__icon\",\n    type: IconTypes.REPLY,\n    fillColor: IconColors.ON_BACKGROUND_3,\n    width: \"12px\",\n    height: \"12px\"\n  }), /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-quote-message__replied-to__text\",\n    type: LabelTypography.CAPTION_2,\n    color: LabelColors.ONBACKGROUND_3\n  }, currentMessageSenderNickname + \" \" + stringSet.QUOTED_MESSAGE__REPLIED_TO + \" \" + parentMessageSenderNickname)), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-quote-message__replied-message\"\n  }, isUserMessage(parentMessage) && ((_k = (_j = parentMessage) === null || _j === void 0 ? void 0 : _j.message) === null || _k === void 0 ? void 0 : _k.length) > 0 && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-quote-message__replied-message__text-message\"\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-quote-message__replied-message__text-message__word\",\n    type: LabelTypography.BODY_2,\n    color: LabelColors.ONBACKGROUND_1\n  }, (_l = parentMessage) === null || _l === void 0 ? void 0 : _l.message)), isThumbnailMessage(parentMessage) && parentMessageUrl && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-quote-message__replied-message__thumbnail-message\"\n  }, /*#__PURE__*/React__default.createElement(ImageRenderer, {\n    className: \"sendbird-quote-message__replied-message__thumbnail-message__image\",\n    url: parentMessageUrl,\n    alt: parentMessageType,\n    width: \"144px\",\n    height: \"108px\",\n    onLoad: function onLoad() {\n      return setThumbnailLoaded(true);\n    },\n    defaultComponent: /*#__PURE__*/React__default.createElement(\"div\", {\n      className: \"sendbird-quote-message__replied-message__thumbnail-message__placeholder\"\n    }, /*#__PURE__*/React__default.createElement(\"div\", {\n      className: \"sendbird-quote-message__replied-message__thumbnail-message__placeholder__icon\"\n    }, /*#__PURE__*/React__default.createElement(Icon, {\n      type: isVideo(parentMessageType) ? IconTypes.PLAY : IconTypes.PHOTO,\n      fillColor: IconColors.ON_BACKGROUND_2,\n      width: \"22px\",\n      height: \"22px\"\n    })))\n  }), isVideo(parentMessageType) && !(((_o = (_m = parentMessage) === null || _m === void 0 ? void 0 : _m.thumbnails) === null || _o === void 0 ? void 0 : _o.length) > 0) && /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(\"video\", {\n    className: \"sendbird-quote-message__replied-message__thumbnail-message__video\"\n  }, /*#__PURE__*/React__default.createElement(\"source\", {\n    src: parentMessageUrl,\n    type: parentMessageType\n  })), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-quote-message__replied-message__thumbnail-message__cover\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-quote-message__replied-message__thumbnail-message__cover__icon\"\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    type: IconTypes.PLAY,\n    fillColor: IconColors.GRAY,\n    width: \"14px\",\n    height: \"14px\"\n  })))), isThumbnailLoaded && isGif(parentMessageType) && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-quote-message__replied-message__thumbnail-message__cover\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-quote-message__replied-message__thumbnail-message__cover__icon\"\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    type: IconTypes.GIF,\n    fillColor: IconColors.GRAY,\n    width: \"14px\",\n    height: \"14px\"\n  })))), isFileMessage(parentMessage) && !isSupportedFileView(parentMessage.type) && parentMessageUrl && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-quote-message__replied-message__file-message\"\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    className: \"sendbird-quote-message__replied-message__file-message__type-icon\",\n    type: (_b = {}, _b[uikitFileTypes.IMAGE] = IconTypes.PHOTO, _b[uikitFileTypes.VIDEO] = IconTypes.PLAY, _b[uikitFileTypes.AUDIO] = IconTypes.FILE_AUDIO, _b[uikitFileTypes.GIF] = IconTypes.GIF, _b[uikitFileTypes.OTHERS] = IconTypes.FILE_DOCUMENT, _b)[getUIKitFileType(parentMessageType)],\n    fillColor: IconColors.ON_BACKGROUND_3,\n    width: \"16px\",\n    height: \"16px\"\n  }), /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-quote-message__replied-message__file-message__file-name\",\n    type: LabelTypography.BODY_2,\n    color: LabelColors.ONBACKGROUND_3\n  }, truncateString(splitFileName[splitFileName.length - 1])))));\n}\nfunction MessageContent(_a) {\n  var _b, _c, _d, _e;\n  var className = _a.className,\n    userId = _a.userId,\n    channel = _a.channel,\n    message = _a.message,\n    _f = _a.disabled,\n    disabled = _f === void 0 ? false : _f,\n    _g = _a.chainTop,\n    chainTop = _g === void 0 ? false : _g,\n    _h = _a.chainBottom,\n    chainBottom = _h === void 0 ? false : _h,\n    _j = _a.useReaction,\n    useReaction = _j === void 0 ? false : _j,\n    replyType = _a.replyType,\n    nicknamesMap = _a.nicknamesMap,\n    emojiContainer = _a.emojiContainer,\n    scrollToMessage = _a.scrollToMessage,\n    showEdit = _a.showEdit,\n    showRemove = _a.showRemove,\n    showFileViewer = _a.showFileViewer,\n    resendMessage = _a.resendMessage,\n    toggleReaction = _a.toggleReaction,\n    setQuoteMessage = _a.setQuoteMessage;\n  var messageTypes = getUIKitMessageTypes();\n  var _k = useContext(UserProfileContext),\n    disableUserProfile = _k.disableUserProfile,\n    renderUserProfile = _k.renderUserProfile;\n  var dateLocale = useContext(LocalizationContext).dateLocale;\n  var avatarRef = useRef(null);\n  var _l = useState(false),\n    mouseHover = _l[0],\n    setMouseHover = _l[1];\n  var _m = useState(false),\n    supposedHover = _m[0],\n    setSupposedHover = _m[1];\n  var isByMe = userId === ((_c = (_b = message) === null || _b === void 0 ? void 0 : _b.sender) === null || _c === void 0 ? void 0 : _c.userId) || message.sendingStatus === 'pending' || message.sendingStatus === 'failed';\n  var isByMeClassName = isByMe ? 'outgoing' : 'incoming';\n  var chainTopClassName = chainTop ? 'chain-top' : '';\n  var useReactionClassName = useReaction ? 'use-reactions' : '';\n  var supposedHoverClassName = supposedHover ? 'supposed-hover' : '';\n  var useReplying = !!(replyType === 'QUOTE_REPLY' && (message === null || message === void 0 ? void 0 : message.parentMessageId) && (message === null || message === void 0 ? void 0 : message.parentMessage));\n  var useReplyingClassName = useReplying ? 'use-quote' : '';\n  if (((_d = message === null || message === void 0 ? void 0 : message.isAdminMessage) === null || _d === void 0 ? void 0 : _d.call(message)) || (message === null || message === void 0 ? void 0 : message.messageType) === 'admin') {\n    return /*#__PURE__*/React__default.createElement(AdminMessage, {\n      message: message\n    });\n  }\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: getClassName([className, 'sendbird-message-content', isByMeClassName]),\n    onMouseOver: function onMouseOver() {\n      return setMouseHover(true);\n    },\n    onMouseLeave: function onMouseLeave() {\n      return setMouseHover(false);\n    }\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: getClassName(['sendbird-message-content__left', useReactionClassName, isByMeClassName, useReplyingClassName])\n  }, !isByMe && !chainBottom && /*#__PURE__*/\n\n  /** user profile */\n  React__default.createElement(ContextMenu, {\n    menuTrigger: function menuTrigger(toggleDropdown) {\n      var _a;\n      return /*#__PURE__*/React__default.createElement(Avatar, {\n        className: \"sendbird-message-content__left__avatar\",\n        src: ((_a = message === null || message === void 0 ? void 0 : message.sender) === null || _a === void 0 ? void 0 : _a.profileUrl) || '',\n        ref: avatarRef,\n        width: \"28px\",\n        height: \"28px\",\n        onClick: function onClick() {\n          if (!disableUserProfile) toggleDropdown();\n        }\n      });\n    },\n    menuItems: function menuItems(closeDropdown) {\n      return /*#__PURE__*/React__default.createElement(MenuItems\n      /**\n      * parentRef: For catching location(x, y) of MenuItems\n      * parentContainRef: For toggling more options(menus & reactions)\n      */, {\n        parentRef: avatarRef,\n        parentContainRef: avatarRef,\n        closeDropdown: closeDropdown,\n        style: {\n          paddingTop: 0,\n          paddingBottom: 0\n        }\n      }, renderUserProfile ? renderUserProfile({\n        user: message === null || message === void 0 ? void 0 : message.sender,\n        close: closeDropdown\n      }) : /*#__PURE__*/React__default.createElement(ConnectedUserProfile, {\n        user: message.sender,\n        onSuccess: closeDropdown\n      }));\n    }\n  }), isByMe && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: getClassName(['sendbird-message-content-menu', useReactionClassName, supposedHoverClassName, isByMeClassName])\n  }, /*#__PURE__*/React__default.createElement(MessageItemMenu, {\n    className: \"sendbird-message-content-menu__normal-menu\",\n    channel: channel,\n    message: message,\n    isByMe: isByMe,\n    replyType: replyType,\n    disabled: disabled,\n    showEdit: showEdit,\n    showRemove: showRemove,\n    resendMessage: resendMessage,\n    setQuoteMessage: setQuoteMessage,\n    setSupposedHover: setSupposedHover\n  }), useReaction && /*#__PURE__*/React__default.createElement(MessageItemReactionMenu, {\n    className: \"sendbird-message-content-menu__reaction-menu\",\n    message: message,\n    channel: channel,\n    userId: userId,\n    spaceFromTrigger: {},\n    emojiContainer: emojiContainer,\n    toggleReaction: toggleReaction,\n    setSupposedHover: setSupposedHover\n  }))), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-message-content__middle\"\n  }, !isByMe && !chainTop && !useReplying && /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-message-content__middle__sender-name\",\n    type: LabelTypography.CAPTION_2,\n    color: LabelColors.ONBACKGROUND_2\n  }, getSenderName(message)), useReplying ? /*#__PURE__*/React__default.createElement(\"div\", {\n    className: getClassName(['sendbird-message-content__middle__quote-message', isByMe ? 'outgoing' : 'incoming', useReplyingClassName])\n  }, /*#__PURE__*/React__default.createElement(QuoteMessage, {\n    message: message,\n    userId: userId,\n    isByMe: isByMe,\n    onClick: function onClick() {\n      var _a;\n      if (((_a = message === null || message === void 0 ? void 0 : message.parentMessage) === null || _a === void 0 ? void 0 : _a.createdAt) && (message === null || message === void 0 ? void 0 : message.parentMessageId)) {\n        scrollToMessage(message.parentMessage.createdAt, message.parentMessageId);\n      }\n    }\n  })) : null, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: getClassName(['sendbird-message-content__middle__body-container'])\n  }, isByMe && !chainBottom && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: getClassName(['sendbird-message-content__middle__body-container__created-at', 'left', supposedHoverClassName])\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-message-content__middle__body-container__created-at__component-container\"\n  }, /*#__PURE__*/React__default.createElement(MessageStatus, {\n    message: message,\n    channel: channel\n  }))), isTextMessage(message) && /*#__PURE__*/React__default.createElement(TextMessageItemBody, {\n    className: \"sendbird-message-content__middle__message-item-body\",\n    message: message,\n    isByMe: isByMe,\n    mouseHover: mouseHover\n  }), isOGMessage(message) && /*#__PURE__*/React__default.createElement(OGMessageItemBody, {\n    className: \"sendbird-message-content__middle__message-item-body\",\n    message: message,\n    isByMe: isByMe,\n    mouseHover: mouseHover\n  }), getUIKitMessageType(message) === messageTypes.FILE && /*#__PURE__*/React__default.createElement(FileMessageItemBody, {\n    className: \"sendbird-message-content__middle__message-item-body\",\n    message: message,\n    isByMe: isByMe,\n    mouseHover: mouseHover\n  }), isThumbnailMessage(message) && /*#__PURE__*/React__default.createElement(ThumbnailMessageItemBody, {\n    className: \"sendbird-message-content__middle__message-item-body\",\n    message: message,\n    isByMe: isByMe,\n    mouseHover: mouseHover,\n    showFileViewer: showFileViewer\n  }), getUIKitMessageType(message) === messageTypes.UNKNOWN && /*#__PURE__*/React__default.createElement(UnknownMessageItemBody, {\n    className: \"sendbird-message-content__middle__message-item-body\",\n    message: message,\n    isByMe: isByMe,\n    mouseHover: mouseHover\n  }), useReaction && ((_e = message === null || message === void 0 ? void 0 : message.reactions) === null || _e === void 0 ? void 0 : _e.length) > 0 && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: getClassName(['sendbird-message-content-reactions', !isByMe || isThumbnailMessage(message) || isOGMessage(message) ? '' : 'primary', mouseHover ? 'mouse-hover' : ''])\n  }, /*#__PURE__*/React__default.createElement(EmojiReactions2, {\n    userId: userId,\n    message: message,\n    isByMe: isByMe,\n    emojiContainer: emojiContainer,\n    memberNicknamesMap: nicknamesMap,\n    toggleReaction: toggleReaction\n  })), !isByMe && !chainBottom && /*#__PURE__*/React__default.createElement(Label, {\n    className: getClassName(['sendbird-message-content__middle__body-container__created-at', 'right', supposedHoverClassName]),\n    type: LabelTypography.CAPTION_3,\n    color: LabelColors.ONBACKGROUND_2\n  }, format(message.createdAt, 'p', {\n    locale: dateLocale\n  })))), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: getClassName(['sendbird-message-content__right', chainTopClassName, useReactionClassName, useReplyingClassName])\n  }, !isByMe && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: getClassName(['sendbird-message-content-menu', chainTopClassName, supposedHoverClassName, isByMeClassName])\n  }, useReaction && /*#__PURE__*/React__default.createElement(MessageItemReactionMenu, {\n    className: \"sendbird-message-content-menu__reaction-menu\",\n    message: message,\n    channel: channel,\n    userId: userId,\n    spaceFromTrigger: {},\n    emojiContainer: emojiContainer,\n    toggleReaction: toggleReaction,\n    setSupposedHover: setSupposedHover\n  }), /*#__PURE__*/React__default.createElement(MessageItemMenu, {\n    className: \"sendbird-message-content-menu__normal-menu\",\n    channel: channel,\n    message: message,\n    isByMe: isByMe,\n    replyType: replyType,\n    disabled: disabled,\n    showEdit: showEdit,\n    showRemove: showRemove,\n    resendMessage: resendMessage,\n    setQuoteMessage: setQuoteMessage,\n    setSupposedHover: setSupposedHover\n  }))));\n}\nvar RemoveMessage = function RemoveMessage(props) {\n  var _message$threadInfo;\n  var onCloseModal = props.onCloseModal,\n    onDeleteMessage = props.onDeleteMessage,\n    message = props.message;\n  var _useContext = useContext(LocalizationContext),\n    stringSet = _useContext.stringSet;\n  return /*#__PURE__*/React__default.createElement(Modal, {\n    type: ButtonTypes.DANGER,\n    disabled: (message === null || message === void 0 ? void 0 : (_message$threadInfo = message.threadInfo) === null || _message$threadInfo === void 0 ? void 0 : _message$threadInfo.replyCount) > 0,\n    onCancel: onCloseModal,\n    onSubmit: onDeleteMessage,\n    submitText: \"Delete\",\n    titleText: stringSet.MODAL__DELETE_MESSAGE__TITLE\n  });\n};\nRemoveMessage.propTypes = {\n  onCloseModal: PropTypes.func.isRequired,\n  onDeleteMessage: PropTypes.func.isRequired,\n  message: PropTypes.shape({\n    threadInfo: PropTypes.shape({\n      replyCount: PropTypes.number\n    })\n  }).isRequired\n};\nfunction MessageHoc(_ref) {\n  var _message$reactions;\n  var message = _ref.message,\n    userId = _ref.userId,\n    disabled = _ref.disabled,\n    editDisabled = _ref.editDisabled,\n    hasSeparator = _ref.hasSeparator,\n    deleteMessage = _ref.deleteMessage,\n    updateMessage = _ref.updateMessage,\n    scrollToMessage = _ref.scrollToMessage,\n    resendMessage = _ref.resendMessage,\n    useReaction = _ref.useReaction,\n    replyType = _ref.replyType,\n    chainTop = _ref.chainTop,\n    chainBottom = _ref.chainBottom,\n    membersMap = _ref.membersMap,\n    emojiContainer = _ref.emojiContainer,\n    animatedMessageId = _ref.animatedMessageId,\n    highLightedMessageId = _ref.highLightedMessageId,\n    toggleReaction = _ref.toggleReaction,\n    quoteMessage = _ref.quoteMessage,\n    setQuoteMessage = _ref.setQuoteMessage,\n    renderCustomMessage = _ref.renderCustomMessage,\n    currentGroupChannel = _ref.currentGroupChannel,\n    handleScroll = _ref.handleScroll;\n  var _message$sender = message.sender,\n    sender = _message$sender === void 0 ? {} : _message$sender;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    showEdit = _useState2[0],\n    setShowEdit = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    showRemove = _useState4[0],\n    setShowRemove = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    showFileViewer = _useState6[0],\n    setShowFileViewer = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isAnimated = _useState8[0],\n    setIsAnimated = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isHighlighted = _useState10[0],\n    setIsHighlighted = _useState10[1];\n  var editMessageInputRef = useRef(null);\n  var useMessageScrollRef = useRef(null);\n  var _useContext = useContext(LocalizationContext),\n    dateLocale = _useContext.dateLocale;\n  useLayoutEffect(function () {\n    handleScroll();\n  }, [showEdit, message === null || message === void 0 ? void 0 : (_message$reactions = message.reactions) === null || _message$reactions === void 0 ? void 0 : _message$reactions.length]);\n  useLayoutEffect(function () {\n    if (highLightedMessageId === message.messageId) {\n      if (useMessageScrollRef && useMessageScrollRef.current) {\n        useMessageScrollRef.current.scrollIntoView({\n          block: 'center',\n          inline: 'center'\n        });\n        setIsAnimated(false);\n        setTimeout(function () {\n          setIsHighlighted(true);\n        }, 500);\n      }\n    } else {\n      setIsHighlighted(false);\n    }\n  }, [highLightedMessageId, useMessageScrollRef.current, message.messageId]);\n  useLayoutEffect(function () {\n    if (animatedMessageId === message.messageId) {\n      if (useMessageScrollRef && useMessageScrollRef.current) {\n        useMessageScrollRef.current.scrollIntoView({\n          block: 'center',\n          inline: 'center'\n        });\n        setIsHighlighted(false);\n        setTimeout(function () {\n          setIsAnimated(true);\n        }, 500);\n      }\n    } else {\n      setIsAnimated(false);\n    }\n  }, [animatedMessageId, useMessageScrollRef.current, message.messageId]);\n  var RenderedMessage = useMemo(function () {\n    if (renderCustomMessage) {\n      return renderCustomMessage(message, currentGroupChannel, chainTop, chainBottom); // TODO: Let's change this to object type on next major version up\n      // and add params 'hasSeparator' and 'menuDisabled', scrollToMessage\n    }\n\n    return null;\n  }, [message, message.message, renderCustomMessage]);\n  var isByMe = userId === (sender === null || sender === void 0 ? void 0 : sender.userId) || message.requestState === 'pending' || message.requestState === 'failed';\n  if (RenderedMessage) {\n    return /*#__PURE__*/React__default.createElement(\"div\", {\n      ref: useMessageScrollRef,\n      className: getClassName(['sendbird-msg-hoc sendbird-msg--scroll-ref', isAnimated ? 'sendbird-msg-hoc__animated' : '', isHighlighted ? 'sendbird-msg-hoc__highlighted' : ''])\n    }, hasSeparator && /*#__PURE__*/React__default.createElement(DateSeparator, null, /*#__PURE__*/React__default.createElement(Label, {\n      type: LabelTypography.CAPTION_2,\n      color: LabelColors.ONBACKGROUND_2\n    }, format(message === null || message === void 0 ? void 0 : message.createdAt, 'MMMM dd, yyyy', {\n      locale: dateLocale\n    }))), /*#__PURE__*/React__default.createElement(RenderedMessage, {\n      message: message\n    }));\n  }\n  if (showEdit) {\n    return /*#__PURE__*/React__default.createElement(MessageInput, {\n      isEdit: true,\n      disabled: editDisabled,\n      ref: editMessageInputRef,\n      name: message.messageId,\n      onSendMessage: updateMessage,\n      onCancelEdit: function onCancelEdit() {\n        setShowEdit(false);\n      },\n      value: message.message\n    });\n  }\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: useMessageScrollRef,\n    className: getClassName(['sendbird-msg-hoc sendbird-msg--scroll-ref', isAnimated ? 'sendbird-msg-hoc__animated' : '', isHighlighted ? 'sendbird-msg-hoc__highlighted' : '']),\n    style: {\n      marginBottom: '2px'\n    }\n  }, hasSeparator && /*#__PURE__*/React__default.createElement(DateSeparator, null, /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.CAPTION_2,\n    color: LabelColors.ONBACKGROUND_2\n  }, format(message === null || message === void 0 ? void 0 : message.createdAt, 'MMMM dd, yyyy', {\n    locale: dateLocale\n  }))), /*#__PURE__*/React__default.createElement(MessageContent, {\n    className: \"sendbird-message-hoc__message-content\",\n    userId: userId,\n    scrollToMessage: scrollToMessage,\n    channel: currentGroupChannel,\n    message: message,\n    disabled: disabled,\n    chainTop: chainTop,\n    chainBottom: chainBottom,\n    useReaction: useReaction,\n    replyType: replyType,\n    nicknamesMap: membersMap,\n    emojiContainer: emojiContainer,\n    showEdit: setShowEdit,\n    showRemove: setShowRemove,\n    showFileViewer: setShowFileViewer,\n    resendMessage: resendMessage,\n    toggleReaction: toggleReaction,\n    quoteMessage: quoteMessage,\n    setQuoteMessage: setQuoteMessage\n  }), showRemove && /*#__PURE__*/React__default.createElement(RemoveMessage, {\n    message: message,\n    onCloseModal: function onCloseModal() {\n      return setShowRemove(false);\n    },\n    onDeleteMessage: function onDeleteMessage() {\n      deleteMessage(message);\n      if ((message === null || message === void 0 ? void 0 : message.messageId) === (quoteMessage === null || quoteMessage === void 0 ? void 0 : quoteMessage.messageId)) {\n        setQuoteMessage(null);\n      }\n    }\n  }), showFileViewer && /*#__PURE__*/React__default.createElement(FileViewer, {\n    onClose: function onClose() {\n      return setShowFileViewer(false);\n    },\n    message: message,\n    onDelete: function onDelete() {\n      deleteMessage(message, function () {\n        setShowFileViewer(false);\n      });\n    },\n    isByMe: isByMe\n  }));\n}\nMessageHoc.propTypes = {\n  userId: PropTypes.string,\n  message: PropTypes.shape({\n    isFileMessage: PropTypes.func,\n    isAdminMessage: PropTypes.func,\n    isUserMessage: PropTypes.func,\n    isDateseparator: PropTypes.func,\n    // should be a number, but there's a bug in SDK shich returns string\n    messageId: PropTypes.number,\n    type: PropTypes.string,\n    createdAt: PropTypes.number,\n    message: PropTypes.string,\n    requestState: PropTypes.string,\n    messageType: PropTypes.string,\n    sender: PropTypes.shape({\n      userId: PropTypes.string\n    }),\n    ogMetaData: PropTypes.shape({}),\n    parentMessageId: PropTypes.number,\n    reactions: PropTypes.arrayOf(PropTypes.number)\n  }),\n  animatedMessageId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  highLightedMessageId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  renderCustomMessage: PropTypes.func,\n  currentGroupChannel: PropTypes.shape({}),\n  hasSeparator: PropTypes.bool,\n  disabled: PropTypes.bool,\n  editDisabled: PropTypes.bool,\n  deleteMessage: PropTypes.func.isRequired,\n  scrollToMessage: PropTypes.func,\n  updateMessage: PropTypes.func.isRequired,\n  resendMessage: PropTypes.func.isRequired,\n  useReaction: PropTypes.bool.isRequired,\n  replyType: PropTypes.oneOf(['NONE', 'QUOTE_REPLY', 'THREAD']).isRequired,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n  membersMap: PropTypes.instanceOf(Map).isRequired,\n  emojiContainer: PropTypes.shape({\n    emojiCategories: PropTypes.arrayOf(PropTypes.shape({\n      emojis: PropTypes.arrayOf(PropTypes.shape({\n        key: PropTypes.string,\n        url: PropTypes.string\n      }))\n    }))\n  }),\n  toggleReaction: PropTypes.func,\n  quoteMessage: PropTypes.shape({\n    messageId: PropTypes.string\n  }),\n  setQuoteMessage: PropTypes.func.isRequired,\n  handleScroll: PropTypes.func.isRequired\n};\nMessageHoc.defaultProps = {\n  userId: '',\n  editDisabled: false,\n  renderCustomMessage: null,\n  currentGroupChannel: {},\n  message: {},\n  hasSeparator: false,\n  disabled: false,\n  animatedMessageId: null,\n  highLightedMessageId: null,\n  toggleReaction: function toggleReaction() {},\n  scrollToMessage: function scrollToMessage() {},\n  emojiContainer: {},\n  quoteMessage: null\n};\nvar SCROLL_REF_CLASS_NAME = '.sendbird-msg--scroll-ref';\nvar ConversationScroll = /*#__PURE__*/function (_Component) {\n  _inherits(ConversationScroll, _Component);\n  var _super = _createSuper(ConversationScroll);\n  function ConversationScroll(props) {\n    var _this;\n    _classCallCheck(this, ConversationScroll);\n    _this = _super.call(this, props);\n    _defineProperty(_assertThisInitialized(_this), \"handleScroll\", function () {\n      var _assertThisInitialize2;\n      var _assertThisInitialize = (_assertThisInitialize2 = _assertThisInitialized(_this)) === null || _assertThisInitialize2 === void 0 ? void 0 : _assertThisInitialize2.props,\n        scrollRef = _assertThisInitialize.scrollRef;\n      var current = scrollRef === null || scrollRef === void 0 ? void 0 : scrollRef.current;\n      if (current) {\n        var bottom = current.scrollHeight - current.scrollTop - current.offsetHeight;\n        var _this$state$scrollBot = _this.state.scrollBottom,\n          scrollBottom = _this$state$scrollBot === void 0 ? 0 : _this$state$scrollBot;\n        if (scrollBottom < bottom) {\n          current.scrollTop += bottom - scrollBottom;\n        }\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onScroll\", function (e) {\n      var _this$props = _this.props,\n        scrollRef = _this$props.scrollRef,\n        hasMore = _this$props.hasMore,\n        messagesDispatcher = _this$props.messagesDispatcher,\n        onScroll = _this$props.onScroll,\n        onScrollDown = _this$props.onScrollDown,\n        currentGroupChannel = _this$props.currentGroupChannel;\n      var element = e.target;\n      var scrollTop = element.scrollTop,\n        clientHeight = element.clientHeight,\n        scrollHeight = element.scrollHeight;\n      if (scrollTop === 0) {\n        if (!hasMore) {\n          return;\n        }\n        var nodes = scrollRef.current.querySelectorAll(SCROLL_REF_CLASS_NAME);\n        var first = nodes && nodes[0];\n        onScroll(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 1),\n            messages = _ref2[0];\n          if (messages) {\n            // https://github.com/scabbiaza/react-scroll-position-on-updating-dom\n            // Set block to nearest to prevent unexpected scrolling from outer components\n            try {\n              first.scrollIntoView({\n                block: 'nearest'\n              });\n            } catch (error) {//\n            }\n          }\n        });\n      }\n      if (clientHeight + scrollTop === scrollHeight) {\n        var _nodes = scrollRef.current.querySelectorAll(SCROLL_REF_CLASS_NAME);\n        var last = _nodes && _nodes[_nodes.length - 1];\n        onScrollDown(function (_ref3) {\n          var _ref4 = _slicedToArray(_ref3, 1),\n            messages = _ref4[0];\n          if (messages) {\n            // https://github.com/scabbiaza/react-scroll-position-on-updating-dom\n            try {\n              last.scrollIntoView({\n                block: 'nearest'\n              });\n            } catch (error) {//\n            }\n          }\n        });\n      } // do this later\n\n      setTimeout(function () {\n        // mark as read if scroll is at end\n        if (clientHeight + scrollTop === scrollHeight) {\n          messagesDispatcher({\n            type: MARK_AS_READ\n          });\n          currentGroupChannel.markAsRead();\n        } // save the lastest scroll bottom value\n\n        if (scrollRef !== null && scrollRef !== void 0 && scrollRef.current) {\n          var current = scrollRef === null || scrollRef === void 0 ? void 0 : scrollRef.current;\n          _this.setState(function (state) {\n            return _objectSpread2(_objectSpread2({}, state), {}, {\n              scrollBottom: current.scrollHeight - current.scrollTop - current.offsetHeight\n            });\n          }, function () {});\n        }\n      }, 500);\n    });\n    _this.state = {};\n    return _this;\n  }\n  _createClass(ConversationScroll, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$props2 = this.props,\n        userId = _this$props2.userId,\n        disabled = _this$props2.disabled,\n        scrollRef = _this$props2.scrollRef,\n        membersMap = _this$props2.membersMap,\n        allMessages = _this$props2.allMessages,\n        scrollToMessage = _this$props2.scrollToMessage,\n        useReaction = _this$props2.useReaction,\n        replyType = _this$props2.replyType,\n        emojiAllMap = _this$props2.emojiAllMap,\n        editDisabled = _this$props2.editDisabled,\n        deleteMessage = _this$props2.deleteMessage,\n        updateMessage = _this$props2.updateMessage,\n        resendMessage = _this$props2.resendMessage,\n        renderCustomMessage = _this$props2.renderCustomMessage,\n        renderChatItem = _this$props2.renderChatItem,\n        animatedMessageId = _this$props2.animatedMessageId,\n        highLightedMessageId = _this$props2.highLightedMessageId,\n        emojiContainer = _this$props2.emojiContainer,\n        toggleReaction = _this$props2.toggleReaction,\n        useMessageGrouping = _this$props2.useMessageGrouping,\n        currentGroupChannel = _this$props2.currentGroupChannel,\n        memoizedEmojiListItems = _this$props2.memoizedEmojiListItems,\n        showScrollBot = _this$props2.showScrollBot,\n        onClickScrollBot = _this$props2.onClickScrollBot,\n        quoteMessage = _this$props2.quoteMessage,\n        setQuoteMessage = _this$props2.setQuoteMessage;\n      if (allMessages.length < 1) {\n        return /*#__PURE__*/React__default.createElement(PlaceHolder, {\n          className: \"sendbird-conversation__no-messages\",\n          type: PlaceHolderTypes.NO_MESSAGES\n        });\n      }\n      return /*#__PURE__*/React__default.createElement(\"div\", {\n        className: \"sendbird-conversation__messages\"\n      }, /*#__PURE__*/React__default.createElement(\"div\", {\n        className: \"sendbird-conversation__scroll-container\"\n      }, /*#__PURE__*/React__default.createElement(\"div\", {\n        className: \"sendbird-conversation__padding\"\n      }), /*#__PURE__*/React__default.createElement(\"div\", {\n        className: \"sendbird-conversation__messages-padding\",\n        ref: scrollRef,\n        onScroll: this.onScroll\n      }, allMessages.map(function (m, idx) {\n        var previousMessage = allMessages[idx - 1];\n        var nextMessage = allMessages[idx + 1];\n        var _ref5 = useMessageGrouping ? compareMessagesForGrouping(previousMessage, m, nextMessage) : [false, false],\n          _ref6 = _slicedToArray(_ref5, 2),\n          chainTop = _ref6[0],\n          chainBottom = _ref6[1];\n        var previousMessageCreatedAt = previousMessage && previousMessage.createdAt;\n        var currentCreatedAt = m.createdAt; // https://stackoverflow.com/a/41855608\n\n        var hasSeparator = !(previousMessageCreatedAt && isSameDay(currentCreatedAt, previousMessageCreatedAt));\n        if (renderChatItem) {\n          return /*#__PURE__*/React__default.createElement(\"div\", {\n            key: m.messageId || m.reqId,\n            className: \"sendbird-msg--scroll-ref\"\n          }, renderChatItem({\n            message: m,\n            animatedMessageId: animatedMessageId,\n            highLightedMessageId: highLightedMessageId,\n            channel: currentGroupChannel,\n            onDeleteMessage: deleteMessage,\n            onUpdateMessage: updateMessage,\n            onResendMessage: resendMessage,\n            onScrollToMessage: scrollToMessage,\n            onReplyMessage: setQuoteMessage,\n            emojiContainer: emojiContainer,\n            chainTop: chainTop,\n            chainBottom: chainBottom,\n            hasSeparator: hasSeparator,\n            menuDisabled: disabled\n          }));\n        }\n        return /*#__PURE__*/React__default.createElement(MessageHoc, {\n          animatedMessageId: animatedMessageId,\n          highLightedMessageId: highLightedMessageId,\n          renderCustomMessage: renderCustomMessage,\n          key: m.messageId || m.reqId,\n          userId: userId,\n          handleScroll: _this2.handleScroll,\n          message: m,\n          quoteMessage: quoteMessage,\n          scrollToMessage: scrollToMessage,\n          currentGroupChannel: currentGroupChannel,\n          disabled: disabled,\n          membersMap: membersMap,\n          chainTop: chainTop,\n          useReaction: useReaction,\n          replyType: replyType,\n          emojiAllMap: emojiAllMap,\n          emojiContainer: emojiContainer,\n          editDisabled: editDisabled,\n          hasSeparator: hasSeparator,\n          chainBottom: chainBottom,\n          updateMessage: updateMessage,\n          deleteMessage: deleteMessage,\n          resendMessage: resendMessage,\n          toggleReaction: toggleReaction,\n          setQuoteMessage: setQuoteMessage,\n          memoizedEmojiListItems: memoizedEmojiListItems\n        });\n      }))), showScrollBot && /*#__PURE__*/React__default.createElement(\"div\", {\n        className: \"sendbird-conversation__scroll-bottom-button\",\n        onClick: onClickScrollBot,\n        onKeyDown: onClickScrollBot,\n        tabIndex: 0,\n        role: \"button\"\n      }, /*#__PURE__*/React__default.createElement(Icon, {\n        width: \"24px\",\n        height: \"24px\",\n        type: IconTypes.CHEVRON_DOWN,\n        fillColor: IconColors.PRIMARY\n      })));\n    }\n  }]);\n  return ConversationScroll;\n}(Component);\nConversationScroll.propTypes = {\n  // https://stackoverflow.com/a/52646941\n  scrollRef: PropTypes.shape({\n    current: PropTypes.oneOfType([PropTypes.element, PropTypes.shape({})])\n  }).isRequired,\n  hasMore: PropTypes.bool,\n  messagesDispatcher: PropTypes.func.isRequired,\n  onScroll: PropTypes.func,\n  onScrollDown: PropTypes.func,\n  editDisabled: PropTypes.bool,\n  disabled: PropTypes.bool,\n  userId: PropTypes.string,\n  allMessages: PropTypes.arrayOf(PropTypes.shape({\n    createdAt: PropTypes.number\n  })).isRequired,\n  deleteMessage: PropTypes.func.isRequired,\n  resendMessage: PropTypes.func.isRequired,\n  updateMessage: PropTypes.func.isRequired,\n  currentGroupChannel: PropTypes.shape({\n    markAsRead: PropTypes.func,\n    members: PropTypes.arrayOf(PropTypes.shape({}))\n  }).isRequired,\n  animatedMessageId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  highLightedMessageId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  renderChatItem: PropTypes.func,\n  renderCustomMessage: PropTypes.func,\n  scrollToMessage: PropTypes.func,\n  useReaction: PropTypes.bool,\n  replyType: PropTypes.oneOf(['NONE', 'QUOTE_REPLY', 'THREAD']),\n  showScrollBot: PropTypes.bool,\n  onClickScrollBot: PropTypes.func,\n  emojiContainer: PropTypes.shape({}),\n  emojiAllMap: PropTypes.instanceOf(Map),\n  membersMap: PropTypes.instanceOf(Map),\n  useMessageGrouping: PropTypes.bool,\n  toggleReaction: PropTypes.func,\n  memoizedEmojiListItems: PropTypes.func,\n  quoteMessage: PropTypes.shape({}),\n  setQuoteMessage: PropTypes.func.isRequired\n};\nConversationScroll.defaultProps = {\n  hasMore: false,\n  editDisabled: false,\n  disabled: false,\n  userId: '',\n  renderCustomMessage: null,\n  renderChatItem: null,\n  animatedMessageId: null,\n  highLightedMessageId: null,\n  onScroll: null,\n  onScrollDown: null,\n  useReaction: true,\n  replyType: 'NONE',\n  emojiContainer: {},\n  showScrollBot: false,\n  onClickScrollBot: function onClickScrollBot() {},\n  scrollToMessage: function scrollToMessage() {},\n  emojiAllMap: new Map(),\n  membersMap: new Map(),\n  useMessageGrouping: true,\n  toggleReaction: function toggleReaction() {},\n  memoizedEmojiListItems: function memoizedEmojiListItems() {\n    return '';\n  },\n  quoteMessage: null\n};\nfunction Notification(_ref) {\n  var count = _ref.count,\n    time = _ref.time,\n    onClick = _ref.onClick;\n  var _useContext = useContext(LocalizationContext),\n    stringSet = _useContext.stringSet;\n  var timeArray = time.split(' ');\n  timeArray.splice(-2, 0, stringSet.CHANNEL__MESSAGE_LIST__NOTIFICATION__ON);\n  return /*#__PURE__*/(\n    // eslint-disable-next-line\n    React__default.createElement(\"div\", {\n      className: \"sendbird-notification\",\n      onClick: onClick\n    }, /*#__PURE__*/React__default.createElement(Label, {\n      className: \"sendbird-notification__text\",\n      color: LabelColors.ONCONTENT_1,\n      type: LabelTypography.CAPTION_2\n    }, \"\".concat(count, \" \"), stringSet.CHANNEL__MESSAGE_LIST__NOTIFICATION__NEW_MESSAGE, \" \".concat(timeArray.join(' '))), /*#__PURE__*/React__default.createElement(Icon, {\n      width: \"24px\",\n      height: \"24px\",\n      type: IconTypes.CHEVRON_DOWN,\n      fillColor: IconColors.CONTENT\n    }))\n  );\n}\nNotification.propTypes = {\n  count: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  time: PropTypes.string,\n  onClick: PropTypes.func.isRequired\n};\nNotification.defaultProps = {\n  count: 0,\n  time: ''\n};\nvar FrozenNotification = function FrozenNotification() {\n  var stringSet = useContext(LocalizationContext).stringSet;\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-notification sendbird-notification--frozen\"\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-notification__text\",\n    type: LabelTypography.CAPTION_2\n  }, stringSet.CHANNEL_FROZEN));\n};\nvar TypingIndicatorText = function TypingIndicatorText(_ref) {\n  var members = _ref.members;\n  var _useContext = useContext(LocalizationContext),\n    stringSet = _useContext.stringSet;\n  if (!members || members.length === 0) {\n    return '';\n  }\n  if (members && members.length === 1) {\n    return \"\".concat(members[0].nickname, \" \").concat(stringSet.TYPING_INDICATOR__IS_TYPING);\n  }\n  if (members && members.length === 2) {\n    return \"\".concat(members[0].nickname, \" \").concat(stringSet.TYPING_INDICATOR__AND, \" \").concat(members[1].nickname, \" \").concat(stringSet.TYPING_INDICATOR__ARE_TYPING);\n  }\n  return stringSet.TYPING_INDICATOR__MULTIPLE_TYPING;\n};\nfunction TypingIndicator(props) {\n  var className = props.className,\n    channelUrl = props.channelUrl,\n    sb = props.sb,\n    logger = props.logger;\n  var _useState = useState(uuidv4()),\n    _useState2 = _slicedToArray(_useState, 2),\n    handlerId = _useState2[0],\n    setHandlerId = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    typingMembers = _useState4[0],\n    setTypingMembers = _useState4[1];\n  useEffect(function () {\n    if (sb && sb.ChannelHandler) {\n      sb.removeChannelHandler(handlerId);\n      var newHandlerId = uuidv4();\n      var handler = new sb.ChannelHandler(); // there is a possible warning in here - setState called after unmount\n\n      handler.onTypingStatusUpdated = function (groupChannel) {\n        logger.info('Channel > Typing Indicator: onTypingStatusUpdated', groupChannel);\n        var members = groupChannel.getTypingMembers();\n        if (groupChannel.url === channelUrl) {\n          setTypingMembers(members);\n        }\n      };\n      sb.addChannelHandler(newHandlerId, handler);\n      setHandlerId(newHandlerId);\n    }\n    return function () {\n      setTypingMembers([]);\n      if (sb && sb.removeChannelHandler) {\n        sb.removeChannelHandler(handlerId);\n      }\n    };\n  }, [channelUrl]);\n  return /*#__PURE__*/React__default.createElement(Label, {\n    className: className,\n    type: LabelTypography.CAPTION_2,\n    color: LabelColors.ONBACKGROUND_2\n  }, /*#__PURE__*/React__default.createElement(TypingIndicatorText, {\n    members: typingMembers\n  }));\n}\nTypingIndicator.propTypes = {\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  channelUrl: PropTypes.string.isRequired,\n  sb: PropTypes.shape({\n    ChannelHandler: PropTypes.func,\n    removeChannelHandler: PropTypes.func,\n    addChannelHandler: PropTypes.func\n  }).isRequired,\n  logger: PropTypes.shape({\n    info: PropTypes.func\n  }).isRequired\n};\nTypingIndicator.defaultProps = {\n  className: ''\n};\nvar componentClassname = 'sendbird-quote_message_input__avatar';\nfunction QuoteMessageThumbnail(_a) {\n  var message = _a.message;\n  if (!isFileMessage(message)) {\n    return null;\n  }\n  var thumbnailUrl = message.thumbnails && message.thumbnails.length > 0 && message.thumbnails[0].url || isImageMessage(message) && message.url;\n  if (isThumbnailMessage(message) && thumbnailUrl) {\n    return /*#__PURE__*/React__default.createElement(ImageRenderer, {\n      className: componentClassname,\n      url: thumbnailUrl,\n      alt: message.type,\n      width: \"44px\",\n      height: \"44px\",\n      fixedSize: true\n    });\n  } else if (isAudioMessage(message)) {\n    return /*#__PURE__*/React__default.createElement(\"div\", {\n      className: componentClassname\n    }, /*#__PURE__*/React__default.createElement(Icon, {\n      type: IconTypes.FILE_AUDIO,\n      fillColor: IconColors.ON_BACKGROUND_2,\n      width: \"24px\",\n      height: \"24px\"\n    }));\n  } else {\n    return /*#__PURE__*/React__default.createElement(\"div\", {\n      className: componentClassname\n    }, /*#__PURE__*/React__default.createElement(Icon, {\n      type: IconTypes.FILE_DOCUMENT,\n      fillColor: IconColors.ON_BACKGROUND_2,\n      width: \"24px\",\n      height: \"24px\"\n    }));\n  }\n}\nfunction QuoteMessageInput(_a) {\n  var _b;\n  var className = _a.className,\n    replyingMessage = _a.replyingMessage,\n    onClose = _a.onClose;\n  var stringSet = useContext(LocalizationContext).stringSet;\n  var fileMessage = replyingMessage;\n  var sender = (_b = replyingMessage) === null || _b === void 0 ? void 0 : _b.sender;\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: getClassName(['sendbird-quote_message_input', className])\n  }, /*#__PURE__*/React__default.createElement(QuoteMessageThumbnail, {\n    message: fileMessage\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-quote_message_input__body\",\n    style: {\n      width: \"calc(100% - \" + (fileMessage.isFileMessage() ? '164px' : '120px') + \")\",\n      left: fileMessage.isFileMessage() ? '92px' : '40px'\n    }\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-quote_message_input__body__sender-name\",\n    type: LabelTypography.CAPTION_1,\n    color: LabelColors.ONBACKGROUND_1\n  }, stringSet.QUOTE_MESSAGE_INPUT__REPLY_TO + \" \" + (sender && sender.nickname ? sender.nickname : stringSet.NO_NAME)), /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-quote_message_input__body__message-content\",\n    type: LabelTypography.BODY_2,\n    color: LabelColors.ONBACKGROUND_3\n  }, isImageMessage(fileMessage) && !isGifMessage(fileMessage) && stringSet.QUOTE_MESSAGE_INPUT__FILE_TYPE_IMAGE, isVideoMessage(fileMessage) && stringSet.QUOTE_MESSAGE_INPUT__FILE_TYPE__VIDEO, isGifMessage(fileMessage) && stringSet.QUOTE_MESSAGE_INPUT__FILE_TYPE_GIF, isUserMessage(replyingMessage) && replyingMessage.message, isFileMessage(fileMessage) && !isThumbnailMessage(fileMessage) && fileMessage.name)), /*#__PURE__*/React__default.createElement(Icon, {\n    className: \"sendbird-quote_message_input__close-button\",\n    type: IconTypes.CLOSE,\n    fillColor: IconColors.ON_BACKGROUND_2,\n    width: \"24px\",\n    height: \"24px\",\n    onClick: function onClick() {\n      return onClose(replyingMessage);\n    }\n  }));\n}\n\n// Logic required to handle message input rendering\n\nvar MessageInputWrapper = function MessageInputWrapper(_a, ref) {\n  var channel = _a.channel,\n    user = _a.user,\n    isOnline = _a.isOnline,\n    initialized = _a.initialized,\n    quoteMessage = _a.quoteMessage,\n    _onSendMessage = _a.onSendMessage,\n    _onFileUpload = _a.onFileUpload,\n    setQuoteMessage = _a.setQuoteMessage,\n    renderMessageInput = _a.renderMessageInput;\n  var stringSet = useContext(LocalizationContext).stringSet;\n  var disabled = !initialized || isDisabledBecauseFrozen(channel) || isDisabledBecauseMuted(channel) || !isOnline;\n  var isOperator$1 = isOperator(channel);\n  var isBroadcast = channel.isBroadcast; // custom message\n\n  if (renderMessageInput) {\n    return renderMessageInput({\n      channel: channel,\n      user: user,\n      disabled: disabled,\n      quoteMessage: quoteMessage\n    });\n  } // broadcast channel + not operator\n\n  if (isBroadcast && !isOperator$1) {\n    return null;\n  } // other conditions\n\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-message-input-wrapper\"\n  }, quoteMessage && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-message-input-wrapper__quote-message-input\"\n  }, /*#__PURE__*/React__default.createElement(QuoteMessageInput, {\n    replyingMessage: quoteMessage,\n    onClose: function onClose() {\n      return setQuoteMessage(null);\n    }\n  })), /*#__PURE__*/React__default.createElement(MessageInput, {\n    className: \"sendbird-message-input-wrapper__message-input\",\n    channelUrl: channel === null || channel === void 0 ? void 0 : channel.url,\n    placeholder: quoteMessage && stringSet.MESSAGE_INPUT__QUOTE_REPLY__PLACE_HOLDER || isDisabledBecauseFrozen(channel) && stringSet.MESSAGE_INPUT__PLACE_HOLDER__DISABLED || isDisabledBecauseMuted(channel) && stringSet.MESSAGE_INPUT__PLACE_HOLDER__MUTED,\n    ref: ref,\n    disabled: disabled,\n    onStartTyping: function onStartTyping() {\n      channel.startTyping();\n    },\n    onSendMessage: function onSendMessage() {\n      _onSendMessage(quoteMessage);\n      setQuoteMessage(null);\n    },\n    onFileUpload: function onFileUpload(file) {\n      _onFileUpload(file, quoteMessage);\n      setQuoteMessage(null);\n    }\n  }));\n};\nvar MessageInputWrapper$1 = /*#__PURE__*/React__default.forwardRef(MessageInputWrapper);\nfunction ConnectionStatus() {\n  var _useContext = useContext(LocalizationContext),\n    stringSet = _useContext.stringSet;\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-connection-status\"\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.BODY_2,\n    color: LabelColors.ONBACKGROUND_2\n  }, stringSet.TRYING_TO_CONNECT), /*#__PURE__*/React__default.createElement(Icon, {\n    type: IconTypes.DISCONNECTED,\n    fillColor: IconColors.SENT,\n    width: \"14px\",\n    height: \"14px\"\n  }));\n}\nvar getChannelTitle = function getChannelTitle() {\n  var channel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var currentUserId = arguments.length > 1 ? arguments[1] : undefined;\n  var stringSet = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : LabelStringSet;\n  if (!channel || !channel.name && !channel.members) {\n    return stringSet.NO_TITLE;\n  }\n  if (channel.name && channel.name !== 'Group Channel') {\n    return channel.name;\n  }\n  if (channel.members.length === 1) {\n    return stringSet.NO_MEMBERS;\n  }\n  return channel.members.filter(function (_ref) {\n    var userId = _ref.userId;\n    return userId !== currentUserId;\n  }).map(function (_ref2) {\n    var nickname = _ref2.nickname;\n    return nickname || stringSet.NO_NAME;\n  }).join(', ');\n};\nvar noop$1 = function noop() {};\nfunction ChatHeader(props) {\n  var currentGroupChannel = props.currentGroupChannel,\n    currentUser = props.currentUser,\n    title = props.title,\n    subTitle = props.subTitle,\n    isMuted = props.isMuted,\n    theme = props.theme,\n    showSearchIcon = props.showSearchIcon,\n    onSearchClick = props.onSearchClick,\n    onActionClick = props.onActionClick;\n  var userId = currentUser.userId;\n  var _useContext = useContext(LocalizationContext),\n    stringSet = _useContext.stringSet;\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-chat-header\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-chat-header__left\"\n  }, /*#__PURE__*/React__default.createElement(ChannelAvatar, {\n    theme: theme,\n    channel: currentGroupChannel,\n    userId: userId,\n    height: 32,\n    width: 32\n  }), /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-chat-header__left__title\",\n    type: LabelTypography.H_2,\n    color: LabelColors.ONBACKGROUND_1\n  }, title || getChannelTitle(currentGroupChannel, userId, stringSet)), /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-chat-header__left__subtitle\",\n    type: LabelTypography.BODY_1,\n    color: LabelColors.ONBACKGROUND_2\n  }, subTitle)), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-chat-header__right\"\n  }, (typeof isMuted === 'string' && isMuted === 'true' || typeof isMuted === 'boolean' && isMuted) && /*#__PURE__*/React__default.createElement(Icon, {\n    className: \"sendbird-chat-header__right__mute\",\n    type: IconTypes.NOTIFICATIONS_OFF_FILLED,\n    width: \"24px\",\n    height: \"24px\"\n  }), showSearchIcon && /*#__PURE__*/React__default.createElement(IconButton, {\n    className: \"sendbird-chat-header__right__search\",\n    width: \"32px\",\n    height: \"32px\",\n    onClick: onSearchClick\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    type: IconTypes.SEARCH,\n    fillColor: IconColors.PRIMARY,\n    width: \"24px\",\n    height: \"24px\"\n  })), /*#__PURE__*/React__default.createElement(IconButton, {\n    className: \"sendbird-chat-header__right__info\",\n    width: \"32px\",\n    height: \"32px\",\n    onClick: onActionClick\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    type: IconTypes.INFO,\n    fillColor: IconColors.PRIMARY,\n    width: \"24px\",\n    height: \"24px\"\n  }))));\n}\nChatHeader.propTypes = {\n  currentGroupChannel: PropTypes.shape({\n    members: PropTypes.arrayOf(PropTypes.shape({})),\n    coverUrl: PropTypes.string\n  }),\n  currentUser: PropTypes.shape({\n    userId: PropTypes.string\n  }),\n  title: PropTypes.string,\n  subTitle: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  isMuted: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  theme: PropTypes.string,\n  showSearchIcon: PropTypes.bool,\n  onSearchClick: PropTypes.func,\n  onActionClick: PropTypes.func\n};\nChatHeader.defaultProps = {\n  currentGroupChannel: {},\n  currentUser: {},\n  title: '',\n  subTitle: '',\n  isMuted: false,\n  theme: 'light',\n  showSearchIcon: false,\n  onSearchClick: noop$1,\n  onActionClick: noop$1\n};\nvar noop = function noop() {};\nvar ConversationPanel = function ConversationPanel(props) {\n  var channelUrl = props.channelUrl,\n    _props$stores = props.stores,\n    sdkStore = _props$stores.sdkStore,\n    userStore = _props$stores.userStore,\n    _props$config = props.config,\n    userId = _props$config.userId,\n    logger = _props$config.logger,\n    pubSub = _props$config.pubSub,\n    isOnline = _props$config.isOnline,\n    theme = _props$config.theme,\n    imageCompression = _props$config.imageCompression,\n    reconnect = props.dispatchers.reconnect,\n    _props$queries = props.queries,\n    queries = _props$queries === void 0 ? {} : _props$queries,\n    startingPoint = props.startingPoint,\n    highlightedMessage = props.highlightedMessage,\n    useReaction = props.useReaction,\n    replyType = props.replyType,\n    showSearchIcon = props.showSearchIcon,\n    onSearchClick = props.onSearchClick,\n    renderChatItem = props.renderChatItem,\n    renderChatHeader = props.renderChatHeader,\n    renderCustomMessage = props.renderCustomMessage,\n    renderUserProfile = props.renderUserProfile,\n    disableUserProfile = props.disableUserProfile,\n    renderMessageInput = props.renderMessageInput,\n    useMessageGrouping = props.useMessageGrouping,\n    onChatHeaderActionClick = props.onChatHeaderActionClick,\n    onBeforeSendUserMessage = props.onBeforeSendUserMessage,\n    onBeforeSendFileMessage = props.onBeforeSendFileMessage,\n    onBeforeUpdateUserMessage = props.onBeforeUpdateUserMessage;\n  var sdk = sdkStore.sdk;\n  var config = props.config;\n  var sdkError = sdkStore.error;\n  var sdkInit = sdkStore.initialized;\n  var user = userStore.user;\n  if (queries.messageListQuery) {\n    // eslint-disable-next-line no-console\n    console.warn('messageListQuery has been deprecated, please use messageListParams instead');\n  }\n  useEffect(function () {\n    if (renderCustomMessage) {\n      // eslint-disable-next-line no-console\n      console.info('The parameter type of renderCustomMessage will be changed to the object in the next minor update.');\n    }\n  }, []);\n  var _useState = useState(startingPoint),\n    _useState2 = _slicedToArray(_useState, 2),\n    intialTimeStamp = _useState2[0],\n    setIntialTimeStamp = _useState2[1];\n  useEffect(function () {\n    setIntialTimeStamp(startingPoint);\n  }, [startingPoint, channelUrl]);\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    animatedMessageId = _useState4[0],\n    setAnimatedMessageId = _useState4[1];\n  var _useState5 = useState(highlightedMessage),\n    _useState6 = _slicedToArray(_useState5, 2),\n    highLightedMessageId = _useState6[0],\n    setHighLightedMessageId = _useState6[1];\n  useEffect(function () {\n    setHighLightedMessageId(highlightedMessage);\n  }, [highlightedMessage]);\n  var userFilledMessageListQuery = queries.messageListParams;\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    quoteMessage = _useState8[0],\n    setQuoteMessage = _useState8[1];\n  var _useReducer = useReducer(reducer, messagesInitialState),\n    _useReducer2 = _slicedToArray(_useReducer, 2),\n    messagesStore = _useReducer2[0],\n    messagesDispatcher = _useReducer2[1];\n  var scrollRef = useRef(null);\n  var allMessages = messagesStore.allMessages,\n    loading = messagesStore.loading,\n    initialized = messagesStore.initialized,\n    unreadCount = messagesStore.unreadCount,\n    unreadSince = messagesStore.unreadSince,\n    isInvalid = messagesStore.isInvalid,\n    _messagesStore$curren = messagesStore.currentGroupChannel,\n    currentGroupChannel = _messagesStore$curren === void 0 ? {} : _messagesStore$curren,\n    hasMore = messagesStore.hasMore,\n    lastMessageTimeStamp = messagesStore.lastMessageTimeStamp,\n    hasMoreToBottom = messagesStore.hasMoreToBottom,\n    latestFetchedMessageTimeStamp = messagesStore.latestFetchedMessageTimeStamp,\n    emojiContainer = messagesStore.emojiContainer,\n    readStatus = messagesStore.readStatus;\n  var isFrozen = currentGroupChannel.isFrozen,\n    isBroadcast = currentGroupChannel.isBroadcast,\n    isSuper = currentGroupChannel.isSuper;\n  var _sdk$appInfo = sdk.appInfo,\n    appInfo = _sdk$appInfo === void 0 ? {} : _sdk$appInfo;\n  var usingReaction = appInfo.isUsingReaction && !isBroadcast && !isSuper && useReaction // TODO: Make useReaction independent from appInfo.isUsingReaction\n  ;\n\n  var userDefinedDisableUserProfile = disableUserProfile || config.disableUserProfile;\n  var userDefinedRenderProfile = renderUserProfile || config.renderUserProfile;\n  var showScrollBot = hasMoreToBottom; // TODO: emojiAllMap, emoijAllList, nicknamesMap => should be moved to messagesStore\n\n  var emojiAllMap = useMemo(function () {\n    return usingReaction ? getAllEmojisMapFromEmojiContainer(emojiContainer) : new Map();\n  }, [emojiContainer]);\n  var emojiAllList = useMemo(function () {\n    return usingReaction ? getAllEmojisFromEmojiContainer$1(emojiContainer) : [];\n  }, [emojiContainer]);\n  var nicknamesMap = useMemo(function () {\n    return usingReaction ? getNicknamesMapFromMembers(currentGroupChannel.members) : new Map();\n  }, [currentGroupChannel.members]); // Scrollup is default scroll for channel\n\n  var onScrollCallback = useScrollCallback({\n    currentGroupChannel: currentGroupChannel,\n    lastMessageTimeStamp: lastMessageTimeStamp,\n    userFilledMessageListQuery: userFilledMessageListQuery,\n    replyType: replyType\n  }, {\n    hasMore: hasMore,\n    logger: logger,\n    messagesDispatcher: messagesDispatcher,\n    sdk: sdk\n  });\n  var scrollToMessage = useScrollToMessage({\n    setIntialTimeStamp: setIntialTimeStamp,\n    setAnimatedMessageId: setAnimatedMessageId,\n    allMessages: allMessages\n  }, {\n    logger: logger\n  }); // onScrollDownCallback is added for navigation to different timestamps on messageSearch\n  // hasMoreToBottom, onScrollDownCallback -> scroll down\n  // hasMore, onScrollCallback -> scroll up(default behavior)\n\n  var onScrollDownCallback = useScrollDownCallback({\n    currentGroupChannel: currentGroupChannel,\n    latestFetchedMessageTimeStamp: latestFetchedMessageTimeStamp,\n    userFilledMessageListQuery: userFilledMessageListQuery,\n    hasMoreToBottom: hasMoreToBottom,\n    replyType: replyType\n  }, {\n    logger: logger,\n    messagesDispatcher: messagesDispatcher,\n    sdk: sdk\n  });\n  var toggleReaction = useToggleReactionCallback({\n    currentGroupChannel: currentGroupChannel\n  }, {\n    logger: logger\n  });\n  var memoizedEmojiListItems = useMemoizedEmojiListItems({\n    emojiContainer: emojiContainer,\n    toggleReaction: toggleReaction\n  }, {\n    useReaction: usingReaction,\n    logger: logger,\n    userId: userId,\n    emojiAllList: emojiAllList\n  }); // to create message-datasource\n  // this hook sets currentGroupChannel asynchronously\n\n  useSetChannel({\n    channelUrl: channelUrl,\n    sdkInit: sdkInit\n  }, {\n    messagesDispatcher: messagesDispatcher,\n    sdk: sdk,\n    logger: logger\n  });\n  useEffect(function () {\n    setQuoteMessage(null);\n  }, [channelUrl]); // Hook to handle ChannelEvents and send values to useReducer using messagesDispatcher\n\n  useHandleChannelEvents({\n    currentGroupChannel: currentGroupChannel,\n    sdkInit: sdkInit,\n    hasMoreToBottom: hasMoreToBottom\n  }, {\n    messagesDispatcher: messagesDispatcher,\n    sdk: sdk,\n    logger: logger,\n    scrollRef: scrollRef,\n    setQuoteMessage: setQuoteMessage\n  }); // hook that fetches messages when channel changes\n  // to be clear here useGetChannel sets currentGroupChannel\n  // and useInitialMessagesFetch executes when currentGroupChannel changes\n  // p.s This one executes on intialTimeStamp change too\n\n  useInitialMessagesFetch({\n    currentGroupChannel: currentGroupChannel,\n    userFilledMessageListQuery: userFilledMessageListQuery,\n    intialTimeStamp: intialTimeStamp,\n    replyType: replyType\n  }, {\n    sdk: sdk,\n    logger: logger,\n    messagesDispatcher: messagesDispatcher\n  }); // handles API calls from withSendbird\n\n  useEffect(function () {\n    var subScriber = pubSubHandler(channelUrl, pubSub, messagesDispatcher);\n    return function () {\n      pubSubHandleRemover(subScriber);\n    };\n  }, [channelUrl, sdkInit]); // handling connection breaks\n\n  useHandleReconnect({\n    isOnline: isOnline,\n    replyType: replyType\n  }, {\n    logger: logger,\n    sdk: sdk,\n    currentGroupChannel: currentGroupChannel,\n    messagesDispatcher: messagesDispatcher,\n    userFilledMessageListQuery: userFilledMessageListQuery\n  }); // callbacks for Message CURD actions\n\n  var deleteMessage = useDeleteMessageCallback({\n    currentGroupChannel: currentGroupChannel,\n    messagesDispatcher: messagesDispatcher\n  }, {\n    logger: logger\n  });\n  var updateMessage = useUpdateMessageCallback({\n    currentGroupChannel: currentGroupChannel,\n    messagesDispatcher: messagesDispatcher,\n    onBeforeUpdateUserMessage: onBeforeUpdateUserMessage\n  }, {\n    logger: logger,\n    sdk: sdk,\n    pubSub: pubSub\n  });\n  var resendMessage = useResendMessageCallback({\n    currentGroupChannel: currentGroupChannel,\n    messagesDispatcher: messagesDispatcher\n  }, {\n    logger: logger\n  });\n  var _useSendMessageCallba = useSendMessageCallback({\n      currentGroupChannel: currentGroupChannel,\n      onBeforeSendUserMessage: onBeforeSendUserMessage\n    }, {\n      sdk: sdk,\n      logger: logger,\n      pubSub: pubSub,\n      messagesDispatcher: messagesDispatcher\n    }),\n    _useSendMessageCallba2 = _slicedToArray(_useSendMessageCallba, 2),\n    messageInputRef = _useSendMessageCallba2[0],\n    onSendMessage = _useSendMessageCallba2[1];\n  var _useSendFileMessageCa = useSendFileMessageCallback({\n      currentGroupChannel: currentGroupChannel,\n      onBeforeSendFileMessage: onBeforeSendFileMessage,\n      imageCompression: imageCompression\n    }, {\n      sdk: sdk,\n      logger: logger,\n      pubSub: pubSub,\n      messagesDispatcher: messagesDispatcher\n    }),\n    _useSendFileMessageCa2 = _slicedToArray(_useSendFileMessageCa, 1),\n    onSendFileMessage = _useSendFileMessageCa2[0];\n  if (!channelUrl) {\n    return /*#__PURE__*/React__default.createElement(\"div\", {\n      className: \"sendbird-conversation\"\n    }, /*#__PURE__*/React__default.createElement(PlaceHolder, {\n      type: PlaceHolderTypes.NO_CHANNELS\n    }));\n  }\n  if (isInvalid) {\n    return /*#__PURE__*/React__default.createElement(\"div\", {\n      className: \"sendbird-conversation\"\n    }, /*#__PURE__*/React__default.createElement(PlaceHolder, {\n      type: PlaceHolderTypes.WRONG\n    }));\n  }\n  if (sdkError) {\n    return /*#__PURE__*/React__default.createElement(\"div\", {\n      className: \"sendbird-conversation\"\n    }, /*#__PURE__*/React__default.createElement(PlaceHolder, {\n      type: PlaceHolderTypes.WRONG,\n      retryToConnect: function retryToConnect() {\n        logger.info('Channel: reconnecting');\n        reconnect();\n      }\n    }));\n  }\n  return /*#__PURE__*/React__default.createElement(UserProfileProvider, {\n    className: \"sendbird-conversation\",\n    disableUserProfile: userDefinedDisableUserProfile,\n    renderUserProfile: userDefinedRenderProfile\n  }, renderChatHeader ? renderChatHeader({\n    channel: currentGroupChannel,\n    user: user\n  }) : /*#__PURE__*/React__default.createElement(ChatHeader, {\n    theme: theme,\n    currentGroupChannel: currentGroupChannel,\n    currentUser: user,\n    showSearchIcon: showSearchIcon,\n    onSearchClick: onSearchClick,\n    onActionClick: onChatHeaderActionClick,\n    subTitle: currentGroupChannel.members && currentGroupChannel.members.length !== 2,\n    isMuted: false\n  }), isFrozen && /*#__PURE__*/React__default.createElement(FrozenNotification, null), unreadCount > 0 && /*#__PURE__*/React__default.createElement(Notification, {\n    count: unreadCount,\n    onClick: function onClick() {\n      if (intialTimeStamp) {\n        setIntialTimeStamp(null);\n        setAnimatedMessageId(null);\n        setHighLightedMessageId(null);\n      } else {\n        scrollIntoLast(); // there is no scroll\n\n        if (scrollRef.current.scrollTop === 0) {\n          try {\n            currentGroupChannel.markAsRead();\n          } catch (_unused) {//\n          }\n          messagesDispatcher({\n            type: MARK_AS_READ\n          });\n        }\n      }\n    },\n    time: unreadSince\n  }), loading ? /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-conversation\"\n  }, /*#__PURE__*/React__default.createElement(PlaceHolder, {\n    type: PlaceHolderTypes.LOADING\n  })) : /*#__PURE__*/React__default.createElement(ConversationScroll, {\n    swapParams: sdk && sdk.getErrorFirstCallback && sdk.getErrorFirstCallback(),\n    animatedMessageId: animatedMessageId,\n    highLightedMessageId: highLightedMessageId,\n    userId: userId,\n    hasMore: hasMore,\n    disabled: !isOnline,\n    onScroll: onScrollCallback,\n    onScrollDown: onScrollDownCallback,\n    scrollRef: scrollRef,\n    readStatus: readStatus,\n    useReaction: usingReaction,\n    replyType: replyType,\n    allMessages: allMessages,\n    scrollToMessage: scrollToMessage,\n    emojiAllMap: emojiAllMap,\n    membersMap: nicknamesMap,\n    editDisabled: isDisabledBecauseFrozen(currentGroupChannel),\n    deleteMessage: deleteMessage,\n    updateMessage: updateMessage,\n    resendMessage: resendMessage,\n    toggleReaction: toggleReaction,\n    emojiContainer: emojiContainer,\n    renderChatItem: renderChatItem,\n    quoteMessage: quoteMessage,\n    setQuoteMessage: setQuoteMessage,\n    showScrollBot: showScrollBot,\n    onClickScrollBot: function onClickScrollBot() {\n      setIntialTimeStamp(null);\n      setAnimatedMessageId(null);\n      setHighLightedMessageId(null);\n    },\n    renderCustomMessage: renderCustomMessage,\n    useMessageGrouping: useMessageGrouping,\n    messagesDispatcher: messagesDispatcher,\n    currentGroupChannel: currentGroupChannel,\n    memoizedEmojiListItems: memoizedEmojiListItems\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-conversation__footer\"\n  }, /*#__PURE__*/React__default.createElement(MessageInputWrapper$1, {\n    channel: currentGroupChannel,\n    user: user,\n    ref: messageInputRef,\n    isOnline: isOnline,\n    initialized: initialized,\n    onSendMessage: onSendMessage,\n    onFileUpload: onSendFileMessage,\n    quoteMessage: quoteMessage,\n    setQuoteMessage: setQuoteMessage,\n    renderMessageInput: renderMessageInput\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-conversation__footer__typing-indicator\"\n  }, /*#__PURE__*/React__default.createElement(TypingIndicator, {\n    className: \"sendbird-conversation__footer__typing-indicator__text\",\n    channelUrl: channelUrl,\n    sb: sdk,\n    logger: logger\n  }), !isOnline && /*#__PURE__*/React__default.createElement(ConnectionStatus, {\n    sdkInit: sdkInit,\n    sb: sdk,\n    logger: logger\n  }))));\n};\nConversationPanel.propTypes = {\n  channelUrl: PropTypes.string,\n  stores: PropTypes.shape({\n    sdkStore: PropTypes.shape({\n      initialized: PropTypes.bool,\n      sdk: PropTypes.shape({\n        getErrorFirstCallback: PropTypes.func,\n        removeChannelHandler: PropTypes.func,\n        GroupChannel: PropTypes.any,\n        ChannelHandler: PropTypes.any,\n        addChannelHandler: PropTypes.func,\n        UserMessageParams: PropTypes.any,\n        FileMessageParams: PropTypes.any,\n        getAllEmoji: PropTypes.func,\n        appInfo: PropTypes.shape({})\n      }),\n      error: PropTypes.bool\n    }),\n    userStore: PropTypes.shape({\n      user: PropTypes.shape({})\n    })\n  }).isRequired,\n  dispatchers: PropTypes.shape({\n    reconnect: PropTypes.func\n  }).isRequired,\n  config: PropTypes.shape({\n    disableUserProfile: PropTypes.bool,\n    renderUserProfile: PropTypes.func,\n    userId: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired,\n    theme: PropTypes.string,\n    logger: PropTypes.shape({\n      info: PropTypes.func,\n      error: PropTypes.func,\n      warning: PropTypes.func\n    }),\n    pubSub: PropTypes.shape({\n      subscribe: PropTypes.func,\n      publish: PropTypes.func\n    }),\n    imageCompression: PropTypes.shape({\n      compressionRate: PropTypes.number,\n      resizingWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      resizingHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n    })\n  }).isRequired,\n  queries: PropTypes.shape({\n    messageListParams: PropTypes.shape({\n      includeMetaArray: PropTypes.bool,\n      includeParentMessageText: PropTypes.bool,\n      includeReaction: PropTypes.bool,\n      includeReplies: PropTypes.bool,\n      includeThreadInfo: PropTypes.bool,\n      limit: PropTypes.number,\n      reverse: PropTypes.bool,\n      senderUserIdsFilter: PropTypes.arrayOf(PropTypes.string)\n    })\n  }),\n  startingPoint: PropTypes.number,\n  highlightedMessage: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onBeforeSendUserMessage: PropTypes.func,\n  // onBeforeSendUserMessage(text)\n  onBeforeSendFileMessage: PropTypes.func,\n  // onBeforeSendFileMessage(File)\n  onBeforeUpdateUserMessage: PropTypes.func,\n  renderChatItem: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\n  renderCustomMessage: PropTypes.func,\n  renderMessageInput: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\n  renderChatHeader: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\n  showSearchIcon: PropTypes.bool,\n  onSearchClick: PropTypes.func,\n  onChatHeaderActionClick: PropTypes.func,\n  useReaction: PropTypes.bool,\n  replyType: PropTypes.oneOf(['NONE', 'QUOTE_REPLY', 'THREAD']),\n  disableUserProfile: PropTypes.bool,\n  renderUserProfile: PropTypes.func,\n  useMessageGrouping: PropTypes.bool\n};\nConversationPanel.defaultProps = {\n  channelUrl: null,\n  queries: {},\n  onBeforeSendUserMessage: null,\n  onBeforeSendFileMessage: null,\n  onBeforeUpdateUserMessage: null,\n  startingPoint: null,\n  highlightedMessage: null,\n  renderChatItem: null,\n  renderCustomMessage: null,\n  renderMessageInput: null,\n  renderChatHeader: null,\n  useReaction: true,\n  replyType: 'NONE',\n  showSearchIcon: false,\n  onSearchClick: noop,\n  disableUserProfile: false,\n  renderUserProfile: null,\n  useMessageGrouping: true,\n  onChatHeaderActionClick: noop\n};\nvar getEmojiCategoriesFromEmojiContainer = getEmojiCategoriesFromEmojiContainer$1,\n  getAllEmojisFromEmojiContainer = getAllEmojisFromEmojiContainer$1,\n  getEmojisFromEmojiContainer = getEmojisFromEmojiContainer$1;\nvar Conversation = withSendbirdContext(ConversationPanel);\nexport { ConversationPanel, Conversation as default, getAllEmojisFromEmojiContainer, getEmojiCategoriesFromEmojiContainer, getEmojisFromEmojiContainer };","map":{"version":3,"names":["RESET_MESSAGES","RESET_STATE","CLEAR_SENT_MESSAGES","GET_PREV_MESSAGES_START","GET_PREV_MESSAGES_SUCESS","GET_NEXT_MESSAGES_SUCESS","GET_NEXT_MESSAGES_FAILURE","SEND_MESSAGEGE_START","SEND_MESSAGEGE_SUCESS","SEND_MESSAGEGE_FAILURE","RESEND_MESSAGEGE_START","ON_MESSAGE_RECEIVED","UPDATE_UNREAD_COUNT","ON_MESSAGE_UPDATED","ON_MESSAGE_THREAD_INFO_UPDATED","ON_MESSAGE_DELETED","ON_MESSAGE_DELETED_BY_REQ_ID","SET_CURRENT_CHANNEL","SET_CHANNEL_INVALID","MARK_AS_READ","ON_REACTION_UPDATED","SET_EMOJI_CONTAINER","MESSAGE_LIST_PARAMS_CHANGED","getOutgoingMessageStates","UNDEFINED","getSendingMessageStatus","SUCCEEDED$1","_getSendingMessageSta$1","SUCCEEDED","FAILED","PENDING$1","PENDING","scrollIntoLast","intialTry","arguments","length","undefined","MAX_TRIES","currentTry","scrollDOM","document","querySelector","scrollTop","scrollHeight","error","setTimeout","pubSubHandleRemover","subscriber","forEach","s","remove","_unused","pubSubHandler","channelUrl","pubSub","dispatcher","Map","subscribe","set","SEND_USER_MESSAGE","msg","channel","message","url","type","payload","SEND_MESSAGE_START","SEND_FILE_MESSAGE","UPDATE_USER_MESSAGE","fromSelector","DELETE_MESSAGE","messageId","isOperator","groupChannel","myRole","isDisabledBecauseFrozen","isFrozen","isDisabledBecauseMuted","myMutedState","getEmojiCategoriesFromEmojiContainer$1","getEmojiCategoriesFromEmojiContainer","emojiContainer","emojiCategories","getAllEmojisFromEmojiContainer$1","getAllEmojisFromEmojiContainer","_emojiContainer$emoji","allEmojis","categoryIndex","emojis","emojiIndex","push","getEmojisFromEmojiContainer$1","getEmojisFromEmojiContainer","emojiCategoryId","filter","emojiCategory","id","getAllEmojisMapFromEmojiContainer","_emojiContainer$emoji2","allEmojisMap","_emojis$emojiIndex","key","getNicknamesMapFromMembers","members","nicknamesMap","memberIndex","_members$memberIndex","userId","nickname","getMessageCreatedAt","format","createdAt","isSameGroup","comparingMessage","_message$sender","_comparingMessage$sen","_message$sender2","_comparingMessage$sen2","messageType","sender","sendingStatus","compareMessagesForGrouping","prevMessage","currMessage","nextMessage","isAcceptable","hasOwnProperty","property","passUnsuccessfullMessages","allMessages","newMessage","_newMessage$sendingSt","lastIndexOfSucceededMessage","map","isAdminMessage","lastIndexOf","messages","_toConsumableArray","splice","concat","pxToNumber","px","parsed","Number","parseFloat","isNaN","messagesInitialState","initialized","loading","currentGroupChannel","hasMore","lastMessageTimeStamp","hasMoreToBottom","latestFetchedMessageTimeStamp","unreadCount","unreadSince","isInvalid","messageListParams","_getSendingMessageSta","reducer","state","action","_objectSpread2","m","receivedMessages","_action$payload$curre","stateChannel","stateChannelUrl","actionChannelUrl","duplicatedMessageIds","updatedAllMessages","duplicatedMessage","find","_ref","compareIds","updatedAt","filteredNewMessages","hasHasMoreToBottom","hasLatestFetchedMessageTimeStamp","_receivedMessages","_action$payload$curre2","_currentGroupChannel","_stateChannel","_stateChannelUrl","_actionChannelUrl","_duplicatedMessageIds","_updatedAllMessages","_ref2","_filteredNewMessages","newMessages","reqId","sort","a","b","failed","_state$currentGroupCh","_currentGroupChannel2","currentGroupChannelUrl","_action$payload","_channel","scrollToEnd","_unreadCount","_state$currentGroupCh2","_currentGroupChannel3","_currentGroupChannelUrl","some","filterMessageListParams","Date","_action$payload2","_channel2","_message","_currentGroupChannelUrl2","_action$payload3","_channel3","event","threadInfo","targetMessageId","_currentGroupChannelUrl3","applyReactionEvent","useHandleChannelEvents","sdkInit","messagesDispatcher","sdk","logger","scrollRef","setQuoteMessage","useEffect","messageReceiverId","uuidv4","ChannelHandler","info","onMessageReceived","current","offsetHeight","markAsRead","warning","onReadReceiptUpdated","onDeliveryReceiptUpdated","onMessageUpdated","onThreadInfoUpdated","onMessageDeleted","_","onReactionUpdated","reactionEvent","onChannelChanged","onChannelFrozen","onChannelUnfrozen","onUserMuted","onUserUnmuted","onUserBanned","onOperatorUpdated","addChannelHandler","removeChannelHandler","useSetChannel","GroupChannel","getChannel","then","catch","e","getAllEmoji","emojiContainer_","err","PREV_RESULT_SIZE","NEXT_RESULT_SIZE","getLatestMessageTimeStamp","latestMessage","useInitialMessagesFetch","userFilledMessageListQuery","intialTimeStamp","replyType","MessageListParams","getMessagesByTimestamp","prevResultSize","isInclusive","includeReplies","includeReaction","includeThreadInfo","includeParentMessageInfo","Object","keys","nextResultSize","nextMessageListParams","getTime","nextMessages","finally","_unused2","useHandleReconnect","_a","_b","isOnline","wasOffline","useReaction","appInfo","isUsingReaction","messageListParams_1","lastMessageTime","call","useScrollCallback","useCallback","cb","_sdk$appInfo","hasMoreMessages","lastMessageTs","RESULT_SIZE","useScrollDownCallback","messagesLength","useDeleteMessageCallback","requestState","deleteMessage","useUpdateMessageCallback","onBeforeUpdateUserMessage","text","createParamsDefault","txt","params","UserMessageParams","createCustomPrams","updateUserMessage","r","swapParams","getErrorFirstCallback","publish","useResendMessageCallback","failedMessage","file","isResendable","resendUserMessage","resendFileMessage","console","useSendMessageCallback","onBeforeSendUserMessage","messageInputRef","useRef","sendMessage","quoteMessage","value","trim","isReplyToChannel","parentMessageId","pendingMsg","sendUserMessage","res","useSendFileMessageCallback","onBeforeSendFileMessage","_ref$imageCompression","imageCompression","compressionRate","resizingWidth","resizingHeight","createCustomParams","compressibleFileType","compressibleRatio","compressibleDiamensions","canCompressImage","file_","FileMessageParams","image","createElement","src","URL","createObjectURL","onload","revokeObjectURL","canvas","imageWdith","naturalWidth","width","imageHeight","naturalHeight","height","targetWidth","targetHeight","context","getContext","drawImage","toBlob","newImageBlob","compressedFile","File","name","pendingMessage","sendFileMessage","response","_ref3","_ref4","_slicedToArray","localUrl","_ref5","_ref6","ReactionButton","React__default","forwardRef","props","ref","className","selected","_onClick","onClick","children","Array","isArray","join","role","style","slice","onKeyDown","tabIndex","propTypes","PropTypes","oneOfType","string","arrayOf","number","bool","func","element","isRequired","defaultProps","useMemoizedEmojiListItems","toggleReaction","emojiAllList","useMemo","parentRef","parentContainRef","closeDropdown","_ref3$spaceFromTrigge","spaceFromTrigger","EmojiListItems","emoji","reactedReaction","reactions","reaction","isReacted","userIds","indexOf","ImageRenderer","defaultComponent","Icon","IconTypes","QUESTION","useToggleReactionCallback","deleteReaction","addReaction","useScrollToMessage","setIntialTimeStamp","setAnimatedMessageId","isPresent","MessageStatusTypes","MessageStatus","_iconType","_iconColor","_channel$getUnreadMem","_channel$getUndeliver","_useContext","useContext","LocalizationContext","dateLocale","showMessageStatusIcon","isGroupChannel","isSuper","isPublic","isBroadcast","iconType","_defineProperty","SENT","DONE","DELIVERED","DONE_ALL","READ","ERROR","iconColor","IconColors","messageStatus","getOutgoingMessageState","getUnreadMemberCount","getUndeliveredMemberCount","Loader","SPINNER","fillColor","PRIMARY","isSentStatus","Label","LabelTypography","CAPTION_3","color","LabelColors","ONBACKGROUND_2","locale","shape","friendName","profileUrl","MessageItemMenu","_c","isByMe","_d","disabled","showEdit","showRemove","resendMessage","setSupposedHover","stringSet","triggerRef","containerRef","showMenuItemCopy","isUserMessage","showMenuItemReply","isFailedMessage","isPendingMessage","showMenuItemEdit","isSentMessage","showMenuItemResend","showMenuItemDelete","getClassName","ContextMenu","menuTrigger","toggleDropdown","IconButton","onBlur","MORE","CONTENT_INVERSE","menuItems","close","MenuItems","openLeft","MenuItem","copyToClipboard","MESSAGE_MENU__COPY","disable","MESSAGE_MENU__REPLY","MESSAGE_MENU__EDIT","MESSAGE_MENU__RESEND","replyCount","MESSAGE_MENU__DELETE","MessageItemReactionMenu","EMOJI_MORE","getEmojiListAll","reactorId","placeHolder","ON_BACKGROUND_3","Tooltip","CAPTION_2","ONCONTENT_1","SPACE_FROM_TRIGGER","TooltipWrapper","hoverTooltip","_useState","useState","_useState2","showHoverTooltip","setShowHoverTooltip","childrenRef","onMouseOver","onFocus","onMouseOut","bottom","left","offsetWidth","ReactionBadge","count","isAdd","getClassNameTail","ONBACKGROUND_1","EmojiReactions2","memberNicknamesMap","_e","emojisMap","getEmojiMapAll","addReactionRef","reactedByMe","isReactedBy","getEmojiTooltipString","circle","get","size","spacefromTrigger","AdminMessage","TextMessageItemBody","mouseHover","BODY_1","isEditedMessage","ONCONTENT_2","MESSAGE_EDITED","FileMessageItemBody","IMAGE","PHOTO","VIDEO","PLAY","AUDIO","FILE_AUDIO","GIF","OTHERS","FILE_DOCUMENT","getUIKitFileType","TextButton","window","open","truncateString","ThumbnailMessageItemBody","showFileViewer","_f","thumbnails","thumbnailUrl","_g","imageRendered","setImageRendered","alt","onLoad","isVideoMessage","ON_BACKGROUND_2","isGifMessage","GRAY","OGMessageItemBody","_k","_l","openOGUrl","ogMetaData","split","word","urlRegex","RegExp","targetUrl","exec","stringUrl","front","back","targetUrlIndex","LinkLabel","isUrl","defaultImage","THUMBNAIL_NONE","title","SUBTITLE_2","_h","description","BODY_2","_j","UnknownMessageItemBody","UNKNOWN__UNKNOWN_MESSAGE_TYPE","UNKNOWN__CANNOT_READ_MESSAGE","QuoteMessage","_p","_q","parentMessage","parentMessageSender","parentMessageSenderNickname","QUOTED_MESSAGE__CURRENT_USER","parentMessageUrl","parentMessageType","currentMessageSenderNickname","_r","isThumbnailLoaded","setThumbnailLoaded","uikitFileTypes","getUIKitFileTypes","splitFileName","REPLY","ONBACKGROUND_3","QUOTED_MESSAGE__REPLIED_TO","isThumbnailMessage","isVideo","_o","_m","Fragment","isGif","isFileMessage","isSupportedFileView","MessageContent","chainTop","chainBottom","scrollToMessage","messageTypes","getUIKitMessageTypes","UserProfileContext","disableUserProfile","renderUserProfile","avatarRef","setMouseHover","supposedHover","isByMeClassName","chainTopClassName","useReactionClassName","supposedHoverClassName","useReplying","useReplyingClassName","onMouseLeave","Avatar","paddingTop","paddingBottom","user","ConnectedUserProfile","onSuccess","getSenderName","isTextMessage","isOGMessage","getUIKitMessageType","FILE","UNKNOWN","RemoveMessage","_message$threadInfo","onCloseModal","onDeleteMessage","Modal","ButtonTypes","DANGER","onCancel","onSubmit","submitText","titleText","MODAL__DELETE_MESSAGE__TITLE","MessageHoc","_message$reactions","editDisabled","hasSeparator","updateMessage","membersMap","animatedMessageId","highLightedMessageId","renderCustomMessage","handleScroll","setShowEdit","_useState3","_useState4","setShowRemove","_useState5","_useState6","setShowFileViewer","_useState7","_useState8","isAnimated","setIsAnimated","_useState9","_useState10","isHighlighted","setIsHighlighted","editMessageInputRef","useMessageScrollRef","useLayoutEffect","scrollIntoView","block","inline","RenderedMessage","DateSeparator","MessageInput","isEdit","onSendMessage","onCancelEdit","marginBottom","FileViewer","onClose","onDelete","isDateseparator","oneOf","instanceOf","SCROLL_REF_CLASS_NAME","ConversationScroll","_Component","_this","_classCallCheck","_super","_assertThisInitialized","_assertThisInitialize2","_assertThisInitialize","_this$state$scrollBot","scrollBottom","_this$props","onScroll","onScrollDown","target","clientHeight","nodes","querySelectorAll","first","_nodes","last","setState","render","_this2","_this$props2","emojiAllMap","renderChatItem","useMessageGrouping","memoizedEmojiListItems","showScrollBot","onClickScrollBot","PlaceHolder","PlaceHolderTypes","NO_MESSAGES","idx","previousMessage","previousMessageCreatedAt","currentCreatedAt","isSameDay","onUpdateMessage","onResendMessage","onScrollToMessage","onReplyMessage","menuDisabled","CHEVRON_DOWN","Component","Notification","time","timeArray","CHANNEL__MESSAGE_LIST__NOTIFICATION__ON","CHANNEL__MESSAGE_LIST__NOTIFICATION__NEW_MESSAGE","CONTENT","FrozenNotification","CHANNEL_FROZEN","TypingIndicatorText","TYPING_INDICATOR__IS_TYPING","TYPING_INDICATOR__AND","TYPING_INDICATOR__ARE_TYPING","TYPING_INDICATOR__MULTIPLE_TYPING","TypingIndicator","sb","handlerId","setHandlerId","typingMembers","setTypingMembers","newHandlerId","handler","onTypingStatusUpdated","getTypingMembers","componentClassname","QuoteMessageThumbnail","isImageMessage","fixedSize","isAudioMessage","QuoteMessageInput","replyingMessage","fileMessage","CAPTION_1","QUOTE_MESSAGE_INPUT__REPLY_TO","NO_NAME","QUOTE_MESSAGE_INPUT__FILE_TYPE_IMAGE","QUOTE_MESSAGE_INPUT__FILE_TYPE__VIDEO","QUOTE_MESSAGE_INPUT__FILE_TYPE_GIF","CLOSE","MessageInputWrapper","_onSendMessage","_onFileUpload","onFileUpload","renderMessageInput","isOperator$1","placeholder","MESSAGE_INPUT__QUOTE_REPLY__PLACE_HOLDER","MESSAGE_INPUT__PLACE_HOLDER__DISABLED","MESSAGE_INPUT__PLACE_HOLDER__MUTED","onStartTyping","startTyping","MessageInputWrapper$1","ConnectionStatus","TRYING_TO_CONNECT","DISCONNECTED","getChannelTitle","currentUserId","LabelStringSet","NO_TITLE","NO_MEMBERS","noop$1","noop","ChatHeader","currentUser","subTitle","isMuted","theme","showSearchIcon","onSearchClick","onActionClick","ChannelAvatar","H_2","NOTIFICATIONS_OFF_FILLED","SEARCH","INFO","coverUrl","ConversationPanel","_props$stores","stores","sdkStore","userStore","_props$config","config","reconnect","dispatchers","_props$queries","queries","startingPoint","highlightedMessage","renderChatHeader","onChatHeaderActionClick","sdkError","messageListQuery","warn","setHighLightedMessageId","_useReducer","useReducer","_useReducer2","messagesStore","_messagesStore$curren","readStatus","usingReaction","userDefinedDisableUserProfile","userDefinedRenderProfile","onScrollCallback","onScrollDownCallback","subScriber","_useSendMessageCallba","_useSendMessageCallba2","_useSendFileMessageCa","_useSendFileMessageCa2","onSendFileMessage","NO_CHANNELS","WRONG","retryToConnect","UserProfileProvider","LOADING","any","includeMetaArray","includeParentMessageText","limit","reverse","senderUserIdsFilter","Conversation","withSendbirdContext"],"sources":["C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\dux\\actionTypes.js","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\utils.js","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\dux\\initialState.js","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\dux\\reducers.js","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\hooks\\useHandleChannelEvents.js","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\hooks\\useGetChannel.js","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\hooks\\useInitialMessagesFetch.js","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\hooks\\useHandleReconnect.ts","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\hooks\\useScrollCallback.js","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\hooks\\useScrollDownCallback.js","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\hooks\\useDeleteMessageCallback.js","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\hooks\\useUpdateMessageCallback.js","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\hooks\\useResendMessageCallback.js","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\hooks\\useSendMessageCallback.js","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\hooks\\useSendFileMessageCallback.js","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\ui\\ReactionButton\\index.jsx","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\hooks\\useMemoizedEmojiListItems.jsx","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\hooks\\useToggleReactionCallback.js","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\hooks\\useScrollToMessage.ts","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\ui\\MessageStatus\\index.jsx","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\ui\\MessageItemMenu\\index.tsx","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\ui\\MessageItemReactionMenu\\index.tsx","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\ui\\Tooltip\\index.jsx","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\ui\\TooltipWrapper\\index.jsx","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\ui\\ReactionBadge\\index.jsx","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\ui\\EmojiReactions\\index.tsx","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\ui\\AdminMessage\\index.jsx","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\ui\\TextMessageItemBody\\index.tsx","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\ui\\FileMessageItemBody\\index.tsx","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\ui\\ThumbnailMessageItemBody\\index.tsx","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\ui\\OGMessageItemBody\\index.tsx","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\ui\\UnknownMessageItemBody\\index.tsx","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\ui\\QuoteMessage\\index.tsx","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\ui\\MessageContent\\index.tsx","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\components\\RemoveMessage.jsx","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\components\\MessageHOC.jsx","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\components\\ConversationScroll.jsx","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\components\\Notification.jsx","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\components\\FrozenNotification.tsx","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\components\\TypingIndicator.jsx","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\ui\\QuoteMessageInput\\QuoteMessageThumbnail.tsx","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\ui\\QuoteMessageInput\\index.tsx","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\components\\MessageInputWrapper.tsx","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\ui\\ConnectionStatus\\index.jsx","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\ui\\ChatHeader\\utils.js","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\ui\\ChatHeader\\index.jsx","C:\\Users\\이경민\\chat-app\\chat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\index.jsx"],"sourcesContent":["export const RESET_MESSAGES = 'RESET_MESSAGES';\nexport const RESET_STATE = 'RESET_STATE';\nexport const CLEAR_SENT_MESSAGES = 'CLEAR_SENT_MESSAGES';\nexport const GET_PREV_MESSAGES_START = 'GET_PREV_MESSAGES_START';\nexport const GET_PREV_MESSAGES_SUCESS = 'GET_PREV_MESSAGES_SUCESS';\nexport const GET_PREV_MESSAGES_FAILURE = 'GET_PREV_MESSAGES_FAILURE';\nexport const GET_NEXT_MESSAGES_SUCESS = 'GET_NEXT_MESSAGES_SUCESS';\nexport const GET_NEXT_MESSAGES_FAILURE = 'GET_NEXT_MESSAGES_FAILURE';\n\nexport const SEND_MESSAGEGE_START = 'SEND_MESSAGEGE_START';\nexport const SEND_MESSAGEGE_SUCESS = 'SEND_MESSAGEGE_SUCESS';\nexport const SEND_MESSAGEGE_FAILURE = 'SEND_MESSAGEGE_FAILURE';\n\nexport const RESEND_MESSAGEGE_START = 'RESEND_MESSAGEGE_START';\n\nexport const ON_MESSAGE_RECEIVED = 'ON_MESSAGE_RECEIVED';\nexport const UPDATE_UNREAD_COUNT = 'UPDATE_UNREAD_COUNT';\nexport const ON_MESSAGE_UPDATED = 'ON_MESSAGE_UPDATED';\nexport const ON_MESSAGE_THREAD_INFO_UPDATED = 'ON_MESSAGE_THREAD_INFO_UPDATED';\nexport const ON_MESSAGE_DELETED = 'ON_MESSAGE_DELETED';\nexport const ON_MESSAGE_DELETED_BY_REQ_ID = 'ON_MESSAGE_DELETED_BY_REQ_ID';\n\nexport const SET_CURRENT_CHANNEL = 'SET_CURRENT_CHANNEL';\nexport const SET_CHANNEL_INVALID = 'SET_CHANNEL_INVALID';\nexport const MARK_AS_READ = 'MARK_AS_READ';\n\nexport const ON_REACTION_UPDATED = 'ON_REACTION_UPDATED';\nexport const SET_EMOJI_CONTAINER = 'SET_EMOJI_CONTAINER';\n\nexport const MESSAGE_LIST_PARAMS_CHANGED = 'MESSAGE_LIST_PARAMS_CHANGED';\n","import format from 'date-fns/format';\nimport * as channelActions from './dux/actionTypes';\nimport * as topics from '../../lib/pubSub/topics';\n\nimport {\n  getSendingMessageStatus,\n  getOutgoingMessageStates,\n} from '../../utils';\n\nconst MessageStatusType = getOutgoingMessageStates();\nconst UNDEFINED = 'undefined';\nconst { SUCCEEDED, FAILED, PENDING } = getSendingMessageStatus();\n\nexport const scrollIntoLast = (intialTry = 0) => {\n  const MAX_TRIES = 10;\n  const currentTry = intialTry;\n  if (currentTry > MAX_TRIES) {\n    return;\n  }\n  try {\n    const scrollDOM = document.querySelector('.sendbird-conversation__messages-padding');\n    // eslint-disable-next-line no-multi-assign\n    scrollDOM.scrollTop = scrollDOM.scrollHeight;\n  } catch (error) {\n    setTimeout(() => {\n      scrollIntoLast(currentTry + 1);\n    }, 500 * currentTry);\n  }\n};\n\nexport const pubSubHandleRemover = (subscriber) => {\n  subscriber.forEach((s) => {\n    try {\n      s.remove();\n    } catch {\n      //\n    }\n  });\n};\n\nexport const pubSubHandler = (channelUrl, pubSub, dispatcher) => {\n  const subscriber = new Map();\n  if (!pubSub || !pubSub.subscribe) return subscriber;\n  subscriber.set(topics.SEND_USER_MESSAGE, pubSub.subscribe(topics.SEND_USER_MESSAGE, (msg) => {\n    const { channel, message } = msg;\n    scrollIntoLast();\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.SEND_MESSAGEGE_SUCESS,\n        payload: message,\n      });\n    }\n  }));\n  subscriber.set(topics.SEND_MESSAGE_START, pubSub.subscribe(topics.SEND_MESSAGE_START, (msg) => {\n    const { channel, message } = msg;\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.SEND_MESSAGEGE_START,\n        payload: message,\n      });\n    }\n  }));\n  subscriber.set(topics.SEND_FILE_MESSAGE, pubSub.subscribe(topics.SEND_FILE_MESSAGE, (msg) => {\n    const { channel, message } = msg;\n    scrollIntoLast();\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.SEND_MESSAGEGE_SUCESS,\n        payload: message,\n      });\n    }\n  }));\n  subscriber.set(topics.UPDATE_USER_MESSAGE, pubSub.subscribe(topics.UPDATE_USER_MESSAGE, (msg) => {\n    const { channel, message, fromSelector } = msg;\n    if (fromSelector && channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.ON_MESSAGE_UPDATED,\n        payload: { channel, message },\n      });\n    }\n  }));\n  subscriber.set(topics.DELETE_MESSAGE, pubSub.subscribe(topics.DELETE_MESSAGE, (msg) => {\n    const { channel, messageId } = msg;\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.ON_MESSAGE_DELETED,\n        payload: messageId,\n      });\n    }\n  }));\n\n  return subscriber;\n};\n\nexport const getParsedStatus = (message, currentGroupChannel) => {\n  if (message.requestState === FAILED) {\n    return MessageStatusType.FAILED;\n  }\n\n  if (message.requestState === PENDING) {\n    return MessageStatusType.PENDING;\n  }\n\n  if (message.requestState === SUCCEEDED) {\n    if (!currentGroupChannel) {\n      return MessageStatusType.SENT;\n    }\n\n    const unreadCount = currentGroupChannel.getReadReceipt(message);\n    if (unreadCount === 0) {\n      return MessageStatusType.READ;\n    }\n\n    const isDelivered = currentGroupChannel.getDeliveryReceipt(message) === 0;\n    if (isDelivered) {\n      return MessageStatusType.DELIVERED;\n    }\n\n    return MessageStatusType.SENT;\n  }\n\n  return null;\n};\n\nexport const isOperator = (groupChannel = {}) => {\n  const { myRole } = groupChannel;\n  return myRole === 'operator';\n};\n\nexport const isDisabledBecauseFrozen = (groupChannel = {}) => {\n  const { isFrozen } = groupChannel;\n  return isFrozen && !isOperator(groupChannel);\n};\n\nexport const isDisabledBecauseMuted = (groupChannel = {}) => {\n  const { myMutedState } = groupChannel;\n  return myMutedState === 'muted';\n};\n\nexport const getEmojiCategoriesFromEmojiContainer = (emojiContainer = {}) => (\n  emojiContainer.emojiCategories ? emojiContainer.emojiCategories : []\n);\n\nexport const getAllEmojisFromEmojiContainer = (emojiContainer = {}) => {\n  const { emojiCategories = [] } = emojiContainer;\n  const allEmojis = [];\n\n  for (let categoryIndex = 0; categoryIndex < emojiCategories.length; categoryIndex += 1) {\n    const { emojis } = emojiCategories[categoryIndex];\n    for (let emojiIndex = 0; emojiIndex < emojis.length; emojiIndex += 1) {\n      allEmojis.push(emojis[emojiIndex]);\n    }\n  }\n  return allEmojis;\n};\n\nexport const getEmojisFromEmojiContainer = (emojiContainer = {}, emojiCategoryId = '') => (\n  emojiContainer.emojiCategories\n    ? emojiContainer.emojiCategories\n      .filter((emojiCategory) => emojiCategory.id === emojiCategoryId)[0].emojis\n    : []\n);\n\nexport const getAllEmojisMapFromEmojiContainer = (emojiContainer = {}) => {\n  const { emojiCategories = [] } = emojiContainer;\n  const allEmojisMap = new Map();\n\n  for (let categoryIndex = 0; categoryIndex < emojiCategories.length; categoryIndex += 1) {\n    const { emojis } = emojiCategories[categoryIndex];\n    for (let emojiIndex = 0; emojiIndex < emojis.length; emojiIndex += 1) {\n      const { key, url } = emojis[emojiIndex];\n      allEmojisMap.set(key, url);\n    }\n  }\n  return allEmojisMap;\n};\n\nexport const getNicknamesMapFromMembers = (members = []) => {\n  const nicknamesMap = new Map();\n  for (let memberIndex = 0; memberIndex < members.length; memberIndex += 1) {\n    const { userId, nickname } = members[memberIndex];\n    nicknamesMap.set(userId, nickname);\n  }\n  return nicknamesMap;\n};\n\nexport const getMessageCreatedAt = (message) => format(message.createdAt, 'p');\n\nexport const isSameGroup = (message, comparingMessage) => {\n  if (!(message\n    && comparingMessage\n    && message?.messageType !== 'admin'\n    && comparingMessage?.messageType !== 'admin'\n    && message?.sender\n    && comparingMessage?.sender\n    && message?.createdAt\n    && comparingMessage?.createdAt\n    && message?.sender?.userId\n    && comparingMessage?.sender?.userId\n  )) {\n    return false;\n  }\n\n  return (\n    message?.sendingStatus === comparingMessage?.sendingStatus\n    && message?.sender?.userId === comparingMessage?.sender?.userId\n    && getMessageCreatedAt(message) === getMessageCreatedAt(comparingMessage)\n  );\n};\n\nexport const compareMessagesForGrouping = (\n  prevMessage,\n  currMessage,\n  nextMessage,\n) => {\n  const sendingStatus = currMessage?.sendingStatus || '';\n  const isAcceptable = sendingStatus !== 'pending' && sendingStatus !== 'failed';\n  return [\n    isSameGroup(prevMessage, currMessage) && isAcceptable,\n    isSameGroup(currMessage, nextMessage) && isAcceptable,\n  ];\n};\n\nexport const hasOwnProperty = (property) => (payload) => {\n  // eslint-disable-next-line no-prototype-builtins\n  if (payload && payload.hasOwnProperty && payload.hasOwnProperty(property)) {\n    return true;\n  }\n  return false;\n};\n\nexport const passUnsuccessfullMessages = (allMessages, newMessage) => {\n  const { sendingStatus = UNDEFINED } = newMessage;\n  if (sendingStatus === SUCCEEDED || sendingStatus === PENDING) {\n    const lastIndexOfSucceededMessage = allMessages\n      .map((message) => (\n        message.sendingStatus\n        || ((message.isAdminMessage && message.isAdminMessage()) ? SUCCEEDED : UNDEFINED)\n      ))\n      .lastIndexOf(SUCCEEDED);\n    if (lastIndexOfSucceededMessage + 1 < allMessages.length) {\n      const messages = [...allMessages];\n      messages.splice(lastIndexOfSucceededMessage + 1, 0, newMessage);\n      return messages;\n    }\n  }\n  return [\n    ...allMessages,\n    newMessage,\n  ];\n};\n\nexport const pxToNumber = (px) => {\n  if (typeof px === 'number') {\n    return px;\n  }\n  if (typeof px === 'string') {\n    const parsed = Number.parseFloat(px);\n    if (!Number.isNaN(parsed)) {\n      return parsed;\n    }\n  }\n  return null;\n};\n\nexport default getParsedStatus;\n","export default {\n  initialized: false,\n  loading: false,\n  allMessages: [],\n  currentGroupChannel: { members: [] },\n  // for scrollup\n  hasMore: false,\n  lastMessageTimeStamp: 0,\n  // for scroll down\n  // onScrollDownCallback is added for navigation to different timestamps on messageSearch\n  // hasMoreToBottom, onScrollDownCallback -> scroll down\n  // hasMore, onScrollCallback -> scroll up(default behavior)\n  hasMoreToBottom: false,\n  latestFetchedMessageTimeStamp: 0,\n  emojiContainer: {},\n  unreadCount: 0,\n  unreadSince: null,\n  isInvalid: false,\n  messageListParams: null,\n};\n","import format from 'date-fns/format';\n\nimport * as actionTypes from './actionTypes';\nimport initialState from './initialState';\n\nimport compareIds from '../../../utils/compareIds';\nimport { passUnsuccessfullMessages, hasOwnProperty } from '../utils';\nimport { filterMessageListParams, getSendingMessageStatus } from '../../../utils';\n\nconst {\n  SUCCEEDED,\n  FAILED,\n  PENDING,\n} = getSendingMessageStatus();\n\nexport default function reducer(state, action) {\n  switch (action.type) {\n    case actionTypes.RESET_STATE:\n      return initialState;\n    case actionTypes.RESET_MESSAGES:\n      return {\n        ...state,\n        // when user switches channel, if the previous channel `hasMore`\n        // the onScroll gets called twice, setting hasMore false prevents this\n        hasMore: false,\n        allMessages: [],\n      };\n    case actionTypes.GET_PREV_MESSAGES_START:\n      return {\n        ...state,\n        loading: true,\n      };\n    case actionTypes.CLEAR_SENT_MESSAGES:\n      return {\n        ...state,\n        allMessages: [\n          ...state.allMessages.filter((m) => (\n            m.sendingStatus !== SUCCEEDED\n          )),\n        ],\n      };\n    case actionTypes.GET_PREV_MESSAGES_SUCESS: {\n      const receivedMessages = action.payload.messages || [];\n      const { currentGroupChannel = {} } = action.payload;\n\n      const stateChannel = state.currentGroupChannel || {};\n      const stateChannelUrl = stateChannel.url;\n      const actionChannelUrl = currentGroupChannel.url;\n      if (actionChannelUrl !== stateChannelUrl) {\n        return state;\n      }\n\n      // remove duplicate messages\n      const duplicatedMessageIds = [];\n      const updatedAllMessages = state.allMessages.map((msg) => {\n        const duplicatedMessage = receivedMessages.find(({ messageId }) => (\n          compareIds(messageId, msg.messageId)\n        ));\n        if (!duplicatedMessage) {\n          return msg;\n        }\n        duplicatedMessageIds.push(duplicatedMessage.messageId);\n        return (duplicatedMessage.updatedAt > msg.updatedAt) ? duplicatedMessage : msg;\n      });\n      const filteredNewMessages = (duplicatedMessageIds.length > 0)\n        ? receivedMessages.filter((msg) => (\n          !duplicatedMessageIds.find((messageId) => compareIds(messageId, msg.messageId))\n        ))\n        : receivedMessages;\n\n      const hasHasMoreToBottom = hasOwnProperty('hasMoreToBottom')(action.payload);\n      const hasLatestFetchedMessageTimeStamp = hasOwnProperty('latestFetchedMessageTimeStamp')(action.payload);\n      return {\n        ...state,\n        loading: false,\n        initialized: true,\n        hasMore: action.payload.hasMore,\n        lastMessageTimeStamp: action.payload.lastMessageTimeStamp,\n        // if present change else, keep\n        ...(hasHasMoreToBottom && {\n          hasMoreToBottom: action.payload.hasMoreToBottom,\n        }),\n        ...(hasLatestFetchedMessageTimeStamp && {\n          latestFetchedMessageTimeStamp: action.payload.latestFetchedMessageTimeStamp,\n        }),\n        allMessages: [\n          ...filteredNewMessages,\n          ...updatedAllMessages,\n        ],\n      };\n    }\n    case actionTypes.GET_NEXT_MESSAGES_SUCESS: {\n      const receivedMessages = action.payload.messages || [];\n      const { currentGroupChannel = {} } = action.payload;\n\n      const stateChannel = state.currentGroupChannel || {};\n      const stateChannelUrl = stateChannel.url;\n      const actionChannelUrl = currentGroupChannel.url;\n      if (actionChannelUrl !== stateChannelUrl) {\n        return state;\n      }\n\n      // remove duplicate messages\n      const duplicatedMessageIds = [];\n      const updatedAllMessages = state.allMessages.map((msg) => {\n        const duplicatedMessage = receivedMessages.find(({ messageId }) => (\n          compareIds(messageId, msg.messageId)\n        ));\n        if (!duplicatedMessage) {\n          return msg;\n        }\n        duplicatedMessageIds.push(duplicatedMessage.messageId);\n        return (duplicatedMessage.updatedAt > msg.updatedAt) ? duplicatedMessage : msg;\n      });\n      const filteredNewMessages = (duplicatedMessageIds.length > 0)\n        ? receivedMessages.filter((msg) => (\n          !duplicatedMessageIds.find((messageId) => compareIds(messageId, msg.messageId))\n        ))\n        : receivedMessages;\n\n      return {\n        ...state,\n        loading: false,\n        initialized: true,\n        hasMore: action.payload.hasMore,\n        lastMessageTimeStamp: action.payload.lastMessageTimeStamp,\n        hasMoreToBottom: action.payload.hasMoreToBottom,\n        latestFetchedMessageTimeStamp: action.payload.latestFetchedMessageTimeStamp,\n        allMessages: [\n          ...updatedAllMessages,\n          ...filteredNewMessages,\n        ],\n      };\n    }\n    case actionTypes.GET_NEXT_MESSAGES_FAILURE: {\n      return { ...state };\n    }\n    case actionTypes.SEND_MESSAGEGE_START:\n      return {\n        ...state,\n        allMessages: [\n          ...state.allMessages,\n          { ...action.payload },\n        ],\n      };\n    case actionTypes.SEND_MESSAGEGE_SUCESS: {\n      const newMessages = state.allMessages.map((m) => (\n        compareIds(m.reqId, action.payload.reqId) ? action.payload : m\n      ));\n      [...newMessages].sort((a, b) => (\n        (\n          a.sendingStatus\n          && b.sendingStatus\n          && a.sendingStatus === SUCCEEDED\n          && (\n            b.sendingStatus === PENDING\n            || b.sendingStatus === FAILED\n          )\n        ) ? -1 : 1\n      ));\n      return {\n        ...state,\n        allMessages: newMessages,\n      };\n    }\n    case actionTypes.SEND_MESSAGEGE_FAILURE: {\n      // eslint-disable-next-line no-param-reassign\n      action.payload.failed = true;\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => (\n          compareIds(m.reqId, action.payload.reqId)\n            ? action.payload\n            : m\n        )),\n      };\n    }\n    case actionTypes.SET_CURRENT_CHANNEL: {\n      return {\n        ...state,\n        currentGroupChannel: action.payload,\n        isInvalid: false,\n      };\n    }\n    case actionTypes.SET_CHANNEL_INVALID: {\n      return {\n        ...state,\n        isInvalid: true,\n      };\n    }\n    case actionTypes.UPDATE_UNREAD_COUNT: {\n      const { channel } = action.payload;\n      const { currentGroupChannel = {}, unreadCount } = state;\n      const currentGroupChannelUrl = currentGroupChannel.url;\n      if (!compareIds(channel.url, currentGroupChannelUrl)) {\n        return state;\n      }\n      return {\n        ...state,\n        unreadSince: unreadCount + 1,\n      };\n    }\n    case actionTypes.ON_MESSAGE_RECEIVED: {\n      const { channel, message, scrollToEnd } = action.payload;\n      let unreadCount = 0;\n      const { currentGroupChannel = {}, unreadSince } = state;\n      const currentGroupChannelUrl = currentGroupChannel.url;\n\n      if (!compareIds(channel.url, currentGroupChannelUrl)) {\n        return state;\n      }\n      // Excluded overlapping messages\n      if (state.allMessages.some((msg) => msg.messageId === message.messageId)) {\n        return state;\n      }\n      // Filter by userFilledQuery\n      if (state.messageListParams && !filterMessageListParams(state.messageListParams, message)) {\n        return state;\n      }\n\n      unreadCount = state.unreadCount + 1;\n      // reset unreadCount if have to scrollToEnd\n      if (scrollToEnd) {\n        unreadCount = 0;\n      }\n\n      if (message.isAdminMessage && message.isAdminMessage()) {\n        return {\n          ...state,\n          allMessages: passUnsuccessfullMessages(state.allMessages, message),\n        };\n      }\n      return {\n        ...state,\n        unreadCount,\n        unreadSince: (unreadCount === 1)\n          ? format(new Date(), 'p MMM dd')\n          : unreadSince,\n        allMessages: passUnsuccessfullMessages(state.allMessages, message),\n      };\n    }\n    case actionTypes.ON_MESSAGE_UPDATED: {\n      const { channel, message } = action.payload;\n      const currentGroupChannelUrl = (state.currentGroupChannel && state.currentGroupChannel.url) || '';\n      if (!compareIds(channel.url, currentGroupChannelUrl)) {\n        return state; // Ignore event when it is not for the current channel\n      }\n      if (state.messageListParams && !filterMessageListParams(state.messageListParams, message)) {\n        // Delete the message if it doesn't match to the params anymore\n        return {\n          ...state,\n          allMessages: state.allMessages.filter((m) => (\n            !compareIds(m.messageId, message?.messageId)\n          )),\n        };\n      }\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => (\n          compareIds(m.messageId, action.payload.message.messageId)\n            ? action.payload.message\n            : m\n        )),\n      };\n    }\n    case actionTypes.ON_MESSAGE_THREAD_INFO_UPDATED: {\n      const { channel, event } = action.payload;\n      const { channelUrl, threadInfo, targetMessageId } = event;\n      const currentGroupChannelUrl = (state.currentGroupChannel && state.currentGroupChannel.url) || '';\n      if (\n        !compareIds(channel.url, currentGroupChannelUrl)\n        || !compareIds(channel.url, channelUrl)\n      ) {\n        return state; // Ignore event when it is not for the current channel\n      }\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => {\n          if (compareIds(m.messageId, targetMessageId)) {\n            // eslint-disable-next-line no-param-reassign\n            m.threadInfo = threadInfo; // Upsert threadInfo to the target message\n          }\n          return m;\n        }),\n      };\n    }\n    case actionTypes.RESEND_MESSAGEGE_START:\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => (\n          compareIds(m.reqId, action.payload.reqId)\n            ? action.payload\n            : m\n        )),\n      };\n    case actionTypes.MARK_AS_READ:\n      return {\n        ...state,\n        unreadCount: 0,\n        unreadSince: null,\n      };\n    case actionTypes.ON_MESSAGE_DELETED:\n      return {\n        ...state,\n        allMessages: state.allMessages.filter((m) => (\n          !compareIds(m.messageId, action.payload)\n        )),\n      };\n    case actionTypes.ON_MESSAGE_DELETED_BY_REQ_ID:\n      return {\n        ...state,\n        allMessages: state.allMessages.filter((m) => (\n          !compareIds(m.reqId, action.payload)\n        )),\n      };\n    case actionTypes.SET_EMOJI_CONTAINER: {\n      return {\n        ...state,\n        emojiContainer: action.payload,\n      };\n    }\n    case actionTypes.ON_REACTION_UPDATED: {\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => {\n          if (compareIds(m.messageId, action.payload.messageId)) {\n            if (m.applyReactionEvent && typeof m.applyReactionEvent === 'function') {\n              m.applyReactionEvent(action.payload);\n            }\n            return m;\n          }\n          return m;\n        }),\n      };\n    }\n    case actionTypes.MESSAGE_LIST_PARAMS_CHANGED: {\n      return {\n        ...state,\n        messageListParams: action.payload,\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { useEffect } from 'react';\n\nimport * as messageActions from '../dux/actionTypes';\nimport { uuidv4 } from '../../../utils/uuid';\nimport compareIds from '../../../utils/compareIds';\nimport { scrollIntoLast } from '../utils';\n\n/**\n * Handles ChannelEvents and send values to dispatcher using messagesDispatcher\n * messagesDispatcher: Dispatcher\n * sdk: sdkInstance\n * logger: loggerInstance\n * channelUrl: string\n * sdkInit: bool\n */\nfunction useHandleChannelEvents({ currentGroupChannel, sdkInit, hasMoreToBottom }, {\n  messagesDispatcher,\n  sdk,\n  logger,\n  scrollRef,\n  setQuoteMessage,\n}) {\n  const channelUrl = currentGroupChannel && currentGroupChannel?.url;\n  useEffect(() => {\n    const messageReceiverId = uuidv4();\n    if (channelUrl && sdk && sdk.ChannelHandler) {\n      const ChannelHandler = new sdk.ChannelHandler();\n      logger.info('Channel | useHandleChannelEvents: Setup event handler', messageReceiverId);\n\n      ChannelHandler.onMessageReceived = (channel, message) => {\n        // donot update if hasMoreToBottom\n        if (compareIds(channel.url, channelUrl) && !hasMoreToBottom) {\n          let scrollToEnd = false;\n          try {\n            const { current } = scrollRef;\n            scrollToEnd = current.offsetHeight + current.scrollTop >= current.scrollHeight;\n          } catch (error) {\n            //\n          }\n\n          logger.info('Channel | useHandleChannelEvents: onMessageReceived', message);\n          messagesDispatcher({\n            type: messageActions.ON_MESSAGE_RECEIVED,\n            payload: { channel, message, scrollToEnd },\n          });\n\n          if (scrollToEnd) {\n            try {\n              setTimeout(() => {\n                try {\n                  currentGroupChannel.markAsRead();\n                } catch {\n                  //\n                }\n                scrollIntoLast();\n              });\n            } catch (error) {\n              logger.warning('Channel | onMessageReceived | scroll to end failed');\n            }\n          }\n        }\n        if (compareIds(channel.url, channelUrl) && hasMoreToBottom) {\n          messagesDispatcher({\n            type: messageActions.UPDATE_UNREAD_COUNT,\n            payload: { channel },\n          });\n        }\n      };\n\n      /**\n       * We need to update current channel with the channel,\n       * when onReadReceiptUpdated or onDeliveryReceiptUpdated are called,\n       * because cachedReadReceiptStatus and cachedDeliveryReceiptStatus properties were changed\n       */\n      ChannelHandler.onReadReceiptUpdated = (channel) => {\n        if (compareIds(channel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onReadReceiptUpdated', channel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: channel,\n          });\n        }\n      };\n      ChannelHandler.onDeliveryReceiptUpdated = (channel) => {\n        if (compareIds(channel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onDeliveryReceiptUpdated', channel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: channel,\n          });\n        }\n      };\n\n      ChannelHandler.onMessageUpdated = (channel, message) => {\n        logger.info('Channel | useHandleChannelEvents: onMessageUpdated', message);\n        messagesDispatcher({\n          type: messageActions.ON_MESSAGE_UPDATED,\n          payload: { channel, message },\n        });\n      };\n\n      ChannelHandler.onThreadInfoUpdated = (channel, event) => {\n        logger.info('Channel | useHandleChannelEvents: onThreadInfoUpdated', event);\n        messagesDispatcher({\n          type: messageActions.ON_MESSAGE_THREAD_INFO_UPDATED,\n          payload: { channel, event },\n        });\n      };\n\n      ChannelHandler.onMessageDeleted = (_, messageId) => {\n        logger.info('Channel | useHandleChannelEvents: onMessageDeleted', messageId);\n        setQuoteMessage(null);\n        messagesDispatcher({\n          type: messageActions.ON_MESSAGE_DELETED,\n          payload: messageId,\n        });\n      };\n\n      ChannelHandler.onReactionUpdated = (_, reactionEvent) => {\n        logger.info('Channel | useHandleChannelEvents: onReactionUpdated', reactionEvent);\n        messagesDispatcher({\n          type: messageActions.ON_REACTION_UPDATED,\n          payload: reactionEvent,\n        });\n      };\n\n      ChannelHandler.onChannelChanged = (groupChannel) => {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onChannelChanged', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onChannelFrozen = (groupChannel) => {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onChannelFrozen', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onChannelUnfrozen = (groupChannel) => {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onChannelUnFrozen', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onUserMuted = (groupChannel) => {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onUserMuted', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onUserUnmuted = (groupChannel) => {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onUserUnmuted', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onUserBanned = (groupChannel) => {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onUserBanned', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onOperatorUpdated = (groupChannel) => {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onOperatorUpdated', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      // Add this channel event handler to the SendBird object.\n      sdk.addChannelHandler(messageReceiverId, ChannelHandler);\n    }\n    return () => {\n      if (sdk && sdk.removeChannelHandler) {\n        logger.info('Channel | useHandleChannelEvents: Removing message reciver handler', messageReceiverId);\n        sdk.removeChannelHandler(messageReceiverId);\n      }\n    };\n  }, [channelUrl, sdkInit]);\n}\n\nexport default useHandleChannelEvents;\n","import { useEffect } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useSetChannel({ channelUrl, sdkInit }, {\n  messagesDispatcher,\n  sdk,\n  logger,\n}) {\n  useEffect(() => {\n    if (channelUrl && sdkInit && sdk && sdk.GroupChannel) {\n      logger.info('Channel | useSetChannel fetching channel', channelUrl);\n      sdk.GroupChannel.getChannel(channelUrl)\n        .then((groupChannel) => {\n          logger.info('Channel | useSetChannel fetched channel', groupChannel);\n          messagesDispatcher({\n            type: messageActionTypes.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n\n          logger.info('Channel: Mark as read', groupChannel);\n          // this order is important - this mark as read should update the event handler up above\n          try {\n            groupChannel.markAsRead();\n          } catch {\n            //\n          }\n        })\n        .catch((e) => {\n          logger.warning('Channel | useSetChannel fetch channel failed', { channelUrl, e });\n          messagesDispatcher({\n            type: messageActionTypes.SET_CHANNEL_INVALID,\n          });\n        });\n      sdk.getAllEmoji((emojiContainer_, err) => {\n        if (err) {\n          logger.error('Channel: Getting emojis failed', err);\n          return;\n        }\n        logger.info('Channel: Getting emojis success', emojiContainer_);\n        messagesDispatcher({\n          type: messageActionTypes.SET_EMOJI_CONTAINER,\n          payload: emojiContainer_,\n        });\n      });\n    }\n  }, [channelUrl, sdkInit]);\n}\n\nexport default useSetChannel;\n","import { useEffect } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as utils from '../utils';\n\nconst PREV_RESULT_SIZE = 30;\nconst NEXT_RESULT_SIZE = 10;\n\nconst getLatestMessageTimeStamp = (messages = []) => {\n  const latestMessage = messages[messages.length - 1];\n  return (latestMessage && latestMessage.createdAt) || null;\n};\n\nfunction useInitialMessagesFetch({\n  currentGroupChannel,\n  userFilledMessageListQuery,\n  intialTimeStamp,\n  replyType,\n}, {\n  sdk,\n  logger,\n  messagesDispatcher,\n}) {\n  const channelUrl = currentGroupChannel && currentGroupChannel.url;\n  useEffect(() => {\n    logger.info('Channel useInitialMessagesFetch: Setup started', currentGroupChannel);\n    messagesDispatcher({\n      type: messageActionTypes.RESET_MESSAGES,\n    });\n\n    if (sdk && sdk.MessageListParams\n      && currentGroupChannel && currentGroupChannel.getMessagesByTimestamp) {\n      const messageListParams = new sdk.MessageListParams();\n      messageListParams.prevResultSize = PREV_RESULT_SIZE;\n      messageListParams.isInclusive = true;\n      messageListParams.includeReplies = false;\n      messageListParams.includeReaction = true;\n      if (replyType && replyType === 'QUOTE_REPLY') {\n        messageListParams.includeThreadInfo = true;\n        messageListParams.includeParentMessageInfo = true;\n        messageListParams.replyType = 'only_reply_to_channel';\n      }\n      if (userFilledMessageListQuery) {\n        Object.keys(userFilledMessageListQuery).forEach((key) => {\n          messageListParams[key] = userFilledMessageListQuery[key];\n        });\n      }\n      if ((replyType && replyType === 'QUOTE_REPLY') || userFilledMessageListQuery) {\n        logger.info('Channel useInitialMessagesFetch: Setup messageListParams', messageListParams);\n        messagesDispatcher({\n          type: messageActionTypes.MESSAGE_LIST_PARAMS_CHANGED,\n          payload: messageListParams,\n        });\n      }\n\n      logger.info('Channel: Fetching messages', { currentGroupChannel, userFilledMessageListQuery });\n      messagesDispatcher({\n        type: messageActionTypes.GET_PREV_MESSAGES_START,\n      });\n\n      if (intialTimeStamp) {\n        messageListParams.nextResultSize = NEXT_RESULT_SIZE;\n        currentGroupChannel.getMessagesByTimestamp(\n          intialTimeStamp,\n          messageListParams,\n        )\n          .then((messages) => {\n            const hasMore = (messages && messages.length > 0);\n            const lastMessageTimeStamp = hasMore\n              ? messages[0].createdAt\n              : null;\n            const latestFetchedMessageTimeStamp = getLatestMessageTimeStamp(messages);\n            // to make sure there are no more messages below\n            const nextMessageListParams = new sdk.MessageListParams();\n            nextMessageListParams.nextResultSize = NEXT_RESULT_SIZE;\n            nextMessageListParams.isInclusive = true;\n            nextMessageListParams.includeReplies = false;\n            nextMessageListParams.includeReaction = true;\n            if (replyType && replyType === 'QUOTE_REPLY') {\n              nextMessageListParams.includeThreadInfo = true;\n              nextMessageListParams.includeParentMessageInfo = true;\n              nextMessageListParams.replyType = 'only_reply_to_channel';\n            }\n            if (userFilledMessageListQuery) {\n              Object.keys(userFilledMessageListQuery).forEach((key) => {\n                nextMessageListParams[key] = userFilledMessageListQuery[key];\n              });\n            }\n            currentGroupChannel.getMessagesByTimestamp(\n              latestFetchedMessageTimeStamp || new Date().getTime(),\n              nextMessageListParams,\n            ).then((nextMessages) => {\n              messagesDispatcher({\n                type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n                payload: {\n                  messages,\n                  hasMore,\n                  lastMessageTimeStamp,\n                  currentGroupChannel,\n                  latestFetchedMessageTimeStamp,\n                  hasMoreToBottom: nextMessages && nextMessages.length > 0,\n                },\n              });\n            });\n          })\n          .catch((error) => {\n            logger.error('Channel: Fetching messages failed', error);\n            messagesDispatcher({\n              type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n              payload: {\n                messages: [],\n                hasMore: false,\n                lastMessageTimeStamp: 0,\n                currentGroupChannel,\n              },\n            });\n          })\n          .finally(() => {\n            if (!intialTimeStamp) {\n              setTimeout(() => utils.scrollIntoLast());\n            }\n            try {\n              currentGroupChannel.markAsRead();\n            } catch {\n              //\n            }\n          });\n      } else {\n        currentGroupChannel.getMessagesByTimestamp(\n          new Date().getTime(),\n          messageListParams,\n        )\n          .then((messages) => {\n            const hasMore = (messages && messages.length > 0);\n            const lastMessageTimeStamp = hasMore\n              ? messages[0].createdAt\n              : null;\n            const latestFetchedMessageTimeStamp = getLatestMessageTimeStamp(messages);\n            messagesDispatcher({\n              type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n              payload: {\n                messages,\n                hasMore,\n                lastMessageTimeStamp,\n                currentGroupChannel,\n                latestFetchedMessageTimeStamp,\n                hasMoreToBottom: false,\n              },\n            });\n          })\n          .catch((error) => {\n            logger.error('Channel: Fetching messages failed', error);\n            messagesDispatcher({\n              type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n              payload: {\n                messages: [],\n                hasMore: false,\n                lastMessageTimeStamp: 0,\n                currentGroupChannel,\n              },\n            });\n          })\n          .finally(() => {\n            if (!intialTimeStamp) {\n              setTimeout(() => utils.scrollIntoLast());\n            }\n            try {\n              currentGroupChannel.markAsRead();\n            } catch {\n              //\n            }\n          });\n      }\n    }\n  }, [channelUrl, userFilledMessageListQuery, intialTimeStamp]);\n  /**\n   * Note - useEffect(() => {}, [currentGroupChannel])\n   * was buggy, that is why we did\n   * const channelUrl = currentGroupChannel && currentGroupChannel.url;\n   * useEffect(() => {}, [channelUrl])\n   * Again, this hook is supposed to execute when currentGroupChannel changes\n   * The 'channelUrl' here is not the same memory reference from Conversation.props\n   */\n}\n\nexport default useInitialMessagesFetch;\n","import { useEffect } from 'react';\n\nimport * as utils from '../utils';\nimport * as messageActionTypes from '../dux/actionTypes';\nimport { Logger, Sdk } from '../../..';\nimport { GroupChannel } from 'sendbird';\n\ninterface DynamicParams {\n  isOnline: boolean;\n  replyType?: string;\n}\n\ninterface StaticParams {\n  logger: Logger;\n  sdk: Sdk;\n  currentGroupChannel: GroupChannel;\n  messagesDispatcher: ({ type: string, payload: any }) => void;\n  userFilledMessageListQuery?: Record<string, any>;\n}\n\nfunction useHandleReconnect(\n  { isOnline, replyType }: DynamicParams,\n  {\n    logger,\n    sdk,\n    currentGroupChannel,\n    messagesDispatcher,\n    userFilledMessageListQuery,\n  }: StaticParams,\n): void {\n  useEffect(() => {\n    const wasOffline = !isOnline;\n    return () => {\n      // state changed from offline to online\n      if (wasOffline && currentGroupChannel?.url) {\n        logger.info('Refreshing conversation state');\n        const useReaction = sdk?.appInfo?.isUsingReaction || false;\n\n        const messageListParams = new sdk.MessageListParams();\n        messageListParams.prevResultSize = 30;\n        messageListParams.isInclusive = true;\n        messageListParams.includeReplies = false;\n        messageListParams.includeReaction = useReaction;\n        if (replyType && replyType === 'QUOTE_REPLY') {\n          messageListParams.includeThreadInfo = true;\n          messageListParams.includeParentMessageInfo = true;\n          messageListParams.replyType = 'only_reply_to_channel';\n        }\n        if (userFilledMessageListQuery) {\n          Object.keys(userFilledMessageListQuery).forEach((key) => {\n            messageListParams[key] = userFilledMessageListQuery[key];\n          });\n        }\n        logger.info('Channel: Fetching messages', { currentGroupChannel, userFilledMessageListQuery });\n        messagesDispatcher({\n          type: messageActionTypes.GET_PREV_MESSAGES_START,\n          payload: null,\n        });\n\n        sdk.GroupChannel.getChannel(currentGroupChannel.url)\n          .then((groupChannel) => {\n            const lastMessageTime = new Date().getTime();\n\n            groupChannel.getMessagesByTimestamp(\n              lastMessageTime,\n              messageListParams,\n            )\n              .then((messages) => {\n                messagesDispatcher({\n                  type: messageActionTypes.CLEAR_SENT_MESSAGES,\n                  payload: null,\n                });\n\n                const hasMore = messages?.length > 0;\n                const lastMessageTimeStamp = hasMore\n                  ? messages[0].createdAt\n                  : null;\n                messagesDispatcher({\n                  type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n                  payload: {\n                    messages,\n                    hasMore,\n                    lastMessageTimeStamp,\n                    currentGroupChannel,\n                  },\n                });\n                setTimeout(() => utils.scrollIntoLast());\n              })\n              .catch((error) => {\n                logger.error('Channel: Fetching messages failed', error);\n              })\n              .finally(() => {\n                try {\n                  currentGroupChannel.markAsRead?.();\n                } catch {\n                  //\n                }\n              });\n          });\n      }\n    };\n  }, [isOnline, replyType]);\n}\n\nexport default useHandleReconnect;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useScrollCallback({\n  currentGroupChannel,\n  lastMessageTimeStamp,\n  userFilledMessageListQuery,\n  replyType,\n}, {\n  hasMore,\n  logger,\n  messagesDispatcher,\n  sdk,\n}) {\n  return useCallback((cb) => {\n    if (!hasMore) { return; }\n    const { appInfo = {} } = sdk;\n    const useReaction = appInfo.isUsingReaction || false;\n\n    const messageListParams = new sdk.MessageListParams();\n    messageListParams.prevResultSize = 30;\n    messageListParams.isInclusive = true;\n    messageListParams.includeReplies = false;\n    messageListParams.includeReaction = useReaction;\n    if (replyType && replyType === 'QUOTE_REPLY') {\n      messageListParams.includeThreadInfo = true;\n      messageListParams.includeParentMessageInfo = true;\n      messageListParams.replyType = 'only_reply_to_channel';\n    }\n    if (userFilledMessageListQuery) {\n      Object.keys(userFilledMessageListQuery).forEach((key) => {\n        messageListParams[key] = userFilledMessageListQuery[key];\n      });\n    }\n    logger.info('Channel: Fetching messages', { currentGroupChannel, userFilledMessageListQuery });\n\n    currentGroupChannel.getMessagesByTimestamp(\n      lastMessageTimeStamp || new Date().getTime(),\n      messageListParams,\n    )\n      .then((messages) => {\n        const hasMoreMessages = (messages && messages.length > 0);\n        const lastMessageTs = hasMoreMessages\n          ? messages[0].createdAt\n          : null;\n\n        messagesDispatcher({\n          type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n          payload: {\n            messages,\n            hasMore: hasMoreMessages,\n            lastMessageTimeStamp: lastMessageTs,\n            currentGroupChannel,\n          },\n        });\n        cb([messages, null]);\n      })\n      .catch((error) => {\n        logger.error('Channel: Fetching messages failed', error);\n        messagesDispatcher({\n          type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n          payload: {\n            messages: [],\n            hasMore: false,\n            lastMessageTimeStamp: 0,\n            currentGroupChannel,\n          },\n        });\n        cb([null, error]);\n      })\n      .finally(() => {\n        try {\n          currentGroupChannel.markAsRead();\n        } catch {\n          //\n        }\n      });\n  }, [currentGroupChannel, lastMessageTimeStamp, replyType]);\n}\n\nexport default useScrollCallback;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nconst RESULT_SIZE = 30;\n\nfunction useScrollDownCallback({\n  currentGroupChannel,\n  latestFetchedMessageTimeStamp,\n  userFilledMessageListQuery,\n  hasMoreToBottom,\n  replyType,\n}, {\n  logger,\n  messagesDispatcher,\n  sdk,\n}) {\n  return useCallback((cb) => {\n    if (!hasMoreToBottom) { return; }\n    const { appInfo = {} } = sdk;\n    const useReaction = appInfo.isUsingReaction || false;\n\n    const messageListParams = new sdk.MessageListParams();\n    messageListParams.nextResultSize = RESULT_SIZE;\n    messageListParams.isInclusive = true;\n    messageListParams.includeReplies = false;\n    messageListParams.includeReaction = useReaction;\n    if (replyType && replyType === 'QUOTE_REPLY') {\n      messageListParams.includeThreadInfo = true;\n      messageListParams.includeParentMessageInfo = true;\n      messageListParams.replyType = 'only_reply_to_channel';\n    }\n    if (userFilledMessageListQuery) {\n      Object.keys(userFilledMessageListQuery).forEach((key) => {\n        messageListParams[key] = userFilledMessageListQuery[key];\n      });\n    }\n    logger.info('Channel: Fetching later messages', { currentGroupChannel, userFilledMessageListQuery });\n\n    currentGroupChannel.getMessagesByTimestamp(\n      latestFetchedMessageTimeStamp || new Date().getTime(),\n      messageListParams,\n    )\n      .then((messages) => {\n        const messagesLength = (messages && messages.length) || 0;\n        const hasMoreMessages = (messagesLength > 0)\n          && (messageListParams.nextResultSize === messagesLength);\n        const lastMessageTs = hasMoreMessages\n          ? messages[messages.length - 1].createdAt\n          : null;\n        messagesDispatcher({\n          type: messageActionTypes.GET_NEXT_MESSAGES_SUCESS,\n          payload: {\n            messages,\n            hasMoreToBottom: hasMoreMessages,\n            latestFetchedMessageTimeStamp: lastMessageTs,\n            currentGroupChannel,\n          },\n        });\n        cb([messages, null]);\n      })\n      .catch((error) => {\n        logger.error('Channel: Fetching later messages failed', error);\n        messagesDispatcher({\n          type: messageActionTypes.GET_NEXT_MESSAGES_FAILURE,\n          payload: {\n            messages: [],\n            hasMoreToBottom: false,\n            latestFetchedMessageTimeStamp: 0,\n            currentGroupChannel,\n          },\n        });\n        cb([null, error]);\n      })\n      .finally(() => {\n        try {\n          currentGroupChannel.markAsRead();\n        } catch {\n          //\n        }\n      });\n  }, [currentGroupChannel, latestFetchedMessageTimeStamp, hasMoreToBottom, replyType]);\n}\n\nexport default useScrollDownCallback;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useDeleteMessageCallback({ currentGroupChannel, messagesDispatcher }, { logger }) {\n  return useCallback((message, cb) => {\n    logger.info('Channel | useDeleteMessageCallback: Deleting message', message);\n    const { requestState } = message;\n    logger.info('Channel | useDeleteMessageCallback: Deleting message requestState:', requestState);\n\n    // Message is only on local\n    if (requestState === 'failed' || requestState === 'pending') {\n      logger.info('Channel | useDeleteMessageCallback: Deleted message from local:', message);\n      messagesDispatcher({\n        type: messageActionTypes.ON_MESSAGE_DELETED_BY_REQ_ID,\n        payload: message.reqId,\n      });\n      if (cb) { cb(); }\n      return;\n    }\n\n    // Message is on server\n    currentGroupChannel.deleteMessage(message, (err) => {\n      logger.info('Channel | useDeleteMessageCallback: Deleting message from remote:', requestState);\n      if (cb) { cb(err); }\n      if (!err) {\n        logger.info('Channel | useDeleteMessageCallback: Deleting message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.ON_MESSAGE_DELETED,\n          payload: message.messageId,\n        });\n      } else {\n        logger.warning('Channel | useDeleteMessageCallback: Deleting message failed!', err);\n      }\n    });\n  }, [currentGroupChannel, messagesDispatcher]);\n}\n\nexport default useDeleteMessageCallback;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as topics from '../../../lib/pubSub/topics';\n\nfunction useUpdateMessageCallback({\n  currentGroupChannel,\n  messagesDispatcher,\n  onBeforeUpdateUserMessage,\n}, {\n  logger,\n  pubSub,\n  sdk,\n}) {\n  return useCallback((messageId, text, cb) => {\n    const createParamsDefault = (txt) => {\n      const params = new sdk.UserMessageParams();\n      params.message = txt;\n      return params;\n    };\n\n    const createCustomPrams = onBeforeUpdateUserMessage\n      && typeof onBeforeUpdateUserMessage === 'function';\n\n    if (createCustomPrams) {\n      logger.info('Channel: creating params using onBeforeUpdateUserMessage', onBeforeUpdateUserMessage);\n    }\n\n    const params = onBeforeUpdateUserMessage\n      ? onBeforeUpdateUserMessage(text)\n      : createParamsDefault(text);\n\n    currentGroupChannel.updateUserMessage(messageId, params, (r, e) => {\n      logger.info('Channel: Updating message!', params);\n      const swapParams = sdk.getErrorFirstCallback();\n      let message = r;\n      let err = e;\n      if (swapParams) {\n        message = e;\n        err = r;\n      }\n      if (cb) {\n        cb(err, message);\n      }\n      if (!err) {\n        logger.info('Channel: Updating message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.ON_MESSAGE_UPDATED,\n          payload: {\n            channel: currentGroupChannel,\n            message,\n          },\n        });\n        pubSub.publish(\n          topics.UPDATE_USER_MESSAGE,\n          {\n            message,\n            channel: currentGroupChannel,\n          },\n        );\n      } else {\n        logger.warning('Channel: Updating message failed!', err);\n      }\n    });\n  }, [currentGroupChannel.url, messagesDispatcher, onBeforeUpdateUserMessage]);\n}\n\nexport default useUpdateMessageCallback;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useResendMessageCallback({\n  currentGroupChannel,\n  messagesDispatcher,\n}, {\n  logger,\n}) {\n  return useCallback((failedMessage) => {\n    logger.info('Channel: Resending message has started', failedMessage);\n    const { messageType, file } = failedMessage;\n    if (failedMessage && typeof failedMessage.isResendable === 'function'\n      && failedMessage.isResendable()\n    ) {\n      // eslint-disable-next-line no-param-reassign\n      failedMessage.requestState = 'pending';\n      messagesDispatcher({\n        type: messageActionTypes.RESEND_MESSAGEGE_START,\n        payload: failedMessage,\n      });\n\n      // userMessage\n      if (messageType === 'user') {\n        currentGroupChannel\n          .resendUserMessage(failedMessage)\n          .then((message) => {\n            logger.info('Channel: Resending message success!', { message });\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n              payload: message,\n            });\n          })\n          .catch((e) => {\n            logger.warning('Channel: Resending message failed!', { e });\n            // eslint-disable-next-line no-param-reassign\n            failedMessage.requestState = 'failed';\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n              payload: failedMessage,\n            });\n          });\n\n        // eslint-disable-next-line no-param-reassign\n        failedMessage.requestState = 'pending';\n        messagesDispatcher({\n          type: messageActionTypes.RESEND_MESSAGEGE_START,\n          payload: failedMessage,\n        });\n        return;\n      }\n\n      if (messageType === 'file') {\n        currentGroupChannel\n          .resendFileMessage(failedMessage, file)\n          .then((message) => {\n            logger.info('Channel: Resending file message success!', { message });\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n              payload: message,\n            });\n          })\n          .catch((e) => {\n            logger.warning('Channel: Resending file message failed!', { e });\n            // eslint-disable-next-line no-param-reassign\n            failedMessage.requestState = 'failed';\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n              payload: failedMessage,\n            });\n          });\n\n        // eslint-disable-next-line no-param-reassign\n        failedMessage.requestState = 'pending';\n        messagesDispatcher({\n          type: messageActionTypes.RESEND_MESSAGEGE_START,\n          payload: failedMessage,\n        });\n      }\n    } else {\n      // to alert user on console\n      // eslint-disable-next-line no-console\n      console.error('Message is not resendable');\n      logger.warning('Message is not resendable', failedMessage);\n    }\n  }, [currentGroupChannel, messagesDispatcher]);\n}\n\nexport default useResendMessageCallback;\n","import { useRef, useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as utils from '../utils';\nimport * as topics from '../../../lib/pubSub/topics';\n\nexport default function useSendMessageCallback({ currentGroupChannel, onBeforeSendUserMessage }, {\n  sdk,\n  logger,\n  pubSub,\n  messagesDispatcher,\n}) {\n  const messageInputRef = useRef(null);\n\n  const sendMessage = useCallback(\n    (quoteMessage = null) => {\n      const text = messageInputRef.current.value;\n      const createParamsDefault = (txt) => {\n        const message = (typeof txt === 'string') ? txt.trim() : txt;\n        const params = new sdk.UserMessageParams();\n        params.message = message;\n        if (quoteMessage) {\n          params.isReplyToChannel = true;\n          params.parentMessageId = quoteMessage.messageId;\n        }\n        return params;\n      };\n\n      const createCustomPrams = onBeforeSendUserMessage\n        && typeof onBeforeSendUserMessage === 'function';\n\n      if (createCustomPrams) {\n        logger.info('Channel: creating params using onBeforeSendUserMessage', onBeforeSendUserMessage);\n      }\n\n      const params = onBeforeSendUserMessage\n        ? onBeforeSendUserMessage(text, quoteMessage)\n        : createParamsDefault(text);\n\n      logger.info('Channel: Sending message has started', params);\n      const pendingMsg = currentGroupChannel.sendUserMessage(params, (res, err) => {\n        const swapParams = sdk.getErrorFirstCallback();\n        let message = res;\n        let error = err;\n        if (swapParams) {\n          message = err;\n          error = res;\n        }\n        // sending params instead of pending message\n        // to make sure that we can resend the message once it fails\n        if (error) {\n          logger.warning('Channel: Sending message failed!', {\n            message,\n          });\n          messagesDispatcher({\n            type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n            payload: message,\n          });\n          return;\n        }\n        logger.info('Channel: Sending message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n          payload: message,\n        });\n      });\n      pubSub.publish(topics.SEND_MESSAGE_START, {\n        /* pubSub is used instead of messagesDispatcher\n          to avoid redundantly calling `messageActionTypes.SEND_MESSAGEGE_START` */\n        message: pendingMsg,\n        channel: currentGroupChannel,\n      });\n      setTimeout(() => utils.scrollIntoLast());\n    },\n    [currentGroupChannel, onBeforeSendUserMessage],\n  );\n\n  return [messageInputRef, sendMessage];\n}\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as utils from '../utils';\nimport * as topics from '../../../lib/pubSub/topics';\n\nexport default function useSendFileMessageCallback({\n  currentGroupChannel,\n  onBeforeSendFileMessage,\n  imageCompression = {},\n}, {\n  sdk,\n  logger,\n  pubSub,\n  messagesDispatcher,\n}) {\n  const sendMessage = useCallback((file, quoteMessage = null) => {\n    const {\n      compressionRate,\n      resizingWidth,\n      resizingHeight,\n    } = imageCompression;\n    const createCustomParams = onBeforeSendFileMessage && typeof onBeforeSendFileMessage === 'function';\n\n    const compressibleFileType = (file.type === 'image/jpg' || file.type === 'image/png' || file.type === 'image/jpeg');\n    const compressibleRatio = (compressionRate > 0) && (compressionRate < 1);\n    // pxToNumber returns null if values are invalid\n    const compressibleDiamensions = utils.pxToNumber(resizingWidth)\n      || utils.pxToNumber(resizingHeight);\n\n    const canCompressImage = compressibleFileType && (compressibleRatio || compressibleDiamensions);\n\n    const createParamsDefault = (file_) => {\n      const params = new sdk.FileMessageParams();\n      params.file = file_;\n      if (quoteMessage) {\n        params.isReplyToChannel = true;\n        params.parentMessageId = quoteMessage.messageId;\n      }\n      return params;\n    };\n\n    if (canCompressImage) { // Using image compression\n      try {\n        const image = document.createElement('img');\n        image.src = URL.createObjectURL(file);\n        image.onload = () => {\n          URL.revokeObjectURL(image.src);\n          const canvas = document.createElement('canvas');\n          const imageWdith = image.naturalWidth || image.width;\n          const imageHeight = image.naturalHeight || image.height;\n\n          let targetWidth = utils.pxToNumber(resizingWidth) || imageWdith;\n          let targetHeight = utils.pxToNumber(resizingHeight) || imageHeight;\n\n          // In canvas.toBlob(callback, mimeType, qualityArgument)\n          // qualityArgument doesnt work\n          // so in case compressibleDiamensions are not present, we use ratio\n          if (file.type === 'image/png' && !compressibleDiamensions) {\n            targetWidth *= compressionRate;\n            targetHeight *= compressionRate;\n          }\n\n          canvas.width = targetWidth;\n          canvas.height = targetHeight;\n          const context = canvas.getContext('2d');\n          context.drawImage(image, 0, 0, targetWidth, targetHeight);\n          context.canvas.toBlob(\n            (newImageBlob) => {\n              const compressedFile = new File([newImageBlob], file.name, { type: file.type });\n              if (createCustomParams) {\n                logger.info('Channel: Creating params using onBeforeSendFileMessage', onBeforeSendFileMessage);\n              }\n              const params = createCustomParams\n                ? onBeforeSendFileMessage(compressedFile, quoteMessage)\n                : createParamsDefault(compressedFile);\n              logger.info('Channel: Uploading file message start!', params);\n              const pendingMessage = currentGroupChannel.sendFileMessage(\n                params,\n                (response, err) => {\n                  const swapParams = sdk.getErrorFirstCallback();\n                  const [message, error] = swapParams ? [err, response] : [response, err];\n                  if (error) {\n                    // sending params instead of pending message\n                    // to make sure that we can resend the message once it fails\n                    logger.error('Channel: Sending file message failed!', { message, error });\n                    message.localUrl = URL.createObjectURL(compressedFile);\n                    message.file = compressedFile;\n                    messagesDispatcher({\n                      type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n                      payload: message,\n                    });\n                    return;\n                  }\n                  logger.info('Channel: Sending file message success!', message);\n                  messagesDispatcher({\n                    type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n                    payload: message,\n                  });\n                },\n              );\n              pubSub.publish(topics.SEND_MESSAGE_START, {\n                /* pubSub is used instead of messagesDispatcher\n                  to avoid redundantly calling `messageActionTypes.SEND_MESSAGEGE_START` */\n                message: {\n                  ...pendingMessage,\n                  url: URL.createObjectURL(compressedFile),\n                  // pending thumbnail message seems to be failed\n                  requestState: 'pending',\n                },\n                channel: currentGroupChannel,\n              });\n              setTimeout(() => utils.scrollIntoLast(), 1000);\n            },\n            file.type,\n            compressionRate,\n          );\n        };\n      } catch (error) {\n        logger.error('Channel: Sending file message failed!', error);\n      }\n    } else { // Not using image compression\n      if (createCustomParams) {\n        logger.info('Channel: creating params using onBeforeSendFileMessage', onBeforeSendFileMessage);\n      }\n      const params = onBeforeSendFileMessage\n        ? onBeforeSendFileMessage(file, quoteMessage)\n        : createParamsDefault(file);\n      logger.info('Channel: Uploading file message start!', params);\n\n      const pendingMsg = currentGroupChannel.sendFileMessage(params, (response, err) => {\n        const swapParams = sdk.getErrorFirstCallback();\n        const [message, error] = swapParams ? [err, response] : [response, err];\n        if (error) {\n          // sending params instead of pending message\n          // to make sure that we can resend the message once it fails\n          logger.error('Channel: Sending file message failed!', { message, error });\n          message.localUrl = URL.createObjectURL(file);\n          message.file = file;\n          messagesDispatcher({\n            type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n            payload: message,\n          });\n          return;\n        }\n        logger.info('Channel: Sending message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n          payload: message,\n        });\n      });\n      pubSub.publish(topics.SEND_MESSAGE_START, {\n        /* pubSub is used instead of messagesDispatcher\n          to avoid redundantly calling `messageActionTypes.SEND_MESSAGEGE_START` */\n        message: {\n          ...pendingMsg,\n          url: URL.createObjectURL(file),\n          // pending thumbnail message seems to be failed\n          requestState: 'pending',\n        },\n        channel: currentGroupChannel,\n      });\n      setTimeout(() => utils.scrollIntoLast(), 1000);\n    }\n  }, [currentGroupChannel, onBeforeSendFileMessage, imageCompression]);\n  return [sendMessage];\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nconst ReactionButton = React.forwardRef((props, ref) => {\n  const {\n    className,\n    width,\n    height,\n    selected,\n    onClick,\n    children,\n  } = props;\n\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        `sendbird-reaction-button${selected ? '--selected' : ''}`,\n      ].join(' ')}\n      ref={ref}\n      role=\"button\"\n      style={{\n        width: typeof width === 'string' ? `${width.slice(0, -2) - 2}px` : `${width - 2}px`,\n        height: typeof height === 'string' ? `${height.slice(0, -2) - 2}px` : `${height - 2}px`,\n      }}\n      onClick={(e) => onClick(e)}\n      onKeyDown={(e) => onClick(e)}\n      tabIndex={0}\n    >\n      <div className=\"sendbird-reaction-button__inner\">\n        {children}\n      </div>\n    </div>\n  );\n});\n\nReactionButton.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  width: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  height: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  selected: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.element.isRequired,\n};\n\nReactionButton.defaultProps = {\n  className: '',\n  width: '36px',\n  height: '36px',\n  selected: false,\n  onClick: () => { },\n};\n\nexport default ReactionButton;\n","import React, { useMemo } from 'react';\n\nimport { EmojiListItems } from '../../../ui/ContextMenu';\nimport ReactionButton from '../../../ui/ReactionButton';\nimport ImageRenderer from '../../../ui/ImageRenderer';\nimport Icon, { IconTypes } from '../../../ui/Icon';\n\nexport default function useMemoizedEmojiListItems({\n  emojiContainer, toggleReaction,\n}, {\n  useReaction,\n  logger,\n  userId,\n  emojiAllList,\n}) {\n  /* eslint-disable react/prop-types */\n  return useMemo(() => ({\n    parentRef,\n    parentContainRef,\n    message,\n    closeDropdown,\n    spaceFromTrigger = {},\n  }) => {\n    if (!useReaction || !(parentRef || parentContainRef || message || closeDropdown)) {\n      logger.warning('Channel: Invalid Params in memoizedEmojiListItems');\n      return null;\n    }\n\n    return (\n      <EmojiListItems\n        parentRef={parentRef}\n        parentContainRef={parentContainRef}\n        closeDropdown={closeDropdown}\n        spaceFromTrigger={spaceFromTrigger}\n      >\n        {\n          emojiAllList.map((emoji) => {\n            const reactedReaction = message.reactions\n              .filter((reaction) => reaction.key === emoji.key)[0];\n            const isReacted = reactedReaction\n              ? !(reactedReaction.userIds.indexOf(userId) < 0)\n              : false;\n            return (\n              <ReactionButton\n                key={emoji.key}\n                width=\"36px\"\n                height=\"36px\"\n                selected={isReacted}\n                onClick={() => {\n                  closeDropdown();\n                  toggleReaction(message, emoji.key, isReacted);\n                }}\n              >\n                <ImageRenderer\n                  url={emoji.url}\n                  width=\"28px\"\n                  height=\"28px\"\n                  defaultComponent={\n                    <Icon width=\"28px\" height=\"28px\" type={IconTypes.QUESTION} />\n                  }\n                />\n              </ReactionButton>\n            );\n          })\n        }\n      </EmojiListItems>\n    );\n  }, [emojiContainer, toggleReaction]);\n}\n","import { useCallback } from 'react';\n\nexport default function useToggleReactionCallback({ currentGroupChannel }, { logger }) {\n  return useCallback((message, key, isReacted) => {\n    if (isReacted) {\n      currentGroupChannel.deleteReaction(message, key)\n        .then((res) => {\n          logger.info('Delete reaction success', res);\n        })\n        .catch((err) => {\n          logger.warning('Delete reaction failed', err);\n        });\n      return;\n    }\n    currentGroupChannel.addReaction(message, key)\n      .then((res) => {\n        logger.info('Add reaction success', res);\n      })\n      .catch((err) => {\n        logger.warning('Add reaction failed', err);\n      });\n  }, [currentGroupChannel]);\n}\n","import { useCallback } from 'react';\nimport { SendbirdTypes } from '../../../types';\nimport { Logger } from '../../../index';\n\ninterface DynamicParams {\n  setIntialTimeStamp(ts: number): null;\n  setAnimatedMessageId(id: number): null;\n  allMessages: SendbirdTypes['BaseMessageInstance'][];\n}\n\ninterface StaticParams {\n  logger: Logger;\n}\n\nfunction useScrollToMessage({\n  setIntialTimeStamp,\n  setAnimatedMessageId,\n  allMessages,\n}: DynamicParams,\n  { logger }: StaticParams,\n): (createdAt: number, messageId: number) => void {\n  return useCallback(\n    (createdAt: number, messageId: number) => {\n      const isPresent = allMessages.find((m) => (\n        m.messageId === messageId\n      ));\n      setAnimatedMessageId(null);\n      setTimeout(() => {\n        if (isPresent) {\n          logger.info('Channel: scroll to message - message is present');\n          setAnimatedMessageId(messageId);\n        } else {\n          logger.info('Channel: scroll to message - fetching older messages');\n          setIntialTimeStamp(null);\n          setIntialTimeStamp(createdAt);\n          setAnimatedMessageId(messageId);\n        }\n      });\n    }, [\n    setIntialTimeStamp,\n    setAnimatedMessageId,\n    allMessages,\n  ],\n  );\n}\n\nexport default useScrollToMessage;\n","import React, { useContext, useMemo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport format from 'date-fns/format';\n\nimport './index.scss';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport Label, { LabelColors, LabelTypography } from '../Label';\nimport Loader from '../Loader';\n\nimport {\n  getOutgoingMessageState,\n  getOutgoingMessageStates,\n  isSentStatus,\n} from '../../utils';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nexport const MessageStatusTypes = getOutgoingMessageStates();\nexport default function MessageStatus({\n  className,\n  message,\n  channel,\n}) {\n  const { dateLocale } = useContext(LocalizationContext);\n  const showMessageStatusIcon = channel?.isGroupChannel()\n    && !channel?.isSuper\n    && !channel?.isPublic\n    && !channel?.isBroadcast;\n  const iconType = {\n    [MessageStatusTypes.SENT]: IconTypes.DONE,\n    [MessageStatusTypes.DELIVERED]: IconTypes.DONE_ALL,\n    [MessageStatusTypes.READ]: IconTypes.DONE_ALL,\n    [MessageStatusTypes.FAILED]: IconTypes.ERROR,\n  };\n  const iconColor = {\n    [MessageStatusTypes.SENT]: IconColors.SENT,\n    [MessageStatusTypes.DELIVERED]: IconColors.SENT,\n    [MessageStatusTypes.READ]: IconColors.READ,\n    [MessageStatusTypes.FAILED]: IconColors.ERROR,\n  };\n\n  const messageStatus = useMemo(() => (\n    getOutgoingMessageState(channel, message)\n  ), [channel?.getUnreadMemberCount?.(message), channel?.getUndeliveredMemberCount?.(message)]);\n\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-message-status',\n      ].join(' ')}\n    >\n      {(showMessageStatusIcon) && (\n        (messageStatus === MessageStatusTypes.PENDING) ? (\n          <Loader\n            className=\"sendbird-message-status__icon\"\n            width=\"16px\"\n            height=\"16px\"\n          >\n            <Icon\n              type={IconTypes.SPINNER}\n              fillColor={IconColors.PRIMARY}\n              width=\"16px\"\n              height=\"16px\"\n            />\n          </Loader>\n        ) : (\n          <Icon\n            className=\"sendbird-message-status__icon\"\n            type={iconType[messageStatus] || IconTypes.ERROR}\n            fillColor={iconColor[messageStatus]}\n            width=\"16px\"\n            height=\"16px\"\n          />\n        )\n      )}\n      {isSentStatus(messageStatus) && (\n        <Label\n          className=\"sendbird-message-status__text\"\n          type={LabelTypography.CAPTION_3}\n          color={LabelColors.ONBACKGROUND_2}\n        >\n          {format(message?.createdAt, 'p', { locale: dateLocale })}\n        </Label>\n      )}\n    </div>\n  );\n}\n\nMessageStatus.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  message: PropTypes.shape({\n    createdAt: PropTypes.number,\n    sender: PropTypes.shape({\n      friendName: PropTypes.string,\n      nickname: PropTypes.string,\n      userId: PropTypes.string,\n      profileUrl: PropTypes.string,\n    }),\n    sendingStatus: PropTypes.string,\n  }),\n  channel: PropTypes.shape({\n    isGroupChannel: PropTypes.func,\n    isSuper: PropTypes.bool,\n    isBroadcast: PropTypes.bool,\n    isPublic: PropTypes.bool,\n    getUnreadMemberCount: PropTypes.func,\n    getUndeliveredMemberCount: PropTypes.func,\n  }),\n};\n\nMessageStatus.defaultProps = {\n  className: '',\n  message: null,\n  channel: null,\n};\n","import React, { ReactElement, useContext, useRef } from 'react';\nimport { FileMessage, GroupChannel, OpenChannel, UserMessage } from 'sendbird';\nimport './index.scss';\n\nimport ContextMenu, { MenuItems, MenuItem } from '../ContextMenu';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport {\n  getClassName,\n  copyToClipboard,\n  isUserMessage,\n  isSentMessage,\n  isFailedMessage,\n  isPendingMessage,\n} from '../../utils/index';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport { ReplyType } from '../../index';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: UserMessage | FileMessage;\n  channel: GroupChannel | OpenChannel;\n  isByMe?: boolean;\n  disabled?: boolean;\n  replyType?: ReplyType;\n  showEdit?: (bool: boolean) => void;\n  showRemove?: (bool: boolean) => void;\n  resendMessage?: (message: UserMessage | FileMessage) => void;\n  setQuoteMessage?: (message: UserMessage | FileMessage) => void;\n  setSupposedHover?: (bool: boolean) => void;\n}\n\nexport default function MessageItemMenu({\n  className,\n  message,\n  channel,\n  isByMe = false,\n  disabled = false,\n  replyType,\n  showEdit,\n  showRemove,\n  resendMessage,\n  setQuoteMessage,\n  setSupposedHover,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  const triggerRef = useRef(null);\n  const containerRef = useRef(null);\n\n  const showMenuItemCopy: boolean = isUserMessage(message as UserMessage);\n  const showMenuItemReply: boolean = replyType === 'QUOTE_REPLY' && !isFailedMessage(channel, message) && !isPendingMessage(channel, message);\n  const showMenuItemEdit: boolean = (isUserMessage(message as UserMessage) && isSentMessage(channel, message) && isByMe);\n  const showMenuItemResend: boolean = (isFailedMessage(channel, message) && message?.isResendable?.() && isByMe);\n  const showMenuItemDelete: boolean = !isPendingMessage(channel, message) && isByMe;\n\n  if (!(showMenuItemCopy || showMenuItemReply || showMenuItemEdit || showMenuItemResend || showMenuItemDelete)) {\n    return null;\n  }\n  return (\n    <div\n      className={getClassName([className, 'sendbird-message-item-menu'])}\n      ref={containerRef}\n    >\n      <ContextMenu\n        menuTrigger={(toggleDropdown: () => void): ReactElement => (\n          <IconButton\n            className=\"sendbird-message-item-menu__trigger\"\n            ref={triggerRef}\n            width=\"32px\"\n            height=\"32px\"\n            onClick={(): void => {\n              toggleDropdown();\n              setSupposedHover(true);\n            }}\n            onBlur={(): void => {\n              setSupposedHover(false);\n            }}\n          >\n            <Icon\n              className=\"sendbird-message-item-menu__trigger__icon\"\n              type={IconTypes.MORE}\n              fillColor={IconColors.CONTENT_INVERSE}\n              width=\"24px\"\n              height=\"24px\"\n            />\n          </IconButton>\n        )}\n        menuItems={(close: () => void): ReactElement => {\n          const closeDropdown = (): void => {\n            close();\n            setSupposedHover(false);\n          };\n          return (\n            <MenuItems\n              className=\"sendbird-message-item-menu__list\"\n              parentRef={triggerRef}\n              parentContainRef={containerRef}\n              closeDropdown={closeDropdown}\n              openLeft={isByMe}\n            >\n              {showMenuItemCopy && (\n                <MenuItem\n                  className=\"sendbird-message-item-menu__list__menu-item menu-item-copy\"\n                  onClick={() => {\n                    copyToClipboard((message as UserMessage)?.message);\n                    closeDropdown();\n                  }}\n                >\n                  {stringSet.MESSAGE_MENU__COPY}\n                </MenuItem>\n              )}\n              {showMenuItemReply && (\n                <MenuItem\n                  className=\"sendbird-message-item-menu__list__menu-item menu-item-reply\"\n                  onClick={() => {\n                    setQuoteMessage(message);\n                    closeDropdown();\n                  }}\n                  disable={message?.parentMessageId > 0}\n                >\n                  {stringSet.MESSAGE_MENU__REPLY}\n                </MenuItem>\n              )}\n              {showMenuItemEdit && (\n                <MenuItem\n                  className=\"sendbird-message-item-menu__list__menu-item menu-item-edit\"\n                  onClick={() => {\n                    if (!disabled) {\n                      showEdit(true);\n                      closeDropdown();\n                    }\n                  }}\n                >\n                  {stringSet.MESSAGE_MENU__EDIT}\n                </MenuItem>\n              )}\n              {showMenuItemResend && (\n                <MenuItem\n                  className=\"sendbird-message-item-menu__list__menu-item menu-item-resend\"\n                  onClick={() => {\n                    if (!disabled) {\n                      resendMessage(message);\n                      closeDropdown();\n                    }\n                  }}\n                >\n                  {stringSet.MESSAGE_MENU__RESEND}\n                </MenuItem>\n              )}\n              {showMenuItemDelete && (\n                <MenuItem\n                  className=\"sendbird-message-item-menu__list__menu-item menu-item-delete\"\n                  onClick={() => {\n                    if (!disabled) {\n                      showRemove(true);\n                      closeDropdown();\n                    }\n                  }}\n                  disable={message?.threadInfo?.replyCount > 0}\n                >\n                  {stringSet.MESSAGE_MENU__DELETE}\n                </MenuItem>\n              )}\n            </MenuItems>\n          );\n        }}\n      />\n    </div>\n  );\n}\n","import React, { ReactElement, useRef } from 'react';\nimport { FileMessage, UserMessage, Emoji, Reaction, EmojiContainer, GroupChannel, OpenChannel } from 'sendbird';\nimport './index.scss';\n\nimport ContextMenu, { EmojiListItems } from '../ContextMenu';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport ImageRenderer from '../ImageRenderer';\nimport ReactionButton from '../ReactionButton';\nimport { getClassName, getEmojiListAll, isPendingMessage, isFailedMessage } from '../../utils';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: UserMessage | FileMessage;\n  channel: GroupChannel | OpenChannel;\n  userId: string;\n  spaceFromTrigger?: Record<string, unknown>;\n  emojiContainer?: EmojiContainer;\n  toggleReaction?: (message: UserMessage | FileMessage, reactionKey: string, isReacted: boolean) => void;\n  setSupposedHover?: (bool: boolean) => void;\n}\n\nexport default function MessageItemReactionMenu({\n  className,\n  message,\n  channel,\n  userId,\n  spaceFromTrigger = {},\n  emojiContainer,\n  toggleReaction,\n  setSupposedHover,\n}: Props): ReactElement {\n  const triggerRef = useRef(null);\n  const containerRef = useRef(null);\n\n  if(isPendingMessage(channel, message) || isFailedMessage(channel, message)) {\n    return null;\n  }\n\n  return (\n    <div\n      className={getClassName([className, 'sendbird-message-item-reaction-menu'])}\n      ref={containerRef}\n    >\n      <ContextMenu\n        menuTrigger={(toggleDropdown: () => void): ReactElement => (\n          <IconButton\n            className=\"sendbird-message-item-reaction-menu__trigger\"\n            ref={triggerRef}\n            width=\"32px\"\n            height=\"32px\"\n            onClick={(): void => {\n              toggleDropdown();\n              setSupposedHover(true);\n            }}\n            onBlur={(): void => {\n              setSupposedHover(false);\n            }}\n          >\n            <Icon\n              className=\"sendbird-message-item-reaction-menu__trigger__icon\"\n              type={IconTypes.EMOJI_MORE}\n              fillColor={IconColors.CONTENT_INVERSE}\n              width=\"24px\"\n              height=\"24px\"\n            />\n          </IconButton>\n        )}\n        menuItems={(close: () => void): ReactElement => {\n          const closeDropdown = (): void => {\n            close();\n            setSupposedHover(false);\n          };\n          return (\n            <EmojiListItems\n              parentRef={triggerRef}\n              parentContainRef={containerRef}\n              closeDropdown={closeDropdown}\n              spaceFromTrigger={spaceFromTrigger}\n            >\n              {getEmojiListAll(emojiContainer).map((emoji: Emoji): ReactElement => {\n                const isReacted: boolean = message?.reactions?.\n                  filter((reaction: Reaction) => reaction.key === emoji.key)[0]?.userIds?.\n                  some((reactorId: string) => reactorId === userId);\n                return (\n                  <ReactionButton\n                    key={emoji.key}\n                    width=\"36px\"\n                    height=\"36px\"\n                    selected={isReacted}\n                    onClick={() => {\n                      closeDropdown();\n                      toggleReaction(message, emoji.key, isReacted);\n                    }}\n                  >\n                    <ImageRenderer\n                      url={emoji.url}\n                      width=\"28px\"\n                      height=\"28px\"\n                      placeHolder={(style) => (\n                        <div style={style}>\n                          <Icon\n                            type={IconTypes.QUESTION}\n                            fillColor={IconColors.ON_BACKGROUND_3}\n                            width=\"28px\"\n                            height=\"28px\"\n                          />\n                        </div>\n                      )}\n                    />\n                  </ReactionButton>\n                );\n              })}\n            </EmojiListItems>\n          );\n        }}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nimport Label, { LabelColors, LabelTypography } from '../Label';\n\nexport default function Tooltip({\n  className,\n  children,\n}) {\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-tooltip',\n      ].join(' ')}\n    >\n      <Label\n        className=\"sendbird-tooltip__text\"\n        type={LabelTypography.CAPTION_2}\n        color={LabelColors.ONCONTENT_1}\n      >\n        {children}\n      </Label>\n    </div>\n  );\n}\n\nTooltip.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n};\n\nTooltip.defaultProps = {\n  className: '',\n  children: '',\n};\n","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nconst SPACE_FROM_TRIGGER = 8;\n\nexport default function TooltipWrapper({\n  className,\n  children,\n  hoverTooltip,\n  // clickTooltip can be added later\n}) {\n  const [showHoverTooltip, setShowHoverTooltip] = useState(false);\n  const childrenRef = useRef(null);\n\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-tooltip-wrapper',\n      ].join(' ')}\n      onMouseOver={() => { setShowHoverTooltip(true); }}\n      onFocus={() => { setShowHoverTooltip(true); }}\n      onMouseOut={() => { setShowHoverTooltip(false); }}\n      onBlur={() => { setShowHoverTooltip(false); }}\n    >\n      <div\n        className=\"sendbird-tooltip-wrapper__children\"\n        ref={childrenRef}\n      >\n        {children}\n      </div>\n      {\n        showHoverTooltip && (\n          <div\n            className=\"sendbird-tooltip-wrapper__hover-tooltip\"\n            style={{ bottom: `calc(100% + ${SPACE_FROM_TRIGGER}px)` }}\n          >\n            <div className=\"sendbird-tooltip-wrapper__hover-tooltip__inner\">\n              <div\n                className=\"sendbird-tooltip-wrapper__hover-tooltip__inner__tooltip-container\"\n                style={{ left: childrenRef.current && `calc(${childrenRef.current.offsetWidth / 2}px - 50%)` }}\n              >\n                {hoverTooltip}\n              </div>\n            </div>\n          </div>\n        )\n      }\n    </div>\n  );\n}\n\nTooltipWrapper.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  children: PropTypes.element.isRequired,\n  hoverTooltip: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]).isRequired,\n};\nTooltipWrapper.defaultProps = {\n  className: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Label, { LabelTypography, LabelColors } from '../Label';\n\nimport './index.scss';\n\nconst ReactionBadge = React.forwardRef((props, ref) => {\n  const {\n    className,\n    children,\n    count,\n    selected,\n    isAdd,\n    onClick,\n  } = props;\n\n  const getClassNameTail = () => {\n    if (selected && !isAdd) {\n      return '--selected';\n    }\n    if (isAdd) {\n      return '--is-add';\n    }\n    return '';\n  };\n\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        `sendbird-reaction-badge${getClassNameTail()}`,\n      ].join(' ')}\n      role=\"button\"\n      ref={ref}\n      onClick={onClick}\n      onKeyDown={onClick}\n      tabIndex={0}\n    >\n      <div className=\"sendbird-reaction-badge__inner\">\n        <div className=\"sendbird-reaction-badge__inner__icon\">\n          {children}\n        </div>\n        <Label\n          className={(children && count) && 'sendbird-reaction-badge__inner__count'}\n          type={LabelTypography.CAPTION_3}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {count}\n        </Label>\n      </div>\n    </div>\n  );\n});\n\nReactionBadge.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  children: PropTypes.element.isRequired,\n  count: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  selected: PropTypes.bool,\n  isAdd: PropTypes.bool,\n  onClick: PropTypes.func,\n};\n\nReactionBadge.defaultProps = {\n  className: '',\n  count: '',\n  selected: false,\n  isAdd: false,\n  onClick: () => { },\n};\n\nexport default ReactionBadge;\n","import React, { ReactElement, useContext, useRef } from 'react';\nimport { Emoji, EmojiContainer, FileMessage, Reaction, UserMessage } from 'sendbird';\nimport './index.scss';\n\nimport Tooltip from '../Tooltip';\nimport TooltipWrapper from '../TooltipWrapper';\nimport ReactionBadge from '../ReactionBadge';\nimport ReactionButton from '../ReactionButton';\nimport ImageRenderer from '../ImageRenderer';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport ContextMenu, { EmojiListItems } from '../ContextMenu';\n\nimport { getClassName, getEmojiListAll, getEmojiMapAll, getEmojiTooltipString, isReactedBy } from '../../utils';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\ninterface Props {\n  className?: string | Array<string>;\n  userId: string;\n  message: UserMessage | FileMessage;\n  emojiContainer: EmojiContainer;\n  memberNicknamesMap: Map<string, string>;\n  spaceFromTrigger?: Record<string, unknown>;\n  isByMe?: boolean;\n  toggleReaction?: (message: UserMessage | FileMessage, key: string, byMe: boolean) => void;\n}\n\nexport default function EmojiReactions2({\n  className,\n  userId,\n  message,\n  emojiContainer,\n  memberNicknamesMap,\n  spaceFromTrigger = {},\n  isByMe = false,\n  toggleReaction,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  const emojisMap = getEmojiMapAll(emojiContainer);\n  const addReactionRef = useRef(null);\n\n  return (\n    <div className={getClassName([\n      className, 'sendbird-emoji-reactions',\n      isByMe ? 'outgoing' : 'incoming',\n    ])}>\n      {(message?.reactions?.length > 0) && (\n        message.reactions.map((reaction: Reaction): ReactElement => {\n          const reactedByMe = isReactedBy(userId, reaction);\n          return (\n            <TooltipWrapper\n              className=\"sendbird-emoji-reactions__reaction-badge\"\n              key={reaction?.key}\n              hoverTooltip={(reaction?.userIds?.length > 0) && (\n                <Tooltip>\n                  {getEmojiTooltipString(reaction, userId, memberNicknamesMap, stringSet)}\n                </Tooltip>\n              )}\n            >\n              <ReactionBadge\n                count={reaction.userIds.length}\n                selected={reactedByMe}\n                onClick={() => toggleReaction(message, reaction.key, reactedByMe)}\n              >\n                <ImageRenderer\n                  circle\n                  url={emojisMap.get(reaction?.key)?.url || ''}\n                  width=\"20px\"\n                  height=\"20px\"\n                  defaultComponent={(\n                    <Icon width=\"20px\" height=\"20px\" type={IconTypes.QUESTION} />\n                  )}\n                />\n              </ReactionBadge>\n            </TooltipWrapper>\n          );\n        })\n      )}\n      {(message?.reactions?.length < emojisMap.size) && (\n        <ContextMenu\n          menuTrigger={(toggleDropdown: () => void): ReactElement => (\n            <ReactionBadge\n              className=\"sendbird-emoji-reactions__add-reaction-badge\"\n              ref={addReactionRef}\n              isAdd\n              onClick={toggleDropdown}\n            >\n              <Icon\n                type={IconTypes.EMOJI_MORE}\n                fillColor={IconColors.ON_BACKGROUND_3}\n                width=\"20px\"\n                height=\"20px\"\n              />\n            </ReactionBadge>\n          )}\n          menuItems={(closeDropdown: () => void): ReactElement => (\n            <EmojiListItems\n              parentRef={addReactionRef}\n              parentContainRef={addReactionRef}\n              closeDropdown={closeDropdown}\n              spacefromTrigger={spaceFromTrigger}\n            >\n              {getEmojiListAll(emojiContainer).map((emoji: Emoji): ReactElement => {\n                const isReacted: boolean = message?.reactions?.\n                  filter((reaction: Reaction): boolean => reaction.key === emoji.key)[0]?.userIds?.\n                  some((reactorId: string): boolean => reactorId === userId);\n                return (\n                  <ReactionButton\n                    key={emoji.key}\n                    width=\"36px\"\n                    height=\"36px\"\n                    selected={isReacted}\n                    onClick={(): void => {\n                      closeDropdown();\n                      toggleReaction(message, emoji.key, isReacted);\n                    }}\n                  >\n                    <ImageRenderer\n                      url={emoji?.url || ''}\n                      width=\"28px\"\n                      height=\"28px\"\n                      placeHolder={(style: Record<string, unknown>): ReactElement => (\n                        <div style={style}>\n                          <Icon\n                            type={IconTypes.QUESTION}\n                            fillColor={IconColors.ON_BACKGROUND_3}\n                            width=\"28px\"\n                            height=\"28px\"\n                          />\n                        </div>\n                      )}\n                    />\n                  </ReactionButton>\n                );\n              })}\n            </EmojiListItems>\n          )}\n        />\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport Label, { LabelColors, LabelTypography } from '../Label';\n\nexport default function AdminMessage({\n  className,\n  message,\n}) {\n  if (!(message.isAdminMessage || message.messageType) || !message.isAdminMessage() || message.messageType !== 'admin') {\n    return null;\n  }\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-admin-message',\n      ].join(' ')}\n    >\n      <Label\n        className=\"sendbird-admin-message__text\"\n        type={LabelTypography.CAPTION_2}\n        color={LabelColors.ONBACKGROUND_2}\n      >\n        {message.message}\n      </Label>\n    </div>\n  );\n}\n\nAdminMessage.propTypes = {\n  message: PropTypes.shape({\n    message: PropTypes.string,\n    messageType: PropTypes.string,\n    isAdminMessage: PropTypes.func,\n  }),\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n};\n\nAdminMessage.defaultProps = {\n  message: {},\n  className: '',\n};\n","import React, { ReactElement, useContext } from 'react';\nimport { UserMessage } from 'sendbird';\nimport './index.scss';\n\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport {\n  getClassName,\n  isEditedMessage,\n} from '../../utils';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: UserMessage;\n  isByMe?: boolean;\n  mouseHover?: boolean;\n}\n\nexport default function TextMessageItemBody({\n  className,\n  message,\n  isByMe = false,\n  mouseHover = false,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <Label\n      type={LabelTypography.BODY_1}\n      color={isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1}\n    >\n      <p className={getClassName([\n        className,\n        'sendbird-text-message-item-body',\n        isByMe ? 'outgoing' : 'incoming',\n        mouseHover ? 'mouse-hover' : '',\n        message?.reactions?.length > 0 ? 'reactions' : '',\n      ])}>\n        {message?.message}\n        {\n          isEditedMessage(message) && (\n            <Label\n              className=\"sendbird-text-message-item-body__message edited\"\n              type={LabelTypography.BODY_1}\n              color={isByMe ? LabelColors.ONCONTENT_2 : LabelColors.ONBACKGROUND_2}\n            >\n              {` ${stringSet.MESSAGE_EDITED} `}\n            </Label>\n          )\n        }\n      </p>\n    </Label>\n  );\n}\n","import React, { ReactElement } from 'react';\nimport { FileMessage } from 'sendbird';\nimport './index.scss';\n\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport TextButton from '../TextButton';\nimport { getClassName, getUIKitFileType, truncateString } from '../../utils';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: FileMessage;\n  isByMe?: boolean;\n  mouseHover?: boolean;\n}\n\nexport default function FileMessageItemBody({\n  className,\n  message,\n  isByMe = false,\n  mouseHover = false,\n}: Props): ReactElement {\n\n  return (\n    <div className={getClassName([\n      className,\n      'sendbird-file-message-item-body',\n      isByMe ? 'outgoing' : 'incoming',\n      mouseHover ? 'mouse-hover' : '',\n      message?.reactions?.length > 0 ? 'reactions' : '',\n    ])}>\n      <div className=\"sendbird-file-message-item-body__file-icon\">\n        <Icon\n          className={'sendbird-file-message-item-body__file-icon__icon'}\n          type={{\n            IMAGE: IconTypes.PHOTO,\n            VIDEO: IconTypes.PLAY,\n            AUDIO: IconTypes.FILE_AUDIO,\n            GIF: IconTypes.GIF,\n            OTHERS: IconTypes.FILE_DOCUMENT,\n          }[getUIKitFileType(message?.type)]}\n          fillColor={IconColors.PRIMARY}\n          width=\"24px\"\n          height=\"24px\"\n        />\n      </div>\n      <TextButton\n        className=\"sendbird-file-message-item-body__file-name\"\n        onClick={() => { window.open(message?.url) }}\n        color={isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1}\n      >\n        <Label\n          className=\"sendbird-file-message-item-body__file-name__text\"\n          type={LabelTypography.BODY_1}\n          color={isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1}\n        >\n          {truncateString(message?.name || message?.url)}\n        </Label>\n      </TextButton>\n    </div>\n  );\n}\n","import React, { ReactElement, useState } from 'react';\nimport { FileMessage } from 'sendbird';\nimport './index.scss';\n\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport ImageRenderer from '../ImageRenderer';\nimport { getClassName, isGifMessage, isVideoMessage } from '../../utils';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: FileMessage;\n  isByMe?: boolean;\n  mouseHover?: boolean;\n  showFileViewer?: (bool: boolean) => void;\n}\n\nexport default function ThumbnailMessageItemBody({\n  className,\n  message,\n  isByMe = false,\n  mouseHover = false,\n  showFileViewer,\n}: Props): ReactElement {\n  const { thumbnails = [] } = message;\n  const thumbnailUrl: string = thumbnails.length > 0 ? thumbnails[0]?.url : '';\n  const [imageRendered, setImageRendered] = useState(false);\n\n  return (\n    <div\n      className={getClassName([\n        className,\n        'sendbird-thumbnail-message-item-body',\n        isByMe ? 'outgoing' : 'incoming',\n        mouseHover ? 'mouse-hover' : '',\n        message?.reactions?.length > 0 ? 'reactions' : '',\n      ])}\n      onClick={() => {\n        if(message?.sendingStatus === 'succeeded'){\n          showFileViewer(true);\n        }\n      }}\n    >\n      <ImageRenderer\n        className=\"sendbird-thumbnail-message-item-body__thumbnail\"\n        url={thumbnailUrl || message?.url}\n        alt={message?.type}\n        width=\"360px\"\n        height=\"270px\"\n        onLoad={() => { setImageRendered(true) }}\n        placeHolder={(style) => (\n          <div\n            className=\"sendbird-thumbnail-message-item-body__placeholder\"\n            style={style}\n          >\n            <div className=\"sendbird-thumbnail-message-item-body__placeholder__icon\">\n              <Icon\n                type={isVideoMessage(message) ? IconTypes.PLAY : IconTypes.PHOTO}\n                fillColor={IconColors.ON_BACKGROUND_2}\n                width=\"34px\"\n                height=\"34px\"\n              />\n            </div>\n          </div>\n        )}\n      />\n      {\n        (isVideoMessage(message) && !thumbnailUrl) && !imageRendered && (\n          <video className=\"sendbird-thumbnail-message-item-body__video\">\n            <source src={message?.url} type={message?.type} />\n          </video>\n        )\n      }\n      <div className=\"sendbird-thumbnail-message-item-body__image-cover\" />\n      {\n        (isVideoMessage(message) || isGifMessage(message)) && (\n          <div className=\"sendbird-thumbnail-message-item-body__icon-wrapper\">\n            <div className=\"sendbird-thumbnail-message-item-body__icon-wrapper__icon\">\n              <Icon\n                type={isVideoMessage(message) ? IconTypes.PLAY : IconTypes.GIF}\n                fillColor={IconColors.GRAY}\n                width=\"34px\"\n                height=\"34px\"\n              />\n            </div>\n          </div>\n        )\n      }\n    </div>\n  );\n}\n","import React, { ReactElement, useContext } from 'react';\nimport { UserMessage } from 'sendbird';\nimport './index.scss';\n\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport LinkLabel from '../LinkLabel';\nimport Icon, { IconTypes } from '../Icon';\nimport ImageRenderer from '../ImageRenderer';\nimport {\n  getClassName,\n  isEditedMessage,\n  isUrl,\n} from '../../utils';\nimport uuidv4 from '../../utils/uuid';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: UserMessage;\n  isByMe?: boolean;\n  mouseHover?: boolean;\n}\n\nexport default function OGMessageItemBody({\n  className,\n  message,\n  isByMe = false,\n  mouseHover = false,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  const openOGUrl = (): void => {\n    if (message?.ogMetaData?.url) window.open(message?.ogMetaData?.url);\n  };\n\n  return (\n    <div className={getClassName([\n      className,\n      'sendbird-og-message-item-body',\n      isByMe ? 'outgoing' : 'incoming',\n      mouseHover ? 'mouse-hover' : '',\n      message?.reactions?.length > 0 ? 'reactions' : '',\n    ])}>\n      <Label\n        key={uuidv4()}\n        type={LabelTypography.BODY_1}\n        color={isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1}\n      >\n        <p className=\"sendbird-og-message-item-body__text-bubble\">\n          {\n            message?.message.split(' ').map((word: string) => {\n              const urlRegex = new RegExp(\"([a-zA-Z0-9]+://)?([a-zA-Z0-9_]+:[a-zA-Z0-9_]+@)?([a-zA-Z0-9.-]+\\\\.[A-Za-z]{2,4})(:[0-9]+)?(/.*)?\");\n              const targetUrl = urlRegex.exec(word)?.[0];\n              const stringUrl = { front: '', url: '', back: '' };\n              if (targetUrl) {\n                const targetUrlIndex = word.indexOf(targetUrl);\n                if (targetUrlIndex > 0) {\n                  stringUrl.front = word.slice(0, targetUrlIndex);\n                }\n                stringUrl.url = word.slice(targetUrlIndex, targetUrlIndex + targetUrl.length);\n                if (targetUrlIndex + targetUrl.length < word.length) {\n                  stringUrl.back = word.slice(targetUrlIndex + targetUrl.length);\n                }\n              }\n              if (targetUrl) {\n                return [\n                  stringUrl.front ? stringUrl.front : '',\n                  stringUrl.url ? (\n                    <LinkLabel\n                      className=\"sendbird-word__url\"\n                      key={uuidv4()}\n                      src={stringUrl.url}\n                      type={LabelTypography.BODY_1}\n                      color={isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1}\n                    >\n                      {stringUrl.url}\n                    </LinkLabel>\n                  ) : null,\n                  stringUrl.back ? stringUrl.back : '',\n                ];\n              }\n              return (\n                isUrl(word)\n                  ? (\n                    <LinkLabel\n                      className=\"sendbird-og-message-item-body__text-bubble__message\"\n                      key={uuidv4()}\n                      src={word}\n                      type={LabelTypography.BODY_1}\n                      color={isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1}\n                    >\n                      {word}\n                    </LinkLabel>\n                  )\n                  : (`${word} `)\n              );\n            })\n          }\n          {\n            isEditedMessage(message) && (\n              <Label\n                className=\"sendbird-og-message-item-body__text-bubble__message\"\n                type={LabelTypography.BODY_1}\n                color={isByMe ? LabelColors.ONCONTENT_2 : LabelColors.ONBACKGROUND_2}\n              >\n                {` ${stringSet.MESSAGE_EDITED} `}\n              </Label>\n            )\n          }\n        </p>\n      </Label>\n      <div\n        className=\"sendbird-og-message-item-body__og-thumbnail\"\n        onClick={openOGUrl}\n      >\n        <ImageRenderer\n          className=\"sendbird-og-message-item-body__og-thumbnail__image\"\n          url={message?.ogMetaData?.defaultImage?.url || ''}\n          alt={message?.ogMetaData?.defaultImage?.alt}\n          // TODO: Change fixing width and height lengths\n          width=\"320px\"\n          height=\"180px\"\n          defaultComponent={(\n            <div className=\"sendbird-og-message-item-body__og-thumbnail__place-holder\">\n              <Icon\n                className=\"sendbird-og-message-item-body__og-thumbnail__place-holder__icon\"\n                type={IconTypes.THUMBNAIL_NONE}\n                width=\"56px\"\n                height=\"56px\"\n              />\n            </div>\n          )}\n        />\n      </div>\n      <div\n        className=\"sendbird-og-message-item-body__description\"\n        onClick={openOGUrl}\n      >\n        {message?.ogMetaData?.title && (\n          <Label\n            className=\"sendbird-og-message-item-body__description__title\"\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_1}\n          >\n            {message.ogMetaData.title}\n          </Label>\n        )}\n        {message?.ogMetaData?.description && (\n          <Label\n            className=\"sendbird-og-message-item-body__description__description\"\n            type={LabelTypography.BODY_2}\n            color={LabelColors.ONBACKGROUND_1}\n          >\n            {message.ogMetaData.description}\n          </Label>\n        )}\n        {message?.ogMetaData?.url && (\n          <Label\n            className=\"sendbird-og-message-item-body__description__url\"\n            type={LabelTypography.CAPTION_3}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {message.ogMetaData.url}\n          </Label>\n        )}\n      </div>\n      <div className=\"sendbird-og-message-item-body__cover\" />\n    </div>\n  );\n}\n","import React, { ReactElement, useContext } from 'react';\nimport './index.scss';\n\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport { CoreMessageType, getClassName } from '../../utils';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\ninterface Props {\n  className?: string | Array<string>;\n  isByMe?: boolean;\n  message: CoreMessageType;\n  mouseHover?: boolean;\n}\n\nexport default function UnknownMessageItemBody({\n  className,\n  message,\n  isByMe = false,\n  mouseHover = false,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className={getClassName([\n      className,\n      'sendbird-unknown-message-item-body',\n      isByMe ? 'outgoing' : 'incoming',\n      mouseHover ? 'mouse-hover' : '',\n      message?.reactions?.length > 0 ? 'reactions' : '',\n    ])}>\n      <Label\n        className=\"sendbird-unknown-message-item-body__header\"\n        type={LabelTypography.BODY_1}\n        color={isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1}\n      >\n        {stringSet.UNKNOWN__UNKNOWN_MESSAGE_TYPE}\n      </Label>\n      <Label\n        className=\"sendbird-unknown-message-item-body__description\"\n        type={LabelTypography.BODY_1}\n        color={isByMe ? LabelColors.ONCONTENT_2 : LabelColors.ONBACKGROUND_2}\n      >\n        {stringSet.UNKNOWN__CANNOT_READ_MESSAGE}\n      </Label>\n    </div>\n  );\n}\n","import React, { ReactElement, useContext, useState } from 'react';\nimport { FileMessage, UserMessage } from 'sendbird';\nimport './index.scss';\n\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport ImageRenderer from '../ImageRenderer';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport {\n  getClassName,\n  getUIKitFileType,\n  getUIKitFileTypes,\n  isFileMessage,\n  isGif,\n  isSupportedFileView,\n  isThumbnailMessage,\n  isUserMessage,\n  isVideo,\n  truncateString,\n} from '../../utils';\ninterface Props {\n  message?: UserMessage | FileMessage;\n  userId?: string;\n  isByMe?: boolean;\n  className?: string | Array<string>;\n  onClick?: () => void;\n}\n\nexport default function QuoteMessage({\n  message,\n  userId = '',\n  isByMe = false,\n  className,\n  onClick,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n\n  const { parentMessage } = message;\n  const parentMessageSender = (parentMessage as UserMessage | FileMessage)?.sender;\n  const parentMessageSenderNickname = (userId === parentMessageSender?.userId) ? stringSet.QUOTED_MESSAGE__CURRENT_USER : parentMessageSender?.nickname;\n  const parentMessageUrl = (parentMessage as FileMessage)?.url || '';\n  const parentMessageType = (parentMessage as FileMessage)?.type;\n  const currentMessageSenderNickname = (userId === message?.sender?.userId) ? stringSet.QUOTED_MESSAGE__CURRENT_USER : message?.sender?.nickname;\n\n  const [isThumbnailLoaded, setThumbnailLoaded] = useState(false);\n  const uikitFileTypes = getUIKitFileTypes();\n  const splitFileName = (parentMessage as FileMessage)?.name ? (parentMessage as FileMessage).name.split('/') : parentMessageUrl.split('/');\n\n  return (\n    <div\n      className={getClassName([className, 'sendbird-quote-message', isByMe ? 'outgoing' : 'incoming'])}\n      key={parentMessage?.messageId}\n      onClick={() => { if (onClick) onClick() }}\n    >\n      <div className=\"sendbird-quote-message__replied-to\">\n        <Icon\n          className=\"sendbird-quote-message__replied-to__icon\"\n          type={IconTypes.REPLY}\n          fillColor={IconColors.ON_BACKGROUND_3}\n          width=\"12px\"\n          height=\"12px\"\n        />\n        <Label\n          className=\"sendbird-quote-message__replied-to__text\"\n          type={LabelTypography.CAPTION_2}\n          color={LabelColors.ONBACKGROUND_3}\n        >\n          {`${currentMessageSenderNickname} ${stringSet.QUOTED_MESSAGE__REPLIED_TO} ${parentMessageSenderNickname}`}\n        </Label>\n      </div>\n      <div className=\"sendbird-quote-message__replied-message\">\n        {/* text message */}\n        {(isUserMessage(parentMessage as UserMessage) && (parentMessage as UserMessage)?.message?.length > 0) && (\n          <div className=\"sendbird-quote-message__replied-message__text-message\">\n            <Label\n              className=\"sendbird-quote-message__replied-message__text-message__word\"\n              type={LabelTypography.BODY_2}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {(parentMessage as UserMessage)?.message}\n            </Label>\n          </div>\n        )}\n        {/* thumbnail message */}\n        {(isThumbnailMessage(parentMessage as FileMessage) && parentMessageUrl) && (\n          <div className=\"sendbird-quote-message__replied-message__thumbnail-message\">\n            <ImageRenderer\n              className=\"sendbird-quote-message__replied-message__thumbnail-message__image\"\n              url={parentMessageUrl}\n              alt={parentMessageType}\n              width=\"144px\"\n              height=\"108px\"\n              onLoad={() => setThumbnailLoaded(true)}\n              defaultComponent={(\n                <div className=\"sendbird-quote-message__replied-message__thumbnail-message__placeholder\">\n                  <div className=\"sendbird-quote-message__replied-message__thumbnail-message__placeholder__icon\">\n                    <Icon\n                      type={isVideo(parentMessageType) ? IconTypes.PLAY : IconTypes.PHOTO}\n                      fillColor={IconColors.ON_BACKGROUND_2}\n                      width=\"22px\"\n                      height=\"22px\"\n                    />\n                  </div>\n                </div>\n              )}\n            />\n            {(isVideo(parentMessageType) && !((parentMessage as FileMessage)?.thumbnails?.length > 0)) && (\n              <>\n                <video className=\"sendbird-quote-message__replied-message__thumbnail-message__video\">\n                  <source src={parentMessageUrl} type={parentMessageType} />\n                </video>\n                <div className=\"sendbird-quote-message__replied-message__thumbnail-message__cover\">\n                  <div className=\"sendbird-quote-message__replied-message__thumbnail-message__cover__icon\">\n                    <Icon\n                      type={IconTypes.PLAY}\n                      fillColor={IconColors.GRAY}\n                      width=\"14px\"\n                      height=\"14px\"\n                    />\n                  </div>\n                </div>\n              </>\n            )}\n            {(isThumbnailLoaded && isGif(parentMessageType)) && (\n              <div className=\"sendbird-quote-message__replied-message__thumbnail-message__cover\">\n                <div className=\"sendbird-quote-message__replied-message__thumbnail-message__cover__icon\">\n                  <Icon\n                    type={IconTypes.GIF}\n                    fillColor={IconColors.GRAY}\n                    width=\"14px\"\n                    height=\"14px\"\n                  />\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n        {/* file message */}\n        {(isFileMessage(parentMessage as FileMessage) && !isSupportedFileView((parentMessage as FileMessage).type) && parentMessageUrl) && (\n          <div className=\"sendbird-quote-message__replied-message__file-message\">\n            <Icon\n              className=\"sendbird-quote-message__replied-message__file-message__type-icon\"\n              type={{\n                [uikitFileTypes.IMAGE]: IconTypes.PHOTO,\n                [uikitFileTypes.VIDEO]: IconTypes.PLAY,\n                [uikitFileTypes.AUDIO]: IconTypes.FILE_AUDIO,\n                [uikitFileTypes.GIF]: IconTypes.GIF,\n                [uikitFileTypes.OTHERS]: IconTypes.FILE_DOCUMENT,\n              }[getUIKitFileType(parentMessageType)]}\n              fillColor={IconColors.ON_BACKGROUND_3}\n              width=\"16px\"\n              height=\"16px\"\n            />\n            <Label\n              className=\"sendbird-quote-message__replied-message__file-message__file-name\"\n              type={LabelTypography.BODY_2}\n              color={LabelColors.ONBACKGROUND_3}\n            >\n              {truncateString(splitFileName[splitFileName.length - 1])}\n            </Label>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useContext,\n  useRef,\n  useState,\n} from 'react';\nimport { GroupChannel, AdminMessage, UserMessage, FileMessage, EmojiContainer } from 'sendbird';\nimport format from 'date-fns/format';\nimport './index.scss';\n\nimport Avatar from '../Avatar';\nimport UserProfile from '../UserProfile';\nimport MessageStatus from '../MessageStatus';\nimport MessageItemMenu from '../MessageItemMenu';\nimport MessageItemReactionMenu from '../MessageItemReactionMenu';\nimport ContextMenu, { MenuItems } from '../ContextMenu';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport EmojiReactions from '../EmojiReactions';\n\nimport ClientAdminMessage from '../AdminMessage';\nimport TextMessageItemBody from '../TextMessageItemBody';\nimport FileMessageItemBody from '../FileMessageItemBody';\nimport ThumbnailMessageItemBody from '../ThumbnailMessageItemBody';\nimport OGMessageItemBody from '../OGMessageItemBody';\nimport UnknownMessageItemBody from '../UnknownMessageItemBody';\nimport QuoteMessage from '../QuoteMessage';\n\nimport {\n  getClassName,\n  getUIKitMessageTypes,\n  getUIKitMessageType,\n  isTextMessage,\n  isOGMessage,\n  isThumbnailMessage,\n  getSenderName,\n} from '../../utils';\nimport { UserProfileContext } from '../../lib/UserProfileContext';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport { ReplyType } from '../../index.js';\n\ninterface Props {\n  className?: string | Array<string>;\n  userId: string;\n  channel: GroupChannel;\n  message: AdminMessage | UserMessage | FileMessage;\n  disabled?: boolean;\n  chainTop?: boolean;\n  chainBottom?: boolean;\n  useReaction?: boolean;\n  replyType?: ReplyType;\n  nicknamesMap?: Map<string, string>;\n  emojiContainer?: EmojiContainer;\n  scrollToMessage?: (createdAt: number, messageId: number) => void;\n  showEdit?: (bool: boolean) => void;\n  showRemove?: (bool: boolean) => void;\n  showFileViewer?: (bool: boolean) => void;\n  resendMessage?: (message: UserMessage | FileMessage) => void;\n  toggleReaction?: (message: UserMessage | FileMessage, reactionKey: string, isReacted: boolean) => void;\n  setQuoteMessage?: (message: UserMessage | FileMessage) => void;\n}\nexport default function MessageContent({\n  className,\n  userId,\n  channel,\n  message,\n  disabled = false,\n  chainTop = false,\n  chainBottom = false,\n  useReaction = false,\n  replyType,\n  nicknamesMap,\n  emojiContainer,\n  scrollToMessage,\n  showEdit,\n  showRemove,\n  showFileViewer,\n  resendMessage,\n  toggleReaction,\n  setQuoteMessage,\n}: Props): ReactElement {\n  const messageTypes = getUIKitMessageTypes();\n  const { disableUserProfile, renderUserProfile } = useContext(UserProfileContext);\n  const { dateLocale } = useContext(LocalizationContext);\n  const avatarRef = useRef(null);\n  const [mouseHover, setMouseHover] = useState(false);\n  const [supposedHover, setSupposedHover] = useState(false);\n\n  const isByMe = (userId === (message as UserMessage | FileMessage)?.sender?.userId)\n    || ((message as UserMessage | FileMessage).sendingStatus === 'pending')\n    || ((message as UserMessage | FileMessage).sendingStatus === 'failed');\n  const isByMeClassName = isByMe ? 'outgoing' : 'incoming';\n  const chainTopClassName = chainTop ? 'chain-top' : '';\n  const useReactionClassName = useReaction ? 'use-reactions' : '';\n  const supposedHoverClassName = supposedHover ? 'supposed-hover' : '';\n  const useReplying = !!((replyType === 'QUOTE_REPLY') && message?.parentMessageId && message?.parentMessage);\n  const useReplyingClassName = useReplying ? 'use-quote' : '';\n  if (message?.isAdminMessage?.() || message?.messageType === 'admin') {\n    return (<ClientAdminMessage message={message} />);\n  }\n  return (\n    <div\n      className={getClassName([className, 'sendbird-message-content', isByMeClassName])}\n      onMouseOver={() => setMouseHover(true)}\n      onMouseLeave={() => setMouseHover(false)}\n    >\n      {/* left */}\n      <div className={getClassName(['sendbird-message-content__left', useReactionClassName, isByMeClassName, useReplyingClassName])}>\n        {(!isByMe && !chainBottom) && (\n          /** user profile */\n          <ContextMenu\n            menuTrigger={(toggleDropdown: () => void): ReactElement => (\n              <Avatar\n                className=\"sendbird-message-content__left__avatar\"\n                src={message?.sender?.profileUrl || ''}\n                ref={avatarRef}\n                width=\"28px\"\n                height=\"28px\"\n                onClick={(): void => { if (!disableUserProfile) toggleDropdown() }}\n              />\n            )}\n            menuItems={(closeDropdown: () => void): ReactElement => (\n              <MenuItems\n                /**\n                * parentRef: For catching location(x, y) of MenuItems\n                * parentContainRef: For toggling more options(menus & reactions)\n                */\n                parentRef={avatarRef}\n                parentContainRef={avatarRef}\n                closeDropdown={closeDropdown}\n                style={{ paddingTop: 0, paddingBottom: 0 }}\n              >\n                {renderUserProfile\n                  ? renderUserProfile({ user: message?.sender, close: closeDropdown })\n                  : (<UserProfile user={message.sender} onSuccess={closeDropdown} />)\n                }\n              </MenuItems>\n            )}\n          />\n        )}\n        {/* outgoing menu */}\n        {isByMe && (\n          <div className={getClassName(['sendbird-message-content-menu', useReactionClassName, supposedHoverClassName, isByMeClassName])}>\n            <MessageItemMenu\n              className=\"sendbird-message-content-menu__normal-menu\"\n              channel={channel}\n              message={message as UserMessage | FileMessage}\n              isByMe={isByMe}\n              replyType={replyType}\n              disabled={disabled}\n              showEdit={showEdit}\n              showRemove={showRemove}\n              resendMessage={resendMessage}\n              setQuoteMessage={setQuoteMessage}\n              setSupposedHover={setSupposedHover}\n            />\n            {useReaction && (\n              <MessageItemReactionMenu\n                className=\"sendbird-message-content-menu__reaction-menu\"\n                message={message as UserMessage | FileMessage}\n                channel={channel}\n                userId={userId}\n                spaceFromTrigger={{}}\n                emojiContainer={emojiContainer}\n                toggleReaction={toggleReaction}\n                setSupposedHover={setSupposedHover}\n              />\n            )}\n          </div>\n        )}\n      </div>\n      {/* middle */}\n      <div className=\"sendbird-message-content__middle\">\n        {(!isByMe && !chainTop && !useReplying) && (\n          <Label\n            className=\"sendbird-message-content__middle__sender-name\"\n            type={LabelTypography.CAPTION_2}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {getSenderName(message)}\n          </Label>\n        )}\n        {/* quote message */}\n        {(useReplying) ? (\n          <div className={getClassName(['sendbird-message-content__middle__quote-message', isByMe ? 'outgoing' : 'incoming', useReplyingClassName])}>\n            <QuoteMessage\n              message={message}\n              userId={userId}\n              isByMe={isByMe}\n              onClick={() => {\n                if (message?.parentMessage?.createdAt && message?.parentMessageId) {\n                  scrollToMessage(message.parentMessage.createdAt, message.parentMessageId);\n                }\n              }}\n            />\n          </div>\n        ) : null}\n        {/* container: message item body + emoji reactions */}\n        <div className={getClassName(['sendbird-message-content__middle__body-container'])} >\n          {/* message status component */}\n          {(isByMe && !chainBottom) && (\n            <div className={getClassName(['sendbird-message-content__middle__body-container__created-at', 'left', supposedHoverClassName])}>\n              <div className=\"sendbird-message-content__middle__body-container__created-at__component-container\">\n                <MessageStatus\n                  message={message}\n                  channel={channel}\n                />\n              </div>\n            </div>\n          )}\n          {/* message item body components */}\n          {isTextMessage(message as UserMessage) && (\n            <TextMessageItemBody\n              className=\"sendbird-message-content__middle__message-item-body\"\n              message={message as UserMessage}\n              isByMe={isByMe}\n              mouseHover={mouseHover}\n            />\n          )}\n          {(isOGMessage(message as UserMessage)) && (\n            <OGMessageItemBody\n              className=\"sendbird-message-content__middle__message-item-body\"\n              message={message as UserMessage}\n              isByMe={isByMe}\n              mouseHover={mouseHover}\n            />\n          )}\n          {(getUIKitMessageType((message as FileMessage)) === messageTypes.FILE) && (\n            <FileMessageItemBody\n              className=\"sendbird-message-content__middle__message-item-body\"\n              message={message as FileMessage}\n              isByMe={isByMe}\n              mouseHover={mouseHover}\n            />\n          )}\n          {(isThumbnailMessage(message as FileMessage)) && (\n            <ThumbnailMessageItemBody\n              className=\"sendbird-message-content__middle__message-item-body\"\n              message={message as FileMessage}\n              isByMe={isByMe}\n              mouseHover={mouseHover}\n              showFileViewer={showFileViewer}\n            />\n          )}\n          {(getUIKitMessageType((message as FileMessage)) === messageTypes.UNKNOWN) && (\n            <UnknownMessageItemBody\n              className=\"sendbird-message-content__middle__message-item-body\"\n              message={message}\n              isByMe={isByMe}\n              mouseHover={mouseHover}\n            />\n          )}\n          {/* reactions */}\n          {(useReaction && message?.reactions?.length > 0) && (\n            <div className={getClassName([\n              'sendbird-message-content-reactions',\n              (!isByMe || isThumbnailMessage(message as FileMessage) || isOGMessage(message as UserMessage)) ? '' : 'primary',\n              mouseHover ? 'mouse-hover' : '',\n            ])}>\n              <EmojiReactions\n                userId={userId}\n                message={message}\n                isByMe={isByMe}\n                emojiContainer={emojiContainer}\n                memberNicknamesMap={nicknamesMap}\n                toggleReaction={toggleReaction}\n              />\n            </div>\n          )}\n          {(!isByMe && !chainBottom) && (\n            <Label\n              className={getClassName(['sendbird-message-content__middle__body-container__created-at', 'right', supposedHoverClassName])}\n              type={LabelTypography.CAPTION_3}\n              color={LabelColors.ONBACKGROUND_2}\n            >\n              {format(message.createdAt, 'p', { locale: dateLocale })}\n            </Label>\n          )}\n        </div>\n      </div>\n      {/* right */}\n      <div className={getClassName(['sendbird-message-content__right', chainTopClassName, useReactionClassName, useReplyingClassName])}>\n        {/* incoming menu */}\n        {!isByMe && (\n          <div className={getClassName(['sendbird-message-content-menu', chainTopClassName, supposedHoverClassName, isByMeClassName])}>\n            {useReaction && (\n              <MessageItemReactionMenu\n                className=\"sendbird-message-content-menu__reaction-menu\"\n                message={message as UserMessage | FileMessage}\n                channel={channel}\n                userId={userId}\n                spaceFromTrigger={{}}\n                emojiContainer={emojiContainer}\n                toggleReaction={toggleReaction}\n                setSupposedHover={setSupposedHover}\n              />\n            )}\n            <MessageItemMenu\n              className=\"sendbird-message-content-menu__normal-menu\"\n              channel={channel}\n              message={message as UserMessage | FileMessage}\n              isByMe={isByMe}\n              replyType={replyType}\n              disabled={disabled}\n              showEdit={showEdit}\n              showRemove={showRemove}\n              resendMessage={resendMessage}\n              setQuoteMessage={setQuoteMessage}\n              setSupposedHover={setSupposedHover}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Modal from '../../../ui/Modal';\nimport { ButtonTypes } from '../../../ui/Button';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\n\nconst RemoveMessage = (props) => {\n  const {\n    onCloseModal,\n    onDeleteMessage,\n    message,\n  } = props;\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <Modal\n      type={ButtonTypes.DANGER}\n      disabled={message?.threadInfo?.replyCount > 0}\n      onCancel={onCloseModal}\n      onSubmit={onDeleteMessage}\n      submitText=\"Delete\"\n      titleText={stringSet.MODAL__DELETE_MESSAGE__TITLE}\n    />\n  );\n};\n\nRemoveMessage.propTypes = {\n  onCloseModal: PropTypes.func.isRequired,\n  onDeleteMessage: PropTypes.func.isRequired,\n  message: PropTypes.shape({\n    threadInfo: PropTypes.shape({\n      replyCount: PropTypes.number,\n    }),\n  }).isRequired,\n};\n\nexport default RemoveMessage;\n","import React, {\n  useState,\n  useRef,\n  useMemo,\n  useLayoutEffect,\n  useContext,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport format from 'date-fns/format';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport MessageContent from '../../../ui/MessageContent';\nimport DateSeparator from '../../../ui/DateSeparator';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport MessageInput from '../../../ui/MessageInput';\nimport FileViewer from '../../../ui/FileViewer';\nimport RemoveMessageModal from './RemoveMessage';\nimport { getClassName } from '../../../utils';\n\nexport default function MessageHoc({\n  message,\n  userId,\n  disabled,\n  editDisabled,\n  hasSeparator,\n  deleteMessage,\n  updateMessage,\n  scrollToMessage,\n  resendMessage,\n  useReaction,\n  replyType,\n  chainTop,\n  chainBottom,\n  membersMap,\n  emojiContainer,\n  animatedMessageId,\n  highLightedMessageId,\n  toggleReaction,\n  quoteMessage,\n  setQuoteMessage,\n  renderCustomMessage,\n  currentGroupChannel,\n  handleScroll,\n}) {\n  const { sender = {} } = message;\n  const [showEdit, setShowEdit] = useState(false);\n  const [showRemove, setShowRemove] = useState(false);\n  const [showFileViewer, setShowFileViewer] = useState(false);\n  const [isAnimated, setIsAnimated] = useState(false);\n  const [isHighlighted, setIsHighlighted] = useState(false);\n  const editMessageInputRef = useRef(null);\n  const useMessageScrollRef = useRef(null);\n\n  const { dateLocale } = useContext(LocalizationContext);\n  useLayoutEffect(() => {\n    handleScroll();\n  }, [showEdit, message?.reactions?.length]);\n\n  useLayoutEffect(() => {\n    if (highLightedMessageId === message.messageId) {\n      if (useMessageScrollRef && useMessageScrollRef.current) {\n        useMessageScrollRef.current.scrollIntoView({\n          block: 'center',\n          inline: 'center',\n        });\n        setIsAnimated(false);\n        setTimeout(() => {\n          setIsHighlighted(true);\n        }, 500);\n      }\n    } else {\n      setIsHighlighted(false);\n    }\n  }, [highLightedMessageId, useMessageScrollRef.current, message.messageId]);\n  useLayoutEffect(() => {\n    if (animatedMessageId === message.messageId) {\n      if (useMessageScrollRef && useMessageScrollRef.current) {\n        useMessageScrollRef.current.scrollIntoView({\n          block: 'center',\n          inline: 'center',\n        });\n        setIsHighlighted(false);\n        setTimeout(() => {\n          setIsAnimated(true);\n        }, 500);\n      }\n    } else {\n      setIsAnimated(false);\n    }\n  }, [animatedMessageId, useMessageScrollRef.current, message.messageId]);\n  const RenderedMessage = useMemo(() => {\n    if (renderCustomMessage) {\n      return renderCustomMessage(message, currentGroupChannel, chainTop, chainBottom);\n      // TODO: Let's change this to object type on next major version up\n      // and add params 'hasSeparator' and 'menuDisabled', scrollToMessage\n    }\n    return null;\n  }, [message, message.message, renderCustomMessage]);\n\n  const isByMe = (userId === sender?.userId)\n    || (message.requestState === 'pending')\n    || (message.requestState === 'failed');\n\n  if (RenderedMessage) {\n    return (\n      <div\n        ref={useMessageScrollRef}\n        className={getClassName([\n          'sendbird-msg-hoc sendbird-msg--scroll-ref',\n          isAnimated ? 'sendbird-msg-hoc__animated' : '',\n          isHighlighted ? 'sendbird-msg-hoc__highlighted' : '',\n        ])}\n      >\n        {/* date-separator */}\n        {\n          hasSeparator && (\n            <DateSeparator>\n              <Label type={LabelTypography.CAPTION_2} color={LabelColors.ONBACKGROUND_2}>\n                {format(message?.createdAt, 'MMMM dd, yyyy', { locale: dateLocale })}\n              </Label>\n            </DateSeparator>\n          )\n        }\n        <RenderedMessage message={message} />\n      </div>\n    );\n  }\n\n  if (showEdit) {\n    return (\n      <MessageInput\n        isEdit\n        disabled={editDisabled}\n        ref={editMessageInputRef}\n        name={message.messageId}\n        onSendMessage={updateMessage}\n        onCancelEdit={() => { setShowEdit(false); }}\n        value={message.message}\n      />\n    );\n  }\n\n  return (\n    <div\n      ref={useMessageScrollRef}\n      className={getClassName([\n        'sendbird-msg-hoc sendbird-msg--scroll-ref',\n        isAnimated ? 'sendbird-msg-hoc__animated' : '',\n        isHighlighted ? 'sendbird-msg-hoc__highlighted' : '',\n      ])}\n      style={{ marginBottom: '2px' }}\n    >\n      {/* date-separator */}\n      {\n        hasSeparator && (\n          <DateSeparator>\n            <Label type={LabelTypography.CAPTION_2} color={LabelColors.ONBACKGROUND_2}>\n              {format(message?.createdAt, 'MMMM dd, yyyy', { locale: dateLocale })}\n            </Label>\n          </DateSeparator>\n        )\n      }\n      {/* Message */}\n      <MessageContent\n        className=\"sendbird-message-hoc__message-content\"\n        userId={userId}\n        scrollToMessage={scrollToMessage}\n        channel={currentGroupChannel}\n        message={message}\n        disabled={disabled}\n        chainTop={chainTop}\n        chainBottom={chainBottom}\n        useReaction={useReaction}\n        replyType={replyType}\n        nicknamesMap={membersMap}\n        emojiContainer={emojiContainer}\n        showEdit={setShowEdit}\n        showRemove={setShowRemove}\n        showFileViewer={setShowFileViewer}\n        resendMessage={resendMessage}\n        toggleReaction={toggleReaction}\n        quoteMessage={quoteMessage}\n        setQuoteMessage={setQuoteMessage}\n      />\n      {/* Modal */}\n      {\n        showRemove && (\n          <RemoveMessageModal\n            message={message}\n            onCloseModal={() => setShowRemove(false)}\n            onDeleteMessage={() => {\n              deleteMessage(message);\n              if (message?.messageId === quoteMessage?.messageId) {\n                setQuoteMessage(null);\n              }\n            }}\n          />\n        )\n      }\n      {\n        showFileViewer && (\n          <FileViewer\n            onClose={() => setShowFileViewer(false)}\n            message={message}\n            onDelete={() => {\n              deleteMessage(message, () => {\n                setShowFileViewer(false);\n              });\n            }}\n            isByMe={isByMe}\n          />\n        )\n      }\n    </div>\n  );\n}\n\nMessageHoc.propTypes = {\n  userId: PropTypes.string,\n  message: PropTypes.shape({\n    isFileMessage: PropTypes.func,\n    isAdminMessage: PropTypes.func,\n    isUserMessage: PropTypes.func,\n    isDateseparator: PropTypes.func,\n    // should be a number, but there's a bug in SDK shich returns string\n    messageId: PropTypes.number,\n    type: PropTypes.string,\n    createdAt: PropTypes.number,\n    message: PropTypes.string,\n    requestState: PropTypes.string,\n    messageType: PropTypes.string,\n    sender: PropTypes.shape({ userId: PropTypes.string }),\n    ogMetaData: PropTypes.shape({}),\n    parentMessageId: PropTypes.number,\n    reactions: PropTypes.arrayOf(PropTypes.number),\n  }),\n  animatedMessageId: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  highLightedMessageId: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  renderCustomMessage: PropTypes.func,\n  currentGroupChannel: PropTypes.shape({}),\n  hasSeparator: PropTypes.bool,\n  disabled: PropTypes.bool,\n  editDisabled: PropTypes.bool,\n  deleteMessage: PropTypes.func.isRequired,\n  scrollToMessage: PropTypes.func,\n  updateMessage: PropTypes.func.isRequired,\n  resendMessage: PropTypes.func.isRequired,\n  useReaction: PropTypes.bool.isRequired,\n  replyType: PropTypes.oneOf(['NONE', 'QUOTE_REPLY', 'THREAD']).isRequired,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n  membersMap: PropTypes.instanceOf(Map).isRequired,\n  emojiContainer: PropTypes.shape({\n    emojiCategories: PropTypes.arrayOf(PropTypes.shape({\n      emojis: PropTypes.arrayOf(PropTypes.shape({\n        key: PropTypes.string,\n        url: PropTypes.string,\n      })),\n    })),\n  }),\n  toggleReaction: PropTypes.func,\n  quoteMessage: PropTypes.shape({\n    messageId: PropTypes.string,\n  }),\n  setQuoteMessage: PropTypes.func.isRequired,\n  handleScroll: PropTypes.func.isRequired,\n};\n\nMessageHoc.defaultProps = {\n  userId: '',\n  editDisabled: false,\n  renderCustomMessage: null,\n  currentGroupChannel: {},\n  message: {},\n  hasSeparator: false,\n  disabled: false,\n  animatedMessageId: null,\n  highLightedMessageId: null,\n  toggleReaction: () => { },\n  scrollToMessage: () => { },\n  emojiContainer: {},\n  quoteMessage: null,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport isSameDay from 'date-fns/isSameDay';\n\nimport './conversation-scroll.scss';\nimport * as messageActionTypes from '../dux/actionTypes';\n\nimport MessageHOC from './MessageHOC';\nimport { compareMessagesForGrouping } from '../utils';\nimport PlaceHolder, { PlaceHolderTypes } from '../../../ui/PlaceHolder';\nimport Icon, { IconTypes, IconColors } from '../../../ui/Icon';\n\nconst SCROLL_REF_CLASS_NAME = '.sendbird-msg--scroll-ref';\n\nexport default class ConversationScroll extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleScroll = () => {\n    const { scrollRef } = this?.props;\n    const current = scrollRef?.current;\n    if (current) {\n      const bottom = current.scrollHeight - current.scrollTop - current.offsetHeight;\n      const { scrollBottom = 0 } = this.state;\n      if (scrollBottom < bottom) {\n        current.scrollTop += bottom - scrollBottom;\n      }\n    }\n  }\n\n  onScroll = (e) => {\n    const {\n      scrollRef,\n      hasMore,\n      messagesDispatcher,\n      onScroll,\n      onScrollDown,\n      currentGroupChannel,\n    } = this.props;\n\n    const element = e.target;\n    const {\n      scrollTop,\n      clientHeight,\n      scrollHeight,\n    } = element;\n    if (scrollTop === 0) {\n      if (!hasMore) {\n        return;\n      }\n      const nodes = scrollRef.current.querySelectorAll(SCROLL_REF_CLASS_NAME);\n      const first = nodes && nodes[0];\n      onScroll(([messages]) => {\n        if (messages) {\n          // https://github.com/scabbiaza/react-scroll-position-on-updating-dom\n          // Set block to nearest to prevent unexpected scrolling from outer components\n          try {\n            first.scrollIntoView({ block: 'nearest' });\n          } catch (error) {\n            //\n          }\n        }\n      });\n    }\n\n    if (clientHeight + scrollTop === scrollHeight) {\n      const nodes = scrollRef.current.querySelectorAll(SCROLL_REF_CLASS_NAME);\n      const last = nodes && nodes[nodes.length - 1];\n      onScrollDown(([messages]) => {\n        if (messages) {\n          // https://github.com/scabbiaza/react-scroll-position-on-updating-dom\n          try {\n            last.scrollIntoView({ block: 'nearest' });\n          } catch (error) {\n            //\n          }\n        }\n      });\n    }\n\n    // do this later\n    setTimeout(() => {\n      // mark as read if scroll is at end\n      if (clientHeight + scrollTop === scrollHeight) {\n        messagesDispatcher({\n          type: messageActionTypes.MARK_AS_READ,\n        });\n        currentGroupChannel.markAsRead();\n      }\n\n      // save the lastest scroll bottom value\n      if (scrollRef?.current) {\n        const current = scrollRef?.current;\n        this.setState((state) => ({\n          ...state,\n          scrollBottom: current.scrollHeight - current.scrollTop - current.offsetHeight,\n        }), () => { });\n      }\n    }, 500);\n  }\n\n  render() {\n    const {\n      userId,\n      disabled,\n      scrollRef,\n      membersMap,\n      allMessages,\n      scrollToMessage,\n      useReaction,\n      replyType,\n      emojiAllMap,\n      editDisabled,\n      deleteMessage,\n      updateMessage,\n      resendMessage,\n      renderCustomMessage,\n      renderChatItem,\n      animatedMessageId,\n      highLightedMessageId,\n      emojiContainer,\n      toggleReaction,\n      useMessageGrouping,\n      currentGroupChannel,\n      memoizedEmojiListItems,\n      showScrollBot,\n      onClickScrollBot,\n      quoteMessage,\n      setQuoteMessage,\n    } = this.props;\n\n    if (allMessages.length < 1) {\n      return (\n        <PlaceHolder\n          className=\"sendbird-conversation__no-messages\"\n          type={PlaceHolderTypes.NO_MESSAGES}\n        />\n      );\n    }\n\n    return (\n      <div className=\"sendbird-conversation__messages\">\n        <div className=\"sendbird-conversation__scroll-container\">\n          <div className=\"sendbird-conversation__padding\" />\n          {/*\n            To do: Implement windowing\n            Implement windowing if you are dealing with large number of messages/channels\n            https://github.com/bvaughn/react-window -> recommendation\n            We hesitate to bring one more dependency to our library,\n            we are planning to implement it inside the library\n          */}\n          <div\n            className=\"sendbird-conversation__messages-padding\"\n            ref={scrollRef}\n            onScroll={this.onScroll}\n          >\n            {\n              allMessages.map(\n                (m, idx) => {\n                  const previousMessage = allMessages[idx - 1];\n                  const nextMessage = allMessages[idx + 1];\n                  const [chainTop, chainBottom] = useMessageGrouping\n                    ? compareMessagesForGrouping(previousMessage, m, nextMessage)\n                    : [false, false];\n                  const previousMessageCreatedAt = previousMessage && previousMessage.createdAt;\n                  const currentCreatedAt = m.createdAt;\n                  // https://stackoverflow.com/a/41855608\n                  const hasSeparator = !(previousMessageCreatedAt && (\n                    isSameDay(currentCreatedAt, previousMessageCreatedAt)\n                  ));\n                  if (renderChatItem) {\n                    return (\n                      <div\n                        key={m.messageId || m.reqId}\n                        className=\"sendbird-msg--scroll-ref\"\n                      >\n                        {\n                          renderChatItem({\n                            message: m,\n                            animatedMessageId,\n                            highLightedMessageId,\n                            channel: currentGroupChannel,\n                            onDeleteMessage: deleteMessage,\n                            onUpdateMessage: updateMessage,\n                            onResendMessage: resendMessage,\n                            onScrollToMessage: scrollToMessage,\n                            onReplyMessage: setQuoteMessage,\n                            emojiContainer,\n                            chainTop,\n                            chainBottom,\n                            hasSeparator,\n                            menuDisabled: disabled,\n                          })\n                        }\n                      </div>\n                    );\n                  }\n\n                  return (\n                    <MessageHOC\n                      animatedMessageId={animatedMessageId}\n                      highLightedMessageId={highLightedMessageId}\n                      renderCustomMessage={renderCustomMessage}\n                      key={m.messageId || m.reqId}\n                      userId={userId}\n                      handleScroll={this.handleScroll}\n                      message={m}\n                      quoteMessage={quoteMessage}\n                      scrollToMessage={scrollToMessage}\n                      currentGroupChannel={currentGroupChannel}\n                      disabled={disabled}\n                      membersMap={membersMap}\n                      chainTop={chainTop}\n                      useReaction={useReaction}\n                      replyType={replyType}\n                      emojiAllMap={emojiAllMap}\n                      emojiContainer={emojiContainer}\n                      editDisabled={editDisabled}\n                      hasSeparator={hasSeparator}\n                      chainBottom={chainBottom}\n                      updateMessage={updateMessage}\n                      deleteMessage={deleteMessage}\n                      resendMessage={resendMessage}\n                      toggleReaction={toggleReaction}\n                      setQuoteMessage={setQuoteMessage}\n                      memoizedEmojiListItems={memoizedEmojiListItems}\n                    />\n                  );\n                },\n              )\n            }\n          </div>\n        </div>\n        {\n          showScrollBot && (\n            <div\n              className=\"sendbird-conversation__scroll-bottom-button\"\n              onClick={onClickScrollBot}\n              onKeyDown={onClickScrollBot}\n              tabIndex={0}\n              role=\"button\"\n            >\n              <Icon\n                width=\"24px\"\n                height=\"24px\"\n                type={IconTypes.CHEVRON_DOWN}\n                fillColor={IconColors.PRIMARY}\n              />\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nConversationScroll.propTypes = {\n  // https://stackoverflow.com/a/52646941\n  scrollRef: PropTypes.shape({\n    current: PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.shape({}),\n    ]),\n  }).isRequired,\n  hasMore: PropTypes.bool,\n  messagesDispatcher: PropTypes.func.isRequired,\n  onScroll: PropTypes.func,\n  onScrollDown: PropTypes.func,\n  editDisabled: PropTypes.bool,\n  disabled: PropTypes.bool,\n  userId: PropTypes.string,\n  allMessages: PropTypes.arrayOf(PropTypes.shape({\n    createdAt: PropTypes.number,\n  })).isRequired,\n  deleteMessage: PropTypes.func.isRequired,\n  resendMessage: PropTypes.func.isRequired,\n  updateMessage: PropTypes.func.isRequired,\n  currentGroupChannel: PropTypes.shape({\n    markAsRead: PropTypes.func,\n    members: PropTypes.arrayOf(PropTypes.shape({})),\n  }).isRequired,\n  animatedMessageId: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  highLightedMessageId: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  renderChatItem: PropTypes.func,\n  renderCustomMessage: PropTypes.func,\n  scrollToMessage: PropTypes.func,\n  useReaction: PropTypes.bool,\n  replyType: PropTypes.oneOf(['NONE', 'QUOTE_REPLY', 'THREAD']),\n  showScrollBot: PropTypes.bool,\n  onClickScrollBot: PropTypes.func,\n  emojiContainer: PropTypes.shape({}),\n  emojiAllMap: PropTypes.instanceOf(Map),\n  membersMap: PropTypes.instanceOf(Map),\n  useMessageGrouping: PropTypes.bool,\n  toggleReaction: PropTypes.func,\n  memoizedEmojiListItems: PropTypes.func,\n  quoteMessage: PropTypes.shape({}),\n  setQuoteMessage: PropTypes.func.isRequired,\n};\n\nConversationScroll.defaultProps = {\n  hasMore: false,\n  editDisabled: false,\n  disabled: false,\n  userId: '',\n  renderCustomMessage: null,\n  renderChatItem: null,\n  animatedMessageId: null,\n  highLightedMessageId: null,\n  onScroll: null,\n  onScrollDown: null,\n  useReaction: true,\n  replyType: 'NONE',\n  emojiContainer: {},\n  showScrollBot: false,\n  onClickScrollBot: () => { },\n  scrollToMessage: () => { },\n  emojiAllMap: new Map(),\n  membersMap: new Map(),\n  useMessageGrouping: true,\n  toggleReaction: () => { },\n  memoizedEmojiListItems: () => '',\n  quoteMessage: null,\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './notification.scss';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport Icon, { IconTypes, IconColors } from '../../../ui/Icon';\n\nexport default function Notification({\n  count,\n  time,\n  onClick,\n}) {\n  const { stringSet } = useContext(LocalizationContext);\n  const timeArray = time.split(' ');\n  timeArray.splice(-2, 0, stringSet.CHANNEL__MESSAGE_LIST__NOTIFICATION__ON);\n  return (\n    // eslint-disable-next-line\n    <div className=\"sendbird-notification\" onClick={onClick}>\n      <Label className=\"sendbird-notification__text\" color={LabelColors.ONCONTENT_1} type={LabelTypography.CAPTION_2}>\n        {`${count} `}\n        {stringSet.CHANNEL__MESSAGE_LIST__NOTIFICATION__NEW_MESSAGE}\n        {` ${timeArray.join(' ')}`}\n      </Label>\n      <Icon\n        width=\"24px\"\n        height=\"24px\"\n        type={IconTypes.CHEVRON_DOWN}\n        fillColor={IconColors.CONTENT}\n      />\n    </div>\n  );\n}\n\nNotification.propTypes = {\n  count: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  time: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n};\n\nNotification.defaultProps = {\n  count: 0,\n  time: '',\n};\n","import React, { useContext } from 'react';\n\nimport './notification.scss';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport Label, { LabelTypography } from '../../../ui/Label';\n\nconst FrozenNotification = (): JSX.Element => {\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-notification sendbird-notification--frozen\">\n      <Label\n        className=\"sendbird-notification__text\"\n        type={LabelTypography.CAPTION_2}\n      >\n        {stringSet.CHANNEL_FROZEN}\n      </Label>\n    </div>\n  );\n}\n\nexport default FrozenNotification;\n","import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport { uuidv4 } from '../../../utils/uuid';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\n\nconst TypingIndicatorText = ({ members }) => {\n  const { stringSet } = useContext(LocalizationContext);\n  if (!members || members.length === 0) {\n    return '';\n  }\n\n  if (members && members.length === 1) {\n    return `${members[0].nickname} ${stringSet.TYPING_INDICATOR__IS_TYPING}`;\n  }\n\n  if (members && members.length === 2) {\n    return `${members[0].nickname} ${stringSet.TYPING_INDICATOR__AND} ${members[1].nickname} ${stringSet.TYPING_INDICATOR__ARE_TYPING}`;\n  }\n\n  return stringSet.TYPING_INDICATOR__MULTIPLE_TYPING;\n};\n\nfunction TypingIndicator(props) {\n  const {\n    className,\n    channelUrl,\n    sb,\n    logger,\n  } = props;\n  const [handlerId, setHandlerId] = useState(uuidv4());\n  const [typingMembers, setTypingMembers] = useState([]);\n\n  useEffect(() => {\n    if (sb && sb.ChannelHandler) {\n      sb.removeChannelHandler(handlerId);\n      const newHandlerId = uuidv4();\n      const handler = new sb.ChannelHandler();\n      // there is a possible warning in here - setState called after unmount\n      handler.onTypingStatusUpdated = (groupChannel) => {\n        logger.info('Channel > Typing Indicator: onTypingStatusUpdated', groupChannel);\n        const members = groupChannel.getTypingMembers();\n        if (groupChannel.url === channelUrl) {\n          setTypingMembers(members);\n        }\n      };\n      sb.addChannelHandler(newHandlerId, handler);\n      setHandlerId(newHandlerId);\n    }\n\n    return () => {\n      setTypingMembers([]);\n      if (sb && sb.removeChannelHandler) {\n        sb.removeChannelHandler(handlerId);\n      }\n    };\n  }, [channelUrl]);\n\n  return (\n    <Label\n      className={className}\n      type={LabelTypography.CAPTION_2}\n      color={LabelColors.ONBACKGROUND_2}\n    >\n      <TypingIndicatorText members={typingMembers} />\n    </Label>\n  );\n}\n\nTypingIndicator.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  channelUrl: PropTypes.string.isRequired,\n  sb: PropTypes.shape({\n    ChannelHandler: PropTypes.func,\n    removeChannelHandler: PropTypes.func,\n    addChannelHandler: PropTypes.func,\n  }).isRequired,\n  logger: PropTypes.shape({\n    info: PropTypes.func,\n  }).isRequired,\n};\nTypingIndicator.defaultProps = {\n  className: '',\n};\n\nexport default TypingIndicator;\n","import React, { ReactElement } from 'react';\nimport { FileMessage } from 'sendbird';\n\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport ImageRenderer from '../ImageRenderer';\nimport { isAudioMessage, isFileMessage, isImageMessage, isThumbnailMessage } from '../../utils';\n\ninterface Props {\n  message: FileMessage;\n}\n\nconst componentClassname = 'sendbird-quote_message_input__avatar';\n\nexport default function QuoteMessageThumbnail({ message }: Props): ReactElement {\n  if (!isFileMessage(message)) {\n    return null;\n  }\n\n  const thumbnailUrl: string = (message.thumbnails && message.thumbnails.length > 0 && message.thumbnails[0].url)\n    || (isImageMessage(message) && message.url);\n  if (isThumbnailMessage(message) && thumbnailUrl) {\n    return (\n      <ImageRenderer\n        className={componentClassname}\n        url={thumbnailUrl}\n        alt={message.type}\n        width=\"44px\"\n        height=\"44px\"\n        fixedSize\n      />\n    );\n  } else if (isAudioMessage(message)) {\n    return (\n      <div className={componentClassname}>\n        <Icon\n          type={IconTypes.FILE_AUDIO}\n          fillColor={IconColors.ON_BACKGROUND_2}\n          width=\"24px\"\n          height=\"24px\"\n        />\n      </div>\n    );\n  } else {\n    return (\n      <div className={componentClassname}>\n        <Icon\n          type={IconTypes.FILE_DOCUMENT}\n          fillColor={IconColors.ON_BACKGROUND_2}\n          width=\"24px\"\n          height=\"24px\"\n        />\n      </div>\n    );\n  }\n}\n","import React, { ReactElement, useContext } from 'react';\nimport { FileMessage, UserMessage } from 'sendbird';\nimport {\n  CoreMessageType,\n  getClassName,\n  isFileMessage,\n  isGifMessage,\n  isImageMessage,\n  isThumbnailMessage,\n  isUserMessage,\n  isVideoMessage,\n} from '../../utils';\n\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nimport QuoteMessageThumbnail from './QuoteMessageThumbnail';\nimport './index.scss';\n\ninterface Props {\n  className?: string | Array<string>;\n  replyingMessage: CoreMessageType;\n  onClose?: (message: CoreMessageType) => void;\n}\n\nexport default function QuoteMessageInput({\n  className,\n  replyingMessage,\n  onClose,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  const fileMessage = replyingMessage as FileMessage;\n  const sender = (replyingMessage as UserMessage | FileMessage)?.sender;\n\n  return (\n    <div className={getClassName(['sendbird-quote_message_input', className])}>\n      <QuoteMessageThumbnail message={fileMessage} />\n      <div\n        className=\"sendbird-quote_message_input__body\"\n        style={{\n          width: `calc(100% - ${fileMessage.isFileMessage() ? '164px' : '120px'})`,\n          left: fileMessage.isFileMessage() ? '92px' : '40px',\n        }}\n      >\n        <Label\n          className=\"sendbird-quote_message_input__body__sender-name\"\n          type={LabelTypography.CAPTION_1}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {`${stringSet.QUOTE_MESSAGE_INPUT__REPLY_TO} ${(sender && sender.nickname) ? sender.nickname : stringSet.NO_NAME}`}\n        </Label>\n        <Label\n          className=\"sendbird-quote_message_input__body__message-content\"\n          type={LabelTypography.BODY_2}\n          color={LabelColors.ONBACKGROUND_3}\n        >\n          {isImageMessage(fileMessage) && !isGifMessage(fileMessage) && stringSet.QUOTE_MESSAGE_INPUT__FILE_TYPE_IMAGE}\n          {isVideoMessage(fileMessage) && stringSet.QUOTE_MESSAGE_INPUT__FILE_TYPE__VIDEO}\n          {isGifMessage(fileMessage) && stringSet.QUOTE_MESSAGE_INPUT__FILE_TYPE_GIF}\n          {isUserMessage(replyingMessage as UserMessage) && (replyingMessage as UserMessage).message}\n          {(isFileMessage(fileMessage) && !isThumbnailMessage(fileMessage)) && fileMessage.name}\n        </Label>\n      </div>\n      <Icon\n        className=\"sendbird-quote_message_input__close-button\"\n        type={IconTypes.CLOSE}\n        fillColor={IconColors.ON_BACKGROUND_2}\n        width=\"24px\"\n        height=\"24px\"\n        onClick={() => onClose(replyingMessage)}\n      />\n    </div>\n  );\n}\n","// Logic required to handle message input rendering\n\nimport React, { useContext } from 'react';\nimport Sendbird, { FileMessage, UserMessage } from 'sendbird';\n\nimport './message-input-wrapper.scss';\nimport { RenderGroupChannelMessageInputProps } from '../../../index';\nimport * as utils from '../utils.js';\n\nimport MessageInput from '../../../ui/MessageInput';\nimport QuoteMessageInput from '../../../ui/QuoteMessageInput';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\n\ninterface Props {\n  channel: Sendbird.GroupChannel;\n  user: Sendbird.User;\n  isOnline: boolean;\n  initialized: boolean;\n  quoteMessage?: UserMessage | FileMessage;\n  onSendMessage: (quoteMessage?: UserMessage | FileMessage) => void;\n  onFileUpload: (file: File, quoteMessage?: UserMessage | FileMessage) => void;\n  setQuoteMessage: (message: UserMessage | FileMessage) => void;\n  renderMessageInput: (renderProps: RenderGroupChannelMessageInputProps) => JSX.Element;\n}\n\nconst MessageInputWrapper = ({\n  channel,\n  user,\n  isOnline,\n  initialized,\n  quoteMessage,\n  onSendMessage,\n  onFileUpload,\n  setQuoteMessage,\n  renderMessageInput,\n}: Props, ref: React.RefObject<HTMLInputElement>): JSX.Element => {\n  const { stringSet } = useContext(LocalizationContext);\n  const disabled = !initialized\n    || utils.isDisabledBecauseFrozen(channel)\n    || utils.isDisabledBecauseMuted(channel)\n    || !isOnline;\n\n  const isOperator = utils.isOperator(channel);\n  const { isBroadcast } = channel;\n\n  // custom message\n  if (renderMessageInput) {\n    return renderMessageInput({ channel, user, disabled, quoteMessage });\n  }\n\n  // broadcast channel + not operator\n  if (isBroadcast && !isOperator) {\n    return null;\n  }\n\n  // other conditions\n  return (\n    <div className=\"sendbird-message-input-wrapper\">\n      {quoteMessage && (\n        <div className=\"sendbird-message-input-wrapper__quote-message-input\">\n          <QuoteMessageInput\n            replyingMessage={quoteMessage}\n            onClose={() => setQuoteMessage(null)}\n          />\n        </div>\n      )}\n      <MessageInput\n        className=\"sendbird-message-input-wrapper__message-input\"\n        channelUrl={channel?.url}\n        placeholder={\n          (quoteMessage && stringSet.MESSAGE_INPUT__QUOTE_REPLY__PLACE_HOLDER)\n          || (utils.isDisabledBecauseFrozen(channel) && stringSet.MESSAGE_INPUT__PLACE_HOLDER__DISABLED)\n          || (utils.isDisabledBecauseMuted(channel) && stringSet.MESSAGE_INPUT__PLACE_HOLDER__MUTED)\n        }\n        ref={ref}\n        disabled={disabled}\n        onStartTyping={() => {\n          channel.startTyping();\n        }}\n        onSendMessage={() => {\n          onSendMessage(quoteMessage);\n          setQuoteMessage(null);\n        }}\n        onFileUpload={(file) => {\n          onFileUpload(file, quoteMessage);\n          setQuoteMessage(null);\n        }}\n      />\n    </div>\n  );\n}\n\nexport default React.forwardRef(MessageInputWrapper);\n","import React, { useContext } from 'react';\n\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nimport './index.scss';\n\nfunction ConnectionStatus() {\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-connection-status\">\n      <Label\n        type={LabelTypography.BODY_2}\n        color={LabelColors.ONBACKGROUND_2}\n      >\n        {stringSet.TRYING_TO_CONNECT}\n      </Label>\n      <Icon\n        type={IconTypes.DISCONNECTED}\n        fillColor={IconColors.SENT}\n        width=\"14px\"\n        height=\"14px\"\n      />\n    </div>\n  );\n}\n\nexport default ConnectionStatus;\n","import formatDistanceToNowStrict from 'date-fns/formatDistanceToNowStrict';\nimport { LabelStringSet } from '../Label';\n\nexport const prettyDate = (date) => formatDistanceToNowStrict(date, { addSuffix: true });\n\nexport const getChannelTitle = (channel = {}, currentUserId, stringSet = LabelStringSet) => {\n  if (!channel || (!channel.name && !channel.members)) {\n    return stringSet.NO_TITLE;\n  }\n  if (channel.name && channel.name !== 'Group Channel') {\n    return channel.name;\n  }\n\n  if (channel.members.length === 1) {\n    return stringSet.NO_MEMBERS;\n  }\n\n  return channel.members\n    .filter(({ userId }) => userId !== currentUserId)\n    .map(({ nickname }) => (nickname || stringSet.NO_NAME))\n    .join(', ');\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport * as utils from './utils';\n\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport ChannelAvatar from '../ChannelAvatar/index';\n\nconst noop = () => { };\nexport default function ChatHeader(props) {\n  const {\n    currentGroupChannel,\n    currentUser,\n    title,\n    subTitle,\n    isMuted,\n    theme,\n    showSearchIcon,\n    onSearchClick,\n    onActionClick,\n  } = props;\n  const { userId } = currentUser;\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-chat-header\">\n      <div className=\"sendbird-chat-header__left\">\n        <ChannelAvatar\n          theme={theme}\n          channel={currentGroupChannel}\n          userId={userId}\n          height={32}\n          width={32}\n        />\n        <Label\n          className=\"sendbird-chat-header__left__title\"\n          type={LabelTypography.H_2}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {title || utils.getChannelTitle(currentGroupChannel, userId, stringSet)}\n        </Label>\n        <Label\n          className=\"sendbird-chat-header__left__subtitle\"\n          type={LabelTypography.BODY_1}\n          color={LabelColors.ONBACKGROUND_2}\n        >\n          {subTitle}\n        </Label>\n      </div>\n      <div className=\"sendbird-chat-header__right\">\n        {\n          ((typeof isMuted === 'string' && isMuted === 'true') || (typeof isMuted === 'boolean' && isMuted))\n            && (\n              <Icon\n                className=\"sendbird-chat-header__right__mute\"\n                type={IconTypes.NOTIFICATIONS_OFF_FILLED}\n                width=\"24px\"\n                height=\"24px\"\n              />\n            )\n        }\n        {\n          showSearchIcon && (\n            <IconButton\n              className=\"sendbird-chat-header__right__search\"\n              width=\"32px\"\n              height=\"32px\"\n              onClick={onSearchClick}\n            >\n              <Icon\n                type={IconTypes.SEARCH}\n                fillColor={IconColors.PRIMARY}\n                width=\"24px\"\n                height=\"24px\"\n              />\n            </IconButton>\n          )\n        }\n        <IconButton\n          className=\"sendbird-chat-header__right__info\"\n          width=\"32px\"\n          height=\"32px\"\n          onClick={onActionClick}\n        >\n          <Icon\n            type={IconTypes.INFO}\n            fillColor={IconColors.PRIMARY}\n            width=\"24px\"\n            height=\"24px\"\n          />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n\nChatHeader.propTypes = {\n  currentGroupChannel: PropTypes.shape({\n    members: PropTypes.arrayOf(PropTypes.shape({})),\n    coverUrl: PropTypes.string,\n  }),\n  currentUser: PropTypes.shape({\n    userId: PropTypes.string,\n  }),\n  title: PropTypes.string,\n  subTitle: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.string,\n  ]),\n  isMuted: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.bool,\n  ]),\n  theme: PropTypes.string,\n  showSearchIcon: PropTypes.bool,\n  onSearchClick: PropTypes.func,\n  onActionClick: PropTypes.func,\n};\n\nChatHeader.defaultProps = {\n  currentGroupChannel: {},\n  currentUser: {},\n  title: '',\n  subTitle: '',\n  isMuted: false,\n  theme: 'light',\n  showSearchIcon: false,\n  onSearchClick: noop,\n  onActionClick: noop,\n};\n","import React, {\n  useEffect,\n  useRef,\n  useReducer,\n  useMemo,\n  useState,\n} from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport * as utils from './utils';\n\nimport { UserProfileProvider } from '../../lib/UserProfileContext';\nimport withSendbirdContext from '../../lib/SendbirdSdkContext';\nimport * as messageActionTypes from './dux/actionTypes';\nimport messagesInitialState from './dux/initialState';\nimport messagesReducer from './dux/reducers';\n\nimport useHandleChannelEvents from './hooks/useHandleChannelEvents';\nimport useGetChannel from './hooks/useGetChannel';\nimport useInitialMessagesFetch from './hooks/useInitialMessagesFetch';\nimport useHandleReconnect from './hooks/useHandleReconnect';\nimport useScrollCallback from './hooks/useScrollCallback';\nimport useScrollDownCallback from './hooks/useScrollDownCallback';\nimport useDeleteMessageCallback from './hooks/useDeleteMessageCallback';\nimport useUpdateMessageCallback from './hooks/useUpdateMessageCallback';\nimport useResendMessageCallback from './hooks/useResendMessageCallback';\nimport useSendMessageCallback from './hooks/useSendMessageCallback';\nimport useSendFileMessageCallback from './hooks/useSendFileMessageCallback';\nimport useMemoizedEmojiListItems from './hooks/useMemoizedEmojiListItems';\nimport useToggleReactionCallback from './hooks/useToggleReactionCallback';\nimport useScrollToMessage from './hooks/useScrollToMessage';\n\nimport ConversationScroll from './components/ConversationScroll';\nimport Notification from './components/Notification';\nimport FrozenNotification from './components/FrozenNotification';\nimport TypingIndicator from './components/TypingIndicator';\nimport MessageInputWrapper from './components/MessageInputWrapper';\nimport ConnectionStatus from '../../ui/ConnectionStatus';\nimport ChatHeader from '../../ui/ChatHeader';\nimport PlaceHolder, { PlaceHolderTypes } from '../../ui/PlaceHolder';\n\nconst noop = () => { };\n\nexport const ConversationPanel = (props) => {\n  const {\n    channelUrl,\n    stores: { sdkStore, userStore },\n    config: {\n      userId,\n      logger,\n      pubSub,\n      isOnline,\n      theme,\n      imageCompression,\n    },\n    dispatchers: {\n      reconnect,\n    },\n    queries = {},\n    startingPoint,\n    highlightedMessage,\n    useReaction,\n    replyType,\n    showSearchIcon,\n    onSearchClick,\n    renderChatItem,\n    renderChatHeader,\n    renderCustomMessage,\n    renderUserProfile,\n    disableUserProfile,\n    renderMessageInput,\n    useMessageGrouping,\n    onChatHeaderActionClick,\n    onBeforeSendUserMessage,\n    onBeforeSendFileMessage,\n    onBeforeUpdateUserMessage,\n  } = props;\n  const { sdk } = sdkStore;\n  const { config } = props;\n  const sdkError = sdkStore.error;\n  const sdkInit = sdkStore.initialized;\n  const { user } = userStore;\n  if (queries.messageListQuery) {\n    // eslint-disable-next-line no-console\n    console.warn('messageListQuery has been deprecated, please use messageListParams instead');\n  }\n\n  useEffect(() => {\n    if (renderCustomMessage) {\n      // eslint-disable-next-line no-console\n      console.info('The parameter type of renderCustomMessage will be changed to the object in the next minor update.');\n    }\n  }, []);\n\n  const [intialTimeStamp, setIntialTimeStamp] = useState(startingPoint);\n  useEffect(() => {\n    setIntialTimeStamp(startingPoint);\n  }, [startingPoint, channelUrl]);\n  const [animatedMessageId, setAnimatedMessageId] = useState('');\n  const [highLightedMessageId, setHighLightedMessageId] = useState(highlightedMessage);\n  useEffect(() => {\n    setHighLightedMessageId(highlightedMessage);\n  }, [highlightedMessage]);\n  const userFilledMessageListQuery = queries.messageListParams;\n  const [quoteMessage, setQuoteMessage] = useState(null);\n\n  const [messagesStore, messagesDispatcher] = useReducer(messagesReducer, messagesInitialState);\n  const scrollRef = useRef(null);\n\n  const {\n    allMessages,\n    loading,\n    initialized,\n    unreadCount,\n    unreadSince,\n    isInvalid,\n    currentGroupChannel = {},\n    hasMore,\n    lastMessageTimeStamp,\n    hasMoreToBottom,\n    latestFetchedMessageTimeStamp,\n    emojiContainer,\n    readStatus,\n  } = messagesStore;\n  const { isFrozen, isBroadcast, isSuper } = currentGroupChannel;\n  const { appInfo = {} } = sdk;\n  const usingReaction = (\n    appInfo.isUsingReaction && !isBroadcast && !isSuper && useReaction\n    // TODO: Make useReaction independent from appInfo.isUsingReaction\n  );\n\n  const userDefinedDisableUserProfile = disableUserProfile || config.disableUserProfile;\n  const userDefinedRenderProfile = renderUserProfile || config.renderUserProfile;\n  const showScrollBot = hasMoreToBottom;\n\n  // TODO: emojiAllMap, emoijAllList, nicknamesMap => should be moved to messagesStore\n  const emojiAllMap = useMemo(() => (\n    usingReaction\n      ? utils.getAllEmojisMapFromEmojiContainer(emojiContainer)\n      : new Map()\n  ), [emojiContainer]);\n  const emojiAllList = useMemo(() => (\n    usingReaction\n      ? utils.getAllEmojisFromEmojiContainer(emojiContainer)\n      : []\n  ), [emojiContainer]);\n  const nicknamesMap = useMemo(() => (\n    usingReaction\n      ? utils.getNicknamesMapFromMembers(currentGroupChannel.members)\n      : new Map()\n  ), [currentGroupChannel.members]);\n\n  // Scrollup is default scroll for channel\n  const onScrollCallback = useScrollCallback({\n    currentGroupChannel, lastMessageTimeStamp, userFilledMessageListQuery, replyType,\n  }, {\n    hasMore,\n    logger,\n    messagesDispatcher,\n    sdk,\n  });\n\n  const scrollToMessage = useScrollToMessage({\n    setIntialTimeStamp,\n    setAnimatedMessageId,\n    allMessages,\n  }, { logger });\n\n  // onScrollDownCallback is added for navigation to different timestamps on messageSearch\n  // hasMoreToBottom, onScrollDownCallback -> scroll down\n  // hasMore, onScrollCallback -> scroll up(default behavior)\n  const onScrollDownCallback = useScrollDownCallback({\n    currentGroupChannel,\n    latestFetchedMessageTimeStamp,\n    userFilledMessageListQuery,\n    hasMoreToBottom,\n    replyType,\n  }, {\n    logger,\n    messagesDispatcher,\n    sdk,\n  });\n\n  const toggleReaction = useToggleReactionCallback({ currentGroupChannel }, { logger });\n\n  const memoizedEmojiListItems = useMemoizedEmojiListItems({\n    emojiContainer, toggleReaction,\n  }, {\n    useReaction: usingReaction,\n    logger,\n    userId,\n    emojiAllList,\n  });\n\n  // to create message-datasource\n  // this hook sets currentGroupChannel asynchronously\n  useGetChannel(\n    { channelUrl, sdkInit },\n    { messagesDispatcher, sdk, logger },\n  );\n\n  useEffect(() => {\n    setQuoteMessage(null);\n  }, [channelUrl]);\n\n  // Hook to handle ChannelEvents and send values to useReducer using messagesDispatcher\n  useHandleChannelEvents(\n    { currentGroupChannel, sdkInit, hasMoreToBottom },\n    {\n      messagesDispatcher,\n      sdk,\n      logger,\n      scrollRef,\n      setQuoteMessage,\n    },\n  );\n\n  // hook that fetches messages when channel changes\n  // to be clear here useGetChannel sets currentGroupChannel\n  // and useInitialMessagesFetch executes when currentGroupChannel changes\n  // p.s This one executes on intialTimeStamp change too\n  useInitialMessagesFetch({\n    currentGroupChannel,\n    userFilledMessageListQuery,\n    intialTimeStamp,\n    replyType,\n  }, {\n    sdk,\n    logger,\n    messagesDispatcher,\n  });\n\n  // handles API calls from withSendbird\n  useEffect(() => {\n    const subScriber = utils.pubSubHandler(channelUrl, pubSub, messagesDispatcher);\n    return () => {\n      utils.pubSubHandleRemover(subScriber);\n    };\n  }, [channelUrl, sdkInit]);\n\n  // handling connection breaks\n  useHandleReconnect({ isOnline, replyType }, {\n    logger,\n    sdk,\n    currentGroupChannel,\n    messagesDispatcher,\n    userFilledMessageListQuery,\n  });\n\n  // callbacks for Message CURD actions\n  const deleteMessage = useDeleteMessageCallback({ currentGroupChannel, messagesDispatcher },\n    { logger });\n  const updateMessage = useUpdateMessageCallback(\n    { currentGroupChannel, messagesDispatcher, onBeforeUpdateUserMessage },\n    { logger, sdk, pubSub },\n  );\n  const resendMessage = useResendMessageCallback(\n    { currentGroupChannel, messagesDispatcher },\n    { logger },\n  );\n  const [messageInputRef, onSendMessage] = useSendMessageCallback(\n    { currentGroupChannel, onBeforeSendUserMessage },\n    {\n      sdk,\n      logger,\n      pubSub,\n      messagesDispatcher,\n    },\n  );\n  const [onSendFileMessage] = useSendFileMessageCallback(\n    { currentGroupChannel, onBeforeSendFileMessage, imageCompression },\n    {\n      sdk,\n      logger,\n      pubSub,\n      messagesDispatcher,\n    },\n  );\n\n  if (!channelUrl) {\n    return (<div className=\"sendbird-conversation\"><PlaceHolder type={PlaceHolderTypes.NO_CHANNELS} /></div>);\n  }\n  if (isInvalid) {\n    return (<div className=\"sendbird-conversation\"><PlaceHolder type={PlaceHolderTypes.WRONG} /></div>);\n  }\n  if (sdkError) {\n    return (\n      <div className=\"sendbird-conversation\">\n        <PlaceHolder\n          type={PlaceHolderTypes.WRONG}\n          retryToConnect={() => {\n            logger.info('Channel: reconnecting');\n            reconnect();\n          }}\n        />\n      </div>\n    );\n  }\n  return (\n    <UserProfileProvider\n      className=\"sendbird-conversation\"\n      disableUserProfile={userDefinedDisableUserProfile}\n      renderUserProfile={userDefinedRenderProfile}\n    >\n      {\n        renderChatHeader\n          ? renderChatHeader({ channel: currentGroupChannel, user })\n          : (\n            <ChatHeader\n              theme={theme}\n              currentGroupChannel={currentGroupChannel}\n              currentUser={user}\n              showSearchIcon={showSearchIcon}\n              onSearchClick={onSearchClick}\n              onActionClick={onChatHeaderActionClick}\n              subTitle={currentGroupChannel.members && currentGroupChannel.members.length !== 2}\n              isMuted={false}\n            />\n          )\n      }\n      {\n        isFrozen && (\n          <FrozenNotification />\n        )\n      }\n      {\n        unreadCount > 0 && (\n          <Notification\n            count={unreadCount}\n            onClick={() => {\n              if (intialTimeStamp) {\n                setIntialTimeStamp(null);\n                setAnimatedMessageId(null);\n                setHighLightedMessageId(null);\n              } else {\n                utils.scrollIntoLast();\n                // there is no scroll\n                if (scrollRef.current.scrollTop === 0) {\n                  try {\n                    currentGroupChannel.markAsRead();\n                  } catch {\n                    //\n                  }\n                  messagesDispatcher({\n                    type: messageActionTypes.MARK_AS_READ,\n                  });\n                }\n              }\n            }}\n            time={unreadSince}\n          />\n        )\n      }\n      {\n        loading\n          ? (\n            <div className=\"sendbird-conversation\">\n              <PlaceHolder type={PlaceHolderTypes.LOADING} />\n            </div>\n          ) : (\n            <ConversationScroll\n              swapParams={\n                sdk && sdk.getErrorFirstCallback && sdk.getErrorFirstCallback()\n              }\n              animatedMessageId={animatedMessageId}\n              highLightedMessageId={highLightedMessageId}\n              userId={userId}\n              hasMore={hasMore}\n              disabled={!isOnline}\n              onScroll={onScrollCallback}\n              onScrollDown={onScrollDownCallback}\n              scrollRef={scrollRef}\n              readStatus={readStatus}\n              useReaction={usingReaction}\n              replyType={replyType}\n              allMessages={allMessages}\n              scrollToMessage={scrollToMessage}\n              emojiAllMap={emojiAllMap}\n              membersMap={nicknamesMap}\n              editDisabled={utils.isDisabledBecauseFrozen(currentGroupChannel)}\n              deleteMessage={deleteMessage}\n              updateMessage={updateMessage}\n              resendMessage={resendMessage}\n              toggleReaction={toggleReaction}\n              emojiContainer={emojiContainer}\n              renderChatItem={renderChatItem}\n              quoteMessage={quoteMessage}\n              setQuoteMessage={setQuoteMessage}\n              showScrollBot={showScrollBot}\n              onClickScrollBot={() => {\n                setIntialTimeStamp(null);\n                setAnimatedMessageId(null);\n                setHighLightedMessageId(null);\n              }}\n              renderCustomMessage={renderCustomMessage}\n              useMessageGrouping={useMessageGrouping}\n              messagesDispatcher={messagesDispatcher}\n              currentGroupChannel={currentGroupChannel}\n              memoizedEmojiListItems={memoizedEmojiListItems}\n            />\n          )\n      }\n      <div className=\"sendbird-conversation__footer\">\n        <MessageInputWrapper\n          channel={currentGroupChannel}\n          user={user}\n          ref={messageInputRef}\n          isOnline={isOnline}\n          initialized={initialized}\n          onSendMessage={onSendMessage}\n          onFileUpload={onSendFileMessage}\n          quoteMessage={quoteMessage}\n          setQuoteMessage={setQuoteMessage}\n          renderMessageInput={renderMessageInput}\n        />\n        <div className=\"sendbird-conversation__footer__typing-indicator\">\n          <TypingIndicator className=\"sendbird-conversation__footer__typing-indicator__text\" channelUrl={channelUrl} sb={sdk} logger={logger} />\n          {\n            !isOnline && (\n              <ConnectionStatus sdkInit={sdkInit} sb={sdk} logger={logger} />\n            )\n          }\n        </div>\n      </div>\n    </UserProfileProvider>\n  );\n};\n\nConversationPanel.propTypes = {\n  channelUrl: PropTypes.string,\n  stores: PropTypes.shape({\n    sdkStore: PropTypes.shape({\n      initialized: PropTypes.bool,\n      sdk: PropTypes.shape({\n        getErrorFirstCallback: PropTypes.func,\n        removeChannelHandler: PropTypes.func,\n        GroupChannel: PropTypes.any,\n        ChannelHandler: PropTypes.any,\n        addChannelHandler: PropTypes.func,\n        UserMessageParams: PropTypes.any,\n        FileMessageParams: PropTypes.any,\n        getAllEmoji: PropTypes.func,\n        appInfo: PropTypes.shape({}),\n      }),\n      error: PropTypes.bool,\n    }),\n    userStore: PropTypes.shape({\n      user: PropTypes.shape({}),\n    }),\n  }).isRequired,\n  dispatchers: PropTypes.shape({\n    reconnect: PropTypes.func,\n  }).isRequired,\n  config: PropTypes.shape({\n    disableUserProfile: PropTypes.bool,\n    renderUserProfile: PropTypes.func,\n    userId: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired,\n    theme: PropTypes.string,\n    logger: PropTypes.shape({\n      info: PropTypes.func,\n      error: PropTypes.func,\n      warning: PropTypes.func,\n    }),\n    pubSub: PropTypes.shape({\n      subscribe: PropTypes.func,\n      publish: PropTypes.func,\n    }),\n    imageCompression: PropTypes.shape({\n      compressionRate: PropTypes.number,\n      resizingWidth: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n      ]),\n      resizingHeight: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n      ]),\n    }),\n  }).isRequired,\n  queries: PropTypes.shape({\n    messageListParams: PropTypes.shape({\n      includeMetaArray: PropTypes.bool,\n      includeParentMessageText: PropTypes.bool,\n      includeReaction: PropTypes.bool,\n      includeReplies: PropTypes.bool,\n      includeThreadInfo: PropTypes.bool,\n      limit: PropTypes.number,\n      reverse: PropTypes.bool,\n      senderUserIdsFilter: PropTypes.arrayOf(PropTypes.string),\n    }),\n  }),\n  startingPoint: PropTypes.number,\n  highlightedMessage: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  onBeforeSendUserMessage: PropTypes.func, // onBeforeSendUserMessage(text)\n  onBeforeSendFileMessage: PropTypes.func, // onBeforeSendFileMessage(File)\n  onBeforeUpdateUserMessage: PropTypes.func,\n  renderChatItem: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  renderCustomMessage: PropTypes.func,\n  renderMessageInput: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  renderChatHeader: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  showSearchIcon: PropTypes.bool,\n  onSearchClick: PropTypes.func,\n  onChatHeaderActionClick: PropTypes.func,\n  useReaction: PropTypes.bool,\n  replyType: PropTypes.oneOf(['NONE', 'QUOTE_REPLY', 'THREAD']),\n  disableUserProfile: PropTypes.bool,\n  renderUserProfile: PropTypes.func,\n  useMessageGrouping: PropTypes.bool,\n};\n\nConversationPanel.defaultProps = {\n  channelUrl: null,\n  queries: {},\n  onBeforeSendUserMessage: null,\n  onBeforeSendFileMessage: null,\n  onBeforeUpdateUserMessage: null,\n  startingPoint: null,\n  highlightedMessage: null,\n  renderChatItem: null,\n  renderCustomMessage: null,\n  renderMessageInput: null,\n  renderChatHeader: null,\n  useReaction: true,\n  replyType: 'NONE',\n  showSearchIcon: false,\n  onSearchClick: noop,\n  disableUserProfile: false,\n  renderUserProfile: null,\n  useMessageGrouping: true,\n  onChatHeaderActionClick: noop,\n};\n\nexport const {\n  getEmojiCategoriesFromEmojiContainer,\n  getAllEmojisFromEmojiContainer,\n  getEmojisFromEmojiContainer,\n} = utils;\n\nexport default withSendbirdContext(ConversationPanel);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}