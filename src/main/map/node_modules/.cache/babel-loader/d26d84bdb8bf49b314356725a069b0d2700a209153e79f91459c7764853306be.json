{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chji9\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\homeReviewSite\\\\src\\\\main\\\\map\\\\src\\\\components\\\\ToggleBtnFilled\\\\ToggleBtn_2.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport \"./ToggleBtn.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ToggleBtn_2({\n  items,\n  width,\n  filled,\n  selectedPrice,\n  setSelectedPrice\n}) {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleContainer = useRef(null);\n  const toggleRef = useRef(null);\n  const handleOutsideClick_1 = event => {\n    if (toggleContainer.current && !toggleContainer.current.contains(event.target) && !toggleRef.current.contains(event.target)) {\n      setIsOpen(false); // 토글이 열려있는 상태에서 외부를 클릭하면 토글을 닫습니다.\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleOutsideClick_1);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleOutsideClick_1);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: filled ? `toggleBtnFilled` : `toggleBtnNotFilled`,\n      onClick: () => setIsOpen(!isOpen),\n      ref: toggleRef,\n      children: [selectedPrice.range || \"가격 선택\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `arrow ${isOpen ? \"up\" : \"down\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toggleList\",\n      ref: toggleContainer,\n      children: items.map(item => /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        onClick: event => {\n          event.preventDefault(); // a 태그의 기본 이벤트를 방지합니다.\n          event.stopPropagation(); // 이벤트 버블링을 중단합니다.\n          const [minPrice, maxPrice] = item.split(\"~\").map(Number);\n          setSelectedPrice({\n            min: minPrice,\n            max: maxPrice,\n            range: item\n          });\n          setIsOpen(false);\n        },\n        children: item\n      }, item, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(ToggleBtn_2, \"ocaXhX6ff4mITR7eMVVkFo4S4uU=\");\n_c = ToggleBtn_2;\nvar _c;\n$RefreshReg$(_c, \"ToggleBtn_2\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","ToggleBtn_2","items","width","filled","selectedPrice","setSelectedPrice","_s","isOpen","setIsOpen","toggleContainer","toggleRef","handleOutsideClick_1","event","current","contains","target","document","addEventListener","removeEventListener","children","className","onClick","ref","range","fileName","_jsxFileName","lineNumber","columnNumber","map","item","href","preventDefault","stopPropagation","minPrice","maxPrice","split","Number","min","max","_c","$RefreshReg$"],"sources":["C:/Users/chji9/OneDrive/바탕 화면/homeReviewSite/src/main/map/src/components/ToggleBtnFilled/ToggleBtn_2.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport \"./ToggleBtn.css\";\r\n\r\nexport default function ToggleBtn_2({\r\n  items,\r\n  width,\r\n  filled,\r\n  selectedPrice,\r\n  setSelectedPrice,\r\n}) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleContainer = useRef(null);\r\n  const toggleRef = useRef(null);\r\n\r\n  const handleOutsideClick_1 = (event) => {\r\n    if (\r\n      toggleContainer.current &&\r\n      !toggleContainer.current.contains(event.target) &&\r\n      !toggleRef.current.contains(event.target)\r\n    ) {\r\n      setIsOpen(false); // 토글이 열려있는 상태에서 외부를 클릭하면 토글을 닫습니다.\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"mousedown\", handleOutsideClick_1);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleOutsideClick_1);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        className={filled ? `toggleBtnFilled` : `toggleBtnNotFilled`}\r\n        onClick={() => setIsOpen(!isOpen)}\r\n        ref={toggleRef}\r\n      >\r\n        {selectedPrice.range || \"가격 선택\"}\r\n        <div className={`arrow ${isOpen ? \"up\" : \"down\"}`}></div>\r\n      </button>\r\n      {isOpen && (\r\n        <div className=\"toggleList\" ref={toggleContainer}>\r\n          {items.map((item) => (\r\n            <a\r\n              href=\"#\"\r\n              onClick={(event) => {\r\n                event.preventDefault(); // a 태그의 기본 이벤트를 방지합니다.\r\n                event.stopPropagation(); // 이벤트 버블링을 중단합니다.\r\n                const [minPrice, maxPrice] = item.split(\"~\").map(Number);\r\n                setSelectedPrice({ min: minPrice, max: maxPrice, range: item });\r\n                setIsOpen(false);\r\n              }}\r\n              key={item}\r\n            >\r\n              {item}\r\n            </a>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}