{"ast":null,"code":"var _jsxFileName = \"C:\\\\homeReviewSite\\\\src\\\\main\\\\map\\\\src\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport SBProvider from \"@sendbird/uikit-react/SendbirdProvider\";\nimport MessageContent from \"@sendbird/uikit-react/ui/MessageContent\";\nimport MobileView from \"./MobileView\";\nimport DesktopView from \"./DesktopView\";\nimport \"./chatStyle.css\";\nimport \"./App.css\";\nimport \"@sendbird/uikit-react/dist/index.css\";\nimport kr from \"date-fns/locale/ko\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst createChannel = async (thisUser, otherUser) => {\n  try {\n    const response = await fetch(`https://api-${process.env.REACT_APP_APP_ID}.sendbird.com/v3/group_channels`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Api-Token': process.env.REACT_APP_API_TOKEN\n      },\n      body: JSON.stringify({\n        \"users\": [{\n          \"user_id\": thisUser\n        }, {\n          \"user_id\": otherUser\n        }],\n        \"is_distinct\": true\n      })\n    });\n    if (!response.ok) {\n      throw new Error(`Failed to create channel: ${response.status} - ${response.statusText}`);\n    }\n    const data = await response.json();\n    console.log(data.channel_url);\n  } catch (error) {\n    console.error(error);\n  }\n};\nfunction Chat() {\n  _s();\n  const USER_ID = \"test_id1\"; // 로그인 유저\n  const NICKNAME = \"test_nickname2\";\n  const OTHER_USER = \"test_id2\";\n  createChannel(USER_ID, OTHER_USER);\n  const APP_ID = process.env.REACT_APP_APP_ID;\n  const PROFILE_URL = process.env.REACT_APP_PROFILE_URL;\n  const myColorSet = {\n    \"--sendbird-light-primary-100\": \"rgb(195, 241, 169)\",\n    \"--sendbird-light-primary-300\": \"rgb(165, 211, 149)\",\n    \"--sendbird-light-primary-400\": \"rgb(136, 188, 132)\"\n  };\n  const [stringSet] = useState({\n    MESSAGE_STATUS__YESTERDAY: \"어제\",\n    CHANNEL_PREVIEW_MOBILE_LEAVE: \"채팅방 나가기\",\n    CHANNEL_SETTING__LEAVE_CHANNEL__TITLE: \"채팅방 나가기\",\n    MESSAGE_INPUT__PLACE_HOLDER: \"메세지를 입력해주세요.\",\n    PLACE_HOLDER__NO_CHANNEL: \" \"\n  });\n  const [mobileViewOpen, setMobileViewOpen] = React.useState(false);\n  window.addEventListener(\"resize\", function () {\n    if (window.innerWidth < 900) {\n      setMobileViewOpen(true);\n    } else {\n      setMobileViewOpen(false);\n    }\n  });\n  useEffect(() => {\n    if (window.innerWidth < 900) {\n      setMobileViewOpen(true);\n    } else {\n      setMobileViewOpen(false);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(SBProvider, {\n      appId: APP_ID,\n      userId: USER_ID,\n      nickname: NICKNAME,\n      colorSet: myColorSet,\n      dateLocale: kr,\n      stringSet: stringSet,\n      profileUrl: PROFILE_URL,\n      children: mobileViewOpen ? /*#__PURE__*/_jsxDEV(MobileView, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(DesktopView, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 44\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"sckUhpOTfz1Bn9LYkiUH2n7a1t8=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","SBProvider","MessageContent","MobileView","DesktopView","kr","jsxDEV","_jsxDEV","createChannel","thisUser","otherUser","response","fetch","process","env","REACT_APP_APP_ID","method","headers","REACT_APP_API_TOKEN","body","JSON","stringify","ok","Error","status","statusText","data","json","console","log","channel_url","error","Chat","_s","USER_ID","NICKNAME","OTHER_USER","APP_ID","PROFILE_URL","REACT_APP_PROFILE_URL","myColorSet","stringSet","MESSAGE_STATUS__YESTERDAY","CHANNEL_PREVIEW_MOBILE_LEAVE","CHANNEL_SETTING__LEAVE_CHANNEL__TITLE","MESSAGE_INPUT__PLACE_HOLDER","PLACE_HOLDER__NO_CHANNEL","mobileViewOpen","setMobileViewOpen","window","addEventListener","innerWidth","children","appId","userId","nickname","colorSet","dateLocale","profileUrl","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/homeReviewSite/src/main/map/src/Chat.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport SBProvider from \"@sendbird/uikit-react/SendbirdProvider\";\r\nimport MessageContent from \"@sendbird/uikit-react/ui/MessageContent\";\r\nimport MobileView from \"./MobileView\";\r\nimport DesktopView from \"./DesktopView\";\r\nimport \"./chatStyle.css\";\r\nimport \"./App.css\";\r\nimport \"@sendbird/uikit-react/dist/index.css\";\r\nimport kr from \"date-fns/locale/ko\";\r\n\r\nconst createChannel = async (thisUser, otherUser) => {\r\n  try {\r\n    const response = await fetch(`https://api-${process.env.REACT_APP_APP_ID}.sendbird.com/v3/group_channels`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Api-Token': process.env.REACT_APP_API_TOKEN\r\n      },\r\n      body: JSON.stringify({\r\n        \"users\": [\r\n          {\"user_id\": thisUser},\r\n          {\"user_id\": otherUser}\r\n        ],\r\n        \"is_distinct\": true\r\n      })\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to create channel: ${response.status} - ${response.statusText}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    console.log(data.channel_url);\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\nfunction Chat() {\r\n  const USER_ID = \"test_id1\"; // 로그인 유저\r\n  const NICKNAME = \"test_nickname2\";\r\n\r\n  const OTHER_USER = \"test_id2\";\r\n  createChannel(USER_ID, OTHER_USER);\r\n\r\n  const APP_ID = process.env.REACT_APP_APP_ID;\r\n  const PROFILE_URL = process.env.REACT_APP_PROFILE_URL;\r\n  const myColorSet = {\r\n    \"--sendbird-light-primary-100\": \"rgb(195, 241, 169)\",\r\n    \"--sendbird-light-primary-300\": \"rgb(165, 211, 149)\",\r\n    \"--sendbird-light-primary-400\": \"rgb(136, 188, 132)\",\r\n  };\r\n\r\n  const [stringSet] = useState({\r\n    MESSAGE_STATUS__YESTERDAY: \"어제\",\r\n    CHANNEL_PREVIEW_MOBILE_LEAVE: \"채팅방 나가기\",\r\n    CHANNEL_SETTING__LEAVE_CHANNEL__TITLE: \"채팅방 나가기\",\r\n    MESSAGE_INPUT__PLACE_HOLDER: \"메세지를 입력해주세요.\",\r\n    PLACE_HOLDER__NO_CHANNEL: \" \",\r\n  });\r\n\r\n  const [mobileViewOpen, setMobileViewOpen] = React.useState(false);\r\n  window.addEventListener(\"resize\", function () {\r\n    if (window.innerWidth < 900) {\r\n      setMobileViewOpen(true);\r\n    } else {\r\n      setMobileViewOpen(false);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (window.innerWidth < 900) {\r\n      setMobileViewOpen(true);\r\n    } else {\r\n      setMobileViewOpen(false);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <SBProvider\r\n        appId={APP_ID}\r\n        userId={USER_ID}\r\n        nickname={NICKNAME}\r\n        colorSet={myColorSet}\r\n        dateLocale={kr}\r\n        stringSet={stringSet}\r\n        profileUrl={PROFILE_URL}\r\n      >\r\n        {mobileViewOpen ? <MobileView /> : <DesktopView />}\r\n      </SBProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}