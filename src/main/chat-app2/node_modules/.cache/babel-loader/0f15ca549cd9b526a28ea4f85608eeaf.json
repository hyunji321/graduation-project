{"ast":null,"code":"import _toConsumableArray from \"C:/Users/\\uC774\\uACBD\\uBBFC/IdeaProjects/sendbird-uikit-whatsapp-sample/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport React__default, { useContext } from 'react';\nimport { a as UserProfileContext } from '../UserProfileContext-9cfbab4d.js';\nimport { a as LocalizationContext } from '../LocalizationContext-076d6d2e.js';\nimport Avatar from './Avatar.js';\nimport MutedAvatarOverlay from './MutedAvatarOverlay.js';\nimport Checkbox from './Checkbox.js';\nimport UserProfile from './UserProfile.js';\nimport ContextMenu, { MenuItems } from './ContextMenu.js';\nimport { L as Label, a as LabelTypography, b as LabelColors } from '../index-63949de5.js';\nimport 'prop-types';\nimport '../stringSet-13bbd4a2.js';\nimport '../index-99aabd9e.js';\nimport './ImageRenderer.js';\nimport './Icon.js';\nimport '../uuid-1adedf62.js';\nimport '../sendbirdSelectors.js';\nimport '../_rollupPluginBabelHelpers-6bb0305c.js';\nimport '../topics-b2b77fb9.js';\nimport '../utils-4bbbca2c.js';\nimport './Button.js';\nimport '../useSendbirdStateContext.js';\nimport '../withSendbird.js';\nimport 'react-dom';\nimport './SortByRow.js';\nimport '../index-7eb65acf.js';\nimport '../utils/message/getOutgoingMessageState.js';\nfunction UserListItem(_ref) {\n  var user = _ref.user,\n    className = _ref.className,\n    checked = _ref.checked,\n    checkBox = _ref.checkBox,\n    isOperator = _ref.isOperator,\n    disabled = _ref.disabled,\n    disableMessaging = _ref.disableMessaging,\n    currentUser = _ref.currentUser,\n    action = _ref.action,\n    _onChange = _ref.onChange,\n    _ref$avatarSize = _ref.avatarSize,\n    avatarSize = _ref$avatarSize === void 0 ? '40px' : _ref$avatarSize;\n  var uniqueKey = user.userId;\n  var actionRef = React__default.useRef(null);\n  var parentRef = React__default.useRef(null);\n  var avatarRef = React__default.useRef(null);\n  var _useContext = useContext(UserProfileContext),\n    disableUserProfile = _useContext.disableUserProfile,\n    renderUserProfile = _useContext.renderUserProfile;\n  var _useContext2 = useContext(LocalizationContext),\n    stringSet = _useContext2.stringSet;\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: [].concat(_toConsumableArray(Array.isArray(className) ? className : [className]), ['sendbird-user-list-item']).join(' '),\n    ref: parentRef\n  }, (user === null || user === void 0 ? void 0 : user.isMuted) && /*#__PURE__*/React__default.createElement(MutedAvatarOverlay, {\n    height: 40,\n    width: 40\n  }), /*#__PURE__*/React__default.createElement(ContextMenu, {\n    menuTrigger: function menuTrigger(toggleDropdown) {\n      return /*#__PURE__*/React__default.createElement(Avatar, {\n        className: \"sendbird-user-list-item__avatar\",\n        ref: avatarRef,\n        src: user.profileUrl,\n        width: avatarSize,\n        height: avatarSize,\n        onClick: function onClick() {\n          if (!disableUserProfile) {\n            toggleDropdown();\n          }\n        }\n      });\n    },\n    menuItems: function menuItems(closeDropdown) {\n      return /*#__PURE__*/React__default.createElement(MenuItems, {\n        openLeft: true,\n        parentRef: avatarRef\n        // for catching location(x, y) of MenuItems\n        ,\n\n        parentContainRef: avatarRef\n        // for toggling more options(menus & reactions)\n        ,\n\n        closeDropdown: closeDropdown,\n        style: {\n          paddingTop: '0px',\n          paddingBottom: '0px'\n        }\n      }, renderUserProfile ? renderUserProfile({\n        user: user,\n        currentUserId: currentUser,\n        close: closeDropdown\n      }) : /*#__PURE__*/React__default.createElement(UserProfile, {\n        disableMessaging: disableMessaging,\n        user: user,\n        currentUserId: currentUser,\n        onSuccess: closeDropdown\n      }));\n    }\n  }), /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-user-list-item__title\",\n    type: LabelTypography.SUBTITLE_1,\n    color: LabelColors.ONBACKGROUND_1\n  }, user.nickname || stringSet.NO_NAME, currentUser === user.userId && ' (You)'),\n  // if there is now nickname, display userId\n  !user.nickname && /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-user-list-item__subtitle\",\n    type: LabelTypography.CAPTION_3,\n    color: LabelColors.ONBACKGROUND_2\n  }, user.userId), checkBox && /*#__PURE__*/React__default.createElement(\"label\", {\n    className: \"sendbird-user-list-item__checkbox\",\n    htmlFor: uniqueKey\n  }, /*#__PURE__*/React__default.createElement(Checkbox, {\n    id: uniqueKey,\n    checked: checked,\n    disabled: disabled,\n    onChange: function onChange(event) {\n      return _onChange(event);\n    }\n  })), isOperator && /*#__PURE__*/React__default.createElement(Label, {\n    className: ['sendbird-user-list-item__operator', checkBox ? 'checkbox' : ''].join(' '),\n    type: LabelTypography.SUBTITLE_2,\n    color: LabelColors.ONBACKGROUND_2\n  }, \"Operator\"), action && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-user-list-item__action\",\n    ref: actionRef\n  }, action({\n    actionRef: actionRef,\n    parentRef: parentRef\n  })));\n}\nexport { UserListItem as default };","map":{"version":3,"mappings":"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","names":["UserListItem","user","_ref","className","checked","checkBox","isOperator","disabled","disableMessaging","currentUser","action","onChange","avatarSize","uniqueKey","userId","actionRef","React","useRef","parentRef","avatarRef","useContext","UserProfileContext","disableUserProfile","renderUserProfile","LocalizationContext","stringSet","Array","isArray","join","ref","isMuted","MutedAvatarOverlay","height","width","ContextMenu","menuTrigger","toggleDropdown","Avatar","src","profileUrl","onClick","menuItems","closeDropdown","MenuItems","openLeft","parentContainRef","style","paddingTop","paddingBottom","currentUserId","close","UserProfile","onSuccess","Label","type","LabelTypography","SUBTITLE_1","color","LabelColors","ONBACKGROUND_1","nickname","NO_NAME","CAPTION_3","ONBACKGROUND_2","htmlFor","Checkbox","id","event","SUBTITLE_2"],"sources":["C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\ui\\UserListItem\\index.tsx"],"sourcesContent":["import React, { ChangeEvent, MutableRefObject, ReactElement, useContext } from 'react';\nimport { User } from '@sendbird/chat';\nimport { Member } from '@sendbird/chat/groupChannel';\nimport './index.scss';\n\nimport { UserProfileContext } from '../../lib/UserProfileContext';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport Avatar from '../Avatar/index';\nimport MutedAvatarOverlay from '../Avatar/MutedAvatarOverlay';\nimport Checkbox from '../Checkbox';\nimport UserProfile from '../UserProfile';\nimport ContextMenu, { MenuItems } from '../ContextMenu';\nimport Label, { LabelTypography, LabelColors } from '../Label';\n\nexport interface UserListItemProps {\n  user: User;\n  className?: string;\n  checked?: boolean;\n  checkBox?: boolean;\n  isOperator?: boolean;\n  disabled?: boolean;\n  disableMessaging?: boolean;\n  currentUser?: string;\n  action?({ actionRef, parentRef }: {\n    actionRef: MutableRefObject<any>,\n    parentRef?: MutableRefObject<any>,\n  }): ReactElement;\n  onChange?(e: ChangeEvent<HTMLInputElement>): void;\n  avatarSize?: string;\n}\n\nexport default function UserListItem({\n  user,\n  className,\n  checked,\n  checkBox,\n  isOperator,\n  disabled,\n  disableMessaging,\n  currentUser,\n  action,\n  onChange,\n  avatarSize = '40px',\n}: UserListItemProps): ReactElement {\n  const uniqueKey = user.userId;\n  const actionRef = React.useRef(null);\n  const parentRef = React.useRef(null);\n  const avatarRef = React.useRef(null);\n  const {\n    disableUserProfile,\n    renderUserProfile,\n  } = useContext<UserProfileContext>(UserProfileContext);\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-user-list-item',\n      ].join(' ')}\n      ref={parentRef}\n    >\n      {\n        (user as Member)?.isMuted && (\n          <MutedAvatarOverlay height={40} width={40} />\n        )\n      }\n      <ContextMenu\n        menuTrigger={(toggleDropdown) => (\n          <Avatar\n            className=\"sendbird-user-list-item__avatar\"\n            ref={avatarRef}\n            src={user.profileUrl}\n            width={avatarSize}\n            height={avatarSize}\n            onClick={() => {\n              if (!disableUserProfile) {\n                toggleDropdown();\n              }\n            }}\n          />\n        )}\n        menuItems={(closeDropdown) => (\n          <MenuItems\n            openLeft\n            parentRef={avatarRef}\n            // for catching location(x, y) of MenuItems\n            parentContainRef={avatarRef}\n            // for toggling more options(menus & reactions)\n            closeDropdown={closeDropdown}\n            style={{ paddingTop: '0px', paddingBottom: '0px' }}\n          >\n            {\n              renderUserProfile\n                ? renderUserProfile({\n                  user,\n                  currentUserId: currentUser,\n                  close: closeDropdown,\n                })\n                : (\n                  <UserProfile\n                    disableMessaging={disableMessaging}\n                    user={user}\n                    currentUserId={currentUser}\n                    onSuccess={closeDropdown}\n                  />\n                )\n            }\n          </MenuItems>\n        )}\n      />\n      <Label\n        className=\"sendbird-user-list-item__title\"\n        type={LabelTypography.SUBTITLE_1}\n        color={LabelColors.ONBACKGROUND_1}\n      >\n        {user.nickname || stringSet.NO_NAME}\n        {\n          (currentUser === user.userId) && (\n            ' (You)'\n          )\n        }\n      </Label>\n      { // if there is now nickname, display userId\n        !user.nickname && (\n          <Label\n            className=\"sendbird-user-list-item__subtitle\"\n            type={LabelTypography.CAPTION_3}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {user.userId}\n          </Label>\n        )\n      }\n      {\n        checkBox && (\n          <label\n            className=\"sendbird-user-list-item__checkbox\"\n            htmlFor={uniqueKey}\n          >\n            <Checkbox\n              id={uniqueKey}\n              checked={checked}\n              disabled={disabled}\n              onChange={(event) => onChange(event)}\n            />\n          </label>\n        )\n      }\n      {\n        isOperator && (\n          <Label\n            className={[\n              'sendbird-user-list-item__operator',\n              checkBox ? 'checkbox' : '',\n            ].join(' ')}\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            Operator\n          </Label>\n        )\n      }\n      {\n        action && (\n          <div\n            className=\"sendbird-user-list-item__action\"\n            ref={actionRef}\n          >\n            {action({ actionRef, parentRef })}\n          </div>\n        )\n      }\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}