{"ast":null,"code":"import React__default, { useContext } from 'react';\nimport { g as getChannelTitle } from '../../utils-30d3ca65.js';\nimport { L as Label, a as LabelTypography, b as LabelColors } from '../../index-63949de5.js';\nimport Icon, { IconColors, IconTypes } from '../../ui/Icon.js';\nimport IconButton from '../../ui/IconButton.js';\nimport ChannelAvatar from '../../ui/ChannelAvatar.js';\nimport { a as LocalizationContext } from '../../LocalizationContext-076d6d2e.js';\nimport useSendbirdStateContext from '../../useSendbirdStateContext.js';\nimport { u as useChannelContext } from '../../ChannelProvider-910bbc1f.js';\nimport { u as useMediaQueryContext } from '../../MediaQueryContext-11f0e43f.js';\nimport { n as noop } from '../../utils-4bbbca2c.js';\nimport 'prop-types';\nimport '../../stringSet-13bbd4a2.js';\nimport '../../_rollupPluginBabelHelpers-6bb0305c.js';\nimport '../../ui/Avatar.js';\nimport '../../ui/ImageRenderer.js';\nimport '../../uuid-1adedf62.js';\nimport '../../utils-d86ad6ab.js';\nimport '../../index-99aabd9e.js';\nimport '../../withSendbird.js';\nimport '../../UserProfileContext-9cfbab4d.js';\nimport '../../index-7cdd58b8.js';\nimport '../../topics-b2b77fb9.js';\nimport '../../index-7eb65acf.js';\nimport '../../utils/message/getOutgoingMessageState.js';\nimport '../../compareIds-defe2bb3.js';\nimport '../../const-b3f02313.js';\nimport '@sendbird/chat/groupChannel';\nimport '@sendbird/chat/message';\nimport '../../consts-95d8566e.js';\nvar ChannelHeader = function ChannelHeader(_ref) {\n  var _globalStore$config, _globalStore$config2, _currentGroupChannel$;\n  var _ref$className = _ref.className,\n    className = _ref$className === void 0 ? '' : _ref$className;\n  var globalStore = useSendbirdStateContext();\n  var userId = globalStore === null || globalStore === void 0 ? void 0 : (_globalStore$config = globalStore.config) === null || _globalStore$config === void 0 ? void 0 : _globalStore$config.userId;\n  var theme = globalStore === null || globalStore === void 0 ? void 0 : (_globalStore$config2 = globalStore.config) === null || _globalStore$config2 === void 0 ? void 0 : _globalStore$config2.theme;\n  var channelStore = useChannelContext();\n  var _useMediaQueryContext = useMediaQueryContext(),\n    isMobile = _useMediaQueryContext.isMobile;\n  var currentGroupChannel = channelStore.currentGroupChannel,\n    showSearchIcon = channelStore.showSearchIcon,\n    onSearchClick = channelStore.onSearchClick,\n    onChatHeaderActionClick = channelStore.onChatHeaderActionClick,\n    _channelStore$onBackC = channelStore.onBackClick,\n    onBackClick = _channelStore$onBackC === void 0 ? noop : _channelStore$onBackC;\n  var subTitle = (currentGroupChannel === null || currentGroupChannel === void 0 ? void 0 : currentGroupChannel.members) && (currentGroupChannel === null || currentGroupChannel === void 0 ? void 0 : (_currentGroupChannel$ = currentGroupChannel.members) === null || _currentGroupChannel$ === void 0 ? void 0 : _currentGroupChannel$.length) !== 2;\n  var isMuted = (currentGroupChannel === null || currentGroupChannel === void 0 ? void 0 : currentGroupChannel.myMutedState) === 'muted';\n  var _useContext = useContext(LocalizationContext),\n    stringSet = _useContext.stringSet;\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-chat-header \".concat(className)\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-chat-header__left\"\n  }, isMobile && /*#__PURE__*/React__default.createElement(Icon, {\n    className: \"sendbird-chat-header__icon_back\",\n    onClick: onBackClick,\n    fillColor: IconColors.PRIMARY,\n    width: \"24px\",\n    height: \"24px\",\n    type: IconTypes.ARROW_LEFT\n  }), /*#__PURE__*/React__default.createElement(ChannelAvatar, {\n    theme: theme,\n    channel: currentGroupChannel,\n    userId: userId,\n    height: 32,\n    width: 32\n  }), /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-chat-header__left__title\",\n    type: LabelTypography.H_2,\n    color: LabelColors.ONBACKGROUND_1\n  }, getChannelTitle(currentGroupChannel, userId, stringSet)), /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-chat-header__left__subtitle\",\n    type: LabelTypography.BODY_1,\n    color: LabelColors.ONBACKGROUND_2\n  }, subTitle)), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-chat-header__right\"\n  }, (typeof isMuted === 'string' && isMuted === 'true' || typeof isMuted === 'boolean' && isMuted) && /*#__PURE__*/React__default.createElement(Icon, {\n    className: \"sendbird-chat-header__right__mute\",\n    type: IconTypes.NOTIFICATIONS_OFF_FILLED,\n    fillColor: IconColors.ON_BACKGROUND_2,\n    width: \"24px\",\n    height: \"24px\"\n  }), showSearchIcon && !(currentGroupChannel !== null && currentGroupChannel !== void 0 && currentGroupChannel.isEphemeral) && /*#__PURE__*/React__default.createElement(IconButton, {\n    className: \"sendbird-chat-header__right__search\",\n    width: \"32px\",\n    height: \"32px\",\n    onClick: onSearchClick\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    type: IconTypes.SEARCH,\n    fillColor: IconColors.PRIMARY,\n    width: \"24px\",\n    height: \"24px\"\n  })), /*#__PURE__*/React__default.createElement(IconButton, {\n    className: \"sendbird-chat-header__right__info\",\n    width: \"32px\",\n    height: \"32px\",\n    onClick: onChatHeaderActionClick\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    type: IconTypes.INFO,\n    fillColor: IconColors.PRIMARY,\n    width: \"24px\",\n    height: \"24px\"\n  }))));\n};\nexport { ChannelHeader as default };","map":{"version":3,"mappings":"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","names":["ChannelHeader","_ref","className","globalStore","useSendbirdStateContext","userId","config","_globalStore$config","theme","_globalStore$config2","channelStore","useChannelContext","useMediaQueryContext","isMobile","currentGroupChannel","showSearchIcon","onSearchClick","onChatHeaderActionClick","onBackClick","noop","subTitle","members","_currentGroupChannel$","length","isMuted","myMutedState","useContext","LocalizationContext","stringSet","React","Icon","onClick","fillColor","IconColors","PRIMARY","width","height","type","IconTypes","ARROW_LEFT","ChannelAvatar","channel","Label","LabelTypography","H_2","color","LabelColors","ONBACKGROUND_1","utils","BODY_1","ONBACKGROUND_2","NOTIFICATIONS_OFF_FILLED","ON_BACKGROUND_2","isEphemeral","IconButton","SEARCH","INFO"],"sources":["C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\modules\\Channel\\components\\ChannelHeader\\index.tsx"],"sourcesContent":["import './channel-header.scss';\nimport React, { useContext } from 'react';\n\nimport * as utils from './utils';\n\nimport Label, { LabelTypography, LabelColors } from '../../../../ui/Label';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport IconButton from '../../../../ui/IconButton';\nimport ChannelAvatar from '../../../../ui/ChannelAvatar/index';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { useChannelContext } from '../../context/ChannelProvider';\nimport { useMediaQueryContext } from '../../../../lib/MediaQueryContext';\nimport { noop } from '../../../../utils/utils';\n\ninterface ChannelHeaderProps {\n  className?: string;\n}\n\nconst ChannelHeader: React.FC<ChannelHeaderProps> = ({\n  className = '',\n}) => {\n  const globalStore = useSendbirdStateContext();\n  const userId = globalStore?.config?.userId;\n  const theme = globalStore?.config?.theme;\n\n  const channelStore = useChannelContext();\n  const { isMobile } = useMediaQueryContext();\n  const {\n    currentGroupChannel,\n    showSearchIcon,\n    onSearchClick,\n    onChatHeaderActionClick,\n    onBackClick = noop,\n  } = channelStore;\n  const subTitle = (currentGroupChannel?.members\n    && currentGroupChannel?.members?.length !== 2);\n  const isMuted = currentGroupChannel?.myMutedState === 'muted';\n\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className={`sendbird-chat-header ${className}`}>\n      <div className=\"sendbird-chat-header__left\">\n        {\n          isMobile && (\n            <Icon\n              className=\"sendbird-chat-header__icon_back\"\n              onClick={onBackClick}\n              fillColor={IconColors.PRIMARY}\n              width=\"24px\"\n              height=\"24px\"\n              type={IconTypes.ARROW_LEFT}\n            />\n          )\n        }\n        <ChannelAvatar\n          theme={theme}\n          channel={currentGroupChannel}\n          userId={userId}\n          height={32}\n          width={32}\n        />\n        <Label\n          className=\"sendbird-chat-header__left__title\"\n          type={LabelTypography.H_2}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {utils.getChannelTitle(currentGroupChannel, userId, stringSet)}\n        </Label>\n        <Label\n          className=\"sendbird-chat-header__left__subtitle\"\n          type={LabelTypography.BODY_1}\n          color={LabelColors.ONBACKGROUND_2}\n        >\n          {subTitle}\n        </Label>\n      </div>\n      <div className=\"sendbird-chat-header__right\">\n        {\n          ((typeof isMuted === 'string' && isMuted === 'true') || (typeof isMuted === 'boolean' && isMuted))\n            && (\n              <Icon\n                className=\"sendbird-chat-header__right__mute\"\n                type={IconTypes.NOTIFICATIONS_OFF_FILLED}\n                fillColor={IconColors.ON_BACKGROUND_2}\n                width=\"24px\"\n                height=\"24px\"\n              />\n            )\n        }\n        {\n          (showSearchIcon && !currentGroupChannel?.isEphemeral) && (\n            <IconButton\n              className=\"sendbird-chat-header__right__search\"\n              width=\"32px\"\n              height=\"32px\"\n              onClick={onSearchClick}\n            >\n              <Icon\n                type={IconTypes.SEARCH}\n                fillColor={IconColors.PRIMARY}\n                width=\"24px\"\n                height=\"24px\"\n              />\n            </IconButton>\n          )\n        }\n        <IconButton\n          className=\"sendbird-chat-header__right__info\"\n          width=\"32px\"\n          height=\"32px\"\n          onClick={onChatHeaderActionClick}\n        >\n          <Icon\n            type={IconTypes.INFO}\n            fillColor={IconColors.PRIMARY}\n            width=\"24px\"\n            height=\"24px\"\n          />\n        </IconButton>\n      </div>\n    </div>\n  );\n};\n\nexport default ChannelHeader;\n"]},"metadata":{},"sourceType":"module"}