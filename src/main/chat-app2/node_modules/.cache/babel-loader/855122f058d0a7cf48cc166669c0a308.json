{"ast":null,"code":"var DEFAULT_URL_PREFIX = 'https://static.sendbird.com/sample/cover/cover_';\nvar getOpenChannelAvatar = function getOpenChannelAvatar(channel) {\n  if (channel !== null && channel !== void 0 && channel.coverUrl) {\n    return channel.coverUrl;\n  }\n};\nvar getChannelAvatarSource = function getChannelAvatarSource(channel, currentUserId) {\n  if (channel !== null && channel !== void 0 && channel.coverUrl) {\n    if (!new RegExp(\"^\".concat(DEFAULT_URL_PREFIX)).test(channel.coverUrl)) {\n      return channel.coverUrl;\n    }\n  }\n  return ((channel === null || channel === void 0 ? void 0 : channel.members) || []).filter(function (member) {\n    return member.userId !== currentUserId;\n  }).map(function (_ref) {\n    var profileUrl = _ref.profileUrl;\n    return profileUrl;\n  });\n};\nvar generateDefaultAvatar = function generateDefaultAvatar(channel) {\n  if (channel !== null && channel !== void 0 && channel.coverUrl) {\n    if (new RegExp(\"^\".concat(DEFAULT_URL_PREFIX)).test(channel.coverUrl)) {\n      return true;\n    }\n    return false;\n  }\n  return true;\n};\nexport { getChannelAvatarSource as a, getOpenChannelAvatar as b, generateDefaultAvatar as g };","map":{"version":3,"mappings":"AAGO,IAAMA,kBAAkB,GAAG,iDAAiD;AAEtEC,wBAAoB,GAAIC,SAAxBD,oBAAoB,CAAIC,OAAoB,EAAa;EACpE,IAAIA,OAAO,KAAPA,eAAO,eAAPA,OAAO,CAAEC,QAAQ,EAAE;IACrB,OAAOD,OAAO,CAACC,QAAQ;EACzB;AACF;IAEaC,sBAAsB,GAAGA,SAAzBA,sBAAsB,CAAIF,OAAqB,EAAEG,aAAqB,EAA6B;EAC9G,IAAIH,OAAO,KAAPA,eAAO,eAAPA,OAAO,CAAEC,QAAQ,EAAE;IACrB,IAAI,CAAE,IAAIG,MAAM,YAAKN,kBAAmB,EAAE,CAACO,IAAI,CAACL,OAAO,CAACC,QAAQ,CAAE,EAAE;MAClE,OAAOD,OAAO,CAACC,QAAQ;IACzB;EACF;EACA,OAAO,CAAC,QAAO,KAAPD,eAAO,uBAAPA,OAAO,CAAEM,OAAO,KAAI,EAAE,EAC3BC,MAAM,CAAEC,gBAAM;IAAA,OAAKA,MAAM,CAACC,MAAM,KAAKN,aAAa;EAAA,EAAC,CACnDO,GAAG,CAACC;IAAA,IAAGC,aAAYD,KAAZC;IAAY,OAAKA,UAAU;GAAC;AACxC;AAEaC,yBAAqB,GAAIb,SAAzBa,qBAAqB,CAAIb,OAAqB,EAAc;EACvE,IAAIA,OAAO,KAAPA,eAAO,eAAPA,OAAO,CAAEC,QAAQ,EAAE;IACrB,IAAI,IAAIG,MAAM,YAAKN,kBAAmB,EAAE,CAACO,IAAI,CAACL,OAAO,CAACC,QAAQ,CAAC,EAAE;MAC/D,OAAO,IAAI;IACb;IACA,OAAO,KAAK;EACd;EACA,OAAO,IAAI;AACb","names":["DEFAULT_URL_PREFIX","getOpenChannelAvatar","channel","coverUrl","getChannelAvatarSource","currentUserId","RegExp","test","members","filter","member","userId","map","_ref","profileUrl","generateDefaultAvatar"],"sources":["C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\ui\\ChannelAvatar\\utils.ts"],"sourcesContent":["import type { GroupChannel } from '@sendbird/chat/groupChannel';\nimport type { OpenChannel } from '@sendbird/chat/openChannel';\n\nexport const DEFAULT_URL_PREFIX = 'https://static.sendbird.com/sample/cover/cover_';\n\nexport const getOpenChannelAvatar = (channel: OpenChannel): string => {\n  if (channel?.coverUrl) {\n    return channel.coverUrl;\n  }\n};\n\nexport const getChannelAvatarSource = (channel: GroupChannel, currentUserId: string): string | Array<string> => {\n  if (channel?.coverUrl) {\n    if (!(new RegExp(`^${DEFAULT_URL_PREFIX}`).test(channel.coverUrl))) {\n      return channel.coverUrl;\n    }\n  }\n  return (channel?.members || [])\n    .filter((member) => member.userId !== currentUserId)\n    .map(({ profileUrl }) => profileUrl);\n};\n\nexport const generateDefaultAvatar = (channel: GroupChannel): boolean => {\n  if (channel?.coverUrl) {\n    if (new RegExp(`^${DEFAULT_URL_PREFIX}`).test(channel.coverUrl)) {\n      return true;\n    }\n    return false;\n  }\n  return true;\n};\n"]},"metadata":{},"sourceType":"module"}