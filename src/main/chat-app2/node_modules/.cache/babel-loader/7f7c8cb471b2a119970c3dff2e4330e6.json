{"ast":null,"code":"import _toConsumableArray from \"C:/Users/\\uC774\\uACBD\\uBBFC/IdeaProjects/sendbird-uikit-whatsapp-sample/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"C:/Users/\\uC774\\uACBD\\uBBFC/IdeaProjects/sendbird-uikit-whatsapp-sample/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport React__default, { useContext, useState, useEffect } from 'react';\nimport { u as useChannelContext, a as isDisabledBecauseFrozen, b as isDisabledBecauseMuted, d as isOperator } from '../../ChannelProvider-910bbc1f.js';\nimport MessageInput from '../../ui/MessageInput.js';\nimport QuoteMessageInput from '../../ui/QuoteMessageInput.js';\nimport { a as LocalizationContext } from '../../LocalizationContext-076d6d2e.js';\nimport useSendbirdStateContext from '../../useSendbirdStateContext.js';\nimport SuggestedMentionList from './SuggestedMentionList.js';\nimport { M as MessageInputKeys } from '../../const-221c6a89.js';\nimport { V as VoiceMessageInputWrapper } from '../../VoiceMessageInputWrapper-dc459df1.js';\nimport { u as useDirtyGetMentions } from '../../useDirtyGetMentions-aa730e2c.js';\nimport { u as useMediaQueryContext } from '../../MediaQueryContext-11f0e43f.js';\nimport '../../UserProfileContext-9cfbab4d.js';\nimport 'prop-types';\nimport '../../index-7cdd58b8.js';\nimport '../../index-99aabd9e.js';\nimport '../../topics-b2b77fb9.js';\nimport '../../index-7eb65acf.js';\nimport '../../_rollupPluginBabelHelpers-6bb0305c.js';\nimport '../../utils/message/getOutgoingMessageState.js';\nimport '../../compareIds-defe2bb3.js';\nimport '../../const-b3f02313.js';\nimport '@sendbird/chat/groupChannel';\nimport '../../uuid-1adedf62.js';\nimport '@sendbird/chat/message';\nimport '../../consts-95d8566e.js';\nimport '../../ui/IconButton.js';\nimport '../../ui/Button.js';\nimport '../../index-63949de5.js';\nimport '../../stringSet-13bbd4a2.js';\nimport 'dompurify';\nimport '../../consts-ff014656.js';\nimport '../../ui/Icon.js';\nimport '../../consts-c41580ae.js';\nimport '../../consts-81544e52.js';\nimport '../../tokenize-c40f2b57.js';\nimport '../../ui/ImageRenderer.js';\nimport '../../withSendbird.js';\nimport '../../ui/Avatar.js';\nimport '../../ThreadProvider-3a4a4db0.js';\nimport '../../Thread/context/types.js';\nimport '@sendbird/chat';\nimport '../../VoicePlayer/useVoicePlayer.js';\nimport '../../index-5c985608.js';\nimport '../../VoiceRecorder/context.js';\nimport '../../VoiceRecorder/useVoiceRecorder.js';\nimport '../../index-e6e562c5.js';\nimport '../../ui/PlaybackTime.js';\nimport '../../ui/ProgressBar.js';\nimport '../../ui/TextButton.js';\nimport '../../color-879cc347.js';\nimport '../../ui/Modal.js';\nimport 'react-dom';\nimport '../../index-38e61c64.js';\nvar MessageInputWrapper = function MessageInputWrapper(props, ref) {\n  var value = props.value,\n    renderFileUploadIcon = props.renderFileUploadIcon,\n    renderVoiceMessageIcon = props.renderVoiceMessageIcon,\n    renderSendMessageIcon = props.renderSendMessageIcon;\n  var propDisabled = props.disabled;\n  var _useChannelContext = useChannelContext(),\n    currentGroupChannel = _useChannelContext.currentGroupChannel,\n    initialized = _useChannelContext.initialized,\n    quoteMessage = _useChannelContext.quoteMessage,\n    sendMessage = _useChannelContext.sendMessage,\n    sendFileMessage = _useChannelContext.sendFileMessage,\n    sendVoiceMessage = _useChannelContext.sendVoiceMessage,\n    setQuoteMessage = _useChannelContext.setQuoteMessage,\n    messageInputRef = _useChannelContext.messageInputRef,\n    renderUserMentionItem = _useChannelContext.renderUserMentionItem;\n  var globalStore = useSendbirdStateContext();\n  var _useMediaQueryContext = useMediaQueryContext(),\n    isMobile = _useMediaQueryContext.isMobile;\n  var channel = currentGroupChannel;\n  var _globalStore$config = globalStore.config,\n    isOnline = _globalStore$config.isOnline,\n    isMentionEnabled = _globalStore$config.isMentionEnabled,\n    userMention = _globalStore$config.userMention,\n    isVoiceMessageEnabled = _globalStore$config.isVoiceMessageEnabled,\n    logger = _globalStore$config.logger;\n  var maxUserMentionCount = (userMention === null || userMention === void 0 ? void 0 : userMention.maxMentionCount) || 10;\n  var maxUserSuggestionCount = (userMention === null || userMention === void 0 ? void 0 : userMention.maxSuggestionCount) || 15;\n  var _useContext = useContext(LocalizationContext),\n    stringSet = _useContext.stringSet;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    mentionNickname = _useState2[0],\n    setMentionNickname = _useState2[1];\n  // todo: set type\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    mentionedUsers = _useState4[0],\n    setMentionedUsers = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    mentionedUserIds = _useState6[0],\n    setMentionedUserIds = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selectedUser = _useState8[0],\n    setSelectedUser = _useState8[1];\n  var _useState9 = useState([]),\n    _useState10 = _slicedToArray(_useState9, 2),\n    mentionSuggestedUsers = _useState10[0],\n    setMentionSuggestedUsers = _useState10[1];\n  var _useState11 = useState(null),\n    _useState12 = _slicedToArray(_useState11, 2),\n    messageInputEvent = _useState12[0],\n    setMessageInputEvent = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    showVoiceMessageInput = _useState14[0],\n    setShowVoiceMessageInput = _useState14[1];\n  var disabled = propDisabled || !initialized || isDisabledBecauseFrozen(channel) || isDisabledBecauseMuted(channel) || !isOnline;\n  var isOperator$1 = isOperator(channel);\n  var isBroadcast = channel === null || channel === void 0 ? void 0 : channel.isBroadcast;\n  var displaySuggestedMentionList = isOnline && isMentionEnabled && mentionNickname.length > 0 && !isDisabledBecauseFrozen(channel) && !isDisabledBecauseMuted(channel) && !isBroadcast;\n\n  // Reset when channel changes\n  useEffect(function () {\n    setMentionNickname('');\n    setMentionedUsers([]);\n    setMentionedUserIds([]);\n    setSelectedUser(null);\n    setMentionSuggestedUsers([]);\n    setMessageInputEvent(null);\n    setShowVoiceMessageInput(false);\n  }, [channel === null || channel === void 0 ? void 0 : channel.url]);\n  var mentionNodes = useDirtyGetMentions({\n    ref: ref || messageInputRef\n  }, {\n    logger: logger\n  });\n  var ableMention = (mentionNodes === null || mentionNodes === void 0 ? void 0 : mentionNodes.length) < maxUserMentionCount;\n  useEffect(function () {\n    setMentionedUsers(mentionedUsers.filter(function (_ref) {\n      var userId = _ref.userId;\n      var i = mentionedUserIds.indexOf(userId);\n      if (i < 0) {\n        return false;\n      } else {\n        mentionedUserIds.splice(i, 1);\n        return true;\n      }\n    }));\n  }, [mentionedUserIds]);\n\n  // broadcast channel + not operator\n  if (isBroadcast && !isOperator$1) {\n    return null;\n  }\n  // other conditions\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-message-input-wrapper\".concat(showVoiceMessageInput ? '--voice-message' : '')\n  }, displaySuggestedMentionList && /*#__PURE__*/React__default.createElement(SuggestedMentionList, {\n    targetNickname: mentionNickname,\n    inputEvent: messageInputEvent,\n    renderUserMentionItem: renderUserMentionItem,\n    onUserItemClick: function onUserItemClick(user) {\n      if (user) {\n        setMentionedUsers([].concat(_toConsumableArray(mentionedUsers), [user]));\n      }\n      setMentionNickname('');\n      setSelectedUser(user);\n      setMessageInputEvent(null);\n    },\n    onFocusItemChange: function onFocusItemChange() {\n      setMessageInputEvent(null);\n    },\n    onFetchUsers: function onFetchUsers(users) {\n      setMentionSuggestedUsers(users);\n    },\n    ableAddMention: ableMention,\n    maxMentionCount: maxUserMentionCount,\n    maxSuggestionCount: maxUserSuggestionCount\n  }), quoteMessage && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-message-input-wrapper__quote-message-input\"\n  }, /*#__PURE__*/React__default.createElement(QuoteMessageInput, {\n    replyingMessage: quoteMessage,\n    onClose: function onClose() {\n      return setQuoteMessage(null);\n    }\n  })), showVoiceMessageInput ? /*#__PURE__*/React__default.createElement(VoiceMessageInputWrapper, {\n    channel: channel,\n    onSubmitClick: function onSubmitClick(recordedFile, duration) {\n      sendVoiceMessage(recordedFile, duration, quoteMessage);\n      setQuoteMessage(null);\n      setShowVoiceMessageInput(false);\n    },\n    onCancelClick: function onCancelClick() {\n      setShowVoiceMessageInput(false);\n    }\n  }) : /*#__PURE__*/React__default.createElement(MessageInput, {\n    className: \"sendbird-message-input-wrapper__message-input\",\n    value: value,\n    channelUrl: channel === null || channel === void 0 ? void 0 : channel.url,\n    mentionSelectedUser: selectedUser,\n    isMentionEnabled: isMentionEnabled,\n    isVoiceMessageEnabled: isVoiceMessageEnabled,\n    onVoiceMessageIconClick: function onVoiceMessageIconClick() {\n      setShowVoiceMessageInput(true);\n    },\n    setMentionedUsers: setMentionedUsers,\n    channel: channel,\n    placeholder: quoteMessage && stringSet.MESSAGE_INPUT__QUOTE_REPLY__PLACE_HOLDER || isDisabledBecauseFrozen(channel) && stringSet.MESSAGE_INPUT__PLACE_HOLDER__DISABLED || isDisabledBecauseMuted(channel) && (isMobile ? stringSet.MESSAGE_INPUT__PLACE_HOLDER__MUTED_SHORT : stringSet.MESSAGE_INPUT__PLACE_HOLDER__MUTED),\n    ref: ref || messageInputRef,\n    disabled: disabled,\n    renderFileUploadIcon: renderFileUploadIcon,\n    renderSendMessageIcon: renderSendMessageIcon,\n    renderVoiceMessageIcon: renderVoiceMessageIcon,\n    onStartTyping: function onStartTyping() {\n      channel === null || channel === void 0 ? void 0 : channel.startTyping();\n    },\n    onSendMessage: function onSendMessage(_ref2) {\n      var _channel$endTyping;\n      var message = _ref2.message,\n        mentionTemplate = _ref2.mentionTemplate;\n      sendMessage({\n        message: message,\n        quoteMessage: quoteMessage,\n        mentionedUsers: mentionedUsers,\n        mentionTemplate: mentionTemplate\n      });\n      setMentionNickname('');\n      setMentionedUsers([]);\n      setQuoteMessage(null);\n      channel === null || channel === void 0 ? void 0 : (_channel$endTyping = channel.endTyping) === null || _channel$endTyping === void 0 ? void 0 : _channel$endTyping.call(channel);\n    },\n    onFileUpload: function onFileUpload(file) {\n      sendFileMessage(file, quoteMessage);\n      setQuoteMessage(null);\n    },\n    onUserMentioned: function onUserMentioned(user) {\n      if ((selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.userId) === (user === null || user === void 0 ? void 0 : user.userId)) {\n        setSelectedUser(null);\n        setMentionNickname('');\n      }\n    },\n    onMentionStringChange: function onMentionStringChange(mentionText) {\n      setMentionNickname(mentionText);\n    },\n    onMentionedUserIdsUpdated: function onMentionedUserIdsUpdated(userIds) {\n      setMentionedUserIds(userIds);\n    },\n    onKeyDown: function onKeyDown(e) {\n      if (displaySuggestedMentionList && (mentionSuggestedUsers === null || mentionSuggestedUsers === void 0 ? void 0 : mentionSuggestedUsers.length) > 0 && (e.key === MessageInputKeys.Enter && ableMention || e.key === MessageInputKeys.ArrowUp || e.key === MessageInputKeys.ArrowDown)) {\n        setMessageInputEvent(e);\n        return true;\n      }\n      return false;\n    }\n  }));\n};\nvar MessageInputWrapper$1 = /*#__PURE__*/React__default.forwardRef(MessageInputWrapper);\nexport { MessageInputWrapper$1 as default };","map":{"version":3,"mappings":"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","names":["MessageInputWrapper","props","ref","value","renderFileUploadIcon","renderVoiceMessageIcon","renderSendMessageIcon","propDisabled","disabled","useChannelContext","currentGroupChannel","initialized","quoteMessage","sendMessage","sendFileMessage","sendVoiceMessage","setQuoteMessage","messageInputRef","renderUserMentionItem","globalStore","useSendbirdStateContext","useMediaQueryContext","isMobile","channel","config","isOnline","isMentionEnabled","userMention","isVoiceMessageEnabled","logger","maxUserMentionCount","maxMentionCount","maxUserSuggestionCount","maxSuggestionCount","useContext","LocalizationContext","stringSet","useState","mentionNickname","setMentionNickname","mentionedUsers","setMentionedUsers","mentionedUserIds","setMentionedUserIds","selectedUser","setSelectedUser","mentionSuggestedUsers","setMentionSuggestedUsers","messageInputEvent","setMessageInputEvent","showVoiceMessageInput","setShowVoiceMessageInput","utils","isOperator","isBroadcast","displaySuggestedMentionList","length","useEffect","url","mentionNodes","useDirtyGetMentions","ableMention","filter","_ref","userId","i","indexOf","splice","React","className","SuggestedMentionList","targetNickname","inputEvent","onUserItemClick","user","onFocusItemChange","onFetchUsers","users","ableAddMention","QuoteMessageInput","replyingMessage","onClose","VoiceMessageInputWrapper","onSubmitClick","recordedFile","duration","onCancelClick","MessageInput","channelUrl","mentionSelectedUser","onVoiceMessageIconClick","placeholder","MESSAGE_INPUT__QUOTE_REPLY__PLACE_HOLDER","MESSAGE_INPUT__PLACE_HOLDER__DISABLED","MESSAGE_INPUT__PLACE_HOLDER__MUTED_SHORT","MESSAGE_INPUT__PLACE_HOLDER__MUTED","onStartTyping","startTyping","onSendMessage","_ref2","message","mentionTemplate","endTyping","_channel$endTyping","onFileUpload","file","onUserMentioned","onMentionStringChange","mentionText","onMentionedUserIdsUpdated","userIds","onKeyDown","e","key","MessageInputKeys","Enter","ArrowUp","ArrowDown","forwardRef"],"sources":["C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\modules\\Channel\\components\\MessageInput\\index.tsx"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\n\nimport './message-input.scss';\nimport * as utils from '../../context/utils';\n\nimport MessageInput from '../../../../ui/MessageInput';\nimport QuoteMessageInput from '../../../../ui/QuoteMessageInput';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport { useChannelContext } from '../../context/ChannelProvider';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport SuggestedMentionList from '../SuggestedMentionList';\nimport { MessageInputKeys } from '../../../../ui/MessageInput/const';\nimport VoiceMessageInputWrapper from './VoiceMessageInputWrapper';\nimport { useDirtyGetMentions } from '../../../Message/hooks/useDirtyGetMentions';\nimport { useMediaQueryContext } from '../../../../lib/MediaQueryContext';\n\nexport type MessageInputWrapperProps = {\n  value?: string;\n  disabled?: boolean;\n  renderFileUploadIcon?: () => React.ReactElement;\n  renderVoiceMessageIcon?: () => React.ReactElement;\n  renderSendMessageIcon?: () => React.ReactElement;\n};\n\nconst MessageInputWrapper = (\n  props: MessageInputWrapperProps,\n  ref: React.MutableRefObject<any>,\n): JSX.Element => {\n  const {\n    value,\n    renderFileUploadIcon,\n    renderVoiceMessageIcon,\n    renderSendMessageIcon,\n  } = props;\n  const propDisabled = props.disabled;\n  const {\n    currentGroupChannel,\n    initialized,\n    quoteMessage,\n    sendMessage,\n    sendFileMessage,\n    sendVoiceMessage,\n    setQuoteMessage,\n    messageInputRef,\n    renderUserMentionItem,\n  } = useChannelContext();\n  const globalStore = useSendbirdStateContext();\n  const { isMobile } = useMediaQueryContext();\n  const channel = currentGroupChannel;\n\n  const {\n    isOnline,\n    isMentionEnabled,\n    userMention,\n    isVoiceMessageEnabled,\n    logger,\n  } = globalStore.config;\n  const maxUserMentionCount = userMention?.maxMentionCount || 10;\n  const maxUserSuggestionCount = userMention?.maxSuggestionCount || 15;\n\n  const { stringSet } = useContext(LocalizationContext);\n  const [mentionNickname, setMentionNickname] = useState('');\n  // todo: set type\n  const [mentionedUsers, setMentionedUsers] = useState([]);\n  const [mentionedUserIds, setMentionedUserIds] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [mentionSuggestedUsers, setMentionSuggestedUsers] = useState([]);\n  const [messageInputEvent, setMessageInputEvent] = useState(null);\n  const [showVoiceMessageInput, setShowVoiceMessageInput] = useState(false);\n  const disabled = propDisabled\n    || !initialized\n    || utils.isDisabledBecauseFrozen(channel)\n    || utils.isDisabledBecauseMuted(channel)\n    || !isOnline;\n  const isOperator = utils.isOperator(channel);\n  const isBroadcast = channel?.isBroadcast;\n\n  const displaySuggestedMentionList = isOnline\n    && isMentionEnabled\n    && mentionNickname.length > 0\n    && !utils.isDisabledBecauseFrozen(channel)\n    && !utils.isDisabledBecauseMuted(channel)\n    && !isBroadcast;\n\n  // Reset when channel changes\n  useEffect(() => {\n    setMentionNickname('');\n    setMentionedUsers([]);\n    setMentionedUserIds([]);\n    setSelectedUser(null);\n    setMentionSuggestedUsers([]);\n    setMessageInputEvent(null);\n    setShowVoiceMessageInput(false);\n  }, [channel?.url]);\n\n  const mentionNodes = useDirtyGetMentions({ ref: ref || messageInputRef }, { logger });\n  const ableMention = mentionNodes?.length < maxUserMentionCount;\n\n  useEffect(() => {\n    setMentionedUsers(mentionedUsers.filter(({ userId }) => {\n      const i = mentionedUserIds.indexOf(userId);\n      if (i < 0) {\n        return false;\n      } else {\n        mentionedUserIds.splice(i, 1);\n        return true;\n      }\n    }));\n  }, [mentionedUserIds]);\n\n  // broadcast channel + not operator\n  if (isBroadcast && !isOperator) {\n    return null;\n  }\n  // other conditions\n  return (\n    <div className={`sendbird-message-input-wrapper${showVoiceMessageInput ? '--voice-message' : ''}`}>\n      {\n        displaySuggestedMentionList && (\n          <SuggestedMentionList\n            targetNickname={mentionNickname}\n            inputEvent={messageInputEvent}\n            renderUserMentionItem={renderUserMentionItem}\n            onUserItemClick={(user) => {\n              if (user) {\n                setMentionedUsers([...mentionedUsers, user]);\n              }\n              setMentionNickname('');\n              setSelectedUser(user);\n              setMessageInputEvent(null);\n            }}\n            onFocusItemChange={() => {\n              setMessageInputEvent(null);\n            }}\n            onFetchUsers={(users) => {\n              setMentionSuggestedUsers(users);\n            }}\n            ableAddMention={ableMention}\n            maxMentionCount={maxUserMentionCount}\n            maxSuggestionCount={maxUserSuggestionCount}\n          />\n        )\n      }\n      {quoteMessage && (\n        <div className=\"sendbird-message-input-wrapper__quote-message-input\">\n          <QuoteMessageInput\n            replyingMessage={quoteMessage}\n            onClose={() => setQuoteMessage(null)}\n          />\n        </div>\n      )}\n      {\n        showVoiceMessageInput\n          ? (\n            <VoiceMessageInputWrapper\n              channel={channel}\n              onSubmitClick={(recordedFile, duration) => {\n                sendVoiceMessage(recordedFile, duration, quoteMessage);\n                setQuoteMessage(null);\n                setShowVoiceMessageInput(false);\n              }}\n              onCancelClick={() => {\n                setShowVoiceMessageInput(false);\n              }}\n            />\n          )\n          : (\n            <MessageInput\n              className=\"sendbird-message-input-wrapper__message-input\"\n              value={value}\n              channelUrl={channel?.url}\n              mentionSelectedUser={selectedUser}\n              isMentionEnabled={isMentionEnabled}\n              isVoiceMessageEnabled={isVoiceMessageEnabled}\n              onVoiceMessageIconClick={() => {\n                setShowVoiceMessageInput(true);\n              }}\n              setMentionedUsers={setMentionedUsers}\n              channel={channel}\n              placeholder={\n                (quoteMessage && stringSet.MESSAGE_INPUT__QUOTE_REPLY__PLACE_HOLDER)\n                || (utils.isDisabledBecauseFrozen(channel) && stringSet.MESSAGE_INPUT__PLACE_HOLDER__DISABLED)\n                || (utils.isDisabledBecauseMuted(channel) && (\n                  isMobile ? stringSet.MESSAGE_INPUT__PLACE_HOLDER__MUTED_SHORT : stringSet.MESSAGE_INPUT__PLACE_HOLDER__MUTED\n                ))\n              }\n              ref={ref || messageInputRef}\n              disabled={disabled}\n              renderFileUploadIcon={renderFileUploadIcon}\n              renderSendMessageIcon={renderSendMessageIcon}\n              renderVoiceMessageIcon={renderVoiceMessageIcon}\n              onStartTyping={() => {\n                channel?.startTyping();\n              }}\n              onSendMessage={({ message, mentionTemplate }) => {\n                sendMessage({\n                  message,\n                  quoteMessage,\n                  mentionedUsers,\n                  mentionTemplate,\n                });\n                setMentionNickname('');\n                setMentionedUsers([]);\n                setQuoteMessage(null);\n                channel?.endTyping?.();\n              }}\n              onFileUpload={(file) => {\n                sendFileMessage(file, quoteMessage);\n                setQuoteMessage(null);\n              }}\n              onUserMentioned={(user) => {\n                if (selectedUser?.userId === user?.userId) {\n                  setSelectedUser(null);\n                  setMentionNickname('');\n                }\n              }}\n              onMentionStringChange={(mentionText) => {\n                setMentionNickname(mentionText);\n              }}\n              onMentionedUserIdsUpdated={(userIds) => {\n                setMentionedUserIds(userIds);\n              }}\n              onKeyDown={(e) => {\n                if (displaySuggestedMentionList && mentionSuggestedUsers?.length > 0\n                  && ((e.key === MessageInputKeys.Enter && ableMention) || e.key === MessageInputKeys.ArrowUp || e.key === MessageInputKeys.ArrowDown)\n                ) {\n                  setMessageInputEvent(e);\n                  return true;\n                }\n                return false;\n              }}\n            />\n          )\n      }\n    </div>\n  );\n};\n\nexport default React.forwardRef(MessageInputWrapper);\n"]},"metadata":{},"sourceType":"module"}