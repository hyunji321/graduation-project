{"ast":null,"code":"import _toConsumableArray from \"C:/Users/\\uC774\\uACBD\\uBBFC/IdeaProjects/sendbird-uikit-whatsapp-sample/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"C:/Users/\\uC774\\uACBD\\uBBFC/IdeaProjects/sendbird-uikit-whatsapp-sample/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { _ as _objectSpread2 } from './_rollupPluginBabelHelpers-6bb0305c.js';\nimport { OutgoingMessageStates, getOutgoingMessageState } from './utils/message/getOutgoingMessageState.js';\n\n// https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Complete_list_of_MIME_types\nvar SUPPORTED_MIMES = {\n  IMAGE: ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/svg+xml', 'image/webp' // not supported in IE\n  ],\n\n  VIDEO: ['video/mpeg', 'video/ogg', 'video/webm', 'video/mp4'],\n  AUDIO: ['audio/aac', 'audio/midi', 'audio/x-midi', 'audio/mpeg', 'audio/ogg', 'audio/opus', 'audio/wav', 'audio/webm', 'audio/3gpp', 'audio/3gpp2', 'audio/mp3']\n};\n\n/* eslint-disable no-redeclare */\n\nvar UIKitMessageTypes = {\n  ADMIN: 'ADMIN',\n  TEXT: 'TEXT',\n  FILE: 'FILE',\n  THUMBNAIL: 'THUMBNAIL',\n  OG: 'OG',\n  UNKNOWN: 'UNKNOWN'\n};\n/* eslint-disable no-redeclare */\n\nvar UIKitFileTypes = {\n  IMAGE: 'IMAGE',\n  AUDIO: 'AUDIO',\n  VIDEO: 'VIDEO',\n  GIF: 'GIF',\n  VOICE: 'VOICE',\n  OTHERS: 'OTHERS'\n};\n\n/* eslint-disable no-redeclare */\n\nvar SendingMessageStatus = {\n  NONE: 'none',\n  SUCCEEDED: 'succeeded',\n  FAILED: 'failed',\n  PENDING: 'pending'\n};\nvar isTextuallyNull = function isTextuallyNull(text) {\n  if (text === '' || text === null) {\n    return true;\n  }\n  return false;\n};\nvar isImage = function isImage(type) {\n  return SUPPORTED_MIMES.IMAGE.indexOf(type) >= 0;\n};\nvar isVideo = function isVideo(type) {\n  return SUPPORTED_MIMES.VIDEO.indexOf(type) >= 0;\n};\nvar isGif = function isGif(type) {\n  return type === 'image/gif';\n};\nvar isSupportedFileView = function isSupportedFileView(type) {\n  return isImage(type) || isVideo(type);\n};\nvar isAudio = function isAudio(type) {\n  return SUPPORTED_MIMES.AUDIO.indexOf(type) >= 0;\n};\nvar getUIKitFileTypes = function getUIKitFileTypes() {\n  return _objectSpread2({}, UIKitFileTypes);\n};\nvar getUIKitFileType = function getUIKitFileType(type) {\n  if (isGif(type)) return UIKitFileTypes.GIF;\n  if (isImage(type)) return UIKitFileTypes.IMAGE;\n  if (isVideo(type)) return UIKitFileTypes.VIDEO;\n  if (isAudio(type)) return UIKitFileTypes.AUDIO;\n  return UIKitFileTypes.OTHERS;\n};\nvar isSentMessage = function isSentMessage(message) {\n  return message.sendingStatus === 'succeeded';\n};\nvar isReadMessage = function isReadMessage(channel, message) {\n  return getOutgoingMessageState(channel, message) === OutgoingMessageStates.READ;\n};\n// TODO: Remove channel from the params, it seems unnecessary\nvar isFailedMessage = function isFailedMessage(message) {\n  return (message === null || message === void 0 ? void 0 : message.sendingStatus) === 'failed';\n};\nvar isPendingMessage = function isPendingMessage(message) {\n  return (message === null || message === void 0 ? void 0 : message.sendingStatus) === 'pending';\n};\nvar isSentStatus = function isSentStatus(state) {\n  return state === OutgoingMessageStates.SENT || state === OutgoingMessageStates.DELIVERED || state === OutgoingMessageStates.READ;\n};\nvar isAdminMessage = function isAdminMessage(message) {\n  var _message$isAdminMessa;\n  return message && ((message === null || message === void 0 ? void 0 : (_message$isAdminMessa = message.isAdminMessage) === null || _message$isAdminMessa === void 0 ? void 0 : _message$isAdminMessa.call(message)) || (message === null || message === void 0 ? void 0 : message.messageType) === 'admin');\n};\nvar isUserMessage = function isUserMessage(message) {\n  var _message$isUserMessag;\n  return message && ((message === null || message === void 0 ? void 0 : (_message$isUserMessag = message.isUserMessage) === null || _message$isUserMessag === void 0 ? void 0 : _message$isUserMessag.call(message)) || (message === null || message === void 0 ? void 0 : message.messageType) === 'user');\n};\nvar isFileMessage = function isFileMessage(message) {\n  var _message$isFileMessag;\n  return message && ((message === null || message === void 0 ? void 0 : (_message$isFileMessag = message.isFileMessage) === null || _message$isFileMessag === void 0 ? void 0 : _message$isFileMessag.call(message)) || (message === null || message === void 0 ? void 0 : message.messageType) === 'file');\n};\nvar isParentMessage = function isParentMessage(message) {\n  return !message.parentMessageId && !message.parentMessage && message.threadInfo !== null;\n};\nvar isThreadMessage = function isThreadMessage(message) {\n  return !!message.parentMessageId && !!message.parentMessage;\n};\nvar isOGMessage = function isOGMessage(message) {\n  var _message$ogMetaData, _message$ogMetaData2, _message$ogMetaData3, _message$ogMetaData4;\n  return !!(message && isUserMessage(message) && message !== null && message !== void 0 && message.ogMetaData && ((_message$ogMetaData = message.ogMetaData) !== null && _message$ogMetaData !== void 0 && _message$ogMetaData.url || (_message$ogMetaData2 = message.ogMetaData) !== null && _message$ogMetaData2 !== void 0 && _message$ogMetaData2.title || (_message$ogMetaData3 = message.ogMetaData) !== null && _message$ogMetaData3 !== void 0 && _message$ogMetaData3.description || (_message$ogMetaData4 = message.ogMetaData) !== null && _message$ogMetaData4 !== void 0 && _message$ogMetaData4.defaultImage));\n};\nvar isTextMessage = function isTextMessage(message) {\n  return isUserMessage(message) && !isOGMessage(message);\n};\nvar isThumbnailMessage = function isThumbnailMessage(message) {\n  return message && isFileMessage(message) && isSupportedFileView(message.type);\n};\nvar isImageMessage = function isImageMessage(message) {\n  return message && isThumbnailMessage(message) && isImage(message.type);\n};\nvar isVideoMessage = function isVideoMessage(message) {\n  return message && isThumbnailMessage(message) && isVideo(message.type);\n};\nvar isGifMessage = function isGifMessage(message) {\n  return message && isThumbnailMessage(message) && isGif(message.type);\n};\nvar isAudioMessage = function isAudioMessage(message) {\n  return message && isFileMessage(message) && isAudio(message.type);\n};\nvar isAudioMessageMimeType = function isAudioMessageMimeType(type) {\n  return /^audio\\//.test(type);\n};\nvar isVoiceMessage = function isVoiceMessage(message) {\n  var _message$metaArrays$f, _message$metaArrays, _message$metaArrays$f2, _message$metaArrays$f3;\n  // ex) audio/m4a OR audio/m4a;sbu_type=voice\n  if (!(message && isFileMessage(message))) {\n    return false;\n  }\n  var _message$type$split = message.type.split(';'),\n    _message$type$split2 = _slicedToArray(_message$type$split, 2),\n    mimeType = _message$type$split2[0],\n    typeParameter = _message$type$split2[1];\n  if (!isAudioMessageMimeType(mimeType) || !typeParameter) {\n    return false;\n  }\n  var _typeParameter$split = typeParameter.split('='),\n    _typeParameter$split2 = _slicedToArray(_typeParameter$split, 2),\n    key = _typeParameter$split2[0],\n    value = _typeParameter$split2[1];\n  if (key === 'sbu_type' && value === 'voice') {\n    return true;\n  }\n  // ex) message.metaArrays = [{ key: 'KEY_INTERNAL_MESSAGE_TYPE', value: ['voice/m4a'] }]\n  return isVoiceMessageMimeType((_message$metaArrays$f = message === null || message === void 0 ? void 0 : (_message$metaArrays = message.metaArrays) === null || _message$metaArrays === void 0 ? void 0 : (_message$metaArrays$f2 = _message$metaArrays.find(function (metaArray) {\n    return metaArray.key === 'KEY_INTERNAL_MESSAGE_TYPE';\n  })) === null || _message$metaArrays$f2 === void 0 ? void 0 : (_message$metaArrays$f3 = _message$metaArrays$f2.value) === null || _message$metaArrays$f3 === void 0 ? void 0 : _message$metaArrays$f3[0]) !== null && _message$metaArrays$f !== void 0 ? _message$metaArrays$f : '');\n};\nvar isVoiceMessageMimeType = function isVoiceMessageMimeType(type) {\n  return /^voice\\//.test(type);\n};\nvar isEditedMessage = function isEditedMessage(message) {\n  return isUserMessage(message) && (message === null || message === void 0 ? void 0 : message.updatedAt) > 0;\n};\nvar getUIKitMessageTypes = function getUIKitMessageTypes() {\n  return _objectSpread2({}, UIKitMessageTypes);\n};\nvar getUIKitMessageType = function getUIKitMessageType(message) {\n  if (isAdminMessage(message)) return UIKitMessageTypes.ADMIN;\n  if (isUserMessage(message)) {\n    return isOGMessage(message) ? UIKitMessageTypes.OG : UIKitMessageTypes.TEXT;\n  }\n  if (isFileMessage(message)) {\n    if (isThumbnailMessage(message)) {\n      return UIKitMessageTypes.THUMBNAIL;\n    }\n    if (isVoiceMessage(message)) {\n      return UIKitFileTypes.VOICE;\n    }\n    return UIKitMessageTypes.FILE;\n  }\n  return UIKitMessageTypes.UNKNOWN;\n};\nvar getSendingMessageStatus = function getSendingMessageStatus() {\n  return _objectSpread2({}, SendingMessageStatus);\n};\nvar reducer = function reducer(accumulator, currentValue) {\n  if (Array.isArray(currentValue)) {\n    return [].concat(_toConsumableArray(accumulator), _toConsumableArray(currentValue));\n  } else {\n    accumulator.push(currentValue);\n    return accumulator;\n  }\n};\nvar getClassName = function getClassName(classNames) {\n  return Array.isArray(classNames) ? classNames.reduce(reducer, []).join(' ') : classNames;\n};\nvar isReactedBy = function isReactedBy(userId, reaction) {\n  return reaction.userIds.some(function (reactorUserId) {\n    return reactorUserId === userId;\n  });\n};\nvar getEmojiTooltipString = function getEmojiTooltipString(reaction, userId, memberNicknamesMap, stringSet) {\n  var you = '';\n  if (isReactedBy(userId, reaction)) {\n    you = reaction.userIds.length === 1 ? stringSet.TOOLTIP__YOU : stringSet.TOOLTIP__AND_YOU;\n  }\n  return \"\".concat(reaction.userIds.filter(function (reactorUserId) {\n    return reactorUserId !== userId;\n  }).map(function (reactorUserId) {\n    return memberNicknamesMap.get(reactorUserId) || stringSet.TOOLTIP__UNKNOWN_USER;\n  }).join(', ')).concat(you);\n};\nvar URL_REG = /^((http|https):\\/\\/)?([a-z\\d]+\\.)+[a-z]{2,6}(\\:[0-9]{1,5})?(\\/[-a-zA-Z\\d%_.~+&=]*)*(\\?[;&a-zA-Z\\d%_.~+=-]*)?(\\#[-a-zA-Z\\d_]*)?$/;\nvar isUrl = function isUrl(text) {\n  return URL_REG.test(text);\n};\nvar truncateString = function truncateString(fullStr, strLen) {\n  if (!strLen) strLen = 40;\n  if (fullStr === null || fullStr === undefined) return '';\n  if (fullStr.length <= strLen) return fullStr;\n  var separator = '...';\n  var sepLen = separator.length;\n  var charsToShow = strLen - sepLen;\n  var frontChars = Math.ceil(charsToShow / 2);\n  var backChars = Math.floor(charsToShow / 2);\n  return fullStr.substr(0, frontChars) + separator + fullStr.substr(fullStr.length - backChars);\n};\nvar copyToClipboard = function copyToClipboard(text) {\n  // @ts-ignore: Unreachable code error\n  if (window.clipboardData && window.clipboardData.setData) {\n    // Internet Explorer-specific code path to prevent textarea being shown while dialog is visible.\n    // @ts-ignore: Unreachable code error\n    return window.clipboardData.setData('Text', text);\n  }\n  if (document.queryCommandSupported && document.queryCommandSupported('copy')) {\n    var textarea = document.createElement('textarea');\n    textarea.textContent = text;\n    textarea.style.position = 'fixed'; // Prevent scrolling to bottom of page in Microsoft Edge.\n    document.body.appendChild(textarea);\n    textarea.select();\n    try {\n      return document.execCommand('copy'); // Security exception may be thrown by some browsers.\n    } catch (ex) {\n      return false;\n    } finally {\n      document.body.removeChild(textarea);\n    }\n  }\n  return false;\n};\nvar getEmojiListAll = function getEmojiListAll(emojiContainer) {\n  var _emojiContainer$emoji;\n  return emojiContainer === null || emojiContainer === void 0 ? void 0 : (_emojiContainer$emoji = emojiContainer.emojiCategories) === null || _emojiContainer$emoji === void 0 ? void 0 : _emojiContainer$emoji.map(function (emojiCategory) {\n    return emojiCategory.emojis;\n  }).reduce(function (prevArr, currArr) {\n    return prevArr.concat(currArr);\n  }, []);\n};\nvar getEmojiMapAll = function getEmojiMapAll(emojiContainer) {\n  var _emojiContainer$emoji2;\n  var emojiMap = new Map();\n  emojiContainer === null || emojiContainer === void 0 ? void 0 : (_emojiContainer$emoji2 = emojiContainer.emojiCategories) === null || _emojiContainer$emoji2 === void 0 ? void 0 : _emojiContainer$emoji2.forEach(function (category) {\n    var _category$emojis;\n    category === null || category === void 0 ? void 0 : (_category$emojis = category.emojis) === null || _category$emojis === void 0 ? void 0 : _category$emojis.forEach(function (emoji) {\n      if (emoji && emoji.key) {\n        emojiMap.set(emoji.key, emoji);\n      }\n    });\n  });\n  return emojiMap;\n};\nvar findEmojiUrl = function findEmojiUrl(targetKey) {\n  return function (_ref) {\n    var key = _ref.key;\n    return key === targetKey;\n  };\n};\nvar getEmojiUrl = function getEmojiUrl(emojiContainer, emojiKey) {\n  var _emojiContainer$emoji3, _emojiContainer$emoji4;\n  var isFindingKey = findEmojiUrl(emojiKey !== null && emojiKey !== void 0 ? emojiKey : '');\n  return (emojiContainer === null || emojiContainer === void 0 ? void 0 : (_emojiContainer$emoji3 = emojiContainer.emojiCategories.find(function (category) {\n    return category.emojis.some(isFindingKey);\n  })) === null || _emojiContainer$emoji3 === void 0 ? void 0 : (_emojiContainer$emoji4 = _emojiContainer$emoji3.emojis.find(isFindingKey)) === null || _emojiContainer$emoji4 === void 0 ? void 0 : _emojiContainer$emoji4.url) || '';\n};\nvar getUserName = function getUserName(user) {\n  return (user === null || user === void 0 ? void 0 : user.friendName) || (user === null || user === void 0 ? void 0 : user.nickname) || (user === null || user === void 0 ? void 0 : user.userId);\n};\nvar getSenderName = function getSenderName(message) {\n  return (message === null || message === void 0 ? void 0 : message.sender) && getUserName(message === null || message === void 0 ? void 0 : message.sender);\n};\nvar hasSameMembers = function hasSameMembers(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a == null || b == null) {\n    return false;\n  }\n  if (a.length !== b.length) {\n    return false;\n  }\n  var sortedA = _toConsumableArray(a).sort();\n  var sortedB = _toConsumableArray(b).sort();\n  for (var i = 0; i < sortedA.length; ++i) {\n    if (sortedA[i] !== sortedB[i]) {\n      return false;\n    }\n  }\n  return true;\n};\nvar isFriend = function isFriend(user) {\n  return !!(user.friendDiscoveryKey || user.friendName);\n};\nvar filterMessageListParams = function filterMessageListParams(params, message) {\n  var _params$customTypesFi, _params$senderUserIds;\n  // @ts-ignore\n  if (params !== null && params !== void 0 && params.messageTypeFilter && params.messageTypeFilter !== message.messageType) {\n    return false;\n  }\n  if ((params === null || params === void 0 ? void 0 : (_params$customTypesFi = params.customTypesFilter) === null || _params$customTypesFi === void 0 ? void 0 : _params$customTypesFi.length) > 0) {\n    var customTypes = params.customTypesFilter.filter(function (item) {\n      return item !== '*';\n    });\n    // Because Chat SDK inserts '*' when customTypes is empty\n    if (customTypes.length > 0 && !customTypes.includes(message.customType)) {\n      return false;\n    }\n  }\n  if (params !== null && params !== void 0 && params.senderUserIdsFilter && (params === null || params === void 0 ? void 0 : (_params$senderUserIds = params.senderUserIdsFilter) === null || _params$senderUserIds === void 0 ? void 0 : _params$senderUserIds.length) > 0) {\n    var _message$isUserMessag2, _message$isFileMessag2;\n    if (message !== null && message !== void 0 && (_message$isUserMessag2 = message.isUserMessage) !== null && _message$isUserMessag2 !== void 0 && _message$isUserMessag2.call(message) || message !== null && message !== void 0 && (_message$isFileMessag2 = message.isFileMessage) !== null && _message$isFileMessag2 !== void 0 && _message$isFileMessag2.call(message)) {\n      var _params$senderUserIds2;\n      var messageSender = message.sender || message['_sender'];\n      if (!(params !== null && params !== void 0 && (_params$senderUserIds2 = params.senderUserIdsFilter) !== null && _params$senderUserIds2 !== void 0 && _params$senderUserIds2.includes(messageSender === null || messageSender === void 0 ? void 0 : messageSender.userId))) {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n  if (!(params !== null && params !== void 0 && params.includeParentMessageInfo) && (message !== null && message !== void 0 && message.parentMessageId || message !== null && message !== void 0 && message.parentMessage)) {\n    return false;\n  }\n  return true;\n};\nvar filterChannelListParams = function filterChannelListParams(params, channel, currentUserId) {\n  var _searchFilter$fields$, _searchFilter$fields, _userIdsFilter$userId, _params$customTypesFi2, _channel$name2, _params$channelUrlsFi;\n  if (!(params !== null && params !== void 0 && params.includeEmpty) && (channel === null || channel === void 0 ? void 0 : channel.lastMessage) === null) {\n    return false;\n  }\n  var searchFilter = params === null || params === void 0 ? void 0 : params.searchFilter;\n  if (searchFilter !== null && searchFilter !== void 0 && searchFilter.query && ((_searchFilter$fields$ = searchFilter === null || searchFilter === void 0 ? void 0 : (_searchFilter$fields = searchFilter.fields) === null || _searchFilter$fields === void 0 ? void 0 : _searchFilter$fields.length) !== null && _searchFilter$fields$ !== void 0 ? _searchFilter$fields$ : 0) > 0) {\n    var searchQuery = searchFilter.query;\n    var searchFields = searchFilter.fields;\n    if (searchQuery && searchFields && searchFields.length > 0) {\n      if (!searchFields.some(function (searchField) {\n        switch (searchField) {\n          case 'channel_name':\n            {\n              var _channel$name;\n              return channel === null || channel === void 0 ? void 0 : (_channel$name = channel.name) === null || _channel$name === void 0 ? void 0 : _channel$name.toLowerCase().includes(searchQuery.toLowerCase());\n            }\n          case 'member_nickname':\n            {\n              var _channel$members;\n              return channel === null || channel === void 0 ? void 0 : (_channel$members = channel.members) === null || _channel$members === void 0 ? void 0 : _channel$members.some(function (member) {\n                return member.nickname.toLowerCase().includes(searchQuery.toLowerCase());\n              });\n            }\n          default:\n            {\n              return true;\n            }\n        }\n      })) {\n        return false;\n      }\n    }\n  }\n  var userIdsFilter = params === null || params === void 0 ? void 0 : params.userIdsFilter;\n  if ((userIdsFilter === null || userIdsFilter === void 0 ? void 0 : (_userIdsFilter$userId = userIdsFilter.userIds) === null || _userIdsFilter$userId === void 0 ? void 0 : _userIdsFilter$userId.length) > 0) {\n    var _channel$members2;\n    var includeMode = userIdsFilter.includeMode,\n      queryType = userIdsFilter.queryType;\n    var userIds = userIdsFilter.userIds;\n    var memberIds = channel === null || channel === void 0 ? void 0 : (_channel$members2 = channel.members) === null || _channel$members2 === void 0 ? void 0 : _channel$members2.map(function (member) {\n      return member.userId;\n    });\n    if (!includeMode) {\n      var _channel$members3;\n      // exact match\n      if (!userIds.includes(currentUserId)) {\n        userIds.push(currentUserId); // add the caller's userId if not added already.\n      }\n\n      if ((channel === null || channel === void 0 ? void 0 : (_channel$members3 = channel.members) === null || _channel$members3 === void 0 ? void 0 : _channel$members3.length) > userIds.length) {\n        return false; // userIds may contain one or more non-member(s).\n      }\n\n      if (!hasSameMembers(userIds, memberIds)) {\n        return false;\n      }\n    } else if (userIds.length > 0) {\n      // inclusive\n      switch (queryType) {\n        case 'AND':\n          {\n            if (userIds.some(function (userId) {\n              return !memberIds.includes(userId);\n            })) {\n              return false;\n            }\n            break;\n          }\n        case 'OR':\n          {\n            if (userIds.every(function (userId) {\n              return !memberIds.includes(userId);\n            })) {\n              return false;\n            }\n            break;\n          }\n      }\n    }\n  }\n  if ((params === null || params === void 0 ? void 0 : params.includeEmpty) === false && (channel === null || channel === void 0 ? void 0 : channel.lastMessage) === null) {\n    return false;\n  }\n  if ((params === null || params === void 0 ? void 0 : params.includeFrozen) === false && (channel === null || channel === void 0 ? void 0 : channel.isFrozen) === true) {\n    return false;\n  }\n  if ((params === null || params === void 0 ? void 0 : (_params$customTypesFi2 = params.customTypesFilter) === null || _params$customTypesFi2 === void 0 ? void 0 : _params$customTypesFi2.length) > 0 && !params.customTypesFilter.includes(channel === null || channel === void 0 ? void 0 : channel.customType)) {\n    return false;\n  }\n  if (params !== null && params !== void 0 && params.customTypeStartsWithFilter && !new RegExp(\"^\".concat(params.customTypeStartsWithFilter)).test(channel === null || channel === void 0 ? void 0 : channel.customType)) {\n    return false;\n  }\n  if (params !== null && params !== void 0 && params.channelNameContainsFilter && !(channel !== null && channel !== void 0 && (_channel$name2 = channel.name) !== null && _channel$name2 !== void 0 && _channel$name2.toLowerCase().includes(params.channelNameContainsFilter.toLowerCase()))) {\n    return false;\n  }\n  if (params !== null && params !== void 0 && params.nicknameContainsFilter) {\n    var _channel$members4;\n    var lowerCasedSubString = params.nicknameContainsFilter.toLowerCase();\n    if (channel !== null && channel !== void 0 && (_channel$members4 = channel.members) !== null && _channel$members4 !== void 0 && _channel$members4.every(function (member) {\n      return !member.nickname.toLowerCase().includes(lowerCasedSubString);\n    })) {\n      return false;\n    }\n  }\n  if ((params === null || params === void 0 ? void 0 : (_params$channelUrlsFi = params.channelUrlsFilter) === null || _params$channelUrlsFi === void 0 ? void 0 : _params$channelUrlsFi.length) > 0 && !params.channelUrlsFilter.includes(channel === null || channel === void 0 ? void 0 : channel.url)) {\n    return false;\n  }\n  if (params !== null && params !== void 0 && params.myMemberStateFilter) {\n    switch (params.myMemberStateFilter) {\n      case 'joined_only':\n        if ((channel === null || channel === void 0 ? void 0 : channel.myMemberState) !== 'joined') {\n          return false;\n        }\n        break;\n      case 'invited_only':\n        if ((channel === null || channel === void 0 ? void 0 : channel.myMemberState) !== 'invited') {\n          return false;\n        }\n        break;\n      case 'invited_by_friend':\n        if ((channel === null || channel === void 0 ? void 0 : channel.myMemberState) !== 'invited' || !isFriend(channel === null || channel === void 0 ? void 0 : channel.inviter)) {\n          return false;\n        }\n        break;\n      case 'invited_by_non_friend':\n        if ((channel === null || channel === void 0 ? void 0 : channel.myMemberState) !== 'invited' || isFriend(channel === null || channel === void 0 ? void 0 : channel.inviter)) {\n          return false;\n        }\n        break;\n    }\n  }\n  if (params !== null && params !== void 0 && params.hiddenChannelFilter) {\n    switch (params.hiddenChannelFilter) {\n      case 'unhidden_only':\n        if (channel !== null && channel !== void 0 && channel.isHidden || (channel === null || channel === void 0 ? void 0 : channel.hiddenState) !== 'unhidden') {\n          return false;\n        }\n        break;\n      case 'hidden_only':\n        if (!(channel !== null && channel !== void 0 && channel.isHidden)) {\n          return false;\n        }\n        break;\n      case 'hidden_allow_auto_unhide':\n        if (!(channel !== null && channel !== void 0 && channel.isHidden) || (channel === null || channel === void 0 ? void 0 : channel.hiddenState) !== 'hidden_allow_auto_unhide') {\n          return false;\n        }\n        break;\n      case 'hidden_prevent_auto_unhide':\n        if (!(channel !== null && channel !== void 0 && channel.isHidden) || (channel === null || channel === void 0 ? void 0 : channel.hiddenState) !== 'hidden_prevent_auto_unhide') {\n          return false;\n        }\n        break;\n    }\n  }\n  if (params !== null && params !== void 0 && params.unreadChannelFilter) {\n    switch (params.unreadChannelFilter) {\n      case 'unread_message':\n        if ((channel === null || channel === void 0 ? void 0 : channel.unreadMessageCount) === 0) {\n          return false;\n        }\n        break;\n    }\n  }\n  if (params !== null && params !== void 0 && params.publicChannelFilter) {\n    switch (params.publicChannelFilter) {\n      case 'public':\n        if (!(channel !== null && channel !== void 0 && channel.isPublic)) {\n          return false;\n        }\n        break;\n      case 'private':\n        if (channel !== null && channel !== void 0 && channel.isPublic) {\n          return false;\n        }\n        break;\n    }\n  }\n  if (params !== null && params !== void 0 && params.superChannelFilter) {\n    switch (params.superChannelFilter) {\n      case 'super':\n        if (!(channel !== null && channel !== void 0 && channel.isSuper)) {\n          return false;\n        }\n        break;\n      case 'nonsuper':\n        if (channel !== null && channel !== void 0 && channel.isSuper) {\n          return false;\n        }\n        break;\n    }\n  }\n  return true;\n};\nvar binarySearch = function binarySearch(list, number) {\n  // [100, 99, 98, 97, ...]\n  var pivot = Math.floor(list.length / 2);\n  if (list[pivot] === number) {\n    return pivot;\n  }\n  var leftList = list.slice(0, pivot);\n  var rightList = list.slice(pivot + 1, list.length);\n  if (list[pivot] > number) {\n    return pivot + 1 + (rightList.length === 0 ? 0 : binarySearch(rightList, number));\n  } else {\n    return leftList.length === 0 ? pivot : binarySearch(leftList, number);\n  }\n};\n// This is required when channel is displayed on channel list by filter\nvar getChannelsWithUpsertedChannel = function getChannelsWithUpsertedChannel(channels, channel) {\n  var _channel$lastMessage2;\n  if (channels.some(function (ch) {\n    return ch.url === (channel === null || channel === void 0 ? void 0 : channel.url);\n  })) {\n    return channels.map(function (ch) {\n      return ch.url === (channel === null || channel === void 0 ? void 0 : channel.url) ? channel : ch;\n    });\n  }\n  var targetIndex = binarySearch(channels.map(function (channel) {\n    var _channel$lastMessage;\n    return (channel === null || channel === void 0 ? void 0 : (_channel$lastMessage = channel.lastMessage) === null || _channel$lastMessage === void 0 ? void 0 : _channel$lastMessage.createdAt) || (channel === null || channel === void 0 ? void 0 : channel.createdAt);\n  }), (channel === null || channel === void 0 ? void 0 : (_channel$lastMessage2 = channel.lastMessage) === null || _channel$lastMessage2 === void 0 ? void 0 : _channel$lastMessage2.createdAt) || (channel === null || channel === void 0 ? void 0 : channel.createdAt));\n  return [].concat(_toConsumableArray(channels.slice(0, targetIndex)), [channel], _toConsumableArray(channels.slice(targetIndex, channels.length)));\n};\nvar StringObjType = /*#__PURE__*/function (StringObjType) {\n  StringObjType[\"normal\"] = \"normal\";\n  StringObjType[\"mention\"] = \"mention\";\n  StringObjType[\"url\"] = \"url\";\n  return StringObjType;\n}({});\n/**\n * @deprecated\n * use modules/message/utils/tokenize instead\n */\nvar convertWordToStringObj = function convertWordToStringObj(word, _users, _template) {\n  var users = _users || [];\n  var template = _template || '@'; // Use global variable\n  var resultArray = [];\n  var regex = RegExp(\"\".concat(template, \"{(\").concat(users.map(function (user) {\n    return user === null || user === void 0 ? void 0 : user.userId;\n  }).join('|'), \")}\"), 'g');\n  var excutionResult;\n  var lastIndex = 0;\n  var _loop = function _loop() {\n    var _excutionResult = excutionResult,\n      _excutionResult2 = _slicedToArray(_excutionResult, 2),\n      template = _excutionResult2[0],\n      userId = _excutionResult2[1];\n    var endIndex = regex.lastIndex;\n    var startIndex = endIndex - template.length;\n    // Normal text\n    var normalText = word.slice(lastIndex, startIndex);\n    resultArray.push({\n      type: isUrl(normalText) ? StringObjType.url : StringObjType.normal,\n      value: normalText\n    });\n    // Mention template\n    var mentionedUser = users.find(function (user) {\n      return (user === null || user === void 0 ? void 0 : user.userId) === userId;\n    });\n    if (!mentionedUser) {\n      resultArray.push({\n        type: StringObjType.normal,\n        value: template // because template is the origin text\n      });\n    } else {\n      resultArray.push({\n        type: StringObjType.mention,\n        value: (mentionedUser === null || mentionedUser === void 0 ? void 0 : mentionedUser.nickname) || '(No name)',\n        userId: userId\n      });\n    }\n    lastIndex = endIndex;\n  };\n  while ((excutionResult = regex.exec(word)) !== null) {\n    _loop();\n  }\n  if (lastIndex < word.length) {\n    // Normal text\n    var normalText = word.slice(lastIndex);\n    resultArray.push({\n      type: isUrl(normalText) ? StringObjType.url : StringObjType.normal,\n      value: normalText\n    });\n  }\n  return resultArray;\n};\nvar arrayEqual = function arrayEqual(array1, array2) {\n  if (Array.isArray(array1) && Array.isArray(array2) && array1.length === array2.length) {\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n};\nexport { isUrl as A, isEditedMessage as B, isSentMessage as C, isFailedMessage as D, isPendingMessage as E, copyToClipboard as F, getEmojiListAll as G, getEmojiUrl as H, isReactedBy as I, getEmojiTooltipString as J, getEmojiMapAll as K, getUIKitFileType as L, getUIKitFileTypes as M, isGif as N, isThreadMessage as O, isParentMessage as P, convertWordToStringObj as Q, StringObjType as S, UIKitMessageTypes as U, getSendingMessageStatus as a, isReadMessage as b, filterMessageListParams as c, isVoiceMessage as d, isSentStatus as e, filterChannelListParams as f, getChannelsWithUpsertedChannel as g, getClassName as h, isTextuallyNull as i, arrayEqual as j, isFileMessage as k, isImageMessage as l, isThumbnailMessage as m, isAudioMessage as n, isGifMessage as o, isVideoMessage as p, isUserMessage as q, getUIKitMessageType as r, getUIKitMessageTypes as s, truncateString as t, getSenderName as u, isTextMessage as v, isOGMessage as w, isSupportedFileView as x, isVideo as y, isImage as z };","map":{"version":3,"mappings":"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","names":["SUPPORTED_MIMES","IMAGE","VIDEO","AUDIO","UIKitMessageTypes","ADMIN","TEXT","FILE","THUMBNAIL","OG","UNKNOWN","UIKitFileTypes","GIF","VOICE","OTHERS","SendingMessageStatus","NONE","SUCCEEDED","FAILED","PENDING","isTextuallyNull","text","isImage","type","indexOf","isVideo","isGif","isSupportedFileView","isAudio","getUIKitFileTypes","_objectSpread","getUIKitFileType","isSentMessage","message","sendingStatus","isReadMessage","channel","getOutgoingMessageState","OutgoingMessageStates","READ","isFailedMessage","isPendingMessage","isSentStatus","state","SENT","DELIVERED","isAdminMessage","_message$isAdminMessa","messageType","isUserMessage","_message$isUserMessag","isFileMessage","_message$isFileMessag","isParentMessage","parentMessageId","parentMessage","threadInfo","isThreadMessage","isOGMessage","ogMetaData","_message$ogMetaData","url","_message$ogMetaData2","title","_message$ogMetaData3","description","_message$ogMetaData4","defaultImage","isTextMessage","isThumbnailMessage","isImageMessage","isVideoMessage","isGifMessage","isAudioMessage","isAudioMessageMimeType","test","isVoiceMessage","split","mimeType","typeParameter","key","value","isVoiceMessageMimeType","metaArrays","_message$metaArrays","find","metaArray","_message$metaArrays$f2","_message$metaArrays$f3","isEditedMessage","updatedAt","getUIKitMessageTypes","getUIKitMessageType","getSendingMessageStatus","reducer","accumulator","currentValue","Array","isArray","push","getClassName","classNames","reduce","join","isReactedBy","userId","reaction","userIds","some","reactorUserId","getEmojiTooltipString","memberNicknamesMap","stringSet","you","length","TOOLTIP__YOU","TOOLTIP__AND_YOU","filter","map","get","TOOLTIP__UNKNOWN_USER","URL_REG","isUrl","truncateString","fullStr","strLen","undefined","separator","sepLen","charsToShow","frontChars","Math","ceil","backChars","floor","substr","copyToClipboard","window","clipboardData","setData","document","queryCommandSupported","textarea","createElement","textContent","style","position","body","appendChild","select","execCommand","ex","removeChild","getEmojiListAll","emojiContainer","emojiCategories","_emojiContainer$emoji","emojiCategory","emojis","prevArr","currArr","concat","getEmojiMapAll","emojiMap","Map","_emojiContainer$emoji2","forEach","category","_category$emojis","emoji","set","findEmojiUrl","targetKey","_ref","getEmojiUrl","emojiKey","isFindingKey","_emojiContainer$emoji3","_emojiContainer$emoji4","getUserName","user","friendName","nickname","getSenderName","sender","hasSameMembers","a","b","sortedA","sort","sortedB","i","isFriend","friendDiscoveryKey","filterMessageListParams","params","messageTypeFilter","customTypesFilter","_params$customTypesFi","customTypes","item","includes","customType","senderUserIdsFilter","_params$senderUserIds","_message$isUserMessag2","_message$isFileMessag2","messageSender","_params$senderUserIds2","includeParentMessageInfo","filterChannelListParams","currentUserId","includeEmpty","lastMessage","searchFilter","query","fields","_searchFilter$fields","searchQuery","searchFields","searchField","name","_channel$name","toLowerCase","members","_channel$members","member","userIdsFilter","_userIdsFilter$userId","includeMode","queryType","memberIds","_channel$members2","_channel$members3","every","includeFrozen","isFrozen","_params$customTypesFi2","customTypeStartsWithFilter","RegExp","channelNameContainsFilter","_channel$name2","nicknameContainsFilter","lowerCasedSubString","_channel$members4","channelUrlsFilter","_params$channelUrlsFi","myMemberStateFilter","myMemberState","inviter","hiddenChannelFilter","isHidden","hiddenState","unreadChannelFilter","unreadMessageCount","publicChannelFilter","isPublic","superChannelFilter","isSuper","binarySearch","list","number","pivot","leftList","slice","rightList","getChannelsWithUpsertedChannel","channels","ch","targetIndex","_channel$lastMessage","createdAt","_channel$lastMessage2","StringObjType","convertWordToStringObj","word","_users","_template","users","template","resultArray","regex","excutionResult","lastIndex","endIndex","startIndex","normalText","normal","mentionedUser","mention","exec","arrayEqual","array1","array2"],"sources":["C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\utils\\index.ts"],"sourcesContent":["import SendbirdChat, { Emoji, EmojiCategory, EmojiContainer, User } from '@sendbird/chat';\nimport { GroupChannel, Member, SendbirdGroupChat, GroupChannelListQuery } from '@sendbird/chat/groupChannel';\nimport { AdminMessage, FileMessage, MessageListParams, Reaction, UserMessage } from '@sendbird/chat/message';\nimport { OpenChannel, SendbirdOpenChat } from '@sendbird/chat/openChannel';\n\nimport { getOutgoingMessageState, OutgoingMessageStates } from './exports/getOutgoingMessageState';\nimport { EveryMessage, Nullable } from '../types';\n\n// https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Complete_list_of_MIME_types\nconst SUPPORTED_MIMES = {\n  IMAGE: [\n    'image/jpeg',\n    'image/jpg',\n    'image/png',\n    'image/gif',\n    'image/svg+xml',\n    'image/webp', // not supported in IE\n  ],\n  VIDEO: [\n    'video/mpeg',\n    'video/ogg',\n    'video/webm',\n    'video/mp4',\n  ],\n  AUDIO: [\n    'audio/aac',\n    'audio/midi',\n    'audio/x-midi',\n    'audio/mpeg',\n    'audio/ogg',\n    'audio/opus',\n    'audio/wav',\n    'audio/webm',\n    'audio/3gpp',\n    'audio/3gpp2',\n    'audio/mp3',\n  ],\n};\n\n/* eslint-disable no-redeclare */\nexport interface UIKitMessageTypes {\n  ADMIN: 'ADMIN',\n  TEXT: 'TEXT',\n  FILE: 'FILE',\n  THUMBNAIL: 'THUMBNAIL',\n  OG: 'OG',\n  UNKNOWN: 'UNKNOWN',\n}\nexport const UIKitMessageTypes: UIKitMessageTypes = {\n  ADMIN: 'ADMIN',\n  TEXT: 'TEXT',\n  FILE: 'FILE',\n  THUMBNAIL: 'THUMBNAIL',\n  OG: 'OG',\n  UNKNOWN: 'UNKNOWN',\n};\n/* eslint-disable no-redeclare */\nexport interface UIKitFileTypes {\n  IMAGE: 'IMAGE',\n  AUDIO: 'AUDIO',\n  VIDEO: 'VIDEO',\n  GIF: 'GIF',\n  VOICE: 'VOICE',\n  OTHERS: 'OTHERS',\n}\nexport const UIKitFileTypes: UIKitFileTypes = {\n  IMAGE: 'IMAGE',\n  AUDIO: 'AUDIO',\n  VIDEO: 'VIDEO',\n  GIF: 'GIF',\n  VOICE: 'VOICE',\n  OTHERS: 'OTHERS',\n};\n\n/* eslint-disable no-redeclare */\nexport interface SendingMessageStatus {\n  NONE: 'none',\n  SUCCEEDED: 'succeeded',\n  FAILED: 'failed',\n  PENDING: 'pending',\n}\nconst SendingMessageStatus: SendingMessageStatus = {\n  NONE: 'none',\n  SUCCEEDED: 'succeeded',\n  FAILED: 'failed',\n  PENDING: 'pending',\n};\n\nexport type CoreMessageType = EveryMessage;\n\nexport const isTextuallyNull = (text: string): boolean => {\n  if (text === '' || text === null) {\n    return true;\n  }\n  return false;\n};\n\nexport const isImage = (type: string): boolean => SUPPORTED_MIMES.IMAGE.indexOf(type) >= 0;\nexport const isVideo = (type: string): boolean => SUPPORTED_MIMES.VIDEO.indexOf(type) >= 0;\nexport const isGif = (type: string): boolean => type === 'image/gif';\nexport const isSupportedFileView = (type: string): boolean => isImage(type) || isVideo(type);\nexport const isAudio = (type: string): boolean => SUPPORTED_MIMES.AUDIO.indexOf(type) >= 0;\n\nexport const getUIKitFileTypes = (): UIKitFileTypes => ({ ...UIKitFileTypes });\nexport const getUIKitFileType = (type: string): string => {\n  if (isGif(type)) return UIKitFileTypes.GIF;\n  if (isImage(type)) return UIKitFileTypes.IMAGE;\n  if (isVideo(type)) return UIKitFileTypes.VIDEO;\n  if (isAudio(type)) return UIKitFileTypes.AUDIO;\n  return UIKitFileTypes.OTHERS;\n};\n\nexport const isSentMessage = (message: UserMessage | FileMessage): boolean => (message.sendingStatus === 'succeeded');\nexport const isDeliveredMessage = (channel: GroupChannel, message: UserMessage | FileMessage): boolean => (\n  getOutgoingMessageState(channel, message) === OutgoingMessageStates.DELIVERED\n  || getOutgoingMessageState(channel, message) === OutgoingMessageStates.READ\n);\nexport const isReadMessage = (channel: GroupChannel, message: UserMessage | FileMessage): boolean => (\n  getOutgoingMessageState(channel, message) === OutgoingMessageStates.READ\n);\n// TODO: Remove channel from the params, it seems unnecessary\nexport const isFailedMessage = (message: UserMessage | FileMessage): boolean => (message?.sendingStatus === 'failed');\nexport const isPendingMessage = (message: UserMessage | FileMessage): boolean => (message?.sendingStatus === 'pending');\nexport const isSentStatus = (state: string): boolean => (\n  state === OutgoingMessageStates.SENT\n  || state === OutgoingMessageStates.DELIVERED\n  || state === OutgoingMessageStates.READ\n);\n\nexport const isAdminMessage = (message: AdminMessage | UserMessage | FileMessage): boolean => (\n  message && (message?.isAdminMessage?.() || (message?.messageType === 'admin'))\n);\nexport const isUserMessage = (message: AdminMessage | UserMessage | FileMessage): boolean => (\n  message && (message?.isUserMessage?.() || (message?.messageType === 'user'))\n);\nexport const isFileMessage = (message: AdminMessage | UserMessage | FileMessage): boolean => (\n  message && (message?.isFileMessage?.() || (message?.messageType === 'file'))\n);\nexport const isParentMessage = (message: AdminMessage | UserMessage | FileMessage): boolean => (\n  !message.parentMessageId && !message.parentMessage && message.threadInfo !== null\n);\nexport const isThreadMessage = (message: AdminMessage | UserMessage | FileMessage): boolean => (\n  !!message.parentMessageId && !!message.parentMessage\n);\nexport const isOGMessage = (message: UserMessage | FileMessage): boolean => !!(\n  message && isUserMessage(message) && message?.ogMetaData && (\n    message.ogMetaData?.url\n    || message.ogMetaData?.title\n    || message.ogMetaData?.description\n    || message.ogMetaData?.defaultImage\n  )\n);\nexport const isTextMessage = (message: UserMessage | FileMessage): boolean => isUserMessage(message) && !isOGMessage(message);\nexport const isThumbnailMessage = (message: UserMessage | FileMessage): boolean => (\n  message && isFileMessage(message) && isSupportedFileView((message as FileMessage).type)\n);\nexport const isImageMessage = (message: FileMessage): boolean => message && isThumbnailMessage(message) && isImage(message.type);\nexport const isVideoMessage = (message: UserMessage | FileMessage): boolean => (\n  message && isThumbnailMessage(message) && isVideo((message as FileMessage).type)\n);\nexport const isGifMessage = (message: UserMessage | FileMessage): boolean => (\n  message && isThumbnailMessage(message) && isGif((message as FileMessage).type)\n);\nexport const isAudioMessage = (message: FileMessage): boolean => message && isFileMessage(message) && isAudio(message.type);\nexport const isAudioMessageMimeType = (type: string): boolean => (/^audio\\//.test(type));\nexport const isVoiceMessage = (message: Nullable<FileMessage | UserMessage>): boolean => {\n  // ex) audio/m4a OR audio/m4a;sbu_type=voice\n  if (!(message && isFileMessage(message))) {\n    return false;\n  }\n  const [mimeType, typeParameter] = message.type.split(';');\n  if (!isAudioMessageMimeType(mimeType) || !typeParameter) {\n    return false;\n  }\n  const [key, value] = typeParameter.split('=');\n  if (key === 'sbu_type' && value === 'voice') {\n    return true;\n  }\n  // ex) message.metaArrays = [{ key: 'KEY_INTERNAL_MESSAGE_TYPE', value: ['voice/m4a'] }]\n  return isVoiceMessageMimeType(message?.metaArrays?.find((metaArray) => metaArray.key === 'KEY_INTERNAL_MESSAGE_TYPE')?.value?.[0] ?? '');\n};\nexport const isVoiceMessageMimeType = (type: string): boolean => (/^voice\\//.test(type));\n\nexport const isEditedMessage = (message: AdminMessage | UserMessage | FileMessage): boolean => isUserMessage(message) && (message?.updatedAt > 0);\nexport const isEnabledOGMessage = (message: UserMessage): boolean => (\n  (!message || !message.ogMetaData || !message.ogMetaData.url) ? false : true\n);\n\nexport const getUIKitMessageTypes = (): UIKitMessageTypes => ({ ...UIKitMessageTypes });\nexport const getUIKitMessageType = (message: UserMessage | FileMessage | AdminMessage): string => {\n  if (isAdminMessage(message as AdminMessage)) return UIKitMessageTypes.ADMIN;\n  if (isUserMessage(message as UserMessage)) {\n    return isOGMessage(message as UserMessage) ? UIKitMessageTypes.OG : UIKitMessageTypes.TEXT;\n  }\n  if (isFileMessage(message as FileMessage)) {\n    if (isThumbnailMessage(message as FileMessage)) {\n      return UIKitMessageTypes.THUMBNAIL;\n    }\n    if (isVoiceMessage(message as FileMessage)) {\n      return UIKitFileTypes.VOICE;\n    }\n    return UIKitMessageTypes.FILE;\n  }\n  return UIKitMessageTypes.UNKNOWN;\n};\nexport const getSendingMessageStatus = (): SendingMessageStatus => ({ ...SendingMessageStatus });\n\nconst reducer = (accumulator: Array<string>, currentValue: string | Array<string>): Array<any> => {\n  if (Array.isArray(currentValue)) {\n    return [...accumulator, ...currentValue];\n  } else {\n    accumulator.push(currentValue);\n    return accumulator;\n  }\n};\nexport const getClassName = (classNames: string | Array<string | Array<string>>): string => (\n  Array.isArray(classNames)\n    ? classNames.reduce(reducer, []).join(' ')\n    : classNames\n);\nexport const isReactedBy = (userId: string, reaction: Reaction): boolean => (\n  reaction.userIds.some((reactorUserId: string): boolean => reactorUserId === userId)\n);\ninterface StringSet {\n  TOOLTIP__YOU: string;\n  TOOLTIP__AND_YOU: string;\n  TOOLTIP__UNKNOWN_USER: string;\n}\nexport const getEmojiTooltipString = (reaction: Reaction, userId: string, memberNicknamesMap: Map<string, string>, stringSet: StringSet): string => {\n  let you = '';\n  if (isReactedBy(userId, reaction)) {\n    you = reaction.userIds.length === 1 ? stringSet.TOOLTIP__YOU : stringSet.TOOLTIP__AND_YOU;\n  }\n  return (`${reaction.userIds\n    .filter((reactorUserId: string) => reactorUserId !== userId)\n    .map((reactorUserId: string) => (memberNicknamesMap.get(reactorUserId) || stringSet.TOOLTIP__UNKNOWN_USER))\n    .join(', ')}${you}`);\n};\n\n// TODO: Use the interface after language tranlsatation of Sendbird.js\ninterface UIKitStore {\n  stores: {\n    sdkStore: {\n      sdk: SendbirdChat | SendbirdOpenChat | SendbirdGroupChat,\n    },\n    userStore: {\n      user: User,\n    },\n  },\n  config: {\n    isReactionEnabled: boolean,\n  }\n}\nexport const getCurrentUserId = (store: UIKitStore): string => (store?.stores?.userStore?.user?.userId);\nexport const getUseReaction = (store: UIKitStore, channel: GroupChannel | OpenChannel): boolean => {\n  if (!store?.config?.isReactionEnabled)\n    return false;\n  if (!store?.stores?.sdkStore?.sdk?.appInfo?.useReaction)\n    return false;\n  if (channel?.isGroupChannel())\n    return !((channel as GroupChannel).isBroadcast || (channel as GroupChannel).isSuper);\n  return store?.config?.isReactionEnabled;\n};\n\nexport const isMessageSentByMe = (userId: string, message: UserMessage | FileMessage): boolean => (\n  (userId && message?.sender?.userId) && userId === message.sender.userId\n);\n\nconst URL_REG = /^((http|https):\\/\\/)?([a-z\\d]+\\.)+[a-z]{2,6}(\\:[0-9]{1,5})?(\\/[-a-zA-Z\\d%_.~+&=]*)*(\\?[;&a-zA-Z\\d%_.~+=-]*)?(\\#[-a-zA-Z\\d_]*)?$/;\nexport const isUrl = (text: string): boolean => URL_REG.test(text);\n\nconst MENTION_TAG_REG = /\\@\\{.*?\\}/i;\nexport const isMentionedText = (text: string): boolean => MENTION_TAG_REG.test(text);\n\nexport const truncateString = (fullStr: string, strLen?: number): string => {\n  if (!strLen) strLen = 40;\n  if (fullStr === null || fullStr === undefined) return '';\n  if (fullStr.length <= strLen) return fullStr;\n  const separator = '...';\n  const sepLen = separator.length;\n  const charsToShow = strLen - sepLen;\n  const frontChars = Math.ceil(charsToShow / 2);\n  const backChars = Math.floor(charsToShow / 2);\n  return fullStr.substr(0, frontChars) + separator + fullStr.substr(fullStr.length - backChars);\n};\n\nexport const copyToClipboard = (text: string): boolean => {\n  // @ts-ignore: Unreachable code error\n  if (window.clipboardData && window.clipboardData.setData) {\n    // Internet Explorer-specific code path to prevent textarea being shown while dialog is visible.\n    // @ts-ignore: Unreachable code error\n    return window.clipboardData.setData('Text', text);\n  }\n  if (document.queryCommandSupported && document.queryCommandSupported('copy')) {\n    const textarea = document.createElement('textarea');\n    textarea.textContent = text;\n    textarea.style.position = 'fixed'; // Prevent scrolling to bottom of page in Microsoft Edge.\n    document.body.appendChild(textarea);\n    textarea.select();\n    try {\n      return document.execCommand('copy'); // Security exception may be thrown by some browsers.\n    } catch (ex) {\n      return false;\n    } finally {\n      document.body.removeChild(textarea);\n    }\n  }\n  return false;\n};\n\nexport const getEmojiListAll = (emojiContainer: EmojiContainer): Array<Emoji> => (\n  emojiContainer?.emojiCategories?.map((emojiCategory: EmojiCategory) => emojiCategory.emojis)\n    .reduce((prevArr: Array<Emoji>, currArr: Array<Emoji>) => prevArr.concat(currArr), [])\n);\nexport const getEmojiMapAll = (emojiContainer: EmojiContainer): Map<string, Emoji> => {\n  const emojiMap = new Map();\n  emojiContainer?.emojiCategories?.forEach((category: EmojiCategory) => {\n    category?.emojis?.forEach((emoji: Emoji): void => {\n      if (emoji && emoji.key) {\n        emojiMap.set(emoji.key, emoji);\n      }\n    });\n  });\n  return emojiMap;\n};\nconst findEmojiUrl = (targetKey: string) => ({ key }) => key === targetKey;\nexport const getEmojiUrl = (emojiContainer?: EmojiContainer, emojiKey?: string): string => {\n  const isFindingKey = findEmojiUrl(emojiKey ?? '');\n  return emojiContainer?.emojiCategories\n    .find((category) => category.emojis.some(isFindingKey))?.emojis\n    .find(isFindingKey)\n    ?.url || '';\n};\n\nexport const getUserName = (user: User): string => (user?.friendName || user?.nickname || user?.userId);\nexport const getSenderName = (message: UserMessage | FileMessage): string => (message?.sender && getUserName(message?.sender));\n\nexport const hasSameMembers = <T>(a: T[], b: T[]): boolean => {\n  if (a === b) {\n    return true;\n  }\n  if (a == null || b == null) {\n    return false;\n  }\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  const sortedA = [...a].sort();\n  const sortedB = [...b].sort();\n\n  for (let i = 0; i < sortedA.length; ++i) {\n    if (sortedA[i] !== sortedB[i]) {\n      return false;\n    }\n  }\n  return true;\n};\nexport const isFriend = (user: User): boolean => !!(user.friendDiscoveryKey || user.friendName);\n\nexport const filterMessageListParams = (params: MessageListParams, message: UserMessage | FileMessage): boolean => {\n  // @ts-ignore\n  if (params?.messageTypeFilter && params.messageTypeFilter !== message.messageType) {\n    return false;\n  }\n  if (params?.customTypesFilter?.length > 0) {\n    const customTypes = params.customTypesFilter.filter((item) => item !== '*');\n    // Because Chat SDK inserts '*' when customTypes is empty\n    if (customTypes.length > 0 && !customTypes.includes(message.customType)) {\n      return false;\n    }\n  }\n  if (params?.senderUserIdsFilter && params?.senderUserIdsFilter?.length > 0) {\n    if (message?.isUserMessage?.() || message?.isFileMessage?.()) {\n      const messageSender = (message as UserMessage | FileMessage).sender || message['_sender'];\n      if (!params?.senderUserIdsFilter?.includes(messageSender?.userId)) {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n  if (!params?.includeParentMessageInfo && (message?.parentMessageId || message?.parentMessage)) {\n    return false;\n  }\n  return true;\n};\n\nexport const filterChannelListParams = (params: GroupChannelListQuery, channel: GroupChannel, currentUserId: string): boolean => {\n  if (!params?.includeEmpty && channel?.lastMessage === null) {\n    return false;\n  }\n  const searchFilter = params?.searchFilter;\n  if (searchFilter?.query && (searchFilter?.fields?.length ?? 0) > 0) {\n    const searchQuery = searchFilter.query;\n    const searchFields = searchFilter.fields;\n    if (searchQuery && searchFields && searchFields.length > 0) {\n      if (!searchFields.some((searchField) => {\n        switch (searchField) {\n          case 'channel_name': {\n            return channel?.name?.toLowerCase().includes(searchQuery.toLowerCase());\n          }\n          case 'member_nickname': {\n            return channel?.members?.some((member: Member) => member.nickname.toLowerCase().includes(searchQuery.toLowerCase()));\n          }\n          default: {\n            return true;\n          }\n        }\n      })) {\n        return false;\n      }\n    }\n  }\n  const userIdsFilter = params?.userIdsFilter;\n  if (userIdsFilter?.userIds?.length > 0) {\n    const { includeMode, queryType } = userIdsFilter;\n    const userIds: string[] = userIdsFilter.userIds;\n    const memberIds = channel?.members?.map((member: Member) => member.userId);\n    if (!includeMode) { // exact match\n      if (!userIds.includes(currentUserId)) {\n        userIds.push(currentUserId); // add the caller's userId if not added already.\n      }\n      if (channel?.members?.length > userIds.length) {\n        return false; // userIds may contain one or more non-member(s).\n      }\n      if (!hasSameMembers(userIds, memberIds)) {\n        return false;\n      }\n    } else if (userIds.length > 0) { // inclusive\n      switch (queryType) {\n        case 'AND': {\n          if (userIds.some((userId: string) => !memberIds.includes(userId))) {\n            return false;\n          }\n          break;\n        }\n        case 'OR': {\n          if (userIds.every((userId: string) => !memberIds.includes(userId))) {\n            return false;\n          }\n          break;\n        }\n        default: {\n          break;\n        }\n      }\n    }\n  }\n  if (params?.includeEmpty === false && channel?.lastMessage === null) {\n    return false;\n  }\n  if (params?.includeFrozen === false && channel?.isFrozen === true) {\n    return false;\n  }\n  if (params?.customTypesFilter?.length > 0 && !params.customTypesFilter.includes(channel?.customType)) {\n    return false;\n  }\n  if (params?.customTypeStartsWithFilter && !new RegExp(`^${params.customTypeStartsWithFilter}`).test(channel?.customType)) {\n    return false;\n  }\n  if (params?.channelNameContainsFilter && !channel?.name?.toLowerCase().includes(params.channelNameContainsFilter.toLowerCase())) {\n    return false;\n  }\n  if (params?.nicknameContainsFilter) {\n    const lowerCasedSubString = params.nicknameContainsFilter.toLowerCase();\n    if (channel?.members?.every((member: Member) => !member.nickname.toLowerCase().includes(lowerCasedSubString))) {\n      return false;\n    }\n  }\n  if (params?.channelUrlsFilter?.length > 0 && !params.channelUrlsFilter.includes(channel?.url)) {\n    return false;\n  }\n  if (params?.myMemberStateFilter) {\n    switch (params.myMemberStateFilter) {\n      case 'joined_only':\n        if (channel?.myMemberState !== 'joined') {\n          return false;\n        }\n        break;\n      case 'invited_only':\n        if (channel?.myMemberState !== 'invited') {\n          return false;\n        }\n        break;\n      case 'invited_by_friend':\n        if (channel?.myMemberState !== 'invited' || !isFriend(channel?.inviter)) {\n          return false;\n        }\n        break;\n      case 'invited_by_non_friend':\n        if (channel?.myMemberState !== 'invited' || isFriend(channel?.inviter)) {\n          return false;\n        }\n        break;\n    }\n  }\n  if (params?.hiddenChannelFilter) {\n    switch (params.hiddenChannelFilter) {\n      case 'unhidden_only':\n        if (channel?.isHidden || channel?.hiddenState !== 'unhidden') {\n          return false;\n        }\n        break;\n      case 'hidden_only':\n        if (!channel?.isHidden) {\n          return false;\n        }\n        break;\n      case 'hidden_allow_auto_unhide':\n        if (!channel?.isHidden || channel?.hiddenState !== 'hidden_allow_auto_unhide') {\n          return false;\n        }\n        break;\n      case 'hidden_prevent_auto_unhide':\n        if (!channel?.isHidden || channel?.hiddenState !== 'hidden_prevent_auto_unhide') {\n          return false;\n        }\n        break;\n    }\n  }\n  if (params?.unreadChannelFilter) {\n    switch (params.unreadChannelFilter) {\n      case 'unread_message':\n        if (channel?.unreadMessageCount === 0) {\n          return false;\n        }\n        break;\n    }\n  }\n  if (params?.publicChannelFilter) {\n    switch (params.publicChannelFilter) {\n      case 'public':\n        if (!channel?.isPublic) {\n          return false;\n        }\n        break;\n      case 'private':\n        if (channel?.isPublic) {\n          return false;\n        }\n        break;\n    }\n  }\n  if (params?.superChannelFilter) {\n    switch (params.superChannelFilter) {\n      case 'super':\n        if (!channel?.isSuper) {\n          return false;\n        }\n        break;\n      case 'nonsuper':\n        if (channel?.isSuper) {\n          return false;\n        }\n        break;\n    }\n  }\n  return true;\n};\n\nexport const binarySearch = (list: Array<number>, number: number): number => { // [100, 99, 98, 97, ...]\n  const pivot = Math.floor(list.length / 2);\n  if (list[pivot] === number) {\n    return pivot;\n  }\n  const leftList = list.slice(0, pivot);\n  const rightList = list.slice(pivot + 1, list.length);\n  if (list[pivot] > number) {\n    return pivot + 1 + (rightList.length === 0 ? 0 : binarySearch(rightList, number));\n  } else {\n    return (leftList.length === 0) ? pivot : binarySearch(leftList, number);\n  }\n};\n// This is required when channel is displayed on channel list by filter\nexport const getChannelsWithUpsertedChannel = (channels: Array<GroupChannel>, channel: GroupChannel): Array<GroupChannel> => {\n  if (channels.some((ch: GroupChannel) => ch.url === channel?.url)) {\n    return channels.map((ch: GroupChannel) => (ch.url === channel?.url ? channel : ch));\n  }\n  const targetIndex = binarySearch(\n    channels.map((channel: GroupChannel) => channel?.lastMessage?.createdAt || channel?.createdAt),\n    channel?.lastMessage?.createdAt || channel?.createdAt,\n  );\n  return [...channels.slice(0, targetIndex), channel, ...channels.slice(targetIndex, channels.length)];\n};\n\nexport const getMatchedUserIds = (word: string, users: Array<User>, _template?: string): boolean => {\n  const template = _template || '@'; // Use global variable\n  // const matchedUserIds = [];\n  // users.map((user) => user?.userId).forEach((userId) => {\n  //   if (word.indexOf(`${template}{${userId}}`) > -1) {\n  //     matchedUserIds.push(userId);\n  //   }\n  // });\n  // return matchedUserIds;\n  return users.map((user) => user?.userId).some((userId) => word.indexOf(`${template}{${userId}}`) > -1);\n};\n\nexport enum StringObjType {\n  normal = 'normal',\n  mention = 'mention',\n  url = 'url',\n}\nexport interface StringObj {\n  type: StringObjType;\n  value: string;\n  userId?: string;\n}\n\n/**\n * @deprecated\n * use modules/message/utils/tokenize instead\n */\nexport const convertWordToStringObj = (word: string, _users: Array<User>, _template?: string): Array<StringObj> => {\n  const users = _users || [];\n  const template = _template || '@'; // Use global variable\n  const resultArray = [];\n  const regex = RegExp(`${template}{(${users.map((user) => user?.userId).join('|')})}`, 'g');\n  let excutionResult;\n  let lastIndex = 0;\n  while ((excutionResult = regex.exec(word)) !== null) {\n    const [template, userId] = excutionResult;\n    const endIndex = regex.lastIndex;\n    const startIndex = endIndex - template.length;\n    // Normal text\n    const normalText = word.slice(lastIndex, startIndex);\n    resultArray.push({\n      type: isUrl(normalText) ? StringObjType.url : StringObjType.normal,\n      value: normalText,\n    });\n    // Mention template\n    const mentionedUser = users.find((user) => user?.userId === userId);\n    if (!mentionedUser) {\n      resultArray.push({\n        type: StringObjType.normal,\n        value: template, // because template is the origin text\n      });\n    } else {\n      resultArray.push({\n        type: StringObjType.mention,\n        value: mentionedUser?.nickname || '(No name)',\n        userId: userId,\n      });\n    }\n    lastIndex = endIndex;\n  }\n  if (lastIndex < word.length) {\n    // Normal text\n    const normalText = word.slice(lastIndex);\n    resultArray.push({\n      type: isUrl(normalText) ? StringObjType.url : StringObjType.normal,\n      value: normalText,\n    });\n  }\n  return resultArray;\n};\n\nexport const arrayEqual = (array1: Array<unknown>, array2: Array<unknown>): boolean => {\n  if (Array.isArray(array1) && Array.isArray(array2) && array1.length === array2.length) {\n    for (let i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n};\n"]},"metadata":{},"sourceType":"module"}