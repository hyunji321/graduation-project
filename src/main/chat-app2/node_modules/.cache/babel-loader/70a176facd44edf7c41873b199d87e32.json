{"ast":null,"code":"import _defineProperty from \"C:/Users/\\uC774\\uACBD\\uBBFC/IdeaProjects/sendbird-uikit-whatsapp-sample/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _toConsumableArray from \"C:/Users/\\uC774\\uACBD\\uBBFC/IdeaProjects/sendbird-uikit-whatsapp-sample/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"C:/Users/\\uC774\\uACBD\\uBBFC/IdeaProjects/sendbird-uikit-whatsapp-sample/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport React__default, { useState, useContext, useEffect, useCallback } from 'react';\nimport Button, { ButtonTypes, ButtonSizes } from './ui/Button.js';\nimport IconButton from './ui/IconButton.js';\nimport Icon, { IconTypes, IconColors } from './ui/Icon.js';\nimport ContextMenu, { MenuItems, MenuItem } from './ui/ContextMenu.js';\nimport UserListItem$1 from './ChannelSettings/components/UserListItem.js';\nimport { _ as _objectSpread2 } from './_rollupPluginBabelHelpers-6bb0305c.js';\nimport Modal from './ui/Modal.js';\nimport UserListItem from './ui/UserListItem.js';\nimport { n as noop } from './utils-4bbbca2c.js';\nimport { useChannelSettingsContext } from './ChannelSettings/context.js';\nimport useSendbirdStateContext from './useSendbirdStateContext.js';\nimport { a as LocalizationContext, u as useLocalization } from './LocalizationContext-076d6d2e.js';\nimport { u as uuidv4 } from './uuid-1adedf62.js';\nfunction MembersModal(_ref) {\n  var _state$config;\n  var _onCancel = _ref.onCancel;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    members = _useState2[0],\n    setMembers = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    memberQuery = _useState4[0],\n    setMemberQuery = _useState4[1];\n  var _useChannelSettingsCo = useChannelSettingsContext(),\n    channel = _useChannelSettingsCo.channel;\n  var state = useSendbirdStateContext();\n  var currentUser = state === null || state === void 0 ? void 0 : (_state$config = state.config) === null || _state$config === void 0 ? void 0 : _state$config.userId;\n  var _useContext = useContext(LocalizationContext),\n    stringSet = _useContext.stringSet;\n  useEffect(function () {\n    var memberListQuery = channel === null || channel === void 0 ? void 0 : channel.createMemberListQuery({\n      limit: 20\n    });\n    memberListQuery.next().then(function (members) {\n      setMembers(members);\n    });\n    setMemberQuery(memberListQuery);\n  }, []);\n  return /*#__PURE__*/React__default.createElement(\"div\", null, /*#__PURE__*/React__default.createElement(Modal, {\n    isFullScreenOnMobile: true,\n    hideFooter: true,\n    onCancel: function onCancel() {\n      return _onCancel();\n    },\n    onSubmit: noop,\n    titleText: stringSet.CHANNEL_SETTING__MEMBERS__SEE_ALL_MEMBERS\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-more-members__popup-scroll\",\n    onScroll: function onScroll(e) {\n      var hasNext = memberQuery.hasNext;\n      var target = e.target;\n      var fetchMore = target.clientHeight + target.scrollTop === target.scrollHeight;\n      if (hasNext && fetchMore) {\n        memberQuery.next().then(function (o) {\n          setMembers([].concat(_toConsumableArray(members), _toConsumableArray(o)));\n        });\n      }\n    }\n  }, members.map(function (member) {\n    return /*#__PURE__*/React__default.createElement(UserListItem, {\n      user: member,\n      key: member.userId,\n      currentUser: currentUser,\n      action: function action(_ref2) {\n        var parentRef = _ref2.parentRef,\n          actionRef = _ref2.actionRef;\n        return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, (channel === null || channel === void 0 ? void 0 : channel.myRole) === 'operator' && /*#__PURE__*/React__default.createElement(ContextMenu, {\n          menuTrigger: function menuTrigger(toggleDropdown) {\n            return /*#__PURE__*/React__default.createElement(IconButton, {\n              className: \"sendbird-user-message__more__menu\",\n              width: \"32px\",\n              height: \"32px\",\n              onClick: toggleDropdown\n            }, /*#__PURE__*/React__default.createElement(Icon, {\n              width: \"24px\",\n              height: \"24px\",\n              type: IconTypes.MORE,\n              fillColor: IconColors.CONTENT_INVERSE\n            }));\n          },\n          menuItems: function menuItems(closeDropdown) {\n            return /*#__PURE__*/React__default.createElement(MenuItems, {\n              parentContainRef: parentRef,\n              parentRef: actionRef // for catching location(x, y) of MenuItems\n              ,\n\n              closeDropdown: closeDropdown,\n              openLeft: true\n            }, /*#__PURE__*/React__default.createElement(MenuItem, {\n              disable: currentUser === member.userId,\n              onClick: function onClick() {\n                if (member.role !== 'operator') {\n                  channel === null || channel === void 0 ? void 0 : channel.addOperators([member.userId]).then(function () {\n                    setMembers(members.map(function (m) {\n                      if (m.userId === member.userId) {\n                        return _objectSpread2(_objectSpread2({}, member), {}, {\n                          role: 'operator'\n                        });\n                      }\n                      return m;\n                    }));\n                    closeDropdown();\n                  });\n                } else {\n                  channel === null || channel === void 0 ? void 0 : channel.removeOperators([member.userId]).then(function () {\n                    setMembers(members.map(function (m) {\n                      if (m.userId === member.userId) {\n                        return _objectSpread2(_objectSpread2({}, member), {}, {\n                          role: ''\n                        });\n                      }\n                      return m;\n                    }));\n                    closeDropdown();\n                  });\n                }\n              },\n              dataSbId: \"channel_setting_member_context_menu_\".concat(member.role !== 'operator' ? 'register_as_operator' : 'unregister_operator')\n            }, member.role !== 'operator' ? stringSet.CHANNEL_SETTING__MODERATION__REGISTER_AS_OPERATOR : stringSet.CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR),\n            // No muted members in broadcast channel\n            !(channel !== null && channel !== void 0 && channel.isBroadcast) && /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                if (member.isMuted) {\n                  channel === null || channel === void 0 ? void 0 : channel.unmuteUser(member).then(function () {\n                    setMembers(members.map(function (m) {\n                      if (m.userId === member.userId) {\n                        return _objectSpread2(_objectSpread2({}, member), {}, {\n                          isMuted: false\n                        });\n                      }\n                      return m;\n                    }));\n                    closeDropdown();\n                  });\n                } else {\n                  channel === null || channel === void 0 ? void 0 : channel.muteUser(member).then(function () {\n                    setMembers(members.map(function (m) {\n                      if (m.userId === member.userId) {\n                        return _objectSpread2(_objectSpread2({}, member), {}, {\n                          isMuted: true\n                        });\n                      }\n                      return m;\n                    }));\n                    closeDropdown();\n                  });\n                }\n              },\n              dataSbId: \"channel_setting_member_context_menu_\".concat(member.isMuted ? 'unmute' : 'mute')\n            }, member.isMuted ? stringSet.CHANNEL_SETTING__MODERATION__UNMUTE : stringSet.CHANNEL_SETTING__MODERATION__MUTE), /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                channel === null || channel === void 0 ? void 0 : channel.banUser(member, -1, '').then(function () {\n                  setMembers(members.filter(function (_ref3) {\n                    var userId = _ref3.userId;\n                    return userId !== member.userId;\n                  }));\n                });\n              },\n              dataSbId: \"channel_setting_member_context_menu_ban\"\n            }, stringSet.CHANNEL_SETTING__MODERATION__BAN));\n          }\n        }));\n      }\n    });\n  }))));\n}\nvar isAboutSame = function isAboutSame(a, b, px) {\n  return Math.abs(a - b) <= px;\n};\nfunction InviteUsers(_ref) {\n  var _state$stores, _state$stores$sdkStor, _state$config;\n  var _onCancel2 = _ref.onCancel,\n    _onSubmit = _ref.onSubmit;\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    members = _useState6[0],\n    setMembers = _useState6[1];\n  var _useState7 = useState({}),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selectedMembers = _useState8[0],\n    setSelectedMembers = _useState8[1];\n  var _useState9 = useState(null),\n    _useState10 = _slicedToArray(_useState9, 2),\n    userQuery = _useState10[0],\n    setUserQuery = _useState10[1];\n  var state = useSendbirdStateContext();\n  var sdk = state === null || state === void 0 ? void 0 : (_state$stores = state.stores) === null || _state$stores === void 0 ? void 0 : (_state$stores$sdkStor = _state$stores.sdkStore) === null || _state$stores$sdkStor === void 0 ? void 0 : _state$stores$sdkStor.sdk;\n  var globalUserListQuery = state === null || state === void 0 ? void 0 : (_state$config = state.config) === null || _state$config === void 0 ? void 0 : _state$config.userListQuery;\n  var _useChannelSettingsCo2 = useChannelSettingsContext(),\n    channel = _useChannelSettingsCo2.channel,\n    overrideInviteUser = _useChannelSettingsCo2.overrideInviteUser,\n    queries = _useChannelSettingsCo2.queries;\n  var userFilledQuery = _objectSpread2({}, queries === null || queries === void 0 ? void 0 : queries.applicationUserListQuery);\n  var _useLocalization = useLocalization(),\n    stringSet = _useLocalization.stringSet;\n  useEffect(function () {\n    var userListQuery = globalUserListQuery ? globalUserListQuery() : sdk === null || sdk === void 0 ? void 0 : sdk.createApplicationUserListQuery(userFilledQuery);\n    if (userListQuery !== null && userListQuery !== void 0 && userListQuery.next) {\n      userListQuery.next().then(function (members) {\n        setMembers(members);\n      });\n      setUserQuery(userListQuery);\n    }\n  }, [sdk]);\n  return /*#__PURE__*/React__default.createElement(\"div\", null, /*#__PURE__*/React__default.createElement(Modal, {\n    isFullScreenOnMobile: true,\n    disabled: Object.keys(selectedMembers).length === 0,\n    submitText: stringSet.BUTTON__INVITE,\n    type: ButtonTypes.PRIMARY,\n    onCancel: function onCancel() {\n      return _onCancel2();\n    },\n    onSubmit: function onSubmit() {\n      var members = Object.keys(selectedMembers).filter(function (m) {\n        return selectedMembers[m];\n      });\n      if (typeof overrideInviteUser === 'function') {\n        overrideInviteUser({\n          users: members,\n          onClose: _onCancel2,\n          channel: channel\n        });\n        return;\n      }\n      channel === null || channel === void 0 ? void 0 : channel.inviteWithUserIds(members).then(function () {\n        _onSubmit(members);\n      });\n    },\n    titleText: stringSet.CHANNEL_SETTING__MEMBERS__SELECT_TITLE\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-more-members__popup-scroll\",\n    onScroll: function onScroll(e) {\n      var hasNext = userQuery.hasNext;\n      var target = e.target;\n      var fetchMore = isAboutSame(target.clientHeight + target.scrollTop, target.scrollHeight, 20);\n      if (hasNext && fetchMore) {\n        userQuery.next().then(function (users) {\n          setMembers([].concat(_toConsumableArray(members), _toConsumableArray(users)));\n        });\n      }\n    }\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-more-members__popup-scroll__inner\"\n  }, members.map(function (member) {\n    var _channel$members;\n    var isJoinedMember = channel === null || channel === void 0 ? void 0 : (_channel$members = channel.members) === null || _channel$members === void 0 ? void 0 : _channel$members.some(function (_ref2) {\n      var userId = _ref2.userId;\n      return userId === (member === null || member === void 0 ? void 0 : member.userId);\n    });\n    return /*#__PURE__*/React__default.createElement(UserListItem, {\n      checkBox: true,\n      checked: isJoinedMember || selectedMembers[member.userId],\n      disabled: isJoinedMember,\n      onChange: function onChange(event) {\n        var modifiedSelectedMembers = _objectSpread2(_objectSpread2({}, selectedMembers), {}, _defineProperty({}, event.target.id, event.target.checked));\n        if (!event.target.checked) {\n          delete modifiedSelectedMembers[event.target.id];\n        }\n        setSelectedMembers(modifiedSelectedMembers);\n      },\n      user: member,\n      key: member.userId\n    });\n  })))));\n}\nvar MemberList = function MemberList() {\n  var _state$stores, _state$stores$sdkStor, _state$config;\n  var _useState11 = useState([]),\n    _useState12 = _slicedToArray(_useState11, 2),\n    members = _useState12[0],\n    setMembers = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    hasNext = _useState14[0],\n    setHasNext = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    showAllMembers = _useState16[0],\n    setShowAllMembers = _useState16[1];\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    showInviteUsers = _useState18[0],\n    setShowInviteUsers = _useState18[1];\n  var state = useSendbirdStateContext();\n  var _useChannelSettingsCo3 = useChannelSettingsContext(),\n    channel = _useChannelSettingsCo3.channel,\n    setChannelUpdateId = _useChannelSettingsCo3.setChannelUpdateId;\n  var _useContext2 = useContext(LocalizationContext),\n    stringSet = _useContext2.stringSet;\n  var sdk = state === null || state === void 0 ? void 0 : (_state$stores = state.stores) === null || _state$stores === void 0 ? void 0 : (_state$stores$sdkStor = _state$stores.sdkStore) === null || _state$stores$sdkStor === void 0 ? void 0 : _state$stores$sdkStor.sdk;\n  var userId = state === null || state === void 0 ? void 0 : (_state$config = state.config) === null || _state$config === void 0 ? void 0 : _state$config.userId;\n  useEffect(function () {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n    var memberUserListQuery = channel === null || channel === void 0 ? void 0 : channel.createMemberListQuery({\n      limit: 10\n    });\n    memberUserListQuery.next().then(function (members) {\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n  var refreshList = useCallback(function () {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n    var memberUserListQuery = channel === null || channel === void 0 ? void 0 : channel.createMemberListQuery({\n      limit: 10\n    });\n    memberUserListQuery.next().then(function (members) {\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n      setChannelUpdateId(uuidv4());\n    });\n  }, [channel]);\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-settings-member-list sendbird-accordion\"\n  }, members.map(function (member) {\n    return /*#__PURE__*/React__default.createElement(UserListItem$1, {\n      key: member.userId,\n      user: member,\n      currentUser: sdk.currentUser.userId,\n      action: (channel === null || channel === void 0 ? void 0 : channel.myRole) === 'operator' && userId !== member.userId ? function (_ref) {\n        var actionRef = _ref.actionRef,\n          parentRef = _ref.parentRef;\n        return /*#__PURE__*/React__default.createElement(ContextMenu, {\n          menuTrigger: function menuTrigger(toggleDropdown) {\n            return /*#__PURE__*/React__default.createElement(IconButton, {\n              className: \"sendbird-user-message__more__menu\",\n              width: \"32px\",\n              height: \"32px\",\n              onClick: toggleDropdown\n            }, /*#__PURE__*/React__default.createElement(Icon, {\n              width: \"24px\",\n              height: \"24px\",\n              type: IconTypes.MORE,\n              fillColor: IconColors.CONTENT_INVERSE\n            }));\n          },\n          menuItems: function menuItems(closeDropdown) {\n            return /*#__PURE__*/React__default.createElement(MenuItems, {\n              parentContainRef: parentRef,\n              parentRef: actionRef // for catching location(x, y) of MenuItems\n              ,\n\n              closeDropdown: closeDropdown,\n              openLeft: true\n            }, /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                if (member.role !== 'operator') {\n                  channel === null || channel === void 0 ? void 0 : channel.addOperators([member.userId]).then(function () {\n                    refreshList();\n                    closeDropdown();\n                  });\n                } else {\n                  channel === null || channel === void 0 ? void 0 : channel.removeOperators([member.userId]).then(function () {\n                    refreshList();\n                    closeDropdown();\n                  });\n                }\n              },\n              dataSbId: \"channel_setting_member_context_menu_\".concat(member.role !== 'operator' ? 'register_as_operator' : 'unregister_operator')\n            }, member.role !== 'operator' ? stringSet.CHANNEL_SETTING__MODERATION__REGISTER_AS_OPERATOR : stringSet.CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR),\n            // No muted members in broadcast channel\n            !(channel !== null && channel !== void 0 && channel.isBroadcast) && /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                if (member.isMuted) {\n                  channel === null || channel === void 0 ? void 0 : channel.unmuteUser(member).then(function () {\n                    refreshList();\n                    closeDropdown();\n                  });\n                } else {\n                  channel === null || channel === void 0 ? void 0 : channel.muteUser(member).then(function () {\n                    refreshList();\n                    closeDropdown();\n                  });\n                }\n              },\n              dataSbId: \"channel_setting_member_context_menu_\".concat(member.isMuted ? 'unmute' : 'mute')\n            }, member.isMuted ? stringSet.CHANNEL_SETTING__MODERATION__UNMUTE : stringSet.CHANNEL_SETTING__MODERATION__MUTE), /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                channel === null || channel === void 0 ? void 0 : channel.banUser(member, -1, '').then(function () {\n                  refreshList();\n                  closeDropdown();\n                });\n              },\n              dataSbId: \"channel_setting_member_context_menu_ban\"\n            }, stringSet.CHANNEL_SETTING__MODERATION__BAN));\n          }\n        });\n      } : null\n    });\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-settings-accordion__footer\"\n  }, hasNext && /*#__PURE__*/React__default.createElement(Button, {\n    type: ButtonTypes.SECONDARY,\n    size: ButtonSizes.SMALL,\n    onClick: function onClick() {\n      return setShowAllMembers(true);\n    }\n  }, stringSet.CHANNEL_SETTING__MEMBERS__SEE_ALL_MEMBERS), /*#__PURE__*/React__default.createElement(Button, {\n    type: ButtonTypes.SECONDARY,\n    size: ButtonSizes.SMALL,\n    onClick: function onClick() {\n      return setShowInviteUsers(true);\n    }\n  }, stringSet.CHANNEL_SETTING__MEMBERS__INVITE_MEMBER)), showAllMembers && /*#__PURE__*/React__default.createElement(MembersModal, {\n    onCancel: function onCancel() {\n      setShowAllMembers(false);\n      refreshList();\n    }\n  }), showInviteUsers && /*#__PURE__*/React__default.createElement(InviteUsers, {\n    onSubmit: function onSubmit() {\n      setShowInviteUsers(false);\n      refreshList();\n    },\n    onCancel: function onCancel() {\n      return setShowInviteUsers(false);\n    }\n  }));\n};\nexport { MemberList as M };","map":{"version":3,"mappings":"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","names":["MembersModal","onCancel","_ref","useState","members","setMembers","memberQuery","setMemberQuery","useChannelSettingsContext","channel","state","useSendbirdStateContext","currentUser","config","_state$config","userId","useContext","LocalizationContext","stringSet","useEffect","memberListQuery","createMemberListQuery","limit","next","then","React","Modal","isFullScreenOnMobile","hideFooter","onSubmit","noop","titleText","CHANNEL_SETTING__MEMBERS__SEE_ALL_MEMBERS","className","onScroll","e","hasNext","target","fetchMore","clientHeight","scrollTop","scrollHeight","o","map","member","UserListItem","user","key","action","_ref2","parentRef","actionRef","myRole","ContextMenu","menuTrigger","toggleDropdown","IconButton","width","height","onClick","Icon","type","IconTypes","MORE","fillColor","IconColors","CONTENT_INVERSE","menuItems","closeDropdown","MenuItems","parentContainRef","openLeft","MenuItem","disable","role","addOperators","m","removeOperators","dataSbId","CHANNEL_SETTING__MODERATION__REGISTER_AS_OPERATOR","CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR","isBroadcast","isMuted","unmuteUser","muteUser","CHANNEL_SETTING__MODERATION__UNMUTE","CHANNEL_SETTING__MODERATION__MUTE","banUser","filter","_ref3","CHANNEL_SETTING__MODERATION__BAN","isAboutSame","a","b","px","Math","abs","InviteUsers","selectedMembers","setSelectedMembers","userQuery","setUserQuery","sdk","stores","_state$stores","sdkStore","_state$stores$sdkStor","globalUserListQuery","userListQuery","overrideInviteUser","queries","userFilledQuery","applicationUserListQuery","useLocalization","createApplicationUserListQuery","disabled","Object","keys","length","submitText","BUTTON__INVITE","ButtonTypes","PRIMARY","users","onClose","inviteWithUserIds","CHANNEL_SETTING__MEMBERS__SELECT_TITLE","isJoinedMember","_channel$members","some","checkBox","checked","onChange","event","modifiedSelectedMembers","id","MemberList","setHasNext","showAllMembers","setShowAllMembers","showInviteUsers","setShowInviteUsers","setChannelUpdateId","memberUserListQuery","refreshList","useCallback","uuidv4","Button","SECONDARY","size","ButtonSizes","SMALL","CHANNEL_SETTING__MEMBERS__INVITE_MEMBER"],"sources":["C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\modules\\ChannelSettings\\components\\ModerationPanel\\MembersModal.tsx","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\modules\\ChannelSettings\\components\\ModerationPanel\\InviteUsersModal.tsx","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\modules\\ChannelSettings\\components\\ModerationPanel\\MemberList.tsx"],"sourcesContent":["import React, {\n  ReactElement,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport { noop } from '../../../../utils/utils';\n\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport { Member } from '@sendbird/chat/groupChannel';\n\ninterface Props {\n  onCancel(): void;\n}\n\nexport default function MembersModal({ onCancel }: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [memberQuery, setMemberQuery] = useState(null);\n\n  const { channel } = useChannelSettingsContext();\n  const state = useSendbirdStateContext();\n  const currentUser = state?.config?.userId;\n  const { stringSet } = useContext(LocalizationContext);\n\n  useEffect(() => {\n    const memberListQuery = channel?.createMemberListQuery({\n      limit: 20,\n    });\n    memberListQuery.next().then((members) => {\n      setMembers(members);\n    });\n    setMemberQuery(memberListQuery);\n  }, []);\n  return (\n    <div>\n      <Modal\n        isFullScreenOnMobile\n        hideFooter\n        onCancel={() => onCancel()}\n        onSubmit={noop}\n        titleText={stringSet.CHANNEL_SETTING__MEMBERS__SEE_ALL_MEMBERS}\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              memberQuery.next().then((o) => {\n                setMembers([\n                  ...members,\n                  ...o,\n                ]);\n              });\n            }\n          }}\n        >\n          {\n            members.map((member: Member) => (\n              <UserListItem\n                user={member}\n                key={member.userId}\n                currentUser={currentUser}\n                action={({ parentRef, actionRef }) => (\n                  <>\n                    {channel?.myRole === 'operator' && (\n                      <ContextMenu\n                        menuTrigger={(toggleDropdown) => (\n                          <IconButton\n                            className=\"sendbird-user-message__more__menu\"\n                            width=\"32px\"\n                            height=\"32px\"\n                            onClick={toggleDropdown}\n                          >\n                            <Icon\n                              width=\"24px\"\n                              height=\"24px\"\n                              type={IconTypes.MORE}\n                              fillColor={IconColors.CONTENT_INVERSE}\n                            />\n                          </IconButton>\n                        )}\n                        menuItems={(closeDropdown) => (\n                          <MenuItems\n                            parentContainRef={parentRef}\n                            parentRef={actionRef} // for catching location(x, y) of MenuItems\n                            closeDropdown={closeDropdown}\n                            openLeft\n                          >\n                            <MenuItem\n                              disable={currentUser === member.userId}\n                              onClick={() => {\n                                if ((member.role !== 'operator')) {\n                                  channel?.addOperators([member.userId]).then(() => {\n                                    setMembers(members.map(m => {\n                                      if (m.userId === member.userId) {\n                                        return {\n                                          ...member,\n                                          role: 'operator',\n                                        };\n                                      }\n                                      return m;\n                                    }));\n                                    closeDropdown();\n                                  });\n                                } else {\n                                  channel?.removeOperators([member.userId]).then(() => {\n                                    setMembers(members.map(m => {\n                                      if (m.userId === member.userId) {\n                                        return {\n                                          ...member,\n                                          role: '',\n                                        };\n                                      }\n                                      return m;\n                                    }));\n                                    closeDropdown();\n                                  });\n                                }\n                              }}\n                              dataSbId={`channel_setting_member_context_menu_${(\n                                member.role !== 'operator'\n                              ) ? 'register_as_operator' : 'unregister_operator'}`}\n                            >\n                              {\n                                member.role !== 'operator'\n                                  ? stringSet.CHANNEL_SETTING__MODERATION__REGISTER_AS_OPERATOR\n                                  : stringSet.CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR\n                              }\n                            </MenuItem>\n                            {\n                              // No muted members in broadcast channel\n                              !channel?.isBroadcast && (\n                                <MenuItem\n                                  onClick={() => {\n                                    if (member.isMuted) {\n                                      channel?.unmuteUser(member).then(() => {\n                                        setMembers(members.map(m => {\n                                          if (m.userId === member.userId) {\n                                            return {\n                                              ...member,\n                                              isMuted: false,\n                                            };\n                                          }\n                                          return m;\n                                        }));\n                                        closeDropdown();\n                                      });\n                                    } else {\n                                      channel?.muteUser(member).then(() => {\n                                        setMembers(members.map(m => {\n                                          if (m.userId === member.userId) {\n                                            return {\n                                              ...member,\n                                              isMuted: true,\n                                            };\n                                          }\n                                          return m;\n                                        }));\n                                        closeDropdown();\n                                      });\n                                    }\n                                  }}\n                                  dataSbId={`channel_setting_member_context_menu_${(\n                                    member.isMuted) ? 'unmute' : 'mute'}`\n                                  }\n                                >\n                                  {\n                                    member.isMuted\n                                      ? stringSet.CHANNEL_SETTING__MODERATION__UNMUTE\n                                      : stringSet.CHANNEL_SETTING__MODERATION__MUTE\n                                  }\n                                </MenuItem>\n                              )\n                            }\n                            <MenuItem\n                              onClick={() => {\n                                channel?.banUser(member, -1, '').then(() => {\n                                  setMembers(members.filter(({ userId }) => {\n                                    return userId !== member.userId;\n                                  }));\n                                });\n                              }}\n                              dataSbId=\"channel_setting_member_context_menu_ban\"\n                            >\n                              {stringSet.CHANNEL_SETTING__MODERATION__BAN}\n                            </MenuItem>\n                          </MenuItems>\n                        )}\n                      />\n                    )}\n                  </>\n                )}\n              />\n            ))\n          }\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, { ReactElement, useEffect, useState } from 'react';\n\nimport Modal from '../../../../ui/Modal';\nimport { ButtonTypes } from '../../../../ui/Button';\nimport UserListItem from '../../../../ui/UserListItem';\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { useLocalization } from '../../../../lib/LocalizationContext';\n\ninterface Props {\n  onCancel(): void;\n  onSubmit(members: Array<string>): void;\n}\n\nconst isAboutSame = (a, b, px) => (Math.abs(a - b) <= px);\n\nexport default function InviteUsers({\n  onCancel,\n  onSubmit,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [selectedMembers, setSelectedMembers] = useState({});\n  const [userQuery, setUserQuery] = useState(null);\n\n  const state = useSendbirdStateContext();\n  const sdk = state?.stores?.sdkStore?.sdk;\n  const globalUserListQuery = state?.config?.userListQuery;\n\n  const { channel, overrideInviteUser, queries } = useChannelSettingsContext();\n  const userFilledQuery = {\n    ...queries?.applicationUserListQuery,\n  };\n  const { stringSet } = useLocalization();\n\n  useEffect(() => {\n    const userListQuery = globalUserListQuery\n      ? globalUserListQuery()\n      : sdk?.createApplicationUserListQuery(userFilledQuery);\n    if (userListQuery?.next) {\n      userListQuery.next().then((members) => {\n        setMembers(members);\n      });\n      setUserQuery(userListQuery);\n    }\n  }, [sdk]);\n  return (\n    <div>\n      <Modal\n        isFullScreenOnMobile\n        disabled={Object.keys(selectedMembers).length === 0}\n        submitText={stringSet.BUTTON__INVITE}\n        type={ButtonTypes.PRIMARY}\n        onCancel={() => onCancel()}\n        onSubmit={() => {\n          const members = Object.keys(selectedMembers).filter((m) => selectedMembers[m]);\n          if (typeof overrideInviteUser === 'function') {\n            overrideInviteUser({\n              users: members,\n              onClose: onCancel,\n              channel,\n            });\n            return;\n          }\n          channel?.inviteWithUserIds(members).then(() => {\n            onSubmit(members);\n          });\n        }}\n        titleText={stringSet.CHANNEL_SETTING__MEMBERS__SELECT_TITLE}\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = userQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = isAboutSame(target.clientHeight + target.scrollTop, target.scrollHeight, 20);\n            if (hasNext && fetchMore) {\n              userQuery.next().then((users) => {\n                setMembers([\n                  ...members,\n                  ...users,\n                ]);\n              });\n            }\n          }}\n        >\n          <div className=\"sendbird-more-members__popup-scroll__inner\">\n            {members.map((member) => {\n              const isJoinedMember = channel?.members?.some(({ userId }) => userId === member?.userId);\n              return (\n                <UserListItem\n                  checkBox\n                  checked={isJoinedMember || selectedMembers[member.userId]}\n                  disabled={isJoinedMember}\n                  onChange={\n                    (event) => {\n                      const modifiedSelectedMembers = {\n                        ...selectedMembers,\n                        [event.target.id]: event.target.checked,\n                      };\n                      if (!event.target.checked) {\n                        delete modifiedSelectedMembers[event.target.id];\n                      }\n                      setSelectedMembers(modifiedSelectedMembers);\n                    }\n                  }\n                  user={member}\n                  key={member.userId}\n                />\n              );\n            })}\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n  useContext,\n} from 'react';\nimport type { Member } from '@sendbird/chat/groupChannel';\n\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport UserListItem from '../UserListItem';\nimport MembersModal from './MembersModal';\nimport InviteUsers from './InviteUsersModal';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport uuidv4 from '../../../../utils/uuid';\n\nexport const MemberList = (): ReactElement => {\n  const [members, setMembers] = useState<Array<Member>>([]);\n  const [hasNext, setHasNext] = useState(false);\n  const [showAllMembers, setShowAllMembers] = useState(false);\n  const [showInviteUsers, setShowInviteUsers] = useState(false);\n\n  const state = useSendbirdStateContext();\n  const {\n    channel,\n    setChannelUpdateId,\n  } = useChannelSettingsContext();\n  const { stringSet } = useContext(LocalizationContext);\n\n  const sdk = state?.stores?.sdkStore?.sdk;\n  const userId = state?.config?.userId;\n\n  useEffect(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const memberUserListQuery = channel?.createMemberListQuery({ limit: 10 });\n    memberUserListQuery.next().then((members) => {\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refreshList = useCallback(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n    const memberUserListQuery = channel?.createMemberListQuery({ limit: 10 });\n    memberUserListQuery.next().then((members) => {\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n      setChannelUpdateId(uuidv4());\n    });\n  }, [channel]);\n\n  return (\n    <div className=\"sendbird-channel-settings-member-list sendbird-accordion\">\n      {\n        members.map((member) => (\n          <UserListItem\n            key={member.userId}\n            user={member}\n            currentUser={sdk.currentUser.userId}\n            action={\n              (channel?.myRole === 'operator' && userId !== member.userId)\n                ? ({ actionRef, parentRef }) => (\n                  <ContextMenu\n                    menuTrigger={(toggleDropdown) => (\n                      <IconButton\n                        className=\"sendbird-user-message__more__menu\"\n                        width=\"32px\"\n                        height=\"32px\"\n                        onClick={toggleDropdown}\n                      >\n                        <Icon\n                          width=\"24px\"\n                          height=\"24px\"\n                          type={IconTypes.MORE}\n                          fillColor={IconColors.CONTENT_INVERSE}\n                        />\n                      </IconButton>\n                    )}\n                    menuItems={(closeDropdown) => (\n                      <MenuItems\n                        parentContainRef={parentRef}\n                        parentRef={actionRef} // for catching location(x, y) of MenuItems\n                        closeDropdown={closeDropdown}\n                        openLeft\n                      >\n                        <MenuItem\n                          onClick={() => {\n                            if ((member.role !== 'operator')) {\n                              channel?.addOperators([member.userId]).then(() => {\n                                refreshList();\n                                closeDropdown();\n                              });\n                            } else {\n                              channel?.removeOperators([member.userId]).then(() => {\n                                refreshList();\n                                closeDropdown();\n                              });\n                            }\n                          }}\n                          dataSbId={`channel_setting_member_context_menu_${(\n                            member.role !== 'operator'\n                          ) ? 'register_as_operator' : 'unregister_operator'}`}\n                        >\n                          {\n                            member.role !== 'operator'\n                              ? stringSet.CHANNEL_SETTING__MODERATION__REGISTER_AS_OPERATOR\n                              : stringSet.CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR\n                          }\n                        </MenuItem>\n                        {\n                          // No muted members in broadcast channel\n                          !channel?.isBroadcast && (\n                            <MenuItem\n                              onClick={() => {\n                                if (member.isMuted) {\n                                  channel?.unmuteUser(member).then(() => {\n                                    refreshList();\n                                    closeDropdown();\n                                  });\n                                } else {\n                                  channel?.muteUser(member).then(() => {\n                                    refreshList();\n                                    closeDropdown();\n                                  });\n                                }\n                              }}\n                              dataSbId={`channel_setting_member_context_menu_${(\n                                member.isMuted) ? 'unmute' : 'mute'}`\n                              }\n                            >\n                              {\n                                member.isMuted\n                                  ? stringSet.CHANNEL_SETTING__MODERATION__UNMUTE\n                                  : stringSet.CHANNEL_SETTING__MODERATION__MUTE\n                              }\n                            </MenuItem>\n                          )\n                        }\n                        <MenuItem\n                          onClick={() => {\n                            channel?.banUser(member, -1, '').then(() => {\n                              refreshList();\n                              closeDropdown();\n                            });\n                          }}\n                          dataSbId=\"channel_setting_member_context_menu_ban\"\n                        >\n                          {stringSet.CHANNEL_SETTING__MODERATION__BAN}\n                        </MenuItem>\n                      </MenuItems>\n                    )}\n                  />\n                )\n                : null\n            }\n          />\n        ))\n      }\n      <div\n        className=\"sendbird-channel-settings-accordion__footer\"\n      >\n        {\n          hasNext && (\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => setShowAllMembers(true)}\n            >\n              {stringSet.CHANNEL_SETTING__MEMBERS__SEE_ALL_MEMBERS}\n            </Button>\n          )\n        }\n        <Button\n          type={ButtonTypes.SECONDARY}\n          size={ButtonSizes.SMALL}\n          onClick={() => setShowInviteUsers(true)}\n        >\n          {stringSet.CHANNEL_SETTING__MEMBERS__INVITE_MEMBER}\n        </Button>\n      </div>\n      {\n        showAllMembers && (\n          <MembersModal\n            onCancel={() => {\n              setShowAllMembers(false);\n              refreshList();\n            }}\n          />\n        )\n      }\n      {\n        showInviteUsers && (\n          <InviteUsers\n            onSubmit={() => {\n              setShowInviteUsers(false);\n              refreshList();\n            }}\n            onCancel={() => setShowInviteUsers(false)}\n          />\n        )\n      }\n    </div>\n  );\n};\n\nexport default MemberList;\n"]},"metadata":{},"sourceType":"module"}