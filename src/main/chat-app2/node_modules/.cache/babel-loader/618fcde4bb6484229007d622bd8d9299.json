{"ast":null,"code":"import React__default, { useState, useCallback } from 'react';\nimport { _ as _objectSpread2 } from '../_rollupPluginBabelHelpers-6bb0305c.js';\nimport useSendbirdStateContext from '../useSendbirdStateContext.js';\nimport '../withSendbird.js';\n\n/**\n * The default value of `checked` should be null\n * to support both case of controlled and uncontrolled component\n * ref: https://github.com/aaronshaf/react-toggle#props\n */\nconst noop = () => {/* noop */};\nconst TOGGLE_DEFAULT_VALUE = {\n  checked: null,\n  defaultChecked: false,\n  disabled: false,\n  onChange: noop,\n  onFocus: noop,\n  onBlur: noop\n};\nconst ToggleContext = /*#__PURE__*/React__default.createContext(TOGGLE_DEFAULT_VALUE);\nfunction useToggleContext() {\n  const context = React__default.useContext(ToggleContext);\n  if (context === undefined) {\n    throw new Error('@sendbird/uikit-react/ui/Toggle: useToggleContext must be used within a ToggleContainer.');\n  }\n  return context;\n}\n\n// Props Explanation https://github.com/aaronshaf/react-toggle#props\nfunction ToggleContainer(_ref) {\n  let {\n    checked = TOGGLE_DEFAULT_VALUE.checked,\n    // null\n    defaultChecked = TOGGLE_DEFAULT_VALUE.defaultChecked,\n    disabled = TOGGLE_DEFAULT_VALUE.disabled,\n    onChange = TOGGLE_DEFAULT_VALUE.onChange,\n    onFocus = TOGGLE_DEFAULT_VALUE.onFocus,\n    onBlur = TOGGLE_DEFAULT_VALUE.onBlur,\n    children\n  } = _ref;\n  const [isChecked, setChecked] = useState(defaultChecked || false);\n  const handleChange = useCallback(e => {\n    if (disabled) {\n      return;\n    }\n    if (checked === null) {\n      setChecked(e.currentTarget.checked);\n    }\n    onChange(e);\n  }, [onChange, checked]);\n  return /*#__PURE__*/React__default.createElement(ToggleContext.Provider, {\n    value: {\n      checked: checked !== null ? checked : isChecked,\n      disabled,\n      onChange: handleChange,\n      onFocus: e => {\n        if (!disabled) {\n          onFocus(e);\n        }\n      },\n      onBlur: e => {\n        if (!disabled) {\n          onBlur(e);\n        }\n      }\n    }\n  }, children);\n}\nfunction filterNumber(input) {\n  if (typeof input !== 'string' && typeof input !== 'number') {\n    try {\n      const {\n        config\n      } = useSendbirdStateContext();\n      const {\n        logger\n      } = config;\n      logger.warning('@sendbird/uikit-react/ui/Toggle: TypeError - expected string or number.', input);\n    } catch (_) {/* noop */}\n    return [];\n  }\n  if (typeof input === 'number') {\n    return [input];\n  }\n  const regex = /(-?\\d+)(\\.\\d+)?/g;\n  const numbers = input.match(regex) || [];\n  return numbers.map(parseFloat);\n}\nfunction ToggleUI(props) {\n  var _filterNumber;\n  const {\n    reversed = false,\n    width = '40px',\n    animationDuration = '0.5s',\n    style = {},\n    name = '',\n    id = '',\n    ariaLabel = '',\n    ariaLabelledby = ''\n  } = props;\n  const {\n    checked,\n    disabled,\n    onChange,\n    onFocus,\n    onBlur\n  } = useToggleContext();\n\n  // animation should not be activated in the initialization step\n  const [animatedClassName, setAnimatedClassName] = useState('');\n  const toggleWidth = (_filterNumber = filterNumber(width)) === null || _filterNumber === void 0 ? void 0 : _filterNumber[0];\n  const toggleHeight = toggleWidth / 2;\n  // The size of dot should be 60% of toggle height\n  const dotSize = toggleHeight * 0.6;\n  return /*#__PURE__*/React__default.createElement(\"label\", {\n    className: ['sendbird-input-toggle-button', animatedClassName, checked ? 'sendbird-input-toggle-button--checked' : 'sendbird-input-toggle-button--unchecked', disabled ? 'sendbird-input-toggle-button--disabled' : [], reversed ? 'sendbird-input-toggle-button--reversed' : []].flat().join(' '),\n    style: _objectSpread2({\n      width: `${toggleWidth}px`,\n      height: `${toggleHeight}px`,\n      borderRadius: `${dotSize}px`\n    }, style)\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: ['sendbird-input-toggle-button__inner-dot', checked ? 'sendbird-input-toggle-button__inner-dot--activate' : 'sendbird-input-toggle-button__inner-dot--inactivate'].join(' '),\n    style: {\n      width: `${dotSize}px`,\n      height: `${dotSize}px`,\n      animationDuration\n    }\n  }), /*#__PURE__*/React__default.createElement(\"input\", {\n    type: \"checkbox\",\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    name: name,\n    id: id,\n    checked: checked,\n    disabled: disabled,\n    onChange: e => {\n      onChange(e);\n      setAnimatedClassName(e.currentTarget.checked ? 'sendbird-input-toggle-button--turned-on' : 'sendbird-input-toggle-button--turned-off');\n    },\n    onFocus: onFocus,\n    onBlur: onBlur\n  }));\n}\nfunction Toggle(props) {\n  const {\n    // ToggleProvider\n    checked,\n    defaultChecked,\n    disabled,\n    onChange,\n    onFocus,\n    onBlur,\n    // ToggleUI\n    className,\n    reversed,\n    width,\n    // height will be half of width\n    animationDuration,\n    style,\n    name,\n    id,\n    ariaLabel,\n    ariaLabelledby\n  } = props;\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `sendbird-ui-toggle ${className}`\n  }, /*#__PURE__*/React__default.createElement(ToggleContainer, {\n    checked: checked,\n    defaultChecked: defaultChecked,\n    disabled: disabled,\n    onChange: onChange,\n    onFocus: onFocus,\n    onBlur: onBlur\n  }, /*#__PURE__*/React__default.createElement(ToggleUI, {\n    reversed: reversed,\n    width: width,\n    animationDuration: animationDuration,\n    style: style,\n    name: name,\n    id: id,\n    ariaLabel: ariaLabel,\n    ariaLabelledby: ariaLabelledby\n  })));\n}\nexport { Toggle, ToggleContainer, ToggleUI, useToggleContext };","map":{"version":3,"mappings":"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","names":["noop","TOGGLE_DEFAULT_VALUE","checked","defaultChecked","disabled","onChange","onFocus","onBlur","ToggleContext","React","createContext","useToggleContext","context","useContext","undefined","Error","ToggleContainer","Dvalue","children","isChecked","setChecked","useState","handleChange","useCallback","e","currentTarget","Provider","value","filterNumber","input","config","useSendbirdStateContext","logger","warning","_","regex","numbers","match","map","parseFloat","ToggleUI","props","reversed","width","animationDuration","style","name","id","ariaLabel","ariaLabelledby","animatedClassName","setAnimatedClassName","toggleWidth","_filterNumber","toggleHeight","dotSize","className","flat","join","height","borderRadius","type","Toggle"],"sources":["C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\ui\\Toggle\\ToggleContext.ts","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\ui\\Toggle\\ToggleContainer.tsx","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\ui\\Toggle\\utils.ts","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\ui\\Toggle\\ToggleUI.tsx","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\ui\\Toggle\\index.tsx"],"sourcesContent":["import React, { ChangeEventHandler } from 'react';\n\n/**\n * The default value of `checked` should be null\n * to support both case of controlled and uncontrolled component\n * ref: https://github.com/aaronshaf/react-toggle#props\n */\nconst noop = (): void => { /* noop */ };\nexport const TOGGLE_DEFAULT_VALUE = {\n  checked: null,\n  defaultChecked: false,\n  disabled: false,\n  onChange: noop,\n  onFocus: noop,\n  onBlur: noop,\n};\n\nexport interface ToggleContextInterface {\n  checked?: boolean | null;\n  defaultChecked?: boolean;\n  disabled?: boolean;\n  onChange?: ChangeEventHandler<HTMLInputElement>;\n  onFocus?: ChangeEventHandler<HTMLInputElement>;\n  onBlur?: ChangeEventHandler<HTMLInputElement>;\n}\n\nexport const ToggleContext = React.createContext<ToggleContextInterface>(TOGGLE_DEFAULT_VALUE);\n\nexport function useToggleContext(): ToggleContextInterface {\n  const context = React.useContext(ToggleContext);\n  if (context === undefined) {\n    throw new Error('@sendbird/uikit-react/ui/Toggle: useToggleContext must be used within a ToggleContainer.');\n  }\n  return context;\n}\n","import React, { ChangeEvent, useCallback, useState } from 'react';\n\nimport {\n  ToggleContext,\n  ToggleContextInterface,\n  TOGGLE_DEFAULT_VALUE as Dvalue,\n} from './ToggleContext';\n\nexport interface ToggleContainerProps extends ToggleContextInterface {\n  children?: React.ReactElement;\n}\n\n// Props Explanation https://github.com/aaronshaf/react-toggle#props\nexport function ToggleContainer({\n  checked = Dvalue.checked, // null\n  defaultChecked = Dvalue.defaultChecked,\n  disabled = Dvalue.disabled,\n  onChange = Dvalue.onChange,\n  onFocus = Dvalue.onFocus,\n  onBlur = Dvalue.onBlur,\n  children,\n}: ToggleContainerProps): React.ReactElement {\n  const [isChecked, setChecked] = useState(defaultChecked || false);\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (disabled) {\n      return;\n    }\n    if (checked === null) {\n      setChecked(e.currentTarget.checked);\n    }\n    onChange(e);\n  }, [onChange, checked]);\n\n  return (\n    <ToggleContext.Provider value={{\n      checked: checked !== null ? checked : isChecked,\n      disabled,\n      onChange: handleChange,\n      onFocus: (e) => {\n        if (!disabled) {\n          onFocus(e);\n        }\n      },\n      onBlur: (e) => {\n        if (!disabled) {\n          onBlur(e);\n        }\n      },\n    }}>\n      {children}\n    </ToggleContext.Provider>\n  );\n}\n","import useSendbirdStateContext from '../../hooks/useSendbirdStateContext';\n\nexport function filterNumber(input: string | number): Array<number> {\n  if (typeof input !== 'string' && typeof input !== 'number') {\n    try {\n      const { config } = useSendbirdStateContext();\n      const { logger } = config;\n      logger.warning('@sendbird/uikit-react/ui/Toggle: TypeError - expected string or number.', input);\n    } catch (_) { /* noop */ }\n    return [];\n  }\n  if (typeof input === 'number') {\n    return [input];\n  }\n  const regex = /(-?\\d+)(\\.\\d+)?/g;\n  const numbers = input.match(regex) || [];\n  return numbers.map(parseFloat);\n}\n","import React, { useState } from 'react';\nimport { useToggleContext } from './ToggleContext';\nimport { filterNumber } from './utils';\n\nexport interface ToggleUIProps {\n  reversed?: boolean;\n  width?: string;\n  animationDuration?: string;\n  style?: Record<string, string>;\n  name?: string;\n  id?: string;\n  ariaLabel?: string;\n  ariaLabelledby?: string;\n}\n\nexport function ToggleUI(props: ToggleUIProps): React.ReactElement {\n  const {\n    reversed = false,\n    width = '40px',\n    animationDuration = '0.5s',\n    style = {},\n    name = '',\n    id = '',\n    ariaLabel = '',\n    ariaLabelledby = '',\n  } = props;\n  const {\n    checked,\n    disabled,\n    onChange,\n    onFocus,\n    onBlur,\n  } = useToggleContext();\n\n  // animation should not be activated in the initialization step\n  const [animatedClassName, setAnimatedClassName] = useState('');\n\n  const toggleWidth = filterNumber(width)?.[0];\n  const toggleHeight = toggleWidth / 2;\n  // The size of dot should be 60% of toggle height\n  const dotSize = toggleHeight * 0.6;\n\n  return (\n    <label\n      className={[\n        'sendbird-input-toggle-button',\n        animatedClassName,\n        checked ? 'sendbird-input-toggle-button--checked' : 'sendbird-input-toggle-button--unchecked',\n        disabled ? 'sendbird-input-toggle-button--disabled' : [],\n        reversed ? 'sendbird-input-toggle-button--reversed' : [],\n      ].flat().join(' ')}\n      style={{\n        width: `${toggleWidth}px`,\n        height: `${toggleHeight}px`,\n        borderRadius: `${dotSize}px`,\n        ...style,\n      }}\n    >\n      <div\n        className={[\n          'sendbird-input-toggle-button__inner-dot',\n          checked\n            ? 'sendbird-input-toggle-button__inner-dot--activate'\n            : 'sendbird-input-toggle-button__inner-dot--inactivate',\n        ].join(' ')}\n        style={{\n          width: `${dotSize}px`,\n          height: `${dotSize}px`,\n          animationDuration,\n        }}\n      />\n      <input\n        type=\"checkbox\"\n        aria-label={ariaLabel}\n        aria-labelledby={ariaLabelledby}\n        name={name}\n        id={id}\n        checked={checked}\n        disabled={disabled}\n        onChange={(e) => {\n          onChange(e);\n          setAnimatedClassName(e.currentTarget.checked ? 'sendbird-input-toggle-button--turned-on' : 'sendbird-input-toggle-button--turned-off');\n        }}\n        onFocus={onFocus}\n        onBlur={onBlur}\n      />\n    </label>\n  );\n}\n","import React from 'react';\nimport './index.scss';\n\nimport { ToggleContainer, ToggleContainerProps } from './ToggleContainer';\nimport { useToggleContext } from './ToggleContext';\nimport { ToggleUI, ToggleUIProps } from './ToggleUI';\n\nexport interface ToggleProps extends ToggleContainerProps, ToggleUIProps {\n  className?: string;\n}\nfunction Toggle(props: ToggleProps): React.ReactElement {\n  const {\n    // ToggleProvider\n    checked,\n    defaultChecked,\n    disabled,\n    onChange,\n    onFocus,\n    onBlur,\n    // ToggleUI\n    className,\n    reversed,\n    width,\n    // height will be half of width\n    animationDuration,\n    style,\n    name,\n    id,\n    ariaLabel,\n    ariaLabelledby,\n  } = props;\n  return (\n    <div className={`sendbird-ui-toggle ${className}`}>\n      <ToggleContainer\n        checked={checked}\n        defaultChecked={defaultChecked}\n        disabled={disabled}\n        onChange={onChange}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        >\n        <ToggleUI\n          reversed={reversed}\n          width={width}\n          animationDuration={animationDuration}\n          style={style}\n          name={name}\n          id={id}\n          ariaLabel={ariaLabel}\n          ariaLabelledby={ariaLabelledby}\n        />\n      </ToggleContainer>\n    </div>\n  );\n}\n\nexport type { ToggleContainerProps, ToggleUIProps };\nexport { Toggle, ToggleContainer, ToggleUI, useToggleContext };\n"]},"metadata":{},"sourceType":"module"}