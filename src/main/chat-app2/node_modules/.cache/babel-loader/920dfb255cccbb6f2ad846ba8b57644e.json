{"ast":null,"code":"import _slicedToArray from \"C:/Users/\\uC774\\uACBD\\uBBFC/IdeaProjects/sendbird-uikit-whatsapp-sample/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { _ as _objectSpread2 } from './_rollupPluginBabelHelpers-6bb0305c.js';\nimport { useState, useRef, useCallback } from 'react';\nimport { u as useMediaQueryContext } from './MediaQueryContext-11f0e43f.js';\nvar DEFAULT_DURATION = 300;\nfunction preventDefault(e) {\n  if (!isTouchEvent(e)) {\n    return;\n  }\n  if (e.touches.length < 2 && e.preventDefault) {\n    e.preventDefault();\n  }\n}\nfunction isTouchEvent(e) {\n  return e && 'touches' in e;\n}\nfunction useLongPress(_ref) {\n  var onLongPress = _ref.onLongPress,\n    onClick = _ref.onClick;\n  var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    _ref2$delay = _ref2.delay,\n    delay = _ref2$delay === void 0 ? DEFAULT_DURATION : _ref2$delay,\n    _ref2$shouldPreventDe = _ref2.shouldPreventDefault,\n    shouldPreventDefault = _ref2$shouldPreventDe === void 0 ? true : _ref2$shouldPreventDe,\n    _ref2$shouldStopPropa = _ref2.shouldStopPropagation,\n    shouldStopPropagation = _ref2$shouldStopPropa === void 0 ? false : _ref2$shouldStopPropa;\n  var _useMediaQueryContext = useMediaQueryContext(),\n    isMobile = _useMediaQueryContext.isMobile;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    longPressTriggered = _useState2[0],\n    setLongPressTriggered = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    dragTriggered = _useState4[0],\n    setDragTriggered = _useState4[1];\n  // https://www.typescriptlang.org/docs/handbook/utility-types.html#returntypetype\n  var timeout = useRef();\n  var target = useRef();\n  var start = useCallback(function (e) {\n    e.persist();\n    var clonedEvent = _objectSpread2({}, e);\n    setDragTriggered(false);\n    if (shouldStopPropagation) {\n      e.stopPropagation();\n    }\n    if (shouldPreventDefault && e.target) {\n      e.target.addEventListener('touchend', preventDefault, {\n        passive: false\n      });\n      target.current = e.target;\n    }\n    timeout.current = setTimeout(function () {\n      onLongPress(clonedEvent);\n      setLongPressTriggered(true);\n    }, delay);\n  }, [onLongPress, delay, shouldPreventDefault, shouldStopPropagation, isMobile]);\n  var clear = useCallback(function (e) {\n    var shouldTriggerClick = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    var onDrag = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    if (onDrag) {\n      setDragTriggered(true);\n    } else {\n      setDragTriggered(false);\n    }\n    if (timeout !== null && timeout !== void 0 && timeout.current) {\n      clearTimeout(timeout.current);\n    }\n    if (shouldTriggerClick && !longPressTriggered && !dragTriggered) {\n      onClick === null || onClick === void 0 ? void 0 : onClick(e);\n    }\n    setLongPressTriggered(false);\n    if (shouldPreventDefault && target.current) {\n      target.current.removeEventListener('touchend', preventDefault);\n    }\n  }, [shouldPreventDefault, onClick, longPressTriggered, dragTriggered]);\n  return {\n    onMouseDown: function onMouseDown(e) {\n      return start(e);\n    },\n    onMouseUp: function onMouseUp(e) {\n      return clear(e);\n    },\n    onMouseLeave: function onMouseLeave(e) {\n      return clear(e, false);\n    },\n    onTouchStart: function onTouchStart(e) {\n      return start(e);\n    },\n    // setDragTriggered as true on touchmove, so that next onTouchEnd is ignored\n    // if we dont do it, onClick?.(e) will be triggred, see inside clear()\n    onTouchMove: function onTouchMove(e) {\n      return clear(e, false, true);\n    },\n    onTouchEnd: function onTouchEnd(e) {\n      return clear(e);\n    }\n  };\n}\nexport { useLongPress as u };","map":{"version":3,"mappings":"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","names":["DEFAULT_DURATION","preventDefault","e","isTouchEvent","touches","length","useLongPress","onLongPress","_ref","onClick","arguments","delay","shouldPreventDefault","shouldStopPropagation","useMediaQueryContext","isMobile","useState","longPressTriggered","setLongPressTriggered","dragTriggered","setDragTriggered","timeout","useRef","target","start","useCallback","persist","clonedEvent","stopPropagation","addEventListener","passive","current","setTimeout","clear","shouldTriggerClick","onDrag","clearTimeout","removeEventListener","onMouseDown","onMouseUp","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd"],"sources":["C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\hooks\\useLongPress.tsx"],"sourcesContent":["// thanks to: https://stackoverflow.com/questions/48048957/react-long-press-event\n/* example:\n  const Component = ({ onClick }) => {\n    const onLongPress = useLongPress({\n      onClick: onClick,\n      onLongPress: () => {\n        alert('longpress');\n      }\n    }, {\n      delay: 500,\n      shouldPreventDefault: true,\n    });\n    return (\n      <button {...onLongPress}>\n        hello\n      </button>\n    )\n  }\n*/\nimport React, {\n  useState,\n  useRef,\n  useCallback,\n} from 'react';\nimport {\n  useMediaQueryContext,\n} from '../lib/MediaQueryContext';\n\nconst DEFAULT_DURATION = 300;\n\nfunction preventDefault(e: Event) {\n  if (!isTouchEvent(e)) {\n    return;\n  }\n\n  if (e.touches.length < 2 && e.preventDefault) {\n    e.preventDefault();\n  }\n}\n\nexport function isTouchEvent(e: Event): e is TouchEvent {\n  return e && 'touches' in e;\n}\n\ninterface PressHandlers<T> {\n  onLongPress: (e: React.MouseEvent<T> | React.TouchEvent<T>) => void;\n  onClick?: (e: React.MouseEvent<T> | React.TouchEvent<T>) => void;\n}\n\ninterface Options {\n  delay?: number;\n  shouldPreventDefault?: boolean;\n  shouldStopPropagation?: boolean;\n}\n\ninterface UseLongPressType<T> {\n  onTouchMove: (e: React.TouchEvent<T>) => void;\n  onMouseDown: (e: React.MouseEvent<T>) => void;\n  onTouchStart: (e: React.TouchEvent<T>) => void;\n  onMouseUp: (e: React.MouseEvent<T>) => void;\n  onMouseLeave: (e: React.MouseEvent<T>) => void;\n  onTouchEnd: (e: React.TouchEvent<T>) => void;\n}\n\nexport default function useLongPress<T>({\n  onLongPress,\n  onClick,\n}: PressHandlers<T>, {\n  delay = DEFAULT_DURATION,\n  shouldPreventDefault = true,\n  shouldStopPropagation = false,\n}: Options = {}): UseLongPressType<T> {\n  const { isMobile } = useMediaQueryContext();\n  const [longPressTriggered, setLongPressTriggered] = useState(false);\n  const [dragTriggered, setDragTriggered] = useState(false);\n  // https://www.typescriptlang.org/docs/handbook/utility-types.html#returntypetype\n  const timeout = useRef<ReturnType<typeof setTimeout>>();\n  const target = useRef<EventTarget>();\n\n  const start = useCallback((e: React.MouseEvent<T> | React.TouchEvent<T>) => {\n    e.persist();\n    const clonedEvent = {\n      ...e,\n    };\n    setDragTriggered(false);\n    if (shouldStopPropagation) {\n      e.stopPropagation();\n    }\n    if (shouldPreventDefault && e.target) {\n      e.target.addEventListener(\n        'touchend',\n        preventDefault,\n        {\n          passive: false,\n        },\n      );\n      target.current = e.target;\n    }\n\n    timeout.current = setTimeout(() => {\n      onLongPress(clonedEvent);\n      setLongPressTriggered(true);\n    }, delay);\n  }, [onLongPress, delay, shouldPreventDefault, shouldStopPropagation, isMobile]);\n\n  const clear = useCallback((\n    e: React.MouseEvent<T> | React.TouchEvent<T>,\n    shouldTriggerClick = true,\n    onDrag = false,\n  ) => {\n    if (onDrag) {\n      setDragTriggered(true);\n    } else {\n      setDragTriggered(false);\n    }\n    if (timeout?.current) {\n      clearTimeout(timeout.current);\n    }\n    if (shouldTriggerClick && !longPressTriggered && !dragTriggered) {\n      onClick?.(e);\n    }\n    setLongPressTriggered(false);\n    if (shouldPreventDefault && target.current) {\n      target.current.removeEventListener('touchend', preventDefault);\n    }\n  }, [shouldPreventDefault, onClick, longPressTriggered, dragTriggered]);\n\n  return {\n    onMouseDown: (e: React.MouseEvent<T>) => start(e),\n    onMouseUp: (e: React.MouseEvent<T>) => clear(e),\n    onMouseLeave: (e: React.MouseEvent<T>) => clear(e, false),\n    onTouchStart: (e: React.TouchEvent<T>) => start(e),\n    // setDragTriggered as true on touchmove, so that next onTouchEnd is ignored\n    // if we dont do it, onClick?.(e) will be triggred, see inside clear()\n    onTouchMove: (e: React.TouchEvent<T>) => clear(e, false, true),\n    onTouchEnd: (e: React.TouchEvent<T>) => clear(e),\n  };\n}\n"]},"metadata":{},"sourceType":"module"}