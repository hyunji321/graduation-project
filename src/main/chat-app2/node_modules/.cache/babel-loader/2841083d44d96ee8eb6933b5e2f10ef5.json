{"ast":null,"code":"import _defineProperty from \"C:/Users/\\uC774\\uACBD\\uBBFC/IdeaProjects/sendbird-uikit-whatsapp-sample/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _toConsumableArray from \"C:/Users/\\uC774\\uACBD\\uBBFC/IdeaProjects/sendbird-uikit-whatsapp-sample/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"C:/Users/\\uC774\\uACBD\\uBBFC/IdeaProjects/sendbird-uikit-whatsapp-sample/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport React__default, { useState, useContext, useEffect, useCallback } from 'react';\nimport { a as LocalizationContext, u as useLocalization } from '../../LocalizationContext-076d6d2e.js';\nimport Accordion, { AccordionGroup } from '../../ui/Accordion.js';\nimport { L as Label, b as LabelColors, a as LabelTypography } from '../../index-63949de5.js';\nimport Icon, { IconTypes, IconColors } from '../../ui/Icon.js';\nimport Badge from '../../ui/Badge.js';\nimport { Toggle } from '../../ui/Toggle.js';\nimport Button, { ButtonTypes, ButtonSizes } from '../../ui/Button.js';\nimport IconButton from '../../ui/IconButton.js';\nimport ContextMenu, { MenuItems, MenuItem } from '../../ui/ContextMenu.js';\nimport UserListItem$1 from './UserListItem.js';\nimport Modal from '../../ui/Modal.js';\nimport UserListItem from '../../ui/UserListItem.js';\nimport { useChannelSettingsContext } from '../context.js';\nimport useSendbirdStateContext from '../../useSendbirdStateContext.js';\nimport { _ as _objectSpread2 } from '../../_rollupPluginBabelHelpers-6bb0305c.js';\nimport { OperatorFilter } from '@sendbird/chat/groupChannel';\nimport { M as MemberList } from '../../MemberList-061d186f.js';\nimport { n as noop } from '../../utils-4bbbca2c.js';\nimport '../../stringSet-13bbd4a2.js';\nimport '../../index-99aabd9e.js';\nimport '../../ui/AccordionGroup.js';\nimport '../../context-63cbe5bd.js';\nimport 'prop-types';\nimport 'react-dom';\nimport '../../ui/SortByRow.js';\nimport '../../uuid-1adedf62.js';\nimport '../../index-7eb65acf.js';\nimport '../../utils/message/getOutgoingMessageState.js';\nimport '../../UserProfileContext-9cfbab4d.js';\nimport '../../ui/Avatar.js';\nimport '../../ui/ImageRenderer.js';\nimport '../../ui/MutedAvatarOverlay.js';\nimport '../../ui/UserProfile.js';\nimport '../../sendbirdSelectors.js';\nimport '../../topics-b2b77fb9.js';\nimport '../../index-38e61c64.js';\nimport '../../MediaQueryContext-11f0e43f.js';\nimport '../../ui/Checkbox.js';\nimport '../../withSendbird.js';\nfunction OperatorsModal(_ref) {\n  var _state$config;\n  var onCancel = _ref.onCancel;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    operators = _useState2[0],\n    setOperators = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    operatorQuery = _useState4[0],\n    setOperatorQuery = _useState4[1];\n  var _useChannelSettingsCo = useChannelSettingsContext(),\n    channel = _useChannelSettingsCo.channel;\n  var state = useSendbirdStateContext();\n  var currentUserId = state === null || state === void 0 ? void 0 : (_state$config = state.config) === null || _state$config === void 0 ? void 0 : _state$config.userId;\n  var _useContext = useContext(LocalizationContext),\n    stringSet = _useContext.stringSet;\n  useEffect(function () {\n    var operatorListQuery = channel === null || channel === void 0 ? void 0 : channel.createOperatorListQuery({\n      limit: 20\n    });\n    operatorListQuery.next().then(function (operators) {\n      setOperators(operators);\n    });\n    setOperatorQuery(operatorListQuery);\n  }, []);\n  return /*#__PURE__*/React__default.createElement(\"div\", null, /*#__PURE__*/React__default.createElement(Modal, {\n    isFullScreenOnMobile: true,\n    hideFooter: true,\n    titleText: stringSet.CHANNEL_SETTING__OPERATORS__TITLE_ALL,\n    onCancel: onCancel\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-more-members__popup-scroll\",\n    onScroll: function onScroll(e) {\n      var hasNext = operatorQuery.hasNext;\n      var target = e.target;\n      var fetchMore = target.clientHeight + target.scrollTop === target.scrollHeight;\n      if (hasNext && fetchMore) {\n        operatorQuery.next().then(function (o) {\n          setOperators([].concat(_toConsumableArray(operators), _toConsumableArray(o)));\n        });\n      }\n    }\n  }, operators.map(function (member) {\n    return /*#__PURE__*/React__default.createElement(UserListItem, {\n      currentUser: currentUserId,\n      user: member,\n      key: member.userId,\n      action: function action(_ref2) {\n        var parentRef = _ref2.parentRef,\n          actionRef = _ref2.actionRef;\n        return (member === null || member === void 0 ? void 0 : member.userId) !== currentUserId && /*#__PURE__*/React__default.createElement(ContextMenu, {\n          menuTrigger: function menuTrigger(toggleDropdown) {\n            return /*#__PURE__*/React__default.createElement(IconButton, {\n              className: \"sendbird-user-message__more__menu\",\n              width: \"32px\",\n              height: \"32px\",\n              onClick: toggleDropdown\n            }, /*#__PURE__*/React__default.createElement(Icon, {\n              width: \"24px\",\n              height: \"24px\",\n              type: IconTypes.MORE,\n              fillColor: IconColors.CONTENT_INVERSE\n            }));\n          },\n          menuItems: function menuItems(closeDropdown) {\n            return /*#__PURE__*/React__default.createElement(MenuItems, {\n              parentContainRef: parentRef,\n              parentRef: actionRef // for catching location(x, y) of MenuItems\n              ,\n\n              closeDropdown: closeDropdown,\n              openLeft: true\n            }, /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                channel === null || channel === void 0 ? void 0 : channel.removeOperators([member.userId]).then(function () {\n                  setOperators(operators.filter(function (_ref3) {\n                    var userId = _ref3.userId;\n                    return userId !== member.userId;\n                  }));\n                });\n                closeDropdown();\n              },\n              dataSbId: \"channel_setting_operator_context_menu_unregister_unregister_operator\"\n            }, stringSet.CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR));\n          }\n        });\n      }\n    });\n  }))));\n}\nfunction AddOperatorsModal(_ref) {\n  var onCancel = _ref.onCancel,\n    _onSubmit = _ref.onSubmit;\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    members = _useState6[0],\n    setMembers = _useState6[1];\n  var _useState7 = useState({}),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selectedMembers = _useState8[0],\n    setSelectedMembers = _useState8[1];\n  var _useState9 = useState(null),\n    _useState10 = _slicedToArray(_useState9, 2),\n    memberQuery = _useState10[0],\n    setMemberQuery = _useState10[1];\n  var _useContext2 = useContext(LocalizationContext),\n    stringSet = _useContext2.stringSet;\n  var _useChannelSettingsCo2 = useChannelSettingsContext(),\n    channel = _useChannelSettingsCo2.channel;\n  useEffect(function () {\n    var memberListQuery = channel === null || channel === void 0 ? void 0 : channel.createMemberListQuery({\n      operatorFilter: OperatorFilter.NONOPERATOR,\n      limit: 20\n    });\n    memberListQuery.next().then(function (members) {\n      setMembers(members);\n    });\n    setMemberQuery(memberListQuery);\n  }, []);\n  var selectedCount = Object.keys(selectedMembers).filter(function (m) {\n    return selectedMembers[m];\n  }).length;\n  return /*#__PURE__*/React__default.createElement(\"div\", null, /*#__PURE__*/React__default.createElement(Modal, {\n    isFullScreenOnMobile: true,\n    type: ButtonTypes.PRIMARY,\n    submitText: stringSet.CHANNEL_SETTING__OPERATORS__ADD_BUTTON,\n    onCancel: onCancel,\n    onSubmit: function onSubmit() {\n      var members = Object.keys(selectedMembers).filter(function (m) {\n        return selectedMembers[m];\n      });\n      channel === null || channel === void 0 ? void 0 : channel.addOperators(members).then(function () {\n        _onSubmit(members);\n      });\n    },\n    titleText: stringSet.CHANNEL_SETTING__MEMBERS__SELECT_TITLE\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    color: selectedCount > 0 ? LabelColors.PRIMARY : LabelColors.ONBACKGROUND_3,\n    type: LabelTypography.CAPTION_1\n  }, \"\".concat(selectedCount, \" \").concat(stringSet.MODAL__INVITE_MEMBER__SELECTED)), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-more-members__popup-scroll\",\n    onScroll: function onScroll(e) {\n      var hasNext = memberQuery.hasNext;\n      var target = e.target;\n      var fetchMore = target.clientHeight + target.scrollTop === target.scrollHeight;\n      if (hasNext && fetchMore) {\n        memberQuery.next().then(function (o) {\n          setMembers([].concat(_toConsumableArray(members), _toConsumableArray(o)));\n        });\n      }\n    }\n  }, members.map(function (member) {\n    return /*#__PURE__*/React__default.createElement(UserListItem, {\n      checkBox: true,\n      checked: selectedMembers[member.userId],\n      isOperator: (member === null || member === void 0 ? void 0 : member.role) === 'operator',\n      disabled: (member === null || member === void 0 ? void 0 : member.role) === 'operator',\n      onChange: function onChange(event) {\n        var modifiedSelectedMembers = _objectSpread2(_objectSpread2({}, selectedMembers), {}, _defineProperty({}, event.target.id, event.target.checked));\n        if (!event.target.checked) {\n          delete modifiedSelectedMembers[event.target.id];\n        }\n        setSelectedMembers(modifiedSelectedMembers);\n      },\n      user: member,\n      key: member.userId\n    });\n  }))));\n}\nvar OperatorList = function OperatorList() {\n  var _state$config;\n  var _useState11 = useState([]),\n    _useState12 = _slicedToArray(_useState11, 2),\n    operators = _useState12[0],\n    setOperators = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    showMore = _useState14[0],\n    setShowMore = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    showAdd = _useState16[0],\n    setShowAdd = _useState16[1];\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    hasNext = _useState18[0],\n    setHasNext = _useState18[1];\n  var _useContext3 = useContext(LocalizationContext),\n    stringSet = _useContext3.stringSet;\n  var state = useSendbirdStateContext();\n  var _useChannelSettingsCo3 = useChannelSettingsContext(),\n    channel = _useChannelSettingsCo3.channel;\n  var userId = state === null || state === void 0 ? void 0 : (_state$config = state.config) === null || _state$config === void 0 ? void 0 : _state$config.userId;\n  useEffect(function () {\n    if (!channel) {\n      setOperators([]);\n      return;\n    }\n    var operatorListQuery = channel === null || channel === void 0 ? void 0 : channel.createOperatorListQuery({\n      limit: 10\n    });\n    operatorListQuery.next().then(function (operators) {\n      setOperators(operators);\n      setHasNext(operatorListQuery.hasNext);\n    });\n  }, [channel]);\n  var refreshList = useCallback(function () {\n    if (!channel) {\n      setOperators([]);\n      return;\n    }\n    var operatorListQuery = channel === null || channel === void 0 ? void 0 : channel.createOperatorListQuery({\n      limit: 10\n    });\n    operatorListQuery.next().then(function (operators) {\n      setOperators(operators);\n      setHasNext(operatorListQuery.hasNext);\n    });\n  }, [channel]);\n  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, operators.map(function (operator) {\n    return /*#__PURE__*/React__default.createElement(UserListItem$1, {\n      key: operator.userId,\n      user: operator,\n      currentUser: userId,\n      action: function action(_ref) {\n        var actionRef = _ref.actionRef;\n        if ((operator === null || operator === void 0 ? void 0 : operator.userId) === userId) {\n          return null;\n        }\n        return /*#__PURE__*/React__default.createElement(ContextMenu, {\n          menuTrigger: function menuTrigger(toggleDropdown) {\n            return /*#__PURE__*/React__default.createElement(IconButton, {\n              className: \"sendbird-user-message__more__menu\",\n              width: \"32px\",\n              height: \"32px\",\n              onClick: toggleDropdown\n            }, /*#__PURE__*/React__default.createElement(Icon, {\n              width: \"24px\",\n              height: \"24px\",\n              type: IconTypes.MORE,\n              fillColor: IconColors.CONTENT_INVERSE\n            }));\n          },\n          menuItems: function menuItems(closeDropdown) {\n            return /*#__PURE__*/React__default.createElement(MenuItems, {\n              parentRef: actionRef,\n              closeDropdown: closeDropdown,\n              openLeft: true\n            }, /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                channel === null || channel === void 0 ? void 0 : channel.removeOperators([operator.userId]).then(function () {\n                  setOperators(operators.filter(function (_ref2) {\n                    var userId = _ref2.userId;\n                    return userId !== operator.userId;\n                  }));\n                });\n                closeDropdown();\n              },\n              dataSbId: \"channel_setting_operator_context_menu_unregister_operator\"\n            }, stringSet.CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR));\n          }\n        });\n      }\n    });\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-settings-accordion__footer\"\n  }, /*#__PURE__*/React__default.createElement(Button, {\n    type: ButtonTypes.SECONDARY,\n    size: ButtonSizes.SMALL,\n    onClick: function onClick() {\n      setShowAdd(true);\n    }\n  }, stringSet.CHANNEL_SETTING__OPERATORS__TITLE_ADD), hasNext && /*#__PURE__*/React__default.createElement(Button, {\n    type: ButtonTypes.SECONDARY,\n    size: ButtonSizes.SMALL,\n    onClick: function onClick() {\n      setShowMore(true);\n    }\n  }, stringSet.CHANNEL_SETTING__OPERATORS__TITLE_ALL)), showMore && /*#__PURE__*/React__default.createElement(OperatorsModal, {\n    onCancel: function onCancel() {\n      setShowMore(false);\n      refreshList();\n    }\n  }), showAdd && /*#__PURE__*/React__default.createElement(AddOperatorsModal, {\n    onCancel: function onCancel() {\n      return setShowAdd(false);\n    },\n    onSubmit: function onSubmit() {\n      refreshList();\n      setShowAdd(false);\n    }\n  }));\n};\nfunction BannedUsersModal(_ref) {\n  var _onCancel = _ref.onCancel;\n  var _useState19 = useState([]),\n    _useState20 = _slicedToArray(_useState19, 2),\n    members = _useState20[0],\n    setMembers = _useState20[1];\n  var _useState21 = useState(null),\n    _useState22 = _slicedToArray(_useState21, 2),\n    memberQuery = _useState22[0],\n    setMemberQuery = _useState22[1];\n  var _useChannelSettingsCo4 = useChannelSettingsContext(),\n    channel = _useChannelSettingsCo4.channel;\n  var _useLocalization = useLocalization(),\n    stringSet = _useLocalization.stringSet;\n  useEffect(function () {\n    var bannedUserListQuery = channel === null || channel === void 0 ? void 0 : channel.createBannedUserListQuery();\n    bannedUserListQuery.next().then(function (users) {\n      setMembers(users);\n    });\n    setMemberQuery(bannedUserListQuery);\n  }, []);\n  return /*#__PURE__*/React__default.createElement(\"div\", null, /*#__PURE__*/React__default.createElement(Modal, {\n    isFullScreenOnMobile: true,\n    hideFooter: true,\n    onCancel: function onCancel() {\n      return _onCancel();\n    },\n    onSubmit: noop,\n    titleText: stringSet.CHANNEL_SETTING__MUTED_MEMBERS__TITLE\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-more-members__popup-scroll\",\n    onScroll: function onScroll(e) {\n      var hasNext = memberQuery.hasNext;\n      var target = e.target;\n      var fetchMore = target.clientHeight + target.scrollTop === target.scrollHeight;\n      if (hasNext && fetchMore) {\n        memberQuery.next().then(function (o) {\n          setMembers([].concat(_toConsumableArray(members), _toConsumableArray(o)));\n        });\n      }\n    }\n  }, members.map(function (member) {\n    return /*#__PURE__*/React__default.createElement(UserListItem, {\n      user: member,\n      key: member.userId,\n      action: function action(_ref2) {\n        var parentRef = _ref2.parentRef,\n          actionRef = _ref2.actionRef;\n        return /*#__PURE__*/React__default.createElement(ContextMenu, {\n          menuTrigger: function menuTrigger(toggleDropdown) {\n            return /*#__PURE__*/React__default.createElement(IconButton, {\n              className: \"sendbird-user-message__more__menu\",\n              width: \"32px\",\n              height: \"32px\",\n              onClick: toggleDropdown\n            }, /*#__PURE__*/React__default.createElement(Icon, {\n              width: \"24px\",\n              height: \"24px\",\n              type: IconTypes.MORE,\n              fillColor: IconColors.CONTENT_INVERSE\n            }));\n          },\n          menuItems: function menuItems(closeDropdown) {\n            return /*#__PURE__*/React__default.createElement(MenuItems, {\n              parentContainRef: parentRef,\n              parentRef: actionRef // for catching location(x, y) of MenuItems\n              ,\n\n              closeDropdown: closeDropdown,\n              openLeft: true\n            }, /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                channel === null || channel === void 0 ? void 0 : channel.unbanUser(member).then(function () {\n                  closeDropdown();\n                  setMembers(members.filter(function (m) {\n                    return m.userId !== member.userId;\n                  }));\n                });\n              },\n              dataSbId: \"channel_setting_banned_user_context_menu_ban\"\n            }, stringSet.CHANNEL_SETTING__MODERATION__BAN));\n          }\n        });\n      }\n    });\n  }))));\n}\nvar BannedMemberList = function BannedMemberList() {\n  var _useState23 = useState([]),\n    _useState24 = _slicedToArray(_useState23, 2),\n    members = _useState24[0],\n    setMembers = _useState24[1];\n  var _useState25 = useState(false),\n    _useState26 = _slicedToArray(_useState25, 2),\n    hasNext = _useState26[0],\n    setHasNext = _useState26[1];\n  var _useState27 = useState(false),\n    _useState28 = _slicedToArray(_useState27, 2),\n    showModal = _useState28[0],\n    setShowModal = _useState28[1];\n  var _useContext4 = useContext(LocalizationContext),\n    stringSet = _useContext4.stringSet;\n  var _useChannelSettingsCo5 = useChannelSettingsContext(),\n    channel = _useChannelSettingsCo5.channel;\n  var bannedUserListQueryParams = {\n    limit: 10\n  };\n  useEffect(function () {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n    var bannedUserListQuery = channel === null || channel === void 0 ? void 0 : channel.createBannedUserListQuery(bannedUserListQueryParams);\n    bannedUserListQuery.next().then(function (users) {\n      setMembers(users);\n      setHasNext(bannedUserListQuery.hasNext);\n    });\n  }, [channel]);\n  var refreshList = useCallback(function () {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n    var bannedUserListQuery = channel === null || channel === void 0 ? void 0 : channel.createBannedUserListQuery(bannedUserListQueryParams);\n    bannedUserListQuery.next().then(function (users) {\n      setMembers(users);\n      setHasNext(bannedUserListQuery.hasNext);\n    });\n  }, [channel]);\n  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, members.map(function (member) {\n    return /*#__PURE__*/React__default.createElement(UserListItem$1, {\n      key: member.userId,\n      user: member,\n      action: function action(_ref) {\n        var actionRef = _ref.actionRef,\n          parentRef = _ref.parentRef;\n        return /*#__PURE__*/React__default.createElement(ContextMenu, {\n          menuTrigger: function menuTrigger(toggleDropdown) {\n            return /*#__PURE__*/React__default.createElement(IconButton, {\n              className: \"sendbird-user-message__more__menu\",\n              width: \"32px\",\n              height: \"32px\",\n              onClick: toggleDropdown\n            }, /*#__PURE__*/React__default.createElement(Icon, {\n              width: \"24px\",\n              height: \"24px\",\n              type: IconTypes.MORE,\n              fillColor: IconColors.CONTENT_INVERSE\n            }));\n          },\n          menuItems: function menuItems(closeDropdown) {\n            return /*#__PURE__*/React__default.createElement(MenuItems, {\n              parentContainRef: parentRef,\n              parentRef: actionRef // for catching location(x, y) of MenuItems\n              ,\n\n              closeDropdown: closeDropdown,\n              openLeft: true\n            }, /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                channel === null || channel === void 0 ? void 0 : channel.unbanUser(member).then(function () {\n                  closeDropdown();\n                  refreshList();\n                });\n              },\n              dataSbId: \"channel_setting_banned_user_context_menu_unban\"\n            }, stringSet.CHANNEL_SETTING__MODERATION__UNBAN));\n          }\n        });\n      }\n    });\n  }), members && members.length === 0 && /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-channel-settings__empty-list\",\n    type: LabelTypography.SUBTITLE_2,\n    color: LabelColors.ONBACKGROUND_3\n  }, stringSet.CHANNEL_SETTING__MODERATION__EMPTY_BAN), hasNext && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-settings-accordion__footer\"\n  }, /*#__PURE__*/React__default.createElement(Button, {\n    type: ButtonTypes.SECONDARY,\n    size: ButtonSizes.SMALL,\n    onClick: function onClick() {\n      setShowModal(true);\n    }\n  }, stringSet.CHANNEL_SETTING__MODERATION__ALL_BAN)), showModal && /*#__PURE__*/React__default.createElement(BannedUsersModal, {\n    onCancel: function onCancel() {\n      setShowModal(false);\n      refreshList();\n    }\n  }));\n};\nfunction MutedMembersModal(_ref) {\n  var _state$config;\n  var _onCancel2 = _ref.onCancel;\n  var _useState29 = useState([]),\n    _useState30 = _slicedToArray(_useState29, 2),\n    members = _useState30[0],\n    setMembers = _useState30[1];\n  var _useState31 = useState(null),\n    _useState32 = _slicedToArray(_useState31, 2),\n    memberQuery = _useState32[0],\n    setMemberQuery = _useState32[1];\n  var _useChannelSettingsCo6 = useChannelSettingsContext(),\n    channel = _useChannelSettingsCo6.channel;\n  var state = useSendbirdStateContext();\n  var currentUser = state === null || state === void 0 ? void 0 : (_state$config = state.config) === null || _state$config === void 0 ? void 0 : _state$config.userId;\n  var _useLocalization2 = useLocalization(),\n    stringSet = _useLocalization2.stringSet;\n  useEffect(function () {\n    var memberUserListQuery = channel === null || channel === void 0 ? void 0 : channel.createMemberListQuery({\n      limit: 10,\n      // @ts-ignore\n      mutedMemberFilter: 'muted'\n    });\n    memberUserListQuery.next().then(function (members) {\n      setMembers(members);\n    });\n    setMemberQuery(memberUserListQuery);\n  }, []);\n  return /*#__PURE__*/React__default.createElement(\"div\", null, /*#__PURE__*/React__default.createElement(Modal, {\n    isFullScreenOnMobile: true,\n    hideFooter: true,\n    onCancel: function onCancel() {\n      return _onCancel2();\n    },\n    onSubmit: noop,\n    titleText: stringSet.CHANNEL_SETTING__MUTED_MEMBERS__TITLE\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-more-members__popup-scroll\",\n    onScroll: function onScroll(e) {\n      var hasNext = memberQuery.hasNext;\n      var target = e.target;\n      var fetchMore = target.clientHeight + target.scrollTop === target.scrollHeight;\n      if (hasNext && fetchMore) {\n        memberQuery.next().then(function (o) {\n          setMembers([].concat(_toConsumableArray(members), _toConsumableArray(o)));\n        });\n      }\n    }\n  }, members.map(function (member) {\n    return /*#__PURE__*/React__default.createElement(UserListItem, {\n      currentUser: currentUser,\n      user: member,\n      key: member.userId,\n      action: function action(_ref2) {\n        var actionRef = _ref2.actionRef,\n          parentRef = _ref2.parentRef;\n        return /*#__PURE__*/React__default.createElement(ContextMenu, {\n          menuTrigger: function menuTrigger(toggleDropdown) {\n            return /*#__PURE__*/React__default.createElement(IconButton, {\n              className: \"sendbird-user-message__more__menu\",\n              width: \"32px\",\n              height: \"32px\",\n              onClick: toggleDropdown\n            }, /*#__PURE__*/React__default.createElement(Icon, {\n              width: \"24px\",\n              height: \"24px\",\n              type: IconTypes.MORE,\n              fillColor: IconColors.CONTENT_INVERSE\n            }));\n          },\n          menuItems: function menuItems(closeDropdown) {\n            return /*#__PURE__*/React__default.createElement(MenuItems, {\n              parentContainRef: parentRef,\n              parentRef: actionRef // for catching location(x, y) of MenuItems\n              ,\n\n              closeDropdown: closeDropdown,\n              openLeft: true\n            }, /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                channel === null || channel === void 0 ? void 0 : channel.unmuteUser(member).then(function () {\n                  closeDropdown();\n                  setMembers(members.filter(function (m) {\n                    return m.userId !== member.userId;\n                  }));\n                });\n              },\n              dataSbId: \"channel_setting_muted_member_context_menu_unmute\"\n            }, stringSet.CHANNEL_SETTING__MODERATION__UNMUTE));\n          }\n        });\n      }\n    });\n  }))));\n}\nvar MutedMemberList = function MutedMemberList() {\n  var _state$config;\n  var _useState33 = useState([]),\n    _useState34 = _slicedToArray(_useState33, 2),\n    members = _useState34[0],\n    setMembers = _useState34[1];\n  var _useState35 = useState(false),\n    _useState36 = _slicedToArray(_useState35, 2),\n    hasNext = _useState36[0],\n    setHasNext = _useState36[1];\n  var _useState37 = useState(false),\n    _useState38 = _slicedToArray(_useState37, 2),\n    showModal = _useState38[0],\n    setShowModal = _useState38[1];\n  var _useLocalization3 = useLocalization(),\n    stringSet = _useLocalization3.stringSet;\n  var _useChannelSettingsCo7 = useChannelSettingsContext(),\n    channel = _useChannelSettingsCo7.channel;\n  var state = useSendbirdStateContext();\n  var currentUser = state === null || state === void 0 ? void 0 : (_state$config = state.config) === null || _state$config === void 0 ? void 0 : _state$config.userId;\n  useEffect(function () {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n    var memberUserListQuery = channel === null || channel === void 0 ? void 0 : channel.createMemberListQuery({\n      limit: 10,\n      // @ts-ignore\n      mutedMemberFilter: 'muted'\n    });\n    memberUserListQuery.next().then(function (members) {\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n  var refreshList = useCallback(function () {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n    var memberUserListQuery = channel === null || channel === void 0 ? void 0 : channel.createMemberListQuery({\n      limit: 10,\n      // @ts-ignore\n      mutedMemberFilter: 'muted'\n    });\n    memberUserListQuery.next().then(function (members) {\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, members.map(function (member) {\n    return /*#__PURE__*/React__default.createElement(UserListItem$1, {\n      key: member.userId,\n      user: member,\n      currentUser: currentUser,\n      action: function action(_ref) {\n        var actionRef = _ref.actionRef,\n          parentRef = _ref.parentRef;\n        return /*#__PURE__*/React__default.createElement(ContextMenu, {\n          menuTrigger: function menuTrigger(toggleDropdown) {\n            return /*#__PURE__*/React__default.createElement(IconButton, {\n              className: \"sendbird-user-message__more__menu\",\n              width: \"32px\",\n              height: \"32px\",\n              onClick: toggleDropdown\n            }, /*#__PURE__*/React__default.createElement(Icon, {\n              width: \"24px\",\n              height: \"24px\",\n              type: IconTypes.MORE,\n              fillColor: IconColors.CONTENT_INVERSE\n            }));\n          },\n          menuItems: function menuItems(closeDropdown) {\n            return /*#__PURE__*/React__default.createElement(MenuItems, {\n              closeDropdown: closeDropdown,\n              openLeft: true,\n              parentContainRef: parentRef,\n              parentRef: actionRef // for catching location(x, y) of MenuItems\n            }, /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                channel === null || channel === void 0 ? void 0 : channel.unmuteUser(member).then(function () {\n                  refreshList();\n                  closeDropdown();\n                });\n              },\n              dataSbId: \"channel_setting_muted_member_context_menu_unmute\"\n            }, (stringSet === null || stringSet === void 0 ? void 0 : stringSet.CHANNEL_SETTING__UNMUTE) || stringSet.CHANNEL_SETTING__MODERATION__UNMUTE));\n          }\n        });\n      }\n    });\n  }), members && members.length === 0 && /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-channel-settings__empty-list\",\n    type: LabelTypography.SUBTITLE_2,\n    color: LabelColors.ONBACKGROUND_3\n  }, stringSet.CHANNEL_SETTING__NO_UNMUTED), hasNext && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-settings-accordion__footer\"\n  }, /*#__PURE__*/React__default.createElement(Button, {\n    type: ButtonTypes.SECONDARY,\n    size: ButtonSizes.SMALL,\n    onClick: function onClick() {\n      setShowModal(true);\n    }\n  }, stringSet.CHANNEL_SETTING__MUTED_MEMBERS__TITLE_ALL)), showModal && /*#__PURE__*/React__default.createElement(MutedMembersModal, {\n    onCancel: function onCancel() {\n      setShowModal(false);\n      refreshList();\n    }\n  }));\n};\nvar kFormatter = function kFormatter(num) {\n  return Math.abs(num) > 999 ? \"\".concat((Math.abs(num) / 1000).toFixed(1), \"K\") : num;\n};\nfunction AdminPannel() {\n  var _useState39 = useState(false),\n    _useState40 = _slicedToArray(_useState39, 2),\n    frozen = _useState40[0],\n    setFrozen = _useState40[1];\n  var _useContext5 = useContext(LocalizationContext),\n    stringSet = _useContext5.stringSet;\n  var _useChannelSettingsCo8 = useChannelSettingsContext(),\n    channel = _useChannelSettingsCo8.channel;\n\n  // work around for\n  // https://sendbird.slack.com/archives/G01290GCDCN/p1595922832000900\n  // SDK bug - after frozen/unfrozen myRole becomes \"none\"\n  useEffect(function () {\n    setFrozen(channel === null || channel === void 0 ? void 0 : channel.isFrozen);\n  }, [channel]);\n  return /*#__PURE__*/React__default.createElement(AccordionGroup, {\n    className: \"sendbird-channel-settings__operator\"\n  }, /*#__PURE__*/React__default.createElement(Accordion, {\n    className: \"sendbird-channel-settings__operators-list\",\n    id: \"operators\",\n    renderTitle: function renderTitle() {\n      return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(Icon, {\n        type: IconTypes.OPERATOR,\n        fillColor: IconColors.PRIMARY,\n        width: 24,\n        height: 24,\n        className: \"sendbird-channel-settings__accordion-icon\"\n      }), /*#__PURE__*/React__default.createElement(Label, {\n        type: LabelTypography.SUBTITLE_1,\n        color: LabelColors.ONBACKGROUND_1\n      }, stringSet.CHANNEL_SETTING__OPERATORS__TITLE));\n    },\n    renderContent: function renderContent() {\n      return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(OperatorList, null));\n    }\n  }), /*#__PURE__*/React__default.createElement(Accordion, {\n    className: \"sendbird-channel-settings__members-list\",\n    id: \"members\",\n    renderTitle: function renderTitle() {\n      return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(Icon, {\n        type: IconTypes.MEMBERS,\n        fillColor: IconColors.PRIMARY,\n        width: 24,\n        height: 24,\n        className: \"sendbird-channel-settings__accordion-icon\"\n      }), /*#__PURE__*/React__default.createElement(Label, {\n        type: LabelTypography.SUBTITLE_1,\n        color: LabelColors.ONBACKGROUND_1\n      }, stringSet.CHANNEL_SETTING__MEMBERS__TITLE), /*#__PURE__*/React__default.createElement(Badge, {\n        count: kFormatter(channel === null || channel === void 0 ? void 0 : channel.memberCount)\n      }));\n    },\n    renderContent: function renderContent() {\n      return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(MemberList, null));\n    }\n  }),\n  // No muted members in broadcast channel\n  !(channel !== null && channel !== void 0 && channel.isBroadcast) && /*#__PURE__*/React__default.createElement(Accordion, {\n    id: \"mutedMembers\",\n    className: \"sendbird-channel-settings__muted-members-list\",\n    renderTitle: function renderTitle() {\n      return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(Icon, {\n        type: IconTypes.MUTE,\n        fillColor: IconColors.PRIMARY,\n        width: 24,\n        height: 24,\n        className: \"sendbird-channel-settings__accordion-icon\"\n      }), /*#__PURE__*/React__default.createElement(Label, {\n        type: LabelTypography.SUBTITLE_1,\n        color: LabelColors.ONBACKGROUND_1\n      }, stringSet.CHANNEL_SETTING__MUTED_MEMBERS__TITLE));\n    },\n    renderContent: function renderContent() {\n      return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(MutedMemberList, null));\n    }\n  }), /*#__PURE__*/React__default.createElement(Accordion, {\n    className: \"sendbird-channel-settings__banned-members-list\",\n    id: \"bannedUsers\",\n    renderTitle: function renderTitle() {\n      return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(Icon, {\n        type: IconTypes.BAN,\n        fillColor: IconColors.PRIMARY,\n        width: 24,\n        height: 24,\n        className: \"sendbird-channel-settings__accordion-icon\"\n      }), /*#__PURE__*/React__default.createElement(Label, {\n        type: LabelTypography.SUBTITLE_1,\n        color: LabelColors.ONBACKGROUND_1\n      }, stringSet.CHANNEL_SETTING__BANNED_MEMBERS__TITLE));\n    },\n    renderContent: function renderContent() {\n      return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(BannedMemberList, null));\n    }\n  }),\n  // cannot freeze broadcast channel\n  !(channel !== null && channel !== void 0 && channel.isBroadcast) && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-settings__freeze\"\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    type: IconTypes.FREEZE,\n    fillColor: IconColors.PRIMARY,\n    width: 24,\n    height: 24,\n    className: \"sendbird-channel-settings__accordion-icon\"\n  }), /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.SUBTITLE_1,\n    color: LabelColors.ONBACKGROUND_1\n  }, stringSet.CHANNEL_SETTING__FREEZE_CHANNEL), /*#__PURE__*/React__default.createElement(Toggle, {\n    className: \"sendbird-channel-settings__frozen-icon\",\n    checked: frozen,\n    onChange: function onChange() {\n      if (frozen) {\n        channel === null || channel === void 0 ? void 0 : channel.unfreeze().then(function () {\n          setFrozen(function (prev) {\n            return !prev;\n          });\n        });\n      } else {\n        channel === null || channel === void 0 ? void 0 : channel.freeze().then(function () {\n          setFrozen(function (prev) {\n            return !prev;\n          });\n        });\n      }\n    }\n  })));\n}\nexport { AdminPannel as default };","map":{"version":3,"mappings":"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","names":["OperatorsModal","onCancel","_ref","useState","operators","setOperators","operatorQuery","setOperatorQuery","useChannelSettingsContext","channel","state","useSendbirdStateContext","currentUserId","config","_state$config","userId","useContext","LocalizationContext","stringSet","useEffect","operatorListQuery","createOperatorListQuery","limit","next","then","React","Modal","isFullScreenOnMobile","hideFooter","titleText","CHANNEL_SETTING__OPERATORS__TITLE_ALL","className","onScroll","e","hasNext","target","fetchMore","clientHeight","scrollTop","scrollHeight","o","map","member","UserListItem","currentUser","user","key","action","_ref2","parentRef","actionRef","ContextMenu","menuTrigger","toggleDropdown","IconButton","width","height","onClick","Icon","type","IconTypes","MORE","fillColor","IconColors","CONTENT_INVERSE","menuItems","closeDropdown","MenuItems","parentContainRef","openLeft","MenuItem","removeOperators","filter","_ref3","dataSbId","CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR","AddOperatorsModal","onSubmit","members","setMembers","selectedMembers","setSelectedMembers","memberQuery","setMemberQuery","memberListQuery","createMemberListQuery","operatorFilter","OperatorFilter","NONOPERATOR","selectedCount","Object","keys","m","length","ButtonTypes","PRIMARY","submitText","CHANNEL_SETTING__OPERATORS__ADD_BUTTON","addOperators","CHANNEL_SETTING__MEMBERS__SELECT_TITLE","Label","color","LabelColors","ONBACKGROUND_3","LabelTypography","CAPTION_1","MODAL__INVITE_MEMBER__SELECTED","checkBox","checked","isOperator","role","disabled","onChange","event","modifiedSelectedMembers","id","OperatorList","showMore","setShowMore","showAdd","setShowAdd","setHasNext","refreshList","useCallback","operator","Button","SECONDARY","size","ButtonSizes","SMALL","CHANNEL_SETTING__OPERATORS__TITLE_ADD","BannedUsersModal","useLocalization","bannedUserListQuery","createBannedUserListQuery","users","noop","CHANNEL_SETTING__MUTED_MEMBERS__TITLE","unbanUser","CHANNEL_SETTING__MODERATION__BAN","BannedMemberList","showModal","setShowModal","bannedUserListQueryParams","CHANNEL_SETTING__MODERATION__UNBAN","SUBTITLE_2","CHANNEL_SETTING__MODERATION__EMPTY_BAN","CHANNEL_SETTING__MODERATION__ALL_BAN","MutedMembersModal","memberUserListQuery","mutedMemberFilter","unmuteUser","CHANNEL_SETTING__MODERATION__UNMUTE","MutedMemberList","CHANNEL_SETTING__UNMUTE","CHANNEL_SETTING__NO_UNMUTED","CHANNEL_SETTING__MUTED_MEMBERS__TITLE_ALL","kFormatter","num","Math","abs","toFixed","AdminPannel","frozen","setFrozen","isFrozen","AccordionGroup","Accordion","renderTitle","OPERATOR","SUBTITLE_1","ONBACKGROUND_1","CHANNEL_SETTING__OPERATORS__TITLE","renderContent","MEMBERS","CHANNEL_SETTING__MEMBERS__TITLE","Badge","count","memberCount","MemberList","isBroadcast","MUTE","BAN","CHANNEL_SETTING__BANNED_MEMBERS__TITLE","BannedUserList","FREEZE","CHANNEL_SETTING__FREEZE_CHANNEL","Toggle","unfreeze","prev","freeze"],"sources":["C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\modules\\ChannelSettings\\components\\ModerationPanel\\OperatorsModal.tsx","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\modules\\ChannelSettings\\components\\ModerationPanel\\AddOperatorsModal.tsx","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\modules\\ChannelSettings\\components\\ModerationPanel\\OperatorList.tsx","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\modules\\ChannelSettings\\components\\ModerationPanel\\BannedUsersModal.tsx","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\modules\\ChannelSettings\\components\\ModerationPanel\\BannedUserList.tsx","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\modules\\ChannelSettings\\components\\ModerationPanel\\MutedMembersModal.tsx","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\modules\\ChannelSettings\\components\\ModerationPanel\\MutedMemberList.tsx","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\modules\\ChannelSettings\\components\\ModerationPanel\\index.tsx"],"sourcesContent":["import React, {\n  ReactElement,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\n\ninterface Props { onCancel?(): void }\n\nexport default function OperatorsModal({ onCancel }: Props): ReactElement {\n  const [operators, setOperators] = useState([]);\n  const [operatorQuery, setOperatorQuery] = useState(null);\n\n  const { channel } = useChannelSettingsContext();\n  const state = useSendbirdStateContext();\n  const currentUserId = state?.config?.userId;\n  const { stringSet } = useContext(LocalizationContext);\n\n  useEffect(() => {\n    const operatorListQuery = channel?.createOperatorListQuery({\n      limit: 20,\n    });\n    operatorListQuery.next().then((operators) => {\n      setOperators(operators);\n    });\n    setOperatorQuery(operatorListQuery);\n  }, []);\n  return (\n    <div>\n      <Modal\n        isFullScreenOnMobile\n        hideFooter\n        titleText={stringSet.CHANNEL_SETTING__OPERATORS__TITLE_ALL}\n        onCancel={onCancel}\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = operatorQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              operatorQuery.next().then((o) => {\n                setOperators([\n                  ...operators,\n                  ...o,\n                ]);\n              });\n            }\n          }}\n        >\n          {operators.map((member) => (\n            <UserListItem\n              currentUser={currentUserId}\n              user={member}\n              key={member.userId}\n              action={({ parentRef, actionRef }) => (\n                member?.userId !== currentUserId && (\n                  <ContextMenu\n                    menuTrigger={(toggleDropdown) => (\n                      <IconButton\n                        className=\"sendbird-user-message__more__menu\"\n                        width=\"32px\"\n                        height=\"32px\"\n                        onClick={toggleDropdown}\n                      >\n                        <Icon\n                          width=\"24px\"\n                          height=\"24px\"\n                          type={IconTypes.MORE}\n                          fillColor={IconColors.CONTENT_INVERSE}\n                        />\n                      </IconButton>\n                    )}\n                    menuItems={(closeDropdown) => (\n                      <MenuItems\n                        parentContainRef={parentRef}\n                        parentRef={actionRef} // for catching location(x, y) of MenuItems\n                        closeDropdown={closeDropdown}\n                        openLeft\n                      >\n                        <MenuItem\n                          onClick={() => {\n                            channel?.removeOperators([member.userId]).then(() => {\n                              setOperators(operators.filter(({ userId }) => {\n                                return userId !== member.userId;\n                              }));\n                            });\n                            closeDropdown();\n                          }}\n                          dataSbId=\"channel_setting_operator_context_menu_unregister_unregister_operator\"\n                        >\n                          {stringSet.CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR}\n                        </MenuItem>\n                      </MenuItems>\n                    )}\n                  />\n                )\n              )}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useContext,\n} from 'react';\n\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport Modal from '../../../../ui/Modal';\nimport Label, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport { ButtonTypes } from '../../../../ui/Button';\nimport UserListItem from '../../../../ui/UserListItem';\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\nimport { OperatorFilter } from '@sendbird/chat/groupChannel';\n\ninterface Props {\n  onCancel(): void;\n  onSubmit(members: Array<string>): void;\n}\n\nexport default function AddOperatorsModal({\n  onCancel,\n  onSubmit,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [selectedMembers, setSelectedMembers] = useState({});\n  const [memberQuery, setMemberQuery] = useState(null);\n  const { stringSet } = useContext(LocalizationContext);\n\n  const { channel } = useChannelSettingsContext();\n\n  useEffect(() => {\n    const memberListQuery = channel?.createMemberListQuery({\n      operatorFilter: OperatorFilter.NONOPERATOR,\n      limit: 20,\n    });\n    memberListQuery.next().then((members) => {\n      setMembers(members);\n    });\n    setMemberQuery(memberListQuery);\n  }, []);\n\n  const selectedCount = Object.keys(selectedMembers).filter((m) => selectedMembers[m]).length;\n  return (\n    <div>\n      <Modal\n        isFullScreenOnMobile\n        type={ButtonTypes.PRIMARY}\n        submitText={stringSet.CHANNEL_SETTING__OPERATORS__ADD_BUTTON}\n        onCancel={onCancel}\n        onSubmit={() => {\n          const members = Object.keys(selectedMembers).filter((m) => selectedMembers[m]);\n          channel?.addOperators(members).then(() => {\n            onSubmit(members);\n          });\n        }}\n        titleText={stringSet.CHANNEL_SETTING__MEMBERS__SELECT_TITLE}\n      >\n        <Label\n          color={(selectedCount > 0) ? LabelColors.PRIMARY : LabelColors.ONBACKGROUND_3}\n          type={LabelTypography.CAPTION_1}\n        >\n          {`${selectedCount} ${stringSet.MODAL__INVITE_MEMBER__SELECTED}`}\n        </Label>\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n            if (hasNext && fetchMore) {\n              memberQuery.next().then((o) => {\n                setMembers([\n                  ...members,\n                  ...o,\n                ]);\n              });\n            }\n          }}\n        >\n          {\n            members.map((member) => (\n              <UserListItem\n                checkBox\n                checked={selectedMembers[member.userId]}\n                isOperator={member?.role === 'operator'}\n                disabled={member?.role === 'operator'}\n                onChange={\n                  (event) => {\n                    const modifiedSelectedMembers = {\n                      ...selectedMembers,\n                      [event.target.id]: event.target.checked,\n                    };\n                    if (!event.target.checked) {\n                      delete modifiedSelectedMembers[event.target.id];\n                    }\n                    setSelectedMembers(modifiedSelectedMembers);\n                  }\n                }\n                user={member}\n                key={member.userId}\n              />\n            ))\n          }\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n  useContext,\n} from 'react';\n\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport UserListItem from '../UserListItem';\nimport OperatorsModal from './OperatorsModal';\nimport AddOperatorsModal from './AddOperatorsModal';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\n\nexport const OperatorList = (): ReactElement => {\n  const [operators, setOperators] = useState([]);\n  const [showMore, setShowMore] = useState(false);\n  const [showAdd, setShowAdd] = useState(false);\n  const [hasNext, setHasNext] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n\n  const state = useSendbirdStateContext();\n  const { channel } = useChannelSettingsContext();\n\n  const userId = state?.config?.userId;\n\n  useEffect(() => {\n    if (!channel) {\n      setOperators([]);\n      return;\n    }\n\n    const operatorListQuery = channel?.createOperatorListQuery({\n      limit: 10,\n    });\n    operatorListQuery.next().then((operators) => {\n      setOperators(operators);\n      setHasNext(operatorListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refreshList = useCallback(\n    () => {\n      if (!channel) {\n        setOperators([]);\n        return;\n      }\n      const operatorListQuery = channel?.createOperatorListQuery({\n        limit: 10,\n      });\n      operatorListQuery.next().then((operators) => {\n        setOperators(operators);\n        setHasNext(operatorListQuery.hasNext);\n      });\n    },\n    [channel],\n  );\n\n  return (\n    <>\n      {\n        operators.map((operator) => (\n          <UserListItem\n            key={operator.userId}\n            user={operator}\n            currentUser={userId}\n            action={({ actionRef }) => {\n              if (operator?.userId === userId) {\n                return null;\n              }\n              return (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentRef={actionRef}\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel?.removeOperators([operator.userId]).then(() => {\n                            setOperators(operators.filter(({ userId }) => (\n                              userId !== operator.userId\n                            )));\n                          });\n                          closeDropdown();\n                        }}\n                        dataSbId=\"channel_setting_operator_context_menu_unregister_operator\"\n                      >\n                        {stringSet.CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR}\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              );\n            }}\n          />\n        ))\n      }\n      <div\n        className=\"sendbird-channel-settings-accordion__footer\"\n      >\n        <Button\n          type={ButtonTypes.SECONDARY}\n          size={ButtonSizes.SMALL}\n          onClick={() => {\n            setShowAdd(true);\n          }}\n        >\n          {stringSet.CHANNEL_SETTING__OPERATORS__TITLE_ADD}\n        </Button>\n        {\n          hasNext && (\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowMore(true);\n              }}\n            >\n              {stringSet.CHANNEL_SETTING__OPERATORS__TITLE_ALL}\n            </Button>\n          )\n        }\n      </div>\n      {\n        showMore && (\n          <OperatorsModal onCancel={() => {\n            setShowMore(false);\n            refreshList();\n          }} />\n        )\n      }\n      {\n        showAdd && (\n          <AddOperatorsModal\n            onCancel={() => setShowAdd(false)}\n            onSubmit={() => {\n              refreshList();\n              setShowAdd(false);\n            }}\n          />\n        )\n      }\n    </>\n  );\n};\n\nexport default OperatorList;\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport { noop } from '../../../../utils/utils';\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\nimport { useLocalization } from '../../../../lib/LocalizationContext';\n\ninterface Props {\n  onCancel(): void;\n}\n\nexport default function BannedUsersModal({\n  onCancel,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [memberQuery, setMemberQuery] = useState(null);\n  const { channel } = useChannelSettingsContext();\n  const { stringSet } = useLocalization();\n\n  useEffect(() => {\n    const bannedUserListQuery = channel?.createBannedUserListQuery();\n    bannedUserListQuery.next().then((users) => {\n      setMembers(users);\n    });\n    setMemberQuery(bannedUserListQuery);\n  }, []);\n  return (\n    <div>\n      <Modal\n        isFullScreenOnMobile\n        hideFooter\n        onCancel={() => onCancel()}\n        onSubmit={noop}\n        titleText={stringSet.CHANNEL_SETTING__MUTED_MEMBERS__TITLE}\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              memberQuery.next().then((o) => {\n                setMembers([\n                  ...members,\n                  ...o,\n                ]);\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              user={member}\n              key={member.userId}\n              action={({ parentRef, actionRef }) => (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel?.unbanUser(member).then(() => {\n                            closeDropdown();\n                            setMembers(members.filter(m => {\n                              return (m.userId !== member.userId);\n                            }));\n                          });\n                        }}\n                        dataSbId=\"channel_setting_banned_user_context_menu_ban\"\n                      >\n                        {stringSet.CHANNEL_SETTING__MODERATION__BAN}\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              )\n              }\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n  useContext,\n} from 'react';\nimport { BannedUserListQueryParams } from '@sendbird/chat';\n\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport\nLabel, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport UserListItem from '../UserListItem';\nimport BannedUsersModal from './BannedUsersModal';\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\n\nexport const BannedMemberList = (): ReactElement => {\n  const [members, setMembers] = useState([]);\n  const [hasNext, setHasNext] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n  const { stringSet } = useContext(LocalizationContext);\n  const { channel } = useChannelSettingsContext();\n\n  const bannedUserListQueryParams: BannedUserListQueryParams = { limit: 10 };\n  useEffect(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n    const bannedUserListQuery = channel?.createBannedUserListQuery(bannedUserListQueryParams);\n    bannedUserListQuery.next().then((users) => {\n      setMembers(users);\n      setHasNext(bannedUserListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refreshList = useCallback(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n    const bannedUserListQuery = channel?.createBannedUserListQuery(bannedUserListQueryParams);\n    bannedUserListQuery.next().then((users) => {\n      setMembers(users);\n      setHasNext(bannedUserListQuery.hasNext);\n    });\n  }, [channel]);\n  return (\n    <>\n      {\n        members.map((member) => (\n          <UserListItem\n            key={member.userId}\n            user={member}\n            action={({ actionRef, parentRef }) => {\n              return (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel?.unbanUser(member).then(() => {\n                            closeDropdown();\n                            refreshList();\n                          });\n                        }}\n                        dataSbId=\"channel_setting_banned_user_context_menu_unban\"\n                      >\n                        {stringSet.CHANNEL_SETTING__MODERATION__UNBAN}\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              );\n            }}\n          />\n        ))\n      }\n      {\n        members && members.length === 0 && (\n          <Label\n            className=\"sendbird-channel-settings__empty-list\"\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_3}\n          >\n            {stringSet.CHANNEL_SETTING__MODERATION__EMPTY_BAN}\n          </Label>\n        )\n      }\n      {\n        hasNext && (\n          <div\n            className=\"sendbird-channel-settings-accordion__footer\"\n          >\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowModal(true);\n              }}\n            >\n              {stringSet.CHANNEL_SETTING__MODERATION__ALL_BAN}\n            </Button>\n          </div>\n        )\n      }\n      {\n        showModal && (\n          <BannedUsersModal\n            onCancel={() => {\n              setShowModal(false);\n              refreshList();\n            }}\n          />\n        )\n      }\n    </>\n  );\n};\n\nexport default BannedMemberList;\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport { noop } from '../../../../utils/utils';\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { useLocalization } from '../../../../lib/LocalizationContext';\n\ninterface Props {\n  onCancel(): void;\n}\n\nexport default function MutedMembersModal({\n  onCancel,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [memberQuery, setMemberQuery] = useState(null);\n\n  const { channel } = useChannelSettingsContext();\n  const state = useSendbirdStateContext();\n  const currentUser = state?.config?.userId;\n  const { stringSet } = useLocalization();\n\n  useEffect(() => {\n    const memberUserListQuery = channel?.createMemberListQuery({\n      limit: 10,\n      // @ts-ignore\n      mutedMemberFilter: 'muted',\n    });\n    memberUserListQuery.next().then((members) => {\n      setMembers(members);\n    });\n    setMemberQuery(memberUserListQuery);\n  }, []);\n  return (\n    <div>\n      <Modal\n        isFullScreenOnMobile\n        hideFooter\n        onCancel={() => onCancel()}\n        onSubmit={noop}\n        titleText={stringSet.CHANNEL_SETTING__MUTED_MEMBERS__TITLE}\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              memberQuery.next().then((o) => {\n                setMembers([\n                  ...members,\n                  ...o,\n                ]);\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              currentUser={currentUser}\n              user={member}\n              key={member.userId}\n              action={({ actionRef, parentRef }) => (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel?.unmuteUser(member).then(() => {\n                            closeDropdown();\n                            setMembers(members.filter(m => {\n                              return (m.userId !== member.userId);\n                            }));\n                          });\n                        }}\n                        dataSbId=\"channel_setting_muted_member_context_menu_unmute\"\n                      >\n                        {stringSet.CHANNEL_SETTING__MODERATION__UNMUTE}\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              )}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n} from 'react';\n\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport\nLabel, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport UserListItem from '../UserListItem';\nimport MutedMembersModal from './MutedMembersModal';\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { useLocalization } from '../../../../lib/LocalizationContext';\n\nexport const MutedMemberList = (): ReactElement => {\n  const [members, setMembers] = useState([]);\n  const [hasNext, setHasNext] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const { stringSet } = useLocalization();\n\n  const { channel } = useChannelSettingsContext();\n  const state = useSendbirdStateContext();\n  const currentUser = state?.config?.userId;\n\n  useEffect(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const memberUserListQuery = channel?.createMemberListQuery({\n      limit: 10,\n      // @ts-ignore\n      mutedMemberFilter: 'muted',\n    });\n    memberUserListQuery.next().then((members) => {\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refreshList = useCallback(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const memberUserListQuery = channel?.createMemberListQuery({\n      limit: 10,\n      // @ts-ignore\n      mutedMemberFilter: 'muted',\n    });\n    memberUserListQuery.next().then((members) => {\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n  return (\n    <>\n      {\n        members.map((member) => (\n          <UserListItem\n            key={member.userId}\n            user={member}\n            currentUser={currentUser}\n            action={({ actionRef, parentRef }) => {\n              return (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel?.unmuteUser(member).then(() => {\n                            refreshList();\n                            closeDropdown();\n                          });\n                        }}\n                        dataSbId=\"channel_setting_muted_member_context_menu_unmute\"\n                      >\n                        {stringSet?.CHANNEL_SETTING__UNMUTE || stringSet.CHANNEL_SETTING__MODERATION__UNMUTE}\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              );\n            }\n            }\n          />\n        ))\n      }\n      {\n        members && members.length === 0 && (\n          <Label\n            className=\"sendbird-channel-settings__empty-list\"\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_3}\n          >\n            {stringSet.CHANNEL_SETTING__NO_UNMUTED}\n          </Label>\n        )\n      }\n      {\n        hasNext && (\n          <div\n            className=\"sendbird-channel-settings-accordion__footer\"\n          >\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowModal(true);\n              }}\n            >\n              {stringSet.CHANNEL_SETTING__MUTED_MEMBERS__TITLE_ALL}\n            </Button>\n          </div>\n        )\n      }\n      {\n        showModal && (\n          <MutedMembersModal\n            onCancel={() => {\n              setShowModal(false);\n              refreshList();\n            }}\n          />\n        )\n      }\n    </>\n  );\n};\n\nexport default MutedMemberList;\n","import './admin-panel.scss';\nimport React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useContext,\n} from 'react';\n\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport Accordion, { AccordionGroup } from '../../../../ui/Accordion';\nimport\nLabel, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport Badge from '../../../../ui/Badge';\nimport { Toggle } from '../../../../ui/Toggle';\n\nimport OperatorList from './OperatorList';\nimport MemberList from './MemberList';\nimport BannedUserList from './BannedUserList';\nimport MutedMemberList from './MutedMemberList';\n\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\n\nconst kFormatter = (num: number): string|number => {\n  return Math.abs(num) > 999\n    ? `${(Math.abs(num) / 1000).toFixed(1)}K`\n    : num;\n};\n\nexport default function AdminPannel(): ReactElement {\n  const [frozen, setFrozen] = useState(false);\n\n  const { stringSet } = useContext(LocalizationContext);\n  const { channel } = useChannelSettingsContext();\n\n  // work around for\n  // https://sendbird.slack.com/archives/G01290GCDCN/p1595922832000900\n  // SDK bug - after frozen/unfrozen myRole becomes \"none\"\n  useEffect(() => {\n    setFrozen(channel?.isFrozen);\n  }, [channel]);\n\n  return (\n    <AccordionGroup className=\"sendbird-channel-settings__operator\">\n      <Accordion\n        className=\"sendbird-channel-settings__operators-list\"\n        id=\"operators\"\n        renderTitle={() => (\n          <>\n            <Icon\n              type={IconTypes.OPERATOR}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__OPERATORS__TITLE}\n            </Label>\n          </>\n        )}\n        renderContent={() => (\n          <>\n            <OperatorList />\n          </>\n        )}\n      />\n      <Accordion\n        className=\"sendbird-channel-settings__members-list\"\n        id=\"members\"\n        renderTitle={() => (\n          <>\n            <Icon\n              type={IconTypes.MEMBERS}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__MEMBERS__TITLE}\n            </Label>\n            <Badge count={kFormatter(channel?.memberCount)} />\n          </>\n        )}\n        renderContent={() => (\n          <>\n            <MemberList />\n          </>\n        )}\n      />\n      {\n        // No muted members in broadcast channel\n        !channel?.isBroadcast && (\n          <Accordion\n            id=\"mutedMembers\"\n            className=\"sendbird-channel-settings__muted-members-list\"\n            renderTitle={() => (\n              <>\n                <Icon\n                  type={IconTypes.MUTE}\n                  fillColor={IconColors.PRIMARY}\n                  width={24}\n                  height={24}\n                  className=\"sendbird-channel-settings__accordion-icon\"\n                />\n                <Label\n                  type={LabelTypography.SUBTITLE_1}\n                  color={LabelColors.ONBACKGROUND_1}\n                >\n                  {stringSet.CHANNEL_SETTING__MUTED_MEMBERS__TITLE}\n                </Label>\n              </>\n            )}\n            renderContent={() => (\n              <>\n                <MutedMemberList />\n              </>\n            )}\n          />\n        )\n      }\n      <Accordion\n        className=\"sendbird-channel-settings__banned-members-list\"\n        id=\"bannedUsers\"\n        renderTitle={() => (\n          <>\n            <Icon\n              type={IconTypes.BAN}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__BANNED_MEMBERS__TITLE}\n            </Label>\n          </>\n        )}\n        renderContent={() => (\n          <>\n            <BannedUserList />\n          </>\n        )}\n      />\n      {\n        // cannot freeze broadcast channel\n        !channel?.isBroadcast && (\n          <div className=\"sendbird-channel-settings__freeze\">\n            <Icon\n              type={IconTypes.FREEZE}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__FREEZE_CHANNEL}\n            </Label>\n            <Toggle\n              className=\"sendbird-channel-settings__frozen-icon\"\n              checked={frozen}\n              onChange={() => {\n                if (frozen) {\n                  channel?.unfreeze().then(() => {\n                    setFrozen((prev) => !prev);\n                  });\n                } else {\n                  channel?.freeze().then(() => {\n                    setFrozen((prev) => !prev);\n                  });\n                }\n              }}\n            />\n          </div>\n        )\n      }\n    </AccordionGroup>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}