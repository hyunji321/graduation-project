{"ast":null,"code":"import React__default, { useContext } from 'react';\nimport { getSdk } from '../../sendbirdSelectors.js';\nimport useSendbirdStateContext from '../../useSendbirdStateContext.js';\nimport { u as useCreateChannelContext, a as CHANNEL_TYPE } from '../../CreateChannelProvider-11c8b9a3.js';\nimport { a as LocalizationContext } from '../../LocalizationContext-076d6d2e.js';\nimport { L as Label, a as LabelTypography, b as LabelColors } from '../../index-63949de5.js';\nimport Icon, { IconTypes, IconColors } from '../../ui/Icon.js';\nimport Modal from '../../ui/Modal.js';\nimport '../../_rollupPluginBabelHelpers-6bb0305c.js';\nimport '../../topics-b2b77fb9.js';\nimport '../../utils-4bbbca2c.js';\nimport '../../withSendbird.js';\nimport '../../stringSet-13bbd4a2.js';\nimport '../../index-99aabd9e.js';\nimport 'prop-types';\nimport 'react-dom';\nimport '../../index-38e61c64.js';\nimport '../../ui/Button.js';\nimport '../../ui/IconButton.js';\nimport '../../MediaQueryContext-11f0e43f.js';\nconst isBroadcastChannelEnabled = sdk => {\n  var _sdk$appInfo;\n  const ALLOW_BROADCAST_CHANNEL = 'allow_broadcast_channel';\n  const applicationAttributes = sdk === null || sdk === void 0 ? void 0 : (_sdk$appInfo = sdk.appInfo) === null || _sdk$appInfo === void 0 ? void 0 : _sdk$appInfo.applicationAttributes;\n  if (Array.isArray(applicationAttributes)) {\n    return applicationAttributes.includes(ALLOW_BROADCAST_CHANNEL);\n  }\n  return false;\n};\nconst isSuperGroupChannelEnabled = sdk => {\n  var _sdk$appInfo2;\n  const ALLOW_SUPER_GROUP_CHANNEL = 'allow_super_group_channel';\n  const applicationAttributes = sdk === null || sdk === void 0 ? void 0 : (_sdk$appInfo2 = sdk.appInfo) === null || _sdk$appInfo2 === void 0 ? void 0 : _sdk$appInfo2.applicationAttributes;\n  if (Array.isArray(applicationAttributes)) {\n    return applicationAttributes.includes(ALLOW_SUPER_GROUP_CHANNEL);\n  }\n  return false;\n};\nconst SelectChannelType = props => {\n  const {\n    onCancel\n  } = props;\n  const store = useSendbirdStateContext();\n  const sdk = getSdk(store);\n  const createChannelProps = useCreateChannelContext();\n  const {\n    setStep,\n    setType\n  } = createChannelProps;\n  const {\n    stringSet\n  } = useContext(LocalizationContext);\n  const isBroadcastAvailable = isBroadcastChannelEnabled(sdk);\n  const isSupergroupAvailable = isSuperGroupChannelEnabled(sdk);\n  return /*#__PURE__*/React__default.createElement(Modal, {\n    titleText: stringSet === null || stringSet === void 0 ? void 0 : stringSet.MODAL__CREATE_CHANNEL__TITLE,\n    hideFooter: true,\n    onCancel: () => {\n      onCancel();\n    },\n    className: \"sendbird-add-channel__modal\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-add-channel__rectangle-wrap\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-add-channel__rectangle\",\n    onClick: () => {\n      setType(CHANNEL_TYPE.GROUP);\n      setStep(1);\n    },\n    role: \"button\",\n    tabIndex: 0,\n    onKeyDown: () => {\n      setType(CHANNEL_TYPE.GROUP);\n      setStep(1);\n    }\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    className: \"sendbird-add-channel__rectangle__chat-icon\",\n    type: IconTypes.CHAT,\n    fillColor: IconColors.PRIMARY,\n    width: \"28px\",\n    height: \"28px\"\n  }), /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.SUBTITLE_1,\n    color: LabelColors.ONBACKGROUND_1\n  }, stringSet.MODAL__CREATE_CHANNEL__GROUP)), isSupergroupAvailable && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-add-channel__rectangle\",\n    onClick: () => {\n      setType(CHANNEL_TYPE.SUPERGROUP);\n      setStep(1);\n    },\n    role: \"button\",\n    tabIndex: 0,\n    onKeyDown: () => {\n      setType(CHANNEL_TYPE.SUPERGROUP);\n      setStep(1);\n    }\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    className: \"sendbird-add-channel__rectangle__supergroup-icon\",\n    type: IconTypes.SUPERGROUP,\n    fillColor: IconColors.PRIMARY,\n    width: \"28px\",\n    height: \"28px\"\n  }), /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.SUBTITLE_1,\n    color: LabelColors.ONBACKGROUND_1\n  }, stringSet.MODAL__CREATE_CHANNEL__SUPER)), isBroadcastAvailable && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-add-channel__rectangle\",\n    onClick: () => {\n      setType(CHANNEL_TYPE.BROADCAST);\n      setStep(1);\n    },\n    role: \"button\",\n    tabIndex: 0,\n    onKeyDown: () => {\n      setType(CHANNEL_TYPE.BROADCAST);\n      setStep(1);\n    }\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    className: \"sendbird-add-channel__rectangle__broadcast-icon\",\n    type: IconTypes.BROADCAST,\n    fillColor: IconColors.PRIMARY,\n    width: \"28px\",\n    height: \"28px\"\n  }), /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.SUBTITLE_1,\n    color: LabelColors.ONBACKGROUND_1\n  }, stringSet.MODAL__CREATE_CHANNEL__BROADCAST))));\n};\nexport { SelectChannelType as default };","map":{"version":3,"mappings":"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","names":["isBroadcastChannelEnabled","sdk","ALLOW_BROADCAST_CHANNEL","applicationAttributes","appInfo","_sdk$appInfo","Array","isArray","includes","isSuperGroupChannelEnabled","ALLOW_SUPER_GROUP_CHANNEL","_sdk$appInfo2","SelectChannelType","props","onCancel","store","useSendbirdStateContext","sendbirdSelectors","createChannelProps","useCreateChannelContext","setStep","setType","stringSet","useContext","LocalizationContext","isBroadcastAvailable","isSupergroupAvailable","React","Modal","titleText","MODAL__CREATE_CHANNEL__TITLE","hideFooter","className","onClick","CHANNEL_TYPE","GROUP","role","tabIndex","onKeyDown","Icon","type","IconTypes","CHAT","fillColor","IconColors","PRIMARY","width","height","Label","LabelTypography","SUBTITLE_1","color","LabelColors","ONBACKGROUND_1","MODAL__CREATE_CHANNEL__GROUP","SUPERGROUP","MODAL__CREATE_CHANNEL__SUPER","BROADCAST","MODAL__CREATE_CHANNEL__BROADCAST"],"sources":["C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\modules\\CreateChannel\\utils.ts","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\modules\\CreateChannel\\components\\SelectChannelType.tsx"],"sourcesContent":["import type { SendbirdGroupChat } from '@sendbird/chat/groupChannel';\n\nexport const isBroadcastChannelEnabled = (sdk: SendbirdGroupChat): boolean => {\n  const ALLOW_BROADCAST_CHANNEL = 'allow_broadcast_channel';\n  const applicationAttributes = sdk?.appInfo?.applicationAttributes;\n\n  if (Array.isArray(applicationAttributes)) {\n    return applicationAttributes.includes(ALLOW_BROADCAST_CHANNEL);\n  }\n\n  return false;\n};\n\nexport const isSuperGroupChannelEnabled = (sdk: SendbirdGroupChat): boolean => {\n  const ALLOW_SUPER_GROUP_CHANNEL = 'allow_super_group_channel';\n  const applicationAttributes = sdk?.appInfo?.applicationAttributes;\n\n  if (Array.isArray(applicationAttributes)) {\n    return applicationAttributes.includes(ALLOW_SUPER_GROUP_CHANNEL);\n  }\n\n  return false;\n};\n","import React, { useContext } from 'react';\nimport type { SendbirdGroupChat } from '@sendbird/chat/groupChannel';\n\nimport * as sendbirdSelectors from '../../../lib/selectors';\nimport useSendbirdStateContext from '../../../hooks/useSendbirdStateContext';\n\nimport { useCreateChannelContext } from '../context/CreateChannelProvider';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport Label, { LabelColors, LabelTypography } from '../../../ui/Label';\nimport Icon, { IconTypes, IconColors } from '../../../ui/Icon';\n\nimport Modal from '../../../ui/Modal';\n\nimport {\n  isBroadcastChannelEnabled,\n  isSuperGroupChannelEnabled,\n} from '../utils';\nimport { CHANNEL_TYPE } from '../types';\n\nexport interface SelectChannelTypeProps {\n  onCancel?(): void;\n}\n\nconst SelectChannelType: React.FC<SelectChannelTypeProps> = (props: SelectChannelTypeProps) => {\n  const { onCancel } = props;\n  const store = useSendbirdStateContext();\n\n  const sdk = sendbirdSelectors.getSdk(store) as SendbirdGroupChat;\n\n  const createChannelProps = useCreateChannelContext();\n  const {\n    setStep,\n    setType,\n  } = createChannelProps;\n\n  const { stringSet } = useContext(LocalizationContext);\n\n  const isBroadcastAvailable = isBroadcastChannelEnabled(sdk);\n  const isSupergroupAvailable = isSuperGroupChannelEnabled(sdk);\n\n  return (\n    <Modal\n      titleText={stringSet?.MODAL__CREATE_CHANNEL__TITLE}\n      hideFooter\n      onCancel={() => { onCancel(); }}\n      className=\"sendbird-add-channel__modal\"\n    >\n      <div className=\"sendbird-add-channel__rectangle-wrap\">\n        <div\n          className=\"sendbird-add-channel__rectangle\"\n          onClick={() => {\n            setType(CHANNEL_TYPE.GROUP);\n            setStep(1);\n          }}\n          role=\"button\"\n          tabIndex={0}\n          onKeyDown={() => {\n            setType(CHANNEL_TYPE.GROUP);\n            setStep(1);\n          }}\n        >\n          <Icon\n            className=\"sendbird-add-channel__rectangle__chat-icon\"\n            type={IconTypes.CHAT}\n            fillColor={IconColors.PRIMARY}\n            width=\"28px\"\n            height=\"28px\"\n          />\n          <Label type={LabelTypography.SUBTITLE_1} color={LabelColors.ONBACKGROUND_1}>\n            {stringSet.MODAL__CREATE_CHANNEL__GROUP}\n          </Label>\n        </div>\n        {\n          isSupergroupAvailable && (\n            <div\n              className=\"sendbird-add-channel__rectangle\"\n              onClick={() => {\n                setType(CHANNEL_TYPE.SUPERGROUP);\n                setStep(1);\n              }}\n              role=\"button\"\n              tabIndex={0}\n              onKeyDown={() => {\n                setType(CHANNEL_TYPE.SUPERGROUP);\n                setStep(1);\n              }}\n            >\n              <Icon\n                className=\"sendbird-add-channel__rectangle__supergroup-icon\"\n                type={IconTypes.SUPERGROUP}\n                fillColor={IconColors.PRIMARY}\n                width=\"28px\"\n                height=\"28px\"\n              />\n              <Label type={LabelTypography.SUBTITLE_1} color={LabelColors.ONBACKGROUND_1}>\n                {stringSet.MODAL__CREATE_CHANNEL__SUPER}\n              </Label>\n            </div>\n          )\n        }\n        {\n          isBroadcastAvailable && (\n            <div\n              className=\"sendbird-add-channel__rectangle\"\n              onClick={() => {\n                setType(CHANNEL_TYPE.BROADCAST);\n                setStep(1);\n              }}\n              role=\"button\"\n              tabIndex={0}\n              onKeyDown={() => {\n                setType(CHANNEL_TYPE.BROADCAST);\n                setStep(1);\n              }}\n            >\n              <Icon\n                className=\"sendbird-add-channel__rectangle__broadcast-icon\"\n                type={IconTypes.BROADCAST}\n                fillColor={IconColors.PRIMARY}\n                width=\"28px\"\n                height=\"28px\"\n              />\n              <Label type={LabelTypography.SUBTITLE_1} color={LabelColors.ONBACKGROUND_1}>\n                {stringSet.MODAL__CREATE_CHANNEL__BROADCAST}\n              </Label>\n            </div>\n          )\n        }\n      </div>\n    </Modal>\n  );\n};\n\nexport default SelectChannelType;\n"]},"metadata":{},"sourceType":"module"}