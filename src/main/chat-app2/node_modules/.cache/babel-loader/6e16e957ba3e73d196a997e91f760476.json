{"ast":null,"code":"import _slicedToArray from \"C:/Users/\\uC774\\uACBD\\uBBFC/IdeaProjects/sendbird-uikit-whatsapp-sample/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport React__default, { useRef, useState, useEffect } from 'react';\nimport { u as useLocalization } from './LocalizationContext-076d6d2e.js';\nimport { useVoicePlayer } from './VoicePlayer/useVoicePlayer.js';\nimport { useVoiceRecorder, VoiceRecorderStatus } from './VoiceRecorder/useVoiceRecorder.js';\nimport { a as isDisabledBecauseFrozen, b as isDisabledBecauseMuted } from './ChannelProvider-910bbc1f.js';\nimport { V as VoiceMessageInputStatus, a as VoiceMessageInput } from './index-e6e562c5.js';\nimport Modal from './ui/Modal.js';\nimport Button, { ButtonTypes, ButtonSizes } from './ui/Button.js';\nimport useSendbirdStateContext from './useSendbirdStateContext.js';\nimport { a as VOICE_RECORDER_DEFAULT_MIN } from './consts-95d8566e.js';\nimport { a as VOICE_PLAYER_STATUS } from './index-5c985608.js';\nimport { u as uuidv4 } from './uuid-1adedf62.js';\nvar VoiceMessageInputWrapper = function VoiceMessageInputWrapper(_ref) {\n  var _config$voiceRecord;\n  var channel = _ref.channel,\n    _onCancelClick = _ref.onCancelClick,\n    onSubmitClick = _ref.onSubmitClick;\n  var uuid = useRef(uuidv4()).current;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    audioFile = _useState2[0],\n    setAudioFile = _useState2[1];\n  var _useState3 = useState(VoiceMessageInputStatus.READY_TO_RECORD),\n    _useState4 = _slicedToArray(_useState3, 2),\n    voiceInputState = _useState4[0],\n    setVoiceInputState = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isSubmitted = _useState6[0],\n    setSubmit = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isDisabled = _useState8[0],\n    setDisabled = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    showModal = _useState10[0],\n    setShowModal = _useState10[1];\n  var _useLocalization = useLocalization(),\n    stringSet = _useLocalization.stringSet;\n  var _useSendbirdStateCont = useSendbirdStateContext(),\n    config = _useSendbirdStateCont.config;\n  var minRecordingTime = (config === null || config === void 0 ? void 0 : (_config$voiceRecord = config.voiceRecord) === null || _config$voiceRecord === void 0 ? void 0 : _config$voiceRecord.minRecordingTime) || VOICE_RECORDER_DEFAULT_MIN;\n  var _useVoiceRecorder = useVoiceRecorder({\n      onRecordingStarted: function onRecordingStarted() {\n        setVoiceInputState(VoiceMessageInputStatus.RECORDING);\n      },\n      onRecordingEnded: function onRecordingEnded(audioFile) {\n        setAudioFile(audioFile);\n      }\n    }),\n    start = _useVoiceRecorder.start,\n    stop = _useVoiceRecorder.stop,\n    cancel = _useVoiceRecorder.cancel,\n    recordingTime = _useVoiceRecorder.recordingTime,\n    recordingStatus = _useVoiceRecorder.recordingStatus,\n    recordingLimit = _useVoiceRecorder.recordingLimit;\n  var voicePlayer = useVoicePlayer({\n    channelUrl: channel === null || channel === void 0 ? void 0 : channel.url,\n    key: uuid,\n    audioFile: audioFile\n  });\n  var play = voicePlayer.play,\n    pause = voicePlayer.pause,\n    playbackTime = voicePlayer.playbackTime,\n    playingStatus = voicePlayer.playingStatus;\n  var stopVoicePlayer = voicePlayer.stop;\n\n  // disabled state: muted & frozen\n  useEffect(function () {\n    if (isDisabledBecauseFrozen(channel) || isDisabledBecauseMuted(channel)) {\n      setDisabled(true);\n    } else {\n      setDisabled(false);\n    }\n  }, [channel === null || channel === void 0 ? void 0 : channel.myRole, channel === null || channel === void 0 ? void 0 : channel.isFrozen, channel === null || channel === void 0 ? void 0 : channel.myMutedState]);\n\n  // call onSubmitClick when submit button is clicked and recorded audio file is created\n  useEffect(function () {\n    if (isSubmitted && audioFile) {\n      onSubmitClick(audioFile, recordingTime);\n      setSubmit(false);\n      setAudioFile(null);\n    }\n  }, [isSubmitted, audioFile, recordingTime]);\n  // operate which control button should be displayed\n  useEffect(function () {\n    if (audioFile) {\n      if (recordingTime < minRecordingTime) {\n        setVoiceInputState(VoiceMessageInputStatus.READY_TO_RECORD);\n        setAudioFile(null);\n      } else if (playingStatus === VOICE_PLAYER_STATUS.PLAYING) {\n        setVoiceInputState(VoiceMessageInputStatus.PLAYING);\n      } else {\n        setVoiceInputState(VoiceMessageInputStatus.READY_TO_PLAY);\n      }\n    }\n  }, [audioFile, recordingTime, playingStatus]);\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-voice-message-input-wrapper\"\n  }, /*#__PURE__*/React__default.createElement(VoiceMessageInput, {\n    currentValue: recordingStatus === VoiceRecorderStatus.COMPLETED ? playbackTime : recordingTime,\n    maximumValue: recordingStatus === VoiceRecorderStatus.COMPLETED ? recordingTime : recordingLimit,\n    currentType: voiceInputState,\n    onCancelClick: function onCancelClick() {\n      _onCancelClick();\n      cancel();\n    },\n    onSubmitClick: function onSubmitClick() {\n      if (isDisabled) {\n        setShowModal(true);\n        setVoiceInputState(VoiceMessageInputStatus.READY_TO_RECORD);\n      } else {\n        stop();\n        pause();\n        setSubmit(true);\n      }\n    },\n    onControlClick: function onControlClick(type) {\n      switch (type) {\n        case VoiceMessageInputStatus.READY_TO_RECORD:\n          {\n            stopVoicePlayer();\n            start();\n            break;\n          }\n        case VoiceMessageInputStatus.RECORDING:\n          {\n            if (recordingTime >= minRecordingTime && !isDisabled) {\n              stop();\n            } else if (isDisabled) {\n              cancel();\n              setShowModal(true);\n              setVoiceInputState(VoiceMessageInputStatus.READY_TO_RECORD);\n            } else {\n              cancel();\n              setVoiceInputState(VoiceMessageInputStatus.READY_TO_RECORD);\n            }\n            break;\n          }\n        case VoiceMessageInputStatus.READY_TO_PLAY:\n          {\n            play();\n            break;\n          }\n        case VoiceMessageInputStatus.PLAYING:\n          {\n            pause();\n            break;\n          }\n      }\n    }\n  }), showModal && /*#__PURE__*/React__default.createElement(Modal, {\n    className: \"sendbird-voice-message-input-wrapper-alert\",\n    titleText: isDisabledBecauseMuted(channel) ? stringSet.MODAL__VOICE_MESSAGE_INPUT_DISABLED__TITLE_MUTED : stringSet.MODAL__VOICE_MESSAGE_INPUT_DISABLED__TITLE_FROZEN,\n    hideFooter: true,\n    isCloseOnClickOutside: true,\n    onCancel: function onCancel() {\n      setShowModal(false);\n      _onCancelClick();\n    }\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-voice-message-input-wrapper-alert__body\"\n  }, /*#__PURE__*/React__default.createElement(Button, {\n    className: \"sendbird-voice-message-input-wrapper-alert__body__ok-button\",\n    type: ButtonTypes.PRIMARY,\n    size: ButtonSizes.BIG,\n    onClick: function onClick() {\n      setShowModal(false);\n      _onCancelClick();\n    }\n  }, stringSet.BUTTON__OK))));\n};\nexport { VoiceMessageInputWrapper as V };","map":{"version":3,"mappings":"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","names":["VoiceMessageInputWrapper","_ref","channel","onCancelClick","onSubmitClick","uuid","useRef","uuidv4","current","useState","audioFile","setAudioFile","VoiceMessageInputStatus","READY_TO_RECORD","voiceInputState","setVoiceInputState","isSubmitted","setSubmit","isDisabled","setDisabled","showModal","setShowModal","useLocalization","stringSet","useSendbirdStateContext","config","minRecordingTime","voiceRecord","_config$voiceRecord","VOICE_RECORDER_DEFAULT_MIN","useVoiceRecorder","onRecordingStarted","RECORDING","onRecordingEnded","start","stop","cancel","recordingTime","recordingStatus","recordingLimit","voicePlayer","useVoicePlayer","channelUrl","url","key","play","pause","playbackTime","playingStatus","stopVoicePlayer","useEffect","isDisabledBecauseFrozen","isDisabledBecauseMuted","myRole","isFrozen","myMutedState","VOICE_PLAYER_STATUS","PLAYING","READY_TO_PLAY","React","className","VoiceMessageInput","currentValue","VoiceRecorderStatus","COMPLETED","maximumValue","currentType","onControlClick","type","Modal","titleText","MODAL__VOICE_MESSAGE_INPUT_DISABLED__TITLE_MUTED","MODAL__VOICE_MESSAGE_INPUT_DISABLED__TITLE_FROZEN","hideFooter","isCloseOnClickOutside","onCancel","Button","ButtonTypes","PRIMARY","size","ButtonSizes","BIG","onClick","BUTTON__OK"],"sources":["C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\modules\\Channel\\components\\MessageInput\\VoiceMessageInputWrapper.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { GroupChannel } from '@sendbird/chat/groupChannel';\nimport './voice-message-wrapper.scss';\n\nimport { useLocalization } from '../../../../lib/LocalizationContext';\nimport { useVoicePlayer } from '../../../../hooks/VoicePlayer/useVoicePlayer';\nimport { useVoiceRecorder, VoiceRecorderStatus } from '../../../../hooks/VoiceRecorder/useVoiceRecorder';\nimport { isDisabledBecauseFrozen, isDisabledBecauseMuted } from '../../context/utils';\n\nimport { VoiceMessageInput } from '../../../../ui/VoiceMessageInput';\nimport { VoiceMessageInputStatus } from '../../../../ui/VoiceMessageInput/types';\nimport Modal from '../../../../ui/Modal';\nimport Button, { ButtonSizes, ButtonTypes } from '../../../../ui/Button';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { VOICE_RECORDER_DEFAULT_MIN } from '../../../../utils/consts';\nimport { VOICE_PLAYER_STATUS } from '../../../../hooks/VoicePlayer/dux/initialState';\nimport uuidv4 from '../../../../utils/uuid';\n\nexport interface VoiceMessageInputWrapperProps {\n  channel?: GroupChannel;\n  onCancelClick?: () => void;\n  onSubmitClick?: (file: File, duration: number) => void;\n}\n\nexport const VoiceMessageInputWrapper = ({\n  channel,\n  onCancelClick,\n  onSubmitClick,\n}: VoiceMessageInputWrapperProps): React.ReactElement => {\n  const uuid = useRef<string>(uuidv4()).current;\n  const [audioFile, setAudioFile] = useState<File>(null);\n  const [voiceInputState, setVoiceInputState] = useState<VoiceMessageInputStatus>(VoiceMessageInputStatus.READY_TO_RECORD);\n  const [isSubmitted, setSubmit] = useState(false);\n  const [isDisabled, setDisabled] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const { stringSet } = useLocalization();\n  const { config } = useSendbirdStateContext();\n  const minRecordingTime = config?.voiceRecord?.minRecordingTime || VOICE_RECORDER_DEFAULT_MIN;\n  const {\n    start,\n    stop,\n    cancel,\n    recordingTime,\n    recordingStatus,\n    recordingLimit,\n  } = useVoiceRecorder({\n    onRecordingStarted: () => {\n      setVoiceInputState(VoiceMessageInputStatus.RECORDING);\n    },\n    onRecordingEnded: (audioFile) => {\n      setAudioFile(audioFile);\n    },\n  });\n  const voicePlayer = useVoicePlayer({\n    channelUrl: channel?.url,\n    key: uuid,\n    audioFile: audioFile,\n  });\n  const {\n    play,\n    pause,\n    playbackTime,\n    playingStatus,\n  } = voicePlayer;\n  const stopVoicePlayer = voicePlayer.stop;\n\n  // disabled state: muted & frozen\n  useEffect(() => {\n    if (isDisabledBecauseFrozen(channel) || isDisabledBecauseMuted(channel)) {\n      setDisabled(true);\n    } else {\n      setDisabled(false);\n    }\n  }, [channel?.myRole, channel?.isFrozen, channel?.myMutedState]);\n\n  // call onSubmitClick when submit button is clicked and recorded audio file is created\n  useEffect(() => {\n    if (isSubmitted && audioFile) {\n      onSubmitClick(audioFile, recordingTime);\n      setSubmit(false);\n      setAudioFile(null);\n    }\n  }, [isSubmitted, audioFile, recordingTime]);\n  // operate which control button should be displayed\n  useEffect(() => {\n    if (audioFile) {\n      if (recordingTime < minRecordingTime) {\n        setVoiceInputState(VoiceMessageInputStatus.READY_TO_RECORD);\n        setAudioFile(null);\n      } else if (playingStatus === VOICE_PLAYER_STATUS.PLAYING) {\n        setVoiceInputState(VoiceMessageInputStatus.PLAYING);\n      } else {\n        setVoiceInputState(VoiceMessageInputStatus.READY_TO_PLAY);\n      }\n    }\n  }, [audioFile, recordingTime, playingStatus]);\n\n  return (\n    <div className=\"sendbird-voice-message-input-wrapper\">\n      <VoiceMessageInput\n        currentValue={recordingStatus === VoiceRecorderStatus.COMPLETED ? playbackTime : recordingTime}\n        maximumValue={recordingStatus === VoiceRecorderStatus.COMPLETED ? recordingTime : recordingLimit}\n        currentType={voiceInputState}\n        onCancelClick={() => {\n          onCancelClick();\n          cancel();\n        }}\n        onSubmitClick={() => {\n          if (isDisabled) {\n            setShowModal(true);\n            setVoiceInputState(VoiceMessageInputStatus.READY_TO_RECORD);\n          } else {\n            stop();\n            pause();\n            setSubmit(true);\n          }\n        }}\n        onControlClick={(type) => {\n          switch (type) {\n            case VoiceMessageInputStatus.READY_TO_RECORD: {\n              stopVoicePlayer();\n              start();\n              break;\n            }\n            case VoiceMessageInputStatus.RECORDING: {\n              if (recordingTime >= minRecordingTime && !isDisabled) {\n                stop();\n              } else if (isDisabled) {\n                cancel();\n                setShowModal(true);\n                setVoiceInputState(VoiceMessageInputStatus.READY_TO_RECORD);\n              } else {\n                cancel();\n                setVoiceInputState(VoiceMessageInputStatus.READY_TO_RECORD);\n              }\n              break;\n            }\n            case VoiceMessageInputStatus.READY_TO_PLAY: {\n              play();\n              break;\n            }\n            case VoiceMessageInputStatus.PLAYING: {\n              pause();\n              break;\n            }\n          }\n        }}\n      />\n      {\n        showModal && (\n          <Modal\n            className=\"sendbird-voice-message-input-wrapper-alert\"\n            titleText={isDisabledBecauseMuted(channel)\n              ? stringSet.MODAL__VOICE_MESSAGE_INPUT_DISABLED__TITLE_MUTED\n              : stringSet.MODAL__VOICE_MESSAGE_INPUT_DISABLED__TITLE_FROZEN\n            }\n            hideFooter\n            isCloseOnClickOutside\n            onCancel={() => {\n              setShowModal(false);\n              onCancelClick();\n            }}\n          >\n            <div className=\"sendbird-voice-message-input-wrapper-alert__body\">\n              <Button\n                className=\"sendbird-voice-message-input-wrapper-alert__body__ok-button\"\n                type={ButtonTypes.PRIMARY}\n                size={ButtonSizes.BIG}\n                onClick={() => {\n                  setShowModal(false);\n                  onCancelClick();\n                }}\n              >\n                {stringSet.BUTTON__OK}\n              </Button>\n            </div>\n          </Modal>\n        )\n      }\n    </div>\n  );\n};\n\nexport default VoiceMessageInputWrapper;\n"]},"metadata":{},"sourceType":"module"}