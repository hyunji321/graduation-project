{"ast":null,"code":"import React__default, { useState } from 'react';\nimport ContextMenu, { MenuItems, MenuItem } from './ui/ContextMenu.js';\nimport { q as isUserMessage, C as isSentMessage, D as isFailedMessage, E as isPendingMessage, k as isFileMessage, O as isThreadMessage, F as copyToClipboard, P as isParentMessage, d as isVoiceMessage, G as getEmojiListAll } from './index-7eb65acf.js';\nimport { u as useLocalization } from './LocalizationContext-076d6d2e.js';\nimport Icon, { IconTypes, IconColors } from './ui/Icon.js';\nimport { L as Label, a as LabelTypography, b as LabelColors } from './index-63949de5.js';\nimport BottomSheet from './ui/BottomSheet.js';\nimport ImageRenderer from './ui/ImageRenderer.js';\nimport ReactionButton from './ui/ReactionButton.js';\nconst MobileContextMenu = props => {\n  var _message$sender;\n  const {\n    hideMenu,\n    channel,\n    message,\n    replyType,\n    userId,\n    resendMessage,\n    showEdit,\n    showRemove,\n    setQuoteMessage,\n    parentRef,\n    onReplyInThread,\n    isOpenedFromThread = false\n  } = props;\n  const isByMe = (message === null || message === void 0 ? void 0 : (_message$sender = message.sender) === null || _message$sender === void 0 ? void 0 : _message$sender.userId) === userId;\n  const {\n    stringSet\n  } = useLocalization();\n  const showMenuItemCopy = isUserMessage(message);\n  const showMenuItemEdit = isUserMessage(message) && isSentMessage(message) && isByMe;\n  const showMenuItemResend = isFailedMessage(message) && (message === null || message === void 0 ? void 0 : message.isResendable) && isByMe;\n  const showMenuItemDelete = !isPendingMessage(message) && isByMe;\n  const showMenuItemDownload = !isPendingMessage(message) && isFileMessage(message) && !(channel !== null && channel !== void 0 && channel.isSuper) && !(channel !== null && channel !== void 0 && channel.isBroadcast);\n  const showMenuItemReply = replyType === 'QUOTE_REPLY' && !isFailedMessage(message) && !isPendingMessage(message) && (channel === null || channel === void 0 ? void 0 : channel.isGroupChannel());\n  const showMenuItemThread = replyType === 'THREAD' && !isOpenedFromThread && !isFailedMessage(message) && !isPendingMessage(message) && !isThreadMessage(message) && (channel === null || channel === void 0 ? void 0 : channel.isGroupChannel());\n  const fileMessage = message;\n  return /*#__PURE__*/React__default.createElement(ContextMenu, {\n    isOpen: true,\n    menuItems: () => {\n      var _message$parentMessag, _message$parentMessag2, _message$parentMessag3, _message$threadInfo$r, _message$threadInfo, _message$threadInfo$r2, _message$threadInfo2, _message$threadInfo$r3, _message$threadInfo3;\n      return /*#__PURE__*/React__default.createElement(MenuItems, {\n        className: \"sendbird-message__mobile-context-menu\",\n        parentRef: parentRef,\n        parentContainRef: parentRef,\n        closeDropdown: hideMenu\n      }, showMenuItemCopy && /*#__PURE__*/React__default.createElement(MenuItem, {\n        className: \"sendbird-message__mobile-context-menu-item menu-item-copy\",\n        onClick: () => {\n          hideMenu();\n          copyToClipboard(message === null || message === void 0 ? void 0 : message.message);\n        },\n        dataSbId: \"ui_mobile_message_item_menu_copy\"\n      }, /*#__PURE__*/React__default.createElement(Label, {\n        type: LabelTypography.SUBTITLE_1,\n        color: LabelColors.ONBACKGROUND_1\n      }, stringSet === null || stringSet === void 0 ? void 0 : stringSet.MESSAGE_MENU__COPY), /*#__PURE__*/React__default.createElement(Icon, {\n        type: IconTypes.COPY,\n        fillColor: IconColors.PRIMARY,\n        width: \"24px\",\n        height: \"24px\"\n      })), showMenuItemReply && /*#__PURE__*/React__default.createElement(MenuItem, {\n        className: \"sendbird-message__mobile-context-menu-item menu-item-reply\",\n        onClick: () => {\n          hideMenu();\n          setQuoteMessage(message);\n        },\n        disable: ((_message$parentMessag = message === null || message === void 0 ? void 0 : message.parentMessageId) !== null && _message$parentMessag !== void 0 ? _message$parentMessag : 0) > 0,\n        dataSbId: \"ui_mobile_message_item_menu_reply\"\n      }, /*#__PURE__*/React__default.createElement(Label, {\n        type: LabelTypography.SUBTITLE_1,\n        color: ((_message$parentMessag2 = message === null || message === void 0 ? void 0 : message.parentMessageId) !== null && _message$parentMessag2 !== void 0 ? _message$parentMessag2 : 0) > 0 ? LabelColors.ONBACKGROUND_4 : LabelColors.ONBACKGROUND_1\n      }, stringSet.MESSAGE_MENU__REPLY), /*#__PURE__*/React__default.createElement(Icon, {\n        type: IconTypes.REPLY,\n        fillColor: ((_message$parentMessag3 = message === null || message === void 0 ? void 0 : message.parentMessageId) !== null && _message$parentMessag3 !== void 0 ? _message$parentMessag3 : 0) > 0 ? IconColors.ON_BACKGROUND_4 : IconColors.PRIMARY,\n        width: \"24px\",\n        height: \"24px\"\n      })), showMenuItemThread && /*#__PURE__*/React__default.createElement(MenuItem, {\n        className: \"sendbird-message__mobile-context-menu-item menu-item-reply\",\n        onClick: () => {\n          hideMenu();\n          onReplyInThread === null || onReplyInThread === void 0 ? void 0 : onReplyInThread({\n            message\n          });\n        },\n        dataSbId: \"ui_mobile_message_item_menu_thread\"\n      }, /*#__PURE__*/React__default.createElement(Label, {\n        type: LabelTypography.SUBTITLE_1,\n        color: LabelColors.ONBACKGROUND_1\n      }, stringSet.MESSAGE_MENU__THREAD), /*#__PURE__*/React__default.createElement(Icon, {\n        type: IconTypes.THREAD,\n        fillColor: IconColors.PRIMARY,\n        width: \"24px\",\n        height: \"24px\"\n      })), showMenuItemEdit && /*#__PURE__*/React__default.createElement(MenuItem, {\n        className: \"sendbird-message__mobile-context-menu-item menu-item-edit\",\n        onClick: () => {\n          hideMenu();\n          showEdit(true);\n        },\n        dataSbId: \"ui_mobile_message_item_menu_edit\"\n      }, /*#__PURE__*/React__default.createElement(Label, {\n        type: LabelTypography.SUBTITLE_1,\n        color: LabelColors.ONBACKGROUND_1\n      }, stringSet.MESSAGE_MENU__EDIT), /*#__PURE__*/React__default.createElement(Icon, {\n        type: IconTypes.EDIT,\n        fillColor: IconColors.PRIMARY,\n        width: \"24px\",\n        height: \"24px\"\n      })), showMenuItemResend && /*#__PURE__*/React__default.createElement(MenuItem, {\n        className: \"sendbird-message__mobile-context-menu-item menu-item-resend\",\n        onClick: () => {\n          hideMenu();\n          resendMessage(message);\n        },\n        dataSbId: \"ui_mobile_message_item_menu_resend\"\n      }, /*#__PURE__*/React__default.createElement(Label, {\n        type: LabelTypography.SUBTITLE_1,\n        color: LabelColors.ONBACKGROUND_1\n      }, stringSet.MESSAGE_MENU__RESEND), /*#__PURE__*/React__default.createElement(Icon, {\n        type: IconTypes.REFRESH,\n        fillColor: IconColors.PRIMARY,\n        width: \"24px\",\n        height: \"24px\"\n      })), showMenuItemDelete && /*#__PURE__*/React__default.createElement(MenuItem, {\n        className: \"sendbird-message__mobile-context-menu-item menu-item-delete\",\n        onClick: () => {\n          hideMenu();\n          showRemove(true);\n        },\n        disable: ((_message$threadInfo$r = message === null || message === void 0 ? void 0 : (_message$threadInfo = message.threadInfo) === null || _message$threadInfo === void 0 ? void 0 : _message$threadInfo.replyCount) !== null && _message$threadInfo$r !== void 0 ? _message$threadInfo$r : 0) > 0,\n        dataSbId: \"ui_mobile_message_item_menu_delete\"\n      }, /*#__PURE__*/React__default.createElement(Label, {\n        type: LabelTypography.SUBTITLE_1,\n        color: ((_message$threadInfo$r2 = message === null || message === void 0 ? void 0 : (_message$threadInfo2 = message.threadInfo) === null || _message$threadInfo2 === void 0 ? void 0 : _message$threadInfo2.replyCount) !== null && _message$threadInfo$r2 !== void 0 ? _message$threadInfo$r2 : 0) > 0 ? LabelColors.ONBACKGROUND_4 : LabelColors.ONBACKGROUND_1\n      }, stringSet.MESSAGE_MENU__DELETE), /*#__PURE__*/React__default.createElement(Icon, {\n        type: IconTypes.DELETE,\n        fillColor: ((_message$threadInfo$r3 = message === null || message === void 0 ? void 0 : (_message$threadInfo3 = message.threadInfo) === null || _message$threadInfo3 === void 0 ? void 0 : _message$threadInfo3.replyCount) !== null && _message$threadInfo$r3 !== void 0 ? _message$threadInfo$r3 : 0) > 0 ? IconColors.ON_BACKGROUND_4 : IconColors.PRIMARY,\n        width: \"24px\",\n        height: \"24px\"\n      })), showMenuItemDownload && /*#__PURE__*/React__default.createElement(MenuItem, {\n        className: \"sendbird-message__mobile-context-menu-item menu-item-save\",\n        onClick: () => {\n          hideMenu();\n        },\n        dataSbId: \"ui_mobile_message_item_menu_download_file\"\n      }, /*#__PURE__*/React__default.createElement(\"a\", {\n        className: \"sendbird-message__contextmenu--hyperlink\",\n        rel: \"noopener noreferrer\",\n        href: fileMessage === null || fileMessage === void 0 ? void 0 : fileMessage.url,\n        target: \"_blank\"\n      }, /*#__PURE__*/React__default.createElement(Label, {\n        type: LabelTypography.SUBTITLE_1,\n        color: LabelColors.ONBACKGROUND_1\n      }, stringSet.MESSAGE_MENU__SAVE), /*#__PURE__*/React__default.createElement(Icon, {\n        type: IconTypes.DOWNLOAD,\n        fillColor: IconColors.PRIMARY,\n        width: \"24px\",\n        height: \"24px\"\n      }))));\n    }\n  });\n};\nconst EMOJI_SIZE = 38;\nconst MobileBottomSheet = props => {\n  var _message$sender;\n  const {\n    hideMenu,\n    channel,\n    emojiContainer,\n    message,\n    replyType,\n    userId,\n    resendMessage,\n    toggleReaction,\n    isReactionEnabled,\n    showEdit,\n    showRemove,\n    setQuoteMessage,\n    onReplyInThread,\n    isOpenedFromThread = false\n  } = props;\n  const isByMe = (message === null || message === void 0 ? void 0 : (_message$sender = message.sender) === null || _message$sender === void 0 ? void 0 : _message$sender.userId) === userId;\n  const {\n    stringSet\n  } = useLocalization();\n  const showMenuItemCopy = isUserMessage(message);\n  const showMenuItemEdit = isUserMessage(message) && isSentMessage(message) && isByMe;\n  const showMenuItemResend = isFailedMessage(message) && (message === null || message === void 0 ? void 0 : message.isResendable) && isByMe;\n  const showMenuItemDelete = !isPendingMessage(message) && isByMe && !isParentMessage(message);\n  const showMenuItemDownload = !isPendingMessage(message) && isFileMessage(message) && !isVoiceMessage(message);\n  const showReaction = !isFailedMessage(message) && !isPendingMessage(message) && isReactionEnabled;\n  const showMenuItemReply = replyType === 'QUOTE_REPLY' && !isFailedMessage(message) && !isPendingMessage(message) && (channel === null || channel === void 0 ? void 0 : channel.isGroupChannel()) && !(channel !== null && channel !== void 0 && channel.isBroadcast);\n  const showMenuItemThread = replyType === 'THREAD' && !isOpenedFromThread && !isFailedMessage(message) && !isPendingMessage(message) && !isThreadMessage(message) && (channel === null || channel === void 0 ? void 0 : channel.isGroupChannel()) && !(channel !== null && channel !== void 0 && channel.isBroadcast);\n  const disableReaction = (message === null || message === void 0 ? void 0 : message.parentMessageId) > 0;\n  const fileMessage = message;\n  const maxEmojisPerRow = Math.floor(window.innerWidth / EMOJI_SIZE) - 1;\n  const [showEmojisOnly, setShowEmojisOnly] = useState(false);\n  const emojis = getEmojiListAll(emojiContainer);\n  // calculate max emojis that can be shown in screen\n  const visibleEmojis = showEmojisOnly ? emojis : emojis === null || emojis === void 0 ? void 0 : emojis.slice(0, maxEmojisPerRow);\n  const canShowMoreEmojis = emojis.length > maxEmojisPerRow;\n  return /*#__PURE__*/React__default.createElement(BottomSheet, {\n    onBackdropClick: hideMenu\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-message__bottomsheet\"\n  }, showReaction && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-message__bottomsheet-reactions\"\n  }, /*#__PURE__*/React__default.createElement(\"ul\", {\n    className: \"sendbird-message__bottomsheet-reaction-bar\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `\n                    sendbird-message__bottomsheet-reaction-bar__row\n                    ${showEmojisOnly ? 'sendbird-message__bottomsheet-reaction-bar__all' : ''}\n                  `\n  }, visibleEmojis.map(emoji => {\n    var _message$reactions, _message$reactions$fi, _message$reactions$fi2;\n    const isReacted = message === null || message === void 0 ? void 0 : (_message$reactions = message.reactions) === null || _message$reactions === void 0 ? void 0 : (_message$reactions$fi = _message$reactions.filter(reaction => reaction.key === emoji.key)[0]) === null || _message$reactions$fi === void 0 ? void 0 : (_message$reactions$fi2 = _message$reactions$fi.userIds) === null || _message$reactions$fi2 === void 0 ? void 0 : _message$reactions$fi2.some(reactorId => reactorId === userId);\n    return /*#__PURE__*/React__default.createElement(ReactionButton, {\n      key: emoji.key,\n      width: `${EMOJI_SIZE}px`,\n      height: `${EMOJI_SIZE}px`,\n      selected: isReacted,\n      onClick: () => {\n        hideMenu();\n        toggleReaction(message, emoji.key, isReacted);\n      },\n      dataSbId: `ui_mobile_emoji_reactions_menu_${emoji.key}`\n    }, /*#__PURE__*/React__default.createElement(ImageRenderer, {\n      url: (emoji === null || emoji === void 0 ? void 0 : emoji.url) || '',\n      width: \"28px\",\n      height: \"28px\",\n      placeHolder: style => /*#__PURE__*/React__default.createElement(\"div\", {\n        style: style\n      }, /*#__PURE__*/React__default.createElement(Icon, {\n        type: IconTypes.QUESTION,\n        fillColor: IconColors.ON_BACKGROUND_3,\n        width: \"28px\",\n        height: \"28px\"\n      }))\n    }));\n  }), canShowMoreEmojis && !showEmojisOnly && /*#__PURE__*/React__default.createElement(ReactionButton, {\n    key: \"emoji_more\",\n    width: \"38px\",\n    height: \"38px\",\n    onClick: () => {\n      setShowEmojisOnly(true);\n    },\n    dataSbId: \"ui_mobile_emoji_reactions_menu_emojiadd\"\n  }, /*#__PURE__*/React__default.createElement(ImageRenderer, {\n    url: '',\n    width: \"28px\",\n    height: \"28px\",\n    placeHolder: style => /*#__PURE__*/React__default.createElement(\"div\", {\n      style: style\n    }, /*#__PURE__*/React__default.createElement(Icon, {\n      type: IconTypes.EMOJI_MORE,\n      fillColor: IconColors.ON_BACKGROUND_3,\n      width: \"28px\",\n      height: \"28px\"\n    }))\n  }))))), !showEmojisOnly && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-message__bottomsheet--actions\"\n  }, showMenuItemCopy && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-message__bottomsheet--action\",\n    onClick: () => {\n      hideMenu();\n      copyToClipboard(message === null || message === void 0 ? void 0 : message.message);\n    }\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    type: IconTypes.COPY,\n    fillColor: IconColors.PRIMARY,\n    width: \"24px\",\n    height: \"24px\"\n  }), /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.SUBTITLE_1,\n    color: LabelColors.ONBACKGROUND_1\n  }, stringSet === null || stringSet === void 0 ? void 0 : stringSet.MESSAGE_MENU__COPY)), showMenuItemEdit && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-message__bottomsheet--action\",\n    onClick: () => {\n      hideMenu();\n      showEdit(true);\n    }\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    type: IconTypes.EDIT,\n    fillColor: IconColors.PRIMARY,\n    width: \"24px\",\n    height: \"24px\"\n  }), /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.SUBTITLE_1,\n    color: LabelColors.ONBACKGROUND_1\n  }, stringSet === null || stringSet === void 0 ? void 0 : stringSet.MESSAGE_MENU__EDIT)), showMenuItemResend && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-message__bottomsheet--action\",\n    onClick: () => {\n      hideMenu();\n      resendMessage(message);\n    }\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    type: IconTypes.REFRESH,\n    fillColor: IconColors.PRIMARY,\n    width: \"24px\",\n    height: \"24px\"\n  }), /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.SUBTITLE_1,\n    color: LabelColors.ONBACKGROUND_1\n  }, stringSet === null || stringSet === void 0 ? void 0 : stringSet.MESSAGE_MENU__RESEND)), showMenuItemReply && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `sendbird-message__bottomsheet--action\n                      ${disableReaction ? 'sendbird-message__bottomsheet--action-disabled' : ''}\n                    `,\n    role: \"menuitem\",\n    \"aria-disabled\": disableReaction ? true : false,\n    onClick: () => {\n      if (!disableReaction) {\n        hideMenu();\n        setQuoteMessage(message);\n      }\n    }\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    type: IconTypes.REPLY,\n    fillColor: disableReaction ? IconColors.ON_BACKGROUND_3 : IconColors.PRIMARY,\n    width: \"24px\",\n    height: \"24px\"\n  }), /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.SUBTITLE_1,\n    color: disableReaction ? LabelColors.ONBACKGROUND_4 : LabelColors.ONBACKGROUND_1\n  }, stringSet === null || stringSet === void 0 ? void 0 : stringSet.MESSAGE_MENU__REPLY)), showMenuItemThread && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-message__bottomsheet--action\",\n    onClick: () => {\n      hideMenu();\n      onReplyInThread === null || onReplyInThread === void 0 ? void 0 : onReplyInThread({\n        message\n      });\n    }\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    type: IconTypes.THREAD,\n    fillColor: IconColors.PRIMARY,\n    width: \"24px\",\n    height: \"24px\"\n  }), /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.SUBTITLE_1,\n    color: LabelColors.ONBACKGROUND_1\n  }, stringSet.MESSAGE_MENU__THREAD)), showMenuItemDelete && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-message__bottomsheet--action\",\n    onClick: () => {\n      hideMenu();\n      showRemove(true);\n    }\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    type: IconTypes.DELETE,\n    fillColor: IconColors.PRIMARY,\n    width: \"24px\",\n    height: \"24px\"\n  }), /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.SUBTITLE_1,\n    color: LabelColors.ONBACKGROUND_1\n  }, stringSet === null || stringSet === void 0 ? void 0 : stringSet.MESSAGE_MENU__DELETE)), showMenuItemDownload && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-message__bottomsheet--action\",\n    onClick: () => {\n      hideMenu();\n    }\n  }, /*#__PURE__*/React__default.createElement(\"a\", {\n    className: \"sendbird-message__bottomsheet--hyperlink\",\n    rel: \"noopener noreferrer\",\n    href: fileMessage === null || fileMessage === void 0 ? void 0 : fileMessage.url,\n    target: \"_blank\"\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    type: IconTypes.DOWNLOAD,\n    fillColor: IconColors.PRIMARY,\n    width: \"24px\",\n    height: \"24px\"\n  }), /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.SUBTITLE_1,\n    color: LabelColors.ONBACKGROUND_1\n  }, stringSet === null || stringSet === void 0 ? void 0 : stringSet.MESSAGE_MENU__SAVE))))));\n};\nconst MobileMenu = props => {\n  const {\n    message,\n    hideMenu,\n    userId,\n    channel,\n    isReactionEnabled = false,\n    isByMe,\n    replyType,\n    disabled,\n    showRemove,\n    showEdit,\n    resendMessage,\n    setQuoteMessage,\n    emojiContainer,\n    toggleReaction,\n    parentRef,\n    onReplyInThread,\n    isOpenedFromThread\n  } = props;\n  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, isReactionEnabled ? /*#__PURE__*/React__default.createElement(MobileBottomSheet, {\n    channel: channel,\n    message: message,\n    hideMenu: hideMenu,\n    isByMe: isByMe,\n    userId: userId,\n    replyType: replyType,\n    disabled: disabled,\n    showRemove: showRemove,\n    showEdit: showEdit,\n    resendMessage: resendMessage,\n    setQuoteMessage: setQuoteMessage,\n    emojiContainer: emojiContainer,\n    toggleReaction: toggleReaction,\n    isReactionEnabled: isReactionEnabled,\n    onReplyInThread: onReplyInThread,\n    isOpenedFromThread: isOpenedFromThread\n  }) : /*#__PURE__*/React__default.createElement(MobileContextMenu, {\n    channel: channel,\n    userId: userId,\n    message: message,\n    hideMenu: hideMenu,\n    isByMe: isByMe,\n    showEdit: showEdit,\n    replyType: replyType,\n    disabled: disabled,\n    showRemove: showRemove,\n    resendMessage: resendMessage,\n    setQuoteMessage: setQuoteMessage,\n    parentRef: parentRef,\n    onReplyInThread: onReplyInThread,\n    isOpenedFromThread: isOpenedFromThread\n  }));\n};\nexport { MobileMenu as M };","map":{"version":3,"mappings":"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","names":["MobileContextMenu","props","hideMenu","channel","message","replyType","userId","resendMessage","showEdit","showRemove","setQuoteMessage","parentRef","onReplyInThread","isOpenedFromThread","isByMe","sender","_message$sender","stringSet","useLocalization","showMenuItemCopy","isUserMessage","showMenuItemEdit","isSentMessage","showMenuItemResend","isFailedMessage","isResendable","showMenuItemDelete","isPendingMessage","showMenuItemDownload","isFileMessage","isSuper","isBroadcast","showMenuItemReply","isGroupChannel","showMenuItemThread","isThreadMessage","fileMessage","React","ContextMenu","isOpen","menuItems","MenuItems","className","parentContainRef","closeDropdown","MenuItem","onClick","copyToClipboard","dataSbId","Label","type","LabelTypography","SUBTITLE_1","color","LabelColors","ONBACKGROUND_1","MESSAGE_MENU__COPY","Icon","IconTypes","COPY","fillColor","IconColors","PRIMARY","width","height","disable","parentMessageId","ONBACKGROUND_4","MESSAGE_MENU__REPLY","REPLY","ON_BACKGROUND_4","MESSAGE_MENU__THREAD","THREAD","MESSAGE_MENU__EDIT","EDIT","MESSAGE_MENU__RESEND","REFRESH","threadInfo","_message$threadInfo","replyCount","_message$threadInfo2","MESSAGE_MENU__DELETE","DELETE","_message$threadInfo3","rel","href","url","target","MESSAGE_MENU__SAVE","DOWNLOAD","EMOJI_SIZE","MobileBottomSheet","emojiContainer","toggleReaction","isReactionEnabled","isParentMessage","isVoiceMessage","showReaction","disableReaction","maxEmojisPerRow","Math","floor","window","innerWidth","showEmojisOnly","setShowEmojisOnly","useState","emojis","getEmojiListAll","visibleEmojis","slice","canShowMoreEmojis","length","BottomSheet","onBackdropClick","map","emoji","isReacted","reactions","_message$reactions","filter","reaction","key","_message$reactions$fi","userIds","_message$reactions$fi2","some","reactorId","ReactionButton","selected","ImageRenderer","placeHolder","style","QUESTION","ON_BACKGROUND_3","EMOJI_MORE","role","MobileMenu","disabled"],"sources":["C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\ui\\MobileMenu\\MobileContextMenu.tsx","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\ui\\MobileMenu\\MobileBottomSheet.tsx","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\ui\\MobileMenu\\index.tsx"],"sourcesContent":["import React from 'react';\nimport type { BaseMenuProps } from './types';\nimport type { FileMessage, UserMessage } from '@sendbird/chat/message';\n\nimport ContextMenu, { MenuItems, MenuItem } from '../ContextMenu';\n\nimport {\n  isFailedMessage,\n  isPendingMessage,\n  isSentMessage,\n  isUserMessage,\n  copyToClipboard,\n  isFileMessage,\n  isThreadMessage,\n} from '../../utils';\nimport { useLocalization } from '../../lib/LocalizationContext';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport Label, { LabelColors, LabelTypography } from '../Label';\nimport { GroupChannel } from '@sendbird/chat/groupChannel';\n\nconst MobileContextMenu: React.FunctionComponent<BaseMenuProps> = (props: BaseMenuProps): React.ReactElement => {\n  const {\n    hideMenu,\n    channel,\n    message,\n    replyType,\n    userId,\n    resendMessage,\n    showEdit,\n    showRemove,\n    setQuoteMessage,\n    parentRef,\n    onReplyInThread,\n    isOpenedFromThread = false,\n  } = props;\n  const isByMe = message?.sender?.userId === userId;\n  const { stringSet } = useLocalization();\n  const showMenuItemCopy: boolean = isUserMessage(message as UserMessage);\n  const showMenuItemEdit: boolean = (isUserMessage(message as UserMessage) && isSentMessage(message) && isByMe);\n  const showMenuItemResend: boolean = (isFailedMessage(message) && message?.isResendable && isByMe);\n  const showMenuItemDelete: boolean = !isPendingMessage(message) && isByMe;\n  const showMenuItemDownload: boolean = !isPendingMessage(message)\n    && isFileMessage(message)\n    && !(channel as GroupChannel)?.isSuper\n    && !(channel as GroupChannel)?.isBroadcast;\n  const showMenuItemReply: boolean = (replyType === 'QUOTE_REPLY')\n    && !isFailedMessage(message)\n    && !isPendingMessage(message)\n    && channel?.isGroupChannel();\n  const showMenuItemThread: boolean = (replyType === 'THREAD') && !isOpenedFromThread\n    && !isFailedMessage(message)\n    && !isPendingMessage(message)\n    && !isThreadMessage(message)\n    && channel?.isGroupChannel();\n\n  const fileMessage = message as FileMessage;\n  return (\n    <ContextMenu\n      isOpen\n      menuItems={() => (\n        <MenuItems\n          className=\"sendbird-message__mobile-context-menu\"\n          parentRef={parentRef}\n          parentContainRef={parentRef}\n          closeDropdown={hideMenu}\n        >\n          {showMenuItemCopy && (\n            <MenuItem\n              className=\"sendbird-message__mobile-context-menu-item menu-item-copy\"\n              onClick={() => {\n                hideMenu();\n                copyToClipboard((message as UserMessage)?.message);\n              }}\n              dataSbId=\"ui_mobile_message_item_menu_copy\"\n            >\n              <Label\n                type={LabelTypography.SUBTITLE_1}\n                color={LabelColors.ONBACKGROUND_1}\n              >\n                {stringSet?.MESSAGE_MENU__COPY}\n              </Label>\n              <Icon\n                type={IconTypes.COPY}\n                fillColor={IconColors.PRIMARY}\n                width=\"24px\"\n                height=\"24px\"\n              />\n            </MenuItem>\n          )}\n          {showMenuItemReply && (\n            <MenuItem\n              className=\"sendbird-message__mobile-context-menu-item menu-item-reply\"\n              onClick={() => {\n                hideMenu();\n                setQuoteMessage(message);\n              }}\n              disable={(message?.parentMessageId ?? 0) > 0}\n              dataSbId=\"ui_mobile_message_item_menu_reply\"\n            >\n              <Label\n                type={LabelTypography.SUBTITLE_1}\n                color={\n                  (message?.parentMessageId ?? 0) > 0\n                    ? LabelColors.ONBACKGROUND_4\n                    : LabelColors.ONBACKGROUND_1\n                }\n              >\n                {stringSet.MESSAGE_MENU__REPLY}\n              </Label>\n              <Icon\n                type={IconTypes.REPLY}\n                fillColor={\n                  (message?.parentMessageId ?? 0) > 0\n                    ? IconColors.ON_BACKGROUND_4\n                    : IconColors.PRIMARY\n                }\n                width=\"24px\"\n                height=\"24px\"\n              />\n            </MenuItem>\n          )}\n          {showMenuItemThread && (\n            <MenuItem\n              className=\"sendbird-message__mobile-context-menu-item menu-item-reply\"\n              onClick={() => {\n                hideMenu();\n                onReplyInThread?.({ message });\n              }}\n              dataSbId=\"ui_mobile_message_item_menu_thread\"\n            >\n              <Label\n                type={LabelTypography.SUBTITLE_1}\n                color={LabelColors.ONBACKGROUND_1}\n              >\n                {stringSet.MESSAGE_MENU__THREAD}\n              </Label>\n              <Icon\n                type={IconTypes.THREAD}\n                fillColor={IconColors.PRIMARY}\n                width=\"24px\"\n                height=\"24px\"\n              />\n            </MenuItem>\n          )}\n          {showMenuItemEdit && (\n            <MenuItem\n              className=\"sendbird-message__mobile-context-menu-item menu-item-edit\"\n              onClick={() => {\n                hideMenu();\n                showEdit(true);\n              }}\n              dataSbId=\"ui_mobile_message_item_menu_edit\"\n            >\n              <Label\n                type={LabelTypography.SUBTITLE_1}\n                color={LabelColors.ONBACKGROUND_1}\n              >\n                {stringSet.MESSAGE_MENU__EDIT}\n              </Label>\n              <Icon\n                type={IconTypes.EDIT}\n                fillColor={IconColors.PRIMARY}\n                width=\"24px\"\n                height=\"24px\"\n              />\n            </MenuItem>\n          )}\n          {showMenuItemResend && (\n            <MenuItem\n              className=\"sendbird-message__mobile-context-menu-item menu-item-resend\"\n              onClick={() => {\n                hideMenu();\n                resendMessage(message);\n              }}\n              dataSbId=\"ui_mobile_message_item_menu_resend\"\n            >\n              <Label\n                type={LabelTypography.SUBTITLE_1}\n                color={LabelColors.ONBACKGROUND_1}\n              >\n                {stringSet.MESSAGE_MENU__RESEND}\n              </Label>\n              <Icon\n                type={IconTypes.REFRESH}\n                fillColor={IconColors.PRIMARY}\n                width=\"24px\"\n                height=\"24px\"\n              />\n            </MenuItem>\n          )}\n          {showMenuItemDelete && (\n            <MenuItem\n              className=\"sendbird-message__mobile-context-menu-item menu-item-delete\"\n              onClick={() => {\n                hideMenu();\n                showRemove(true);\n              }}\n              disable={(message?.threadInfo?.replyCount ?? 0) > 0}\n              dataSbId=\"ui_mobile_message_item_menu_delete\"\n            >\n              <Label\n                type={LabelTypography.SUBTITLE_1}\n                color={\n                  (message?.threadInfo?.replyCount ?? 0) > 0\n                    ? LabelColors.ONBACKGROUND_4\n                    : LabelColors.ONBACKGROUND_1\n                }\n              >\n                {stringSet.MESSAGE_MENU__DELETE}\n              </Label>\n              <Icon\n                type={IconTypes.DELETE}\n                fillColor={\n                  (message?.threadInfo?.replyCount ?? 0) > 0\n                    ? IconColors.ON_BACKGROUND_4\n                    : IconColors.PRIMARY\n                }\n                width=\"24px\"\n                height=\"24px\"\n              />\n            </MenuItem>\n          )}\n          {showMenuItemDownload && (\n            <MenuItem\n              className=\"sendbird-message__mobile-context-menu-item menu-item-save\"\n              onClick={() => {\n                hideMenu();\n              }}\n              dataSbId=\"ui_mobile_message_item_menu_download_file\"\n            >\n              <a\n                className=\"sendbird-message__contextmenu--hyperlink\"\n                rel=\"noopener noreferrer\"\n                href={fileMessage?.url}\n                target=\"_blank\"\n              >\n                <Label\n                  type={LabelTypography.SUBTITLE_1}\n                  color={LabelColors.ONBACKGROUND_1}\n                >\n                  {stringSet.MESSAGE_MENU__SAVE}\n                </Label>\n                <Icon\n                  type={IconTypes.DOWNLOAD}\n                  fillColor={IconColors.PRIMARY}\n                  width=\"24px\"\n                  height=\"24px\"\n                />\n              </a>\n            </MenuItem>\n          )}\n        </MenuItems>\n      )}\n    />\n  );\n};\n\nexport default MobileContextMenu;\n","import type { Emoji } from '@sendbird/chat';\nimport { FileMessage, Reaction, UserMessage } from '@sendbird/chat/message';\nimport React, { ReactElement, useState } from 'react';\n\nimport type { MobileBottomSheetProps } from './types';\nimport type { GroupChannel } from '@sendbird/chat/groupChannel';\n\nimport {\n  getEmojiListAll,\n  isFailedMessage,\n  isPendingMessage,\n  isSentMessage,\n  isUserMessage,\n  copyToClipboard,\n  isFileMessage,\n  isParentMessage,\n  isVoiceMessage,\n  isThreadMessage,\n} from '../../utils';\nimport BottomSheet from '../BottomSheet';\nimport ImageRenderer from '../ImageRenderer';\nimport ReactionButton from '../ReactionButton';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport { useLocalization } from '../../lib/LocalizationContext';\n\nconst EMOJI_SIZE = 38;\n\nconst MobileBottomSheet: React.FunctionComponent<MobileBottomSheetProps> = (props: MobileBottomSheetProps) => {\n  const {\n    hideMenu,\n    channel,\n    emojiContainer,\n    message,\n    replyType,\n    userId,\n    resendMessage,\n    toggleReaction,\n    isReactionEnabled,\n    showEdit,\n    showRemove,\n    setQuoteMessage,\n    onReplyInThread,\n    isOpenedFromThread = false,\n  } = props;\n  const isByMe = message?.sender?.userId === userId;\n  const { stringSet } = useLocalization();\n  const showMenuItemCopy: boolean = isUserMessage(message as UserMessage);\n  const showMenuItemEdit: boolean = (isUserMessage(message as UserMessage) && isSentMessage(message) && isByMe);\n  const showMenuItemResend: boolean = (isFailedMessage(message) && message?.isResendable && isByMe);\n  const showMenuItemDelete: boolean = !isPendingMessage(message) && isByMe && !isParentMessage(message);\n  const showMenuItemDownload: boolean = !isPendingMessage(message) && isFileMessage(message) && !isVoiceMessage(message);\n  const showReaction: boolean = !isFailedMessage(message) && !isPendingMessage(message) && isReactionEnabled;\n  const showMenuItemReply: boolean = (replyType === 'QUOTE_REPLY')\n    && !isFailedMessage(message)\n    && !isPendingMessage(message)\n    && (channel?.isGroupChannel() && !(channel as GroupChannel)?.isBroadcast);\n  const showMenuItemThread: boolean = (replyType === 'THREAD') && !isOpenedFromThread\n    && !isFailedMessage(message)\n    && !isPendingMessage(message)\n    && !isThreadMessage(message)\n    && (channel?.isGroupChannel() && !(channel as GroupChannel)?.isBroadcast);\n  const disableReaction = message?.parentMessageId > 0;\n\n  const fileMessage = message as FileMessage;\n  const maxEmojisPerRow = Math.floor(window.innerWidth / EMOJI_SIZE) - 1;\n  const [showEmojisOnly, setShowEmojisOnly] = useState<boolean>(false);\n  const emojis = getEmojiListAll(emojiContainer);\n  // calculate max emojis that can be shown in screen\n  const visibleEmojis = showEmojisOnly\n    ? emojis\n    : emojis?.slice(0, maxEmojisPerRow);\n  const canShowMoreEmojis = emojis.length > maxEmojisPerRow;\n  return (\n    <BottomSheet onBackdropClick={hideMenu}>\n      <div className='sendbird-message__bottomsheet'>\n        {\n          showReaction && (\n            <div className='sendbird-message__bottomsheet-reactions'>\n              <ul\n                className=\"sendbird-message__bottomsheet-reaction-bar\"\n              >\n                <div\n                  className={`\n                    sendbird-message__bottomsheet-reaction-bar__row\n                    ${showEmojisOnly ? 'sendbird-message__bottomsheet-reaction-bar__all' : ''}\n                  `}\n                >\n                  {visibleEmojis.map((emoji: Emoji): React.ReactElement => {\n                    const isReacted: boolean = message?.reactions\n                      ?.filter((reaction: Reaction): boolean => reaction.key === emoji.key)[0]\n                      ?.userIds\n                      ?.some((reactorId: string): boolean => reactorId === userId);\n                    return (\n                      <ReactionButton\n                        key={emoji.key}\n                        width={`${EMOJI_SIZE}px`}\n                        height={`${EMOJI_SIZE}px`}\n                        selected={isReacted}\n                        onClick={(): void => {\n                          hideMenu();\n                          toggleReaction(message, emoji.key, isReacted);\n                        }}\n                        dataSbId={`ui_mobile_emoji_reactions_menu_${emoji.key}`}\n                      >\n                        <ImageRenderer\n                          url={emoji?.url || ''}\n                          width=\"28px\"\n                          height=\"28px\"\n                          placeHolder={(style: Record<string, unknown>): ReactElement => (\n                            <div style={style}>\n                              <Icon\n                                type={IconTypes.QUESTION}\n                                fillColor={IconColors.ON_BACKGROUND_3}\n                                width=\"28px\"\n                                height=\"28px\"\n                              />\n                            </div>\n                          )}\n                        />\n                      </ReactionButton>\n                    );\n                  })}\n                  {\n                    canShowMoreEmojis && !showEmojisOnly && (\n                      <ReactionButton\n                        key=\"emoji_more\"\n                        width=\"38px\"\n                        height=\"38px\"\n                        onClick={(): void => {\n                          setShowEmojisOnly(true);\n                        }}\n                        dataSbId=\"ui_mobile_emoji_reactions_menu_emojiadd\"\n                      >\n                        <ImageRenderer\n                          url={''}\n                          width=\"28px\"\n                          height=\"28px\"\n                          placeHolder={(style: Record<string, unknown>): React.ReactElement => (\n                            <div style={style}>\n                              <Icon\n                                type={IconTypes.EMOJI_MORE}\n                                fillColor={IconColors.ON_BACKGROUND_3}\n                                width=\"28px\"\n                                height=\"28px\"\n                              />\n                            </div>\n                          )}\n                        />\n                      </ReactionButton>\n                    )\n                  }\n                </div>\n              </ul>\n            </div>\n          )\n        }\n        {\n          !showEmojisOnly && (\n            <div className='sendbird-message__bottomsheet--actions'>\n              {showMenuItemCopy && (\n                <div\n                  className='sendbird-message__bottomsheet--action'\n                  onClick={() => {\n                    hideMenu();\n                    copyToClipboard((message as UserMessage)?.message);\n                  }}\n                >\n                  <Icon\n                    type={IconTypes.COPY}\n                    fillColor={IconColors.PRIMARY}\n                    width=\"24px\"\n                    height=\"24px\"\n                  />\n                  <Label type={LabelTypography.SUBTITLE_1} color={LabelColors.ONBACKGROUND_1}>\n                    {stringSet?.MESSAGE_MENU__COPY}\n                  </Label>\n                </div>\n              )}\n              {\n                showMenuItemEdit && (\n                  <div\n                    className='sendbird-message__bottomsheet--action'\n                    onClick={() => {\n                      hideMenu();\n                      showEdit(true);\n                    }}\n                  >\n                    <Icon\n                      type={IconTypes.EDIT}\n                      fillColor={IconColors.PRIMARY}\n                      width=\"24px\"\n                      height=\"24px\"\n                    />\n                    <Label type={LabelTypography.SUBTITLE_1} color={LabelColors.ONBACKGROUND_1}>\n                      {stringSet?.MESSAGE_MENU__EDIT}\n                    </Label>\n                  </div>\n                )\n              }\n              {\n                showMenuItemResend && (\n                  <div\n                    className='sendbird-message__bottomsheet--action'\n                    onClick={() => {\n                      hideMenu();\n                      resendMessage(message);\n                    }}\n                  >\n                    <Icon\n                      type={IconTypes.REFRESH}\n                      fillColor={IconColors.PRIMARY}\n                      width=\"24px\"\n                      height=\"24px\"\n                    />\n                    <Label type={LabelTypography.SUBTITLE_1} color={LabelColors.ONBACKGROUND_1}>\n                      {stringSet?.MESSAGE_MENU__RESEND}\n                    </Label>\n                  </div>\n                )\n              }\n              {\n                showMenuItemReply && (\n                  <div\n                    className={`sendbird-message__bottomsheet--action\n                      ${disableReaction ? 'sendbird-message__bottomsheet--action-disabled' : ''}\n                    `}\n                    role=\"menuitem\"\n                    aria-disabled={disableReaction ? true : false}\n                    onClick={() => {\n                      if (!disableReaction) {\n                        hideMenu();\n                        setQuoteMessage(message);\n                      }\n                    }}\n                  >\n                    <Icon\n                      type={IconTypes.REPLY}\n                      fillColor={disableReaction\n                        ? IconColors.ON_BACKGROUND_3\n                        : IconColors.PRIMARY\n                      }\n                      width=\"24px\"\n                      height=\"24px\"\n                    />\n                    <Label\n                      type={LabelTypography.SUBTITLE_1}\n                      color={disableReaction ? LabelColors.ONBACKGROUND_4 : LabelColors.ONBACKGROUND_1}\n                    >\n                      {stringSet?.MESSAGE_MENU__REPLY}\n                    </Label>\n                  </div>\n                )\n              }\n              {showMenuItemThread && (\n                <div\n                  className='sendbird-message__bottomsheet--action'\n                  onClick={() => {\n                    hideMenu();\n                    onReplyInThread?.({ message });\n                  }}\n                >\n                  <Icon\n                    type={IconTypes.THREAD}\n                    fillColor={IconColors.PRIMARY}\n                    width=\"24px\"\n                    height=\"24px\"\n                  />\n                  <Label type={LabelTypography.SUBTITLE_1} color={LabelColors.ONBACKGROUND_1}>\n                    {stringSet.MESSAGE_MENU__THREAD}\n                  </Label>\n                </div>\n              )}\n              {\n                showMenuItemDelete && (\n                  <div\n                    className='sendbird-message__bottomsheet--action'\n                    onClick={() => {\n                      hideMenu();\n                      showRemove(true);\n                    }}\n                  >\n                    <Icon\n                      type={IconTypes.DELETE}\n                      fillColor={IconColors.PRIMARY}\n                      width=\"24px\"\n                      height=\"24px\"\n                    />\n                    <Label type={LabelTypography.SUBTITLE_1} color={LabelColors.ONBACKGROUND_1}>\n                      {stringSet?.MESSAGE_MENU__DELETE}\n                    </Label>\n                  </div>\n                )\n              }\n              {\n                showMenuItemDownload && (\n                  <div\n                    className='sendbird-message__bottomsheet--action'\n                    onClick={() => {\n                      hideMenu();\n                    }}\n                  >\n                    <a\n                      className=\"sendbird-message__bottomsheet--hyperlink\"\n                      rel=\"noopener noreferrer\"\n                      href={fileMessage?.url}\n                      target=\"_blank\"\n                    >\n                      <Icon\n                        type={IconTypes.DOWNLOAD}\n                        fillColor={IconColors.PRIMARY}\n                        width=\"24px\"\n                        height=\"24px\"\n                      />\n                      <Label type={LabelTypography.SUBTITLE_1} color={LabelColors.ONBACKGROUND_1}>\n                        {stringSet?.MESSAGE_MENU__SAVE}\n                      </Label>\n                    </a>\n                  </div>\n                )\n              }\n            </div>\n          )\n        }\n      </div>\n    </BottomSheet>\n  );\n};\n\nexport default MobileBottomSheet;\n","import './mobile-menu.scss';\n\nimport React from 'react';\nimport MobileContextMenu from './MobileContextMenu';\nimport MobileBottomSheet from './MobileBottomSheet';\nimport type { MobileBottomSheetProps } from './types';\n\nconst MobileMenu: React.FC<MobileBottomSheetProps> = (props: MobileBottomSheetProps) => {\n  const {\n    message,\n    hideMenu,\n    userId,\n    channel,\n    isReactionEnabled = false,\n    isByMe,\n    replyType,\n    disabled,\n    showRemove,\n    showEdit,\n    resendMessage,\n    setQuoteMessage,\n    emojiContainer,\n    toggleReaction,\n    parentRef,\n    onReplyInThread,\n    isOpenedFromThread,\n  } = props;\n  return (\n    <>\n      {\n        isReactionEnabled\n          ? (\n            <MobileBottomSheet\n              channel={channel}\n              message={message}\n              hideMenu={hideMenu}\n              isByMe={isByMe}\n              userId={userId}\n              replyType={replyType}\n              disabled={disabled}\n              showRemove={showRemove}\n              showEdit={showEdit}\n              resendMessage={resendMessage}\n              setQuoteMessage={setQuoteMessage}\n              emojiContainer={emojiContainer}\n              toggleReaction={toggleReaction}\n              isReactionEnabled={isReactionEnabled}\n              onReplyInThread={onReplyInThread}\n              isOpenedFromThread={isOpenedFromThread}\n            />\n          ) : (\n            <MobileContextMenu\n              channel={channel}\n              userId={userId}\n              message={message}\n              hideMenu={hideMenu}\n              isByMe={isByMe}\n              showEdit={showEdit}\n              replyType={replyType}\n              disabled={disabled}\n              showRemove={showRemove}\n              resendMessage={resendMessage}\n              setQuoteMessage={setQuoteMessage}\n              parentRef={parentRef}\n              onReplyInThread={onReplyInThread}\n              isOpenedFromThread={isOpenedFromThread}\n            />\n          )\n      }\n    </>\n  );\n};\n\nexport default MobileMenu;\n"]},"metadata":{},"sourceType":"module"}