{"ast":null,"code":"import React__default, { useContext, useState } from 'react';\nimport { a as LocalizationContext } from '../../LocalizationContext-076d6d2e.js';\nimport { L as Label, a as LabelTypography, b as LabelColors } from '../../index-63949de5.js';\nimport Icon, { IconTypes, IconColors } from '../../ui/Icon.js';\nimport Badge from '../../ui/Badge.js';\nimport { M as MemberList } from '../../MemberList-061d186f.js';\nimport { useChannelSettingsContext } from '../context.js';\nimport '../../stringSet-13bbd4a2.js';\nimport '../../index-99aabd9e.js';\nimport 'prop-types';\nimport '../../ui/Button.js';\nimport '../../ui/IconButton.js';\nimport '../../_rollupPluginBabelHelpers-6bb0305c.js';\nimport '../../ui/ContextMenu.js';\nimport 'react-dom';\nimport '../../ui/SortByRow.js';\nimport '../../uuid-1adedf62.js';\nimport '../../index-7eb65acf.js';\nimport '../../utils/message/getOutgoingMessageState.js';\nimport './UserListItem.js';\nimport '../../UserProfileContext-9cfbab4d.js';\nimport '../../ui/Avatar.js';\nimport '../../ui/ImageRenderer.js';\nimport '../../ui/MutedAvatarOverlay.js';\nimport '../../ui/UserProfile.js';\nimport '../../sendbirdSelectors.js';\nimport '../../topics-b2b77fb9.js';\nimport '../../utils-4bbbca2c.js';\nimport '../../useSendbirdStateContext.js';\nimport '../../withSendbird.js';\nimport '../../ui/Modal.js';\nimport '../../index-38e61c64.js';\nimport '../../MediaQueryContext-11f0e43f.js';\nimport '../../ui/UserListItem.js';\nimport '../../ui/Checkbox.js';\nconst kFormatter = num => {\n  return Math.abs(num) > 999 ? `${(Math.abs(num) / 1000).toFixed(1)}K` : num;\n};\nconst UserPanel = () => {\n  const {\n    stringSet\n  } = useContext(LocalizationContext);\n  const [showAccordion, setShowAccordion] = useState(false);\n  const {\n    channel\n  } = useChannelSettingsContext();\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-settings__user-panel\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: ['sendbird-channel-settings__panel-item', 'sendbird-channel-settings__members'].join(' '),\n    role: \"switch\",\n    \"aria-checked\": showAccordion,\n    onKeyDown: () => setShowAccordion(!showAccordion),\n    onClick: () => setShowAccordion(!showAccordion),\n    tabIndex: 0\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    className: \"sendbird-channel-settings__panel-icon-left\",\n    type: IconTypes.MEMBERS,\n    fillColor: IconColors.PRIMARY,\n    height: \"24px\",\n    width: \"24px\"\n  }), /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.SUBTITLE_1,\n    color: LabelColors.ONBACKGROUND_1\n  }, stringSet.CHANNEL_SETTING__MEMBERS__TITLE, /*#__PURE__*/React__default.createElement(Badge, {\n    className: 'sendbird-channel-settings__badge',\n    count: kFormatter(channel === null || channel === void 0 ? void 0 : channel.memberCount)\n  })), /*#__PURE__*/React__default.createElement(Icon, {\n    className: ['sendbird-channel-settings__panel-icon-right', 'sendbird-channel-settings__panel-icon--chevron', showAccordion ? 'sendbird-channel-settings__panel-icon--open' : ''].join(' '),\n    type: IconTypes.CHEVRON_RIGHT,\n    height: \"24px\",\n    width: \"24px\"\n  })), showAccordion && /*#__PURE__*/React__default.createElement(MemberList, null));\n};\nexport { UserPanel as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBA,MAAMA,UAAU,GAAIC,GAAW,IAAoB;EACjD,OAAOC,IAAI,CAACC,GAAG,CAACF,GAAG,CAAC,GAAG,GAAG,GACnB,IAACC,IAAI,CAACC,GAAG,CAACF,GAAG,CAAC,GAAG,IAAI,EAAEG,OAAO,CAAC,CAAC,CAAI,MACvCH,GAAG;AACT,CAAC;AAEKI,eAAmB,GAAGA,MAAM;EAChC,MAAM;IAAEC;EAAU,CAAC,GAAGC,UAAU,CAACC,mBAAmB,CAAC;EACrD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGC,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM;IAAEC;GAAS,GAAGC,yBAAyB,EAAE;EAC/C,oBACEC;IAAKC,SAAS,EAAC;GACbD;IACEC,SAAS,EAAE,CACT,uCAAuC,EACvC,oCAAoC,CACrC,CAACC,IAAI,CAAC,GAAG,CAAE;IACZC,IAAI,EAAC,QAAQ;IACb,gBAAcR,aAAc;IAC5BS,SAAS,EAAEA,MAAMR,gBAAgB,CAAC,CAACD,aAAa,CAAE;IAClDU,OAAO,EAAEA,MAAMT,gBAAgB,CAAC,CAACD,aAAa,CAAE;IAChDW,QAAQ,EAAE;EAAE,gBAEZN,6BAACO,IAAI;IACHN,SAAS,EAAC,4CAA4C;IACtDO,IAAI,EAAEC,SAAS,CAACC,OAAQ;IACxBC,SAAS,EAAEC,UAAU,CAACC,OAAQ;IAC9BC,MAAM,EAAC,MAAM;IACbC,KAAK,EAAC;EAAM,EACZ,eACFf,6BAACgB,KAAK;IACJR,IAAI,EAAES,eAAe,CAACC,UAAW;IACjCC,KAAK,EAAEC,WAAW,CAACC;GAElB7B,WAAS,CAAC8B,+BAA+B,eAC1CtB,6BAACuB,KAAK;IACJtB,SAAS,EAAE,kCAAmC;IAC9CuB,KAAK,EAAEtC,UAAU,CAACY,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAE2B,WAAW;EAAE,EACxC,CACI,eACRzB,6BAACO,IAAI;IACHN,SAAS,EAAE,CACT,6CAA6C,EAC7C,gDAAgD,EAC/CN,aAAa,GAAG,6CAA6C,GAAG,EAAE,CACpE,CAACO,IAAI,CAAC,GAAG,CAAE;IACZM,IAAI,EAAEC,SAAS,CAACiB,aAAc;IAC9BZ,MAAM,EAAC,MAAM;IACbC,KAAK,EAAC;GACN,EACE,EAEJpB,aAAa,iBACXK,6BAAC2B,UAAU,OACZ,CAEC;AAEV","names":["kFormatter","num","Math","abs","toFixed","UserPanel","stringSet","useContext","LocalizationContext","showAccordion","setShowAccordion","useState","channel","useChannelSettingsContext","React","className","join","role","onKeyDown","onClick","tabIndex","Icon","type","IconTypes","MEMBERS","fillColor","IconColors","PRIMARY","height","width","Label","LabelTypography","SUBTITLE_1","color","LabelColors","ONBACKGROUND_1","CHANNEL_SETTING__MEMBERS__TITLE","Badge","count","memberCount","CHEVRON_RIGHT","MemberList"],"sources":["C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\modules\\ChannelSettings\\components\\UserPanel\\index.tsx"],"sourcesContent":["import './user-panel.scss';\n\nimport React, { useContext, useState } from 'react';\n\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport\nLabel, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport Badge from '../../../../ui/Badge';\n\nimport MemberList from '../ModerationPanel/MemberList';\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\n\nconst kFormatter = (num: number): string|number => {\n  return Math.abs(num) > 999\n    ? `${(Math.abs(num) / 1000).toFixed(1)}K`\n    : num;\n};\n\nconst UserPanel: React.FC = () => {\n  const { stringSet } = useContext(LocalizationContext);\n  const [showAccordion, setShowAccordion] = useState(false);\n  const { channel } = useChannelSettingsContext();\n  return (\n    <div className='sendbird-channel-settings__user-panel'>\n      <div\n        className={[\n          'sendbird-channel-settings__panel-item',\n          'sendbird-channel-settings__members',\n        ].join(' ')}\n        role=\"switch\"\n        aria-checked={showAccordion}\n        onKeyDown={() => setShowAccordion(!showAccordion)}\n        onClick={() => setShowAccordion(!showAccordion)}\n        tabIndex={0}\n      >\n        <Icon\n          className=\"sendbird-channel-settings__panel-icon-left\"\n          type={IconTypes.MEMBERS}\n          fillColor={IconColors.PRIMARY}\n          height=\"24px\"\n          width=\"24px\"\n        />\n        <Label\n          type={LabelTypography.SUBTITLE_1}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {stringSet.CHANNEL_SETTING__MEMBERS__TITLE}\n          <Badge\n            className={'sendbird-channel-settings__badge'}\n            count={kFormatter(channel?.memberCount)}\n          />\n        </Label>\n        <Icon\n          className={[\n            'sendbird-channel-settings__panel-icon-right',\n            'sendbird-channel-settings__panel-icon--chevron',\n            (showAccordion ? 'sendbird-channel-settings__panel-icon--open' : ''),\n          ].join(' ')}\n          type={IconTypes.CHEVRON_RIGHT}\n          height=\"24px\"\n          width=\"24px\"\n        />\n      </div>\n      {\n        showAccordion && (\n          <MemberList />\n        )\n      }\n    </div>\n  );\n};\n\nexport default UserPanel;\n"]},"metadata":{},"sourceType":"module"}