{"ast":null,"code":"import React__default, { useMemo, useRef, useContext, useState } from 'react';\nimport Modal from './ui/Modal.js';\nimport { a as LocalizationContext } from './LocalizationContext-076d6d2e.js';\nimport useSendbirdStateContext from './useSendbirdStateContext.js';\nimport Input, { InputLabel } from './ui/Input.js';\nimport Avatar from './ui/Avatar.js';\nimport Icon, { IconTypes } from './ui/Icon.js';\nimport { ButtonTypes } from './ui/Button.js';\nimport { L as Label, a as LabelTypography, b as LabelColors } from './index-63949de5.js';\nimport TextButton from './ui/TextButton.js';\nimport { n as noop } from './utils-4bbbca2c.js';\nimport { U as USER_ACTIONS } from './actionTypes-ce6caec1.js';\nconst EditUserProfileProviderContext = /*#__PURE__*/React__default.createContext(undefined);\nconst EditUserProfileProvider = props => {\n  const {\n    children,\n    onEditProfile,\n    onCancel,\n    onThemeChange\n  } = props;\n  const value = useMemo(() => {\n    return {\n      onEditProfile,\n      onCancel,\n      onThemeChange\n    };\n  }, []);\n  return /*#__PURE__*/React__default.createElement(EditUserProfileProviderContext.Provider, {\n    value: value\n  }, children);\n};\nconst useEditUserProfileContext = () => React__default.useContext(EditUserProfileProviderContext);\nfunction EditUserProfile() {\n  var _store$config, _store$config2, _store$stores, _store$stores$userSto, _store$stores2, _store$stores2$sdkSto, _store$dispatchers;\n  const editProfileProps = useEditUserProfileContext();\n  const store = useSendbirdStateContext();\n  const hiddenInputRef = useRef(null);\n  const inputRef = useRef(null);\n  const formRef = useRef(null);\n  const {\n    stringSet\n  } = useContext(LocalizationContext);\n  const [currentImg, setCurrentImg] = useState(null);\n  const [newFile, setNewFile] = useState(null);\n  const {\n    onEditProfile,\n    onCancel,\n    onThemeChange\n  } = editProfileProps;\n  const theme = (store === null || store === void 0 ? void 0 : (_store$config = store.config) === null || _store$config === void 0 ? void 0 : _store$config.theme) || 'light';\n  const changeTheme = (store === null || store === void 0 ? void 0 : (_store$config2 = store.config) === null || _store$config2 === void 0 ? void 0 : _store$config2.setCurrenttheme) || noop;\n  const user = store === null || store === void 0 ? void 0 : (_store$stores = store.stores) === null || _store$stores === void 0 ? void 0 : (_store$stores$userSto = _store$stores.userStore) === null || _store$stores$userSto === void 0 ? void 0 : _store$stores$userSto.user;\n  const sdk = store === null || store === void 0 ? void 0 : (_store$stores2 = store.stores) === null || _store$stores2 === void 0 ? void 0 : (_store$stores2$sdkSto = _store$stores2.sdkStore) === null || _store$stores2$sdkSto === void 0 ? void 0 : _store$stores2$sdkSto.sdk;\n  const userDispatcher = store === null || store === void 0 ? void 0 : (_store$dispatchers = store.dispatchers) === null || _store$dispatchers === void 0 ? void 0 : _store$dispatchers.userDispatcher;\n  return /*#__PURE__*/React__default.createElement(Modal, {\n    titleText: stringSet.EDIT_PROFILE__TITLE,\n    submitText: stringSet.BUTTON__SAVE,\n    type: ButtonTypes.PRIMARY,\n    onCancel: onCancel,\n    isFullScreenOnMobile: true,\n    onSubmit: () => {\n      var _inputRef$current;\n      if ((user === null || user === void 0 ? void 0 : user.nickname) !== '' && !inputRef.current.value) {\n        if (formRef.current.reportValidity) {\n          // might not work in explorer\n          formRef.current.reportValidity();\n        }\n        return;\n      }\n      sdk === null || sdk === void 0 ? void 0 : sdk.updateCurrentUserInfo({\n        nickname: inputRef === null || inputRef === void 0 ? void 0 : (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.value,\n        profileImage: newFile\n      }).then(updatedUser => {\n        userDispatcher({\n          type: USER_ACTIONS.UPDATE_USER_INFO,\n          payload: updatedUser\n        });\n        if (onEditProfile && typeof onEditProfile === 'function') {\n          onEditProfile(updatedUser);\n        }\n      });\n    }\n  }, /*#__PURE__*/React__default.createElement(\"form\", {\n    className: \"sendbird-edit-user-profile\",\n    ref: formRef,\n    onSubmit: e => {\n      e.preventDefault();\n    }\n  }, /*#__PURE__*/React__default.createElement(\"section\", {\n    className: \"sendbird-edit-user-profile__img\"\n  }, /*#__PURE__*/React__default.createElement(InputLabel, null, stringSet.EDIT_PROFILE__IMAGE_LABEL), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-edit-user-profile__img__avatar\"\n  }, /*#__PURE__*/React__default.createElement(Avatar, {\n    width: \"80px\",\n    height: \"80px\",\n    src: currentImg || (user === null || user === void 0 ? void 0 : user.profileUrl)\n  })), /*#__PURE__*/React__default.createElement(\"input\", {\n    ref: hiddenInputRef,\n    type: \"file\",\n    accept: \"image/gif, image/jpeg, image/png\",\n    style: {\n      display: 'none'\n    },\n    onChange: e => {\n      setCurrentImg(URL.createObjectURL(e.target.files[0]));\n      setNewFile(e.target.files[0]);\n      hiddenInputRef.current.value = '';\n    }\n  }), /*#__PURE__*/React__default.createElement(TextButton, {\n    className: \"sendbird-edit-user-profile__img__avatar-button\",\n    disableUnderline: true,\n    onClick: () => hiddenInputRef.current.click()\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.BUTTON_1,\n    color: LabelColors.PRIMARY\n  }, stringSet.EDIT_PROFILE__IMAGE_UPLOAD))), /*#__PURE__*/React__default.createElement(\"section\", {\n    className: \"sendbird-edit-user-profile__name\"\n  }, /*#__PURE__*/React__default.createElement(InputLabel, null, stringSet.EDIT_PROFILE__NICKNAME_LABEL), /*#__PURE__*/React__default.createElement(Input, {\n    required: (user === null || user === void 0 ? void 0 : user.nickname) !== '',\n    name: \"sendbird-edit-user-profile__name__input\",\n    ref: inputRef,\n    value: user === null || user === void 0 ? void 0 : user.nickname,\n    placeHolder: stringSet.EDIT_PROFILE__NICKNAME_PLACEHOLDER\n  })), /*#__PURE__*/React__default.createElement(\"section\", {\n    className: \"sendbird-edit-user-profile__userid\"\n  }, /*#__PURE__*/React__default.createElement(InputLabel, null, stringSet.EDIT_PROFILE__USERID_LABEL), /*#__PURE__*/React__default.createElement(Input, {\n    disabled: true,\n    name: \"sendbird-edit-user-profile__userid__input\",\n    value: user === null || user === void 0 ? void 0 : user.userId\n  })), /*#__PURE__*/React__default.createElement(\"section\", {\n    className: \"sendbird-edit-user-profile__theme\"\n  }, /*#__PURE__*/React__default.createElement(InputLabel, null, stringSet.EDIT_PROFILE__THEME_LABEL), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-edit-user-profile__theme__theme-icon\"\n  }, theme === 'dark' ? /*#__PURE__*/React__default.createElement(Icon, {\n    onClick: () => {\n      changeTheme('light');\n      onThemeChange === null || onThemeChange === void 0 ? void 0 : onThemeChange('light');\n      // if (onThemeChange && typeof onThemeChange === 'function') {\n      //   onThemeChange('light');\n      // }\n    },\n\n    type: IconTypes.TOGGLE_ON,\n    width: 44,\n    height: 24\n  }) : /*#__PURE__*/React__default.createElement(Icon, {\n    onClick: () => {\n      changeTheme('dark');\n      onThemeChange === null || onThemeChange === void 0 ? void 0 : onThemeChange('dark');\n      // if (onThemeChange && typeof onThemeChange === 'function') {\n      //   onThemeChange('dark');\n      // }\n    },\n\n    type: IconTypes.TOGGLE_OFF,\n    width: 44,\n    height: 24\n  })))));\n}\nexport { EditUserProfileProvider as E, EditUserProfile as a };","map":{"version":3,"mappings":"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","names":["EditUserProfileProviderContext","React","createContext","undefined","EditUserProfileProvider","props","children","onEditProfile","onCancel","onThemeChange","value","useMemo","Provider","useEditUserProfileContext","useContext","EditUserProfile","editProfileProps","store","useSendbirdStateContext","hiddenInputRef","useRef","inputRef","formRef","stringSet","LocalizationContext","currentImg","setCurrentImg","useState","newFile","setNewFile","theme","config","_store$config","changeTheme","_store$config2","setCurrenttheme","noop","user","stores","_store$stores","userStore","_store$stores$userSto","sdk","_store$stores2","sdkStore","_store$stores2$sdkSto","userDispatcher","dispatchers","_store$dispatchers","Modal","titleText","EDIT_PROFILE__TITLE","submitText","BUTTON__SAVE","type","ButtonTypes","PRIMARY","isFullScreenOnMobile","onSubmit","nickname","current","reportValidity","updateCurrentUserInfo","_inputRef$current","profileImage","then","updatedUser","USER_ACTIONS","UPDATE_USER_INFO","payload","className","ref","e","preventDefault","InputLabel","EDIT_PROFILE__IMAGE_LABEL","Avatar","width","height","src","profileUrl","accept","style","display","onChange","URL","createObjectURL","target","files","TextButton","disableUnderline","onClick","click","Label","LabelTypography","BUTTON_1","color","LabelColors","EDIT_PROFILE__IMAGE_UPLOAD","EDIT_PROFILE__NICKNAME_LABEL","Input","required","name","placeHolder","EDIT_PROFILE__NICKNAME_PLACEHOLDER","EDIT_PROFILE__USERID_LABEL","disabled","userId","EDIT_PROFILE__THEME_LABEL","Icon","IconTypes","TOGGLE_ON","TOGGLE_OFF"],"sources":["C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\modules\\EditUserProfile\\context\\EditUserProfIleProvider.tsx","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\modules\\EditUserProfile\\components\\EditUserProfileUI\\index.tsx"],"sourcesContent":["import type { User } from '@sendbird/chat';\nimport React, { useMemo } from 'react';\n\nconst EditUserProfileProviderContext = React.createContext(undefined);\n\nexport interface EditUserProfileProps {\n  children?: React.ReactElement;\n  onCancel?(): void;\n  onThemeChange?(theme: string): void;\n  onEditProfile?(updatedUser: User): void;\n}\n\nexport interface EditUserProfileProviderInterface {\n  onCancel?(): void;\n  onThemeChange?(theme: string): void;\n  onEditProfile?(updatedUser: User): void;\n}\n\nconst EditUserProfileProvider: React.FC<EditUserProfileProps> = (props: EditUserProfileProps) => {\n  const {\n    children,\n    onEditProfile,\n    onCancel,\n    onThemeChange,\n  } = props;\n\n  const value = useMemo(() => {\n    return {\n      onEditProfile,\n      onCancel,\n      onThemeChange,\n    };\n  }, []);\n\n  return (\n    <EditUserProfileProviderContext.Provider value={value}>\n      {children}\n    </EditUserProfileProviderContext.Provider>\n  );\n};\n\nconst useEditUserProfileContext = (): EditUserProfileProviderInterface => (\n  React.useContext(EditUserProfileProviderContext)\n);\n\nexport {\n  EditUserProfileProvider,\n  useEditUserProfileContext,\n};\n","import './edit-user-profile.scss';\n\nimport React, {\n  ReactElement,\n  useRef,\n  useState,\n  useContext,\n} from 'react';\nimport { useEditUserProfileContext } from '../../context/EditUserProfIleProvider';\n\nimport Modal from '../../../../ui/Modal';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\n\nimport Input, { InputLabel } from '../../../../ui/Input';\nimport Avatar from '../../../../ui/Avatar';\nimport Icon, { IconTypes } from '../../../../ui/Icon';\nimport { ButtonTypes } from '../../../../ui/Button';\nimport Label, { LabelColors, LabelTypography } from '../../../../ui/Label';\nimport TextButton from '../../../../ui/TextButton';\nimport { noop } from '../../../../utils/utils';\nimport { USER_ACTIONS } from '../../../../lib/dux/user/actionTypes';\n\nexport default function EditUserProfile(): ReactElement {\n  const editProfileProps = useEditUserProfileContext();\n  const store = useSendbirdStateContext();\n  const hiddenInputRef = useRef(null);\n  const inputRef = useRef(null);\n  const formRef = useRef(null);\n  const { stringSet } = useContext(LocalizationContext);\n  const [currentImg, setCurrentImg] = useState(null);\n  const [newFile, setNewFile] = useState(null);\n\n  const {\n    onEditProfile,\n    onCancel,\n    onThemeChange,\n  } = editProfileProps;\n\n  const theme = store?.config?.theme || 'light';\n  const changeTheme = store?.config?.setCurrenttheme || noop;\n  const user = store?.stores?.userStore?.user;\n  const sdk = store?.stores?.sdkStore?.sdk;\n  const userDispatcher = store?.dispatchers?.userDispatcher;\n\n  return (\n    <Modal\n      titleText={stringSet.EDIT_PROFILE__TITLE}\n      submitText={stringSet.BUTTON__SAVE}\n      type={ButtonTypes.PRIMARY}\n      onCancel={onCancel}\n      isFullScreenOnMobile\n      onSubmit={() => {\n        if (user?.nickname !== '' && !inputRef.current.value) {\n          if (formRef.current.reportValidity) { // might not work in explorer\n            formRef.current.reportValidity();\n          }\n          return;\n        }\n        sdk?.updateCurrentUserInfo({\n          nickname: inputRef?.current?.value,\n          profileImage: newFile,\n        }).then((updatedUser) => {\n          userDispatcher({ type: USER_ACTIONS.UPDATE_USER_INFO, payload: updatedUser });\n          if (onEditProfile && typeof onEditProfile === 'function') {\n            onEditProfile(updatedUser);\n          }\n        });\n      }}\n    >\n      <form\n        className=\"sendbird-edit-user-profile\"\n        ref={formRef}\n        onSubmit={(e) => { e.preventDefault(); }}\n      >\n        <section className=\"sendbird-edit-user-profile__img\">\n          <InputLabel>\n            {stringSet.EDIT_PROFILE__IMAGE_LABEL}\n          </InputLabel>\n          <div className=\"sendbird-edit-user-profile__img__avatar\">\n            <Avatar\n              width=\"80px\"\n              height=\"80px\"\n              src={currentImg || user?.profileUrl}\n            />\n          </div>\n          <input\n            ref={hiddenInputRef}\n            type=\"file\"\n            accept=\"image/gif, image/jpeg, image/png\"\n            style={{ display: 'none' }}\n            onChange={(e) => {\n              setCurrentImg(URL.createObjectURL(e.target.files[0]));\n              setNewFile(e.target.files[0]);\n              hiddenInputRef.current.value = '';\n            }}\n          />\n          <TextButton\n            className=\"sendbird-edit-user-profile__img__avatar-button\"\n            disableUnderline\n            onClick={() => hiddenInputRef.current.click()}\n          >\n            <Label type={LabelTypography.BUTTON_1} color={LabelColors.PRIMARY}>\n              {stringSet.EDIT_PROFILE__IMAGE_UPLOAD}\n            </Label>\n          </TextButton>\n        </section>\n        <section className=\"sendbird-edit-user-profile__name\">\n          <InputLabel>\n            {stringSet.EDIT_PROFILE__NICKNAME_LABEL}\n          </InputLabel>\n          <Input\n            required={user?.nickname !== ''}\n            name=\"sendbird-edit-user-profile__name__input\"\n            ref={inputRef}\n            value={user?.nickname}\n            placeHolder={stringSet.EDIT_PROFILE__NICKNAME_PLACEHOLDER}\n          />\n        </section>\n        <section className=\"sendbird-edit-user-profile__userid\">\n          <InputLabel>\n            {/*  userID */}\n            {stringSet.EDIT_PROFILE__USERID_LABEL}\n          </InputLabel>\n          <Input\n            disabled\n            name=\"sendbird-edit-user-profile__userid__input\"\n            value={user?.userId}\n          />\n        </section>\n        <section className=\"sendbird-edit-user-profile__theme\">\n          <InputLabel>\n            {stringSet.EDIT_PROFILE__THEME_LABEL}\n          </InputLabel>\n          <div className=\"sendbird-edit-user-profile__theme__theme-icon\">\n            {\n              theme === 'dark'\n                ? (\n                  <Icon\n                    onClick={() => {\n                      changeTheme('light');\n                      onThemeChange?.('light');\n                      // if (onThemeChange && typeof onThemeChange === 'function') {\n                      //   onThemeChange('light');\n                      // }\n                    }}\n                    type={IconTypes.TOGGLE_ON}\n                    width={44}\n                    height={24}\n                  />\n                )\n                : (\n                  <Icon\n                    onClick={() => {\n                      changeTheme('dark');\n                      onThemeChange?.('dark');\n                      // if (onThemeChange && typeof onThemeChange === 'function') {\n                      //   onThemeChange('dark');\n                      // }\n                    }}\n                    type={IconTypes.TOGGLE_OFF}\n                    width={44}\n                    height={24}\n                  />\n                )\n            }\n          </div>\n        </section>\n      </form>\n    </Modal>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}