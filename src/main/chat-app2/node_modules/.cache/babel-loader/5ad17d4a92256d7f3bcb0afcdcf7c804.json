{"ast":null,"code":"import React__default, { useRef, useState, useCallback } from 'react';\nimport ContextMenu, { MenuItems } from './ContextMenu.js';\nimport { L as Label, a as LabelTypography, b as LabelColors } from '../index-63949de5.js';\nimport UserProfile from './UserProfile.js';\nimport useSendbirdStateContext from '../useSendbirdStateContext.js';\nimport '../_rollupPluginBabelHelpers-6bb0305c.js';\nimport 'react-dom';\nimport './SortByRow.js';\nimport '../uuid-1adedf62.js';\nimport '../index-7eb65acf.js';\nimport '../utils/message/getOutgoingMessageState.js';\nimport 'prop-types';\nimport '../stringSet-13bbd4a2.js';\nimport '../LocalizationContext-076d6d2e.js';\nimport '../index-99aabd9e.js';\nimport '../UserProfileContext-9cfbab4d.js';\nimport '../sendbirdSelectors.js';\nimport '../topics-b2b77fb9.js';\nimport '../utils-4bbbca2c.js';\nimport './Avatar.js';\nimport './ImageRenderer.js';\nimport './Icon.js';\nimport './Button.js';\nimport '../withSendbird.js';\nfunction MentionLabel(props) {\n  var _sendbirdState$config, _sendbirdState$stores, _sendbirdState$stores2;\n  const {\n    mentionTemplate,\n    mentionedUserId,\n    mentionedUserNickname,\n    isByMe\n  } = props;\n  const mentionRef = useRef();\n  const sendbirdState = useSendbirdStateContext();\n  const userId = sendbirdState === null || sendbirdState === void 0 ? void 0 : (_sendbirdState$config = sendbirdState.config) === null || _sendbirdState$config === void 0 ? void 0 : _sendbirdState$config.userId;\n  const sdk = sendbirdState === null || sendbirdState === void 0 ? void 0 : (_sendbirdState$stores = sendbirdState.stores) === null || _sendbirdState$stores === void 0 ? void 0 : (_sendbirdState$stores2 = _sendbirdState$stores.sdkStore) === null || _sendbirdState$stores2 === void 0 ? void 0 : _sendbirdState$stores2.sdk;\n  const amIBeingMentioned = userId === mentionedUserId;\n  const [user, setUser] = useState();\n  const fetchUser = useCallback(toggleDropdown => {\n    if (user || !(sdk !== null && sdk !== void 0 && sdk.createApplicationUserListQuery)) {\n      toggleDropdown();\n      return;\n    }\n    const query = sdk === null || sdk === void 0 ? void 0 : sdk.createApplicationUserListQuery({\n      userIdsFilter: [mentionedUserId]\n    });\n    query.next().then(members => {\n      if ((members === null || members === void 0 ? void 0 : members.length) > 0) {\n        setUser(members[0]);\n      }\n      toggleDropdown();\n    });\n  }, [sdk, mentionedUserId]);\n  return /*#__PURE__*/React__default.createElement(ContextMenu, {\n    menuTrigger: toggleDropdown => /*#__PURE__*/React__default.createElement(\"a\", {\n      className: `\n            sendbird-word__mention\n            ${amIBeingMentioned ? 'sendbird-word__mention--me' : ''}\n          `,\n      onClick: () => fetchUser(toggleDropdown),\n      ref: mentionRef,\n      \"data-userid\": mentionedUserId,\n      \"data-nickname\": mentionedUserNickname,\n      \"data-sb-mention\": true\n    }, /*#__PURE__*/React__default.createElement(Label, {\n      type: LabelTypography.CAPTION_1,\n      color: isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1\n    }, `${mentionTemplate}${mentionedUserNickname}`)),\n    menuItems: closeDropdown => /*#__PURE__*/React__default.createElement(MenuItems\n    /**\n    * parentRef: For catching location(x, y) of MenuItems\n    * parentContainRef: For toggling more options(menus & reactions)\n    */, {\n      parentRef: mentionRef,\n      parentContainRef: mentionRef,\n      closeDropdown: closeDropdown,\n      style: {\n        paddingTop: '0px',\n        paddingBottom: '0px'\n      }\n    }, /*#__PURE__*/React__default.createElement(UserProfile, {\n      user: user,\n      onSuccess: closeDropdown,\n      currentUserId: userId\n    }))\n  });\n}\nexport { MentionLabel as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAsBe,SAASA,YAAYA,CAACC,KAAwB,EAAe;EAAA;EAC1E,MAAM;IACJC,eAAe;IACfC,eAAe;IACfC,qBAAqB;IACrBC;EACF,CAAC,GAAGJ,KAAK;EAET,MAAMK,UAAU,GAAGC,MAAM,EAAE;EAE3B,MAAMC,aAAa,GAAGC,uBAAuB,EAAE;EAC/C,MAAMC,MAAM,GAAGF,aAAa,KAAbA,qBAAa,gDAAbA,aAAa,CAAEG,MAAM,wCAArBC,wCAAuBF,MAAM;EAC5C,MAAMG,GAAG,GAAGL,aAAa,KAAbA,qBAAa,gDAAbA,aAAa,CAAEM,MAAM,oFAArBC,sBAAuBC,QAAQ,2DAA/BC,uBAAiCJ,GAAG;EAChD,MAAMK,iBAAiB,GAAGR,MAAM,KAAKP,eAAe;EACpD,MAAM,CAACgB,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,EAAc;EAC9C,MAAMC,SAAS,GAAGC,WAAW,CAC1BC,cAAc,IAAK;IAClB,IAAIL,IAAI,IAAI,EAACN,GAAG,aAAHA,GAAG,KAAHA,aAAG,CAAEY,8BAA8B,CAAE;MAChDD,cAAc,EAAE;MAChB;IACF;IACA,MAAME,KAAK,GAAGb,GAAG,aAAHA,GAAG,KAAHA,qBAAG,CAAEY,8BAA8B,CAAC;MAChDE,aAAa,EAAE,CAACxB,eAAe;IACjC,CAAC,CAAC;IACFuB,KAAK,CAACE,IAAI,EAAE,CAACC,IAAI,CAAEC,OAAO,IAAK;MAC7B,IAAI,QAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEC,MAAM,IAAG,CAAC,EAAE;QACvBX,OAAO,CAACU,OAAO,CAAC,CAAC,CAAC,CAAC;MACrB;MACAN,cAAc,EAAE;IAClB,CAAC,CAAC;EACJ,CAAC,EACD,CAACX,GAAG,EAAEV,eAAe,CAAC,CACvB;EACD,oBACE6B,6BAACC,WAAW;IACVC,WAAW,EAAGV,cAA0B,iBACtCQ;MACEG,SAAS,EAAG;AACtB;AACA,cAAcjB,iBAAiB,GAAG,4BAA4B,GAAG,EAAG;AACpE,WAAY;MACFkB,OAAO,EAAEA,MAAMd,SAAS,CAACE,cAAc,CAAE;MACzCa,GAAG,EAAE/B,UAAW;MAChB,eAAaH,eAAgB;MAC7B,iBAAeC,qBAAsB;MACrC,iBAAiB;IAAK,gBAEtB4B,6BAACM,KAAK;MACJC,IAAI,EAAEC,eAAe,CAACC,SAAU;MAChCC,KAAK,EAAErC,MAAM,GAAGsC,WAAW,CAACC,WAAW,GAAGD,WAAW,CAACE;IAAe,GAEnE,GAAE3C,eAAgB,GAAEE,qBAAsB,EAAC,CACvC,CAEV;IACF0C,SAAS,EAAGC,aAAyB,iBACnCf,6BAACgB;IACC;AACV;AACA;AACA,MAHU;MAIAC,SAAS,EAAE3C,UAAW;MACtB4C,gBAAgB,EAAE5C,UAAW;MAC7ByC,aAAa,EAAEA,aAAc;MAC7BI,KAAK,EAAE;QAAEC,UAAU,EAAE,KAAK;QAAEC,aAAa,EAAE;MAAM;IAAE,gBAEnDrB,6BAACsB,WAAW;MACVnC,IAAI,EAAEA,IAAK;MACXoC,SAAS,EAAER,aAAc;MACzBS,aAAa,EAAE9C;KACf;GAGN;AAEN","names":["MentionLabel","props","mentionTemplate","mentionedUserId","mentionedUserNickname","isByMe","mentionRef","useRef","sendbirdState","useSendbirdStateContext","userId","config","_sendbirdState$config","sdk","stores","_sendbirdState$stores","sdkStore","_sendbirdState$stores2","amIBeingMentioned","user","setUser","useState","fetchUser","useCallback","toggleDropdown","createApplicationUserListQuery","query","userIdsFilter","next","then","members","length","React","ContextMenu","menuTrigger","className","onClick","ref","Label","type","LabelTypography","CAPTION_1","color","LabelColors","ONCONTENT_1","ONBACKGROUND_1","menuItems","closeDropdown","MenuItems","parentRef","parentContainRef","style","paddingTop","paddingBottom","UserProfile","onSuccess","currentUserId"],"sources":["C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\ui\\MentionLabel\\index.tsx"],"sourcesContent":["import './index.scss';\n\nimport React, {\n  ReactElement,\n  useRef,\n  useState,\n  useCallback,\n} from 'react';\nimport type { User } from '@sendbird/chat';\n\nimport ContextMenu, { MenuItems } from '../ContextMenu';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport UserProfile from '../UserProfile';\nimport useSendbirdStateContext from '../../hooks/useSendbirdStateContext';\n\ninterface MentionLabelProps {\n  mentionTemplate: string;\n  mentionedUserId: string;\n  mentionedUserNickname: string;\n  isByMe: boolean;\n}\n\nexport default function MentionLabel(props: MentionLabelProps): JSX.Element {\n  const {\n    mentionTemplate,\n    mentionedUserId,\n    mentionedUserNickname,\n    isByMe,\n  } = props;\n\n  const mentionRef = useRef();\n\n  const sendbirdState = useSendbirdStateContext();\n  const userId = sendbirdState?.config?.userId;\n  const sdk = sendbirdState?.stores?.sdkStore?.sdk;\n  const amIBeingMentioned = userId === mentionedUserId;\n  const [user, setUser] = useState<User| null>();\n  const fetchUser = useCallback(\n    (toggleDropdown) => {\n      if (user || !sdk?.createApplicationUserListQuery) {\n        toggleDropdown();\n        return;\n      }\n      const query = sdk?.createApplicationUserListQuery({\n        userIdsFilter: [mentionedUserId],\n      });\n      query.next().then((members) => {\n        if (members?.length > 0) {\n          setUser(members[0]);\n        }\n        toggleDropdown();\n      });\n    },\n    [sdk, mentionedUserId],\n  );\n  return (\n    <ContextMenu\n      menuTrigger={(toggleDropdown: () => void): ReactElement => (\n        <a\n          className={`\n            sendbird-word__mention\n            ${amIBeingMentioned ? 'sendbird-word__mention--me' : ''}\n          `}\n          onClick={() => fetchUser(toggleDropdown)}\n          ref={mentionRef}\n          data-userid={mentionedUserId}\n          data-nickname={mentionedUserNickname}\n          data-sb-mention={true}\n        >\n          <Label\n            type={LabelTypography.CAPTION_1}\n            color={isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1}\n          >\n            {`${mentionTemplate}${mentionedUserNickname}`}\n          </Label>\n        </a>\n      )}\n      menuItems={(closeDropdown: () => void): ReactElement => (\n        <MenuItems\n          /**\n          * parentRef: For catching location(x, y) of MenuItems\n          * parentContainRef: For toggling more options(menus & reactions)\n          */\n          parentRef={mentionRef}\n          parentContainRef={mentionRef}\n          closeDropdown={closeDropdown}\n          style={{ paddingTop: '0px', paddingBottom: '0px' }}\n        >\n          <UserProfile\n            user={user}\n            onSuccess={closeDropdown}\n            currentUserId={userId}\n          />\n        </MenuItems>\n      )}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}