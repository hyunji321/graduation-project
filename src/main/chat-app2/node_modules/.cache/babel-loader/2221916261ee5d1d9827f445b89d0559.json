{"ast":null,"code":"import React__default, { useContext } from 'react';\nimport { k as isFileMessage, d as isVoiceMessage, l as isImageMessage, m as isThumbnailMessage, n as isAudioMessage, h as getClassName, o as isGifMessage, p as isVideoMessage, q as isUserMessage, r as getUIKitMessageType, U as UIKitMessageTypes } from '../index-7eb65acf.js';\nimport Icon, { IconTypes, IconColors } from './Icon.js';\nimport { L as Label, a as LabelTypography, b as LabelColors } from '../index-63949de5.js';\nimport { a as LocalizationContext } from '../LocalizationContext-076d6d2e.js';\nimport ImageRenderer from './ImageRenderer.js';\nimport '../_rollupPluginBabelHelpers-6bb0305c.js';\nimport '../utils/message/getOutgoingMessageState.js';\nimport 'prop-types';\nimport '../stringSet-13bbd4a2.js';\nimport '../index-99aabd9e.js';\nvar componentClassname = 'sendbird-quote_message_input__avatar';\nfunction QuoteMessageThumbnail(_ref) {\n  var message = _ref.message;\n  if (!isFileMessage(message) || isVoiceMessage(message)) {\n    return null;\n  }\n  var thumbnailUrl = message.thumbnails && message.thumbnails.length > 0 && message.thumbnails[0].url || isImageMessage(message) && message.url;\n  if (isThumbnailMessage(message) && thumbnailUrl) {\n    return /*#__PURE__*/React__default.createElement(ImageRenderer, {\n      className: componentClassname,\n      url: thumbnailUrl,\n      alt: message.type,\n      width: \"44px\",\n      height: \"44px\",\n      fixedSize: true\n    });\n  } else if (isAudioMessage(message)) {\n    return /*#__PURE__*/React__default.createElement(\"div\", {\n      className: componentClassname\n    }, /*#__PURE__*/React__default.createElement(Icon, {\n      type: IconTypes.FILE_AUDIO,\n      fillColor: IconColors.ON_BACKGROUND_2,\n      width: \"24px\",\n      height: \"24px\"\n    }));\n  } else {\n    return /*#__PURE__*/React__default.createElement(\"div\", {\n      className: componentClassname\n    }, /*#__PURE__*/React__default.createElement(Icon, {\n      type: IconTypes.FILE_DOCUMENT,\n      fillColor: IconColors.ON_BACKGROUND_2,\n      width: \"24px\",\n      height: \"24px\"\n    }));\n  }\n}\nfunction QuoteMessageInput(_ref) {\n  var className = _ref.className,\n    replyingMessage = _ref.replyingMessage,\n    onClose = _ref.onClose;\n  var _useContext = useContext(LocalizationContext),\n    stringSet = _useContext.stringSet;\n  var fileMessage = replyingMessage;\n  var sender = replyingMessage === null || replyingMessage === void 0 ? void 0 : replyingMessage.sender;\n  var displayFileIcon = isFileMessage(replyingMessage) && !isVoiceMessage(replyingMessage);\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: getClassName(['sendbird-quote_message_input', className])\n  }, displayFileIcon && /*#__PURE__*/React__default.createElement(QuoteMessageThumbnail, {\n    message: fileMessage\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-quote_message_input__body\",\n    style: {\n      width: \"calc(100% - \".concat(displayFileIcon ? '164px' : '120px', \")\"),\n      left: displayFileIcon ? '92px' : '40px'\n    }\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-quote_message_input__body__sender-name\",\n    type: LabelTypography.CAPTION_1,\n    color: LabelColors.ONBACKGROUND_1\n  }, \"\".concat(stringSet.QUOTE_MESSAGE_INPUT__REPLY_TO, \" \").concat(sender && sender.nickname ? sender.nickname : stringSet.NO_NAME)), /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-quote_message_input__body__message-content\",\n    type: LabelTypography.BODY_2,\n    color: LabelColors.ONBACKGROUND_3\n  }, isImageMessage(fileMessage) && !isGifMessage(fileMessage) && stringSet.QUOTE_MESSAGE_INPUT__FILE_TYPE_IMAGE, isVideoMessage(fileMessage) && stringSet.QUOTE_MESSAGE_INPUT__FILE_TYPE__VIDEO, isGifMessage(fileMessage) && stringSet.QUOTE_MESSAGE_INPUT__FILE_TYPE_GIF, isUserMessage(replyingMessage) && replyingMessage.message, getUIKitMessageType(replyingMessage) === UIKitMessageTypes.FILE && fileMessage.name, isVoiceMessage(replyingMessage) && stringSet.VOICE_MESSAGE)), /*#__PURE__*/React__default.createElement(Icon, {\n    className: \"sendbird-quote_message_input__close-button\",\n    type: IconTypes.CLOSE,\n    fillColor: IconColors.ON_BACKGROUND_2,\n    width: \"24px\",\n    height: \"24px\",\n    onClick: function onClick() {\n      return onClose(replyingMessage);\n    }\n  }));\n}\nexport { QuoteMessageInput as default };","map":{"version":3,"mappings":"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","names":["componentClassname","QuoteMessageThumbnail","message","_ref","isFileMessage","isVoiceMessage","thumbnailUrl","thumbnails","length","url","isImageMessage","isThumbnailMessage","React","ImageRenderer","className","alt","type","width","height","fixedSize","isAudioMessage","Icon","IconTypes","FILE_AUDIO","fillColor","IconColors","ON_BACKGROUND_2","FILE_DOCUMENT","QuoteMessageInput","replyingMessage","onClose","useContext","LocalizationContext","stringSet","fileMessage","sender","displayFileIcon","getClassName","style","left","Label","LabelTypography","CAPTION_1","color","LabelColors","ONBACKGROUND_1","QUOTE_MESSAGE_INPUT__REPLY_TO","nickname","NO_NAME","BODY_2","ONBACKGROUND_3","isGifMessage","QUOTE_MESSAGE_INPUT__FILE_TYPE_IMAGE","isVideoMessage","QUOTE_MESSAGE_INPUT__FILE_TYPE__VIDEO","QUOTE_MESSAGE_INPUT__FILE_TYPE_GIF","isUserMessage","getUIKitMessageType","UIKitMessageTypes","FILE","name","VOICE_MESSAGE","CLOSE","onClick"],"sources":["C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\ui\\QuoteMessageInput\\QuoteMessageThumbnail.tsx","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\ui\\QuoteMessageInput\\index.tsx"],"sourcesContent":["import React, { ReactElement } from 'react';\nimport type { FileMessage } from '@sendbird/chat/message';\n\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport ImageRenderer from '../ImageRenderer';\nimport { isAudioMessage, isFileMessage, isImageMessage, isThumbnailMessage, isVoiceMessage } from '../../utils';\n\ninterface Props {\n  message: FileMessage;\n}\n\nconst componentClassname = 'sendbird-quote_message_input__avatar';\n\nexport default function QuoteMessageThumbnail({ message }: Props): ReactElement {\n  if (!isFileMessage(message) || isVoiceMessage(message)) {\n    return null;\n  }\n\n  const thumbnailUrl: string = (message.thumbnails && message.thumbnails.length > 0 && message.thumbnails[0].url)\n    || (isImageMessage(message) && message.url);\n  if (isThumbnailMessage(message) && thumbnailUrl) {\n    return (\n      <ImageRenderer\n        className={componentClassname}\n        url={thumbnailUrl}\n        alt={message.type}\n        width=\"44px\"\n        height=\"44px\"\n        fixedSize\n      />\n    );\n  } else if (isAudioMessage(message)) {\n    return (\n      <div className={componentClassname}>\n        <Icon\n          type={IconTypes.FILE_AUDIO}\n          fillColor={IconColors.ON_BACKGROUND_2}\n          width=\"24px\"\n          height=\"24px\"\n        />\n      </div>\n    );\n  } else {\n    return (\n      <div className={componentClassname}>\n        <Icon\n          type={IconTypes.FILE_DOCUMENT}\n          fillColor={IconColors.ON_BACKGROUND_2}\n          width=\"24px\"\n          height=\"24px\"\n        />\n      </div>\n    );\n  }\n}\n","import './index.scss';\n\nimport React, { ReactElement, useContext } from 'react';\nimport type { FileMessage, UserMessage } from '@sendbird/chat/message';\nimport {\n  getClassName,\n  getUIKitMessageType,\n  isFileMessage,\n  isGifMessage,\n  isImageMessage,\n  isUserMessage,\n  isVideoMessage,\n  isVoiceMessage,\n  UIKitMessageTypes,\n} from '../../utils';\n\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nimport QuoteMessageThumbnail from './QuoteMessageThumbnail';\n\ninterface Props {\n  className?: string | Array<string>;\n  replyingMessage: UserMessage | FileMessage;\n  onClose?: (message: UserMessage | FileMessage) => void;\n}\n\nexport default function QuoteMessageInput({\n  className,\n  replyingMessage,\n  onClose,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  const fileMessage = replyingMessage as FileMessage;\n  const sender = (replyingMessage as UserMessage | FileMessage)?.sender;\n  const displayFileIcon = isFileMessage(replyingMessage) && !isVoiceMessage(replyingMessage as FileMessage);\n\n  return (\n    <div className={getClassName(['sendbird-quote_message_input', className])}>\n      {\n        displayFileIcon && (\n          <QuoteMessageThumbnail message={fileMessage} />\n        )\n      }\n      <div\n        className=\"sendbird-quote_message_input__body\"\n        style={{\n          width: `calc(100% - ${displayFileIcon ? '164px' : '120px'})`,\n          left: displayFileIcon ? '92px' : '40px',\n        }}\n      >\n        <Label\n          className=\"sendbird-quote_message_input__body__sender-name\"\n          type={LabelTypography.CAPTION_1}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {`${stringSet.QUOTE_MESSAGE_INPUT__REPLY_TO} ${(sender && sender.nickname) ? sender.nickname : stringSet.NO_NAME}`}\n        </Label>\n        <Label\n          className=\"sendbird-quote_message_input__body__message-content\"\n          type={LabelTypography.BODY_2}\n          color={LabelColors.ONBACKGROUND_3}\n        >\n          {isImageMessage(fileMessage) && !isGifMessage(fileMessage) && stringSet.QUOTE_MESSAGE_INPUT__FILE_TYPE_IMAGE}\n          {isVideoMessage(fileMessage) && stringSet.QUOTE_MESSAGE_INPUT__FILE_TYPE__VIDEO}\n          {isGifMessage(fileMessage) && stringSet.QUOTE_MESSAGE_INPUT__FILE_TYPE_GIF}\n          {isUserMessage(replyingMessage as UserMessage) && (replyingMessage as UserMessage).message}\n          {getUIKitMessageType(replyingMessage) === UIKitMessageTypes.FILE && fileMessage.name}\n          {isVoiceMessage(replyingMessage as FileMessage) && stringSet.VOICE_MESSAGE}\n        </Label>\n      </div>\n      <Icon\n        className=\"sendbird-quote_message_input__close-button\"\n        type={IconTypes.CLOSE}\n        fillColor={IconColors.ON_BACKGROUND_2}\n        width=\"24px\"\n        height=\"24px\"\n        onClick={() => onClose(replyingMessage)}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}