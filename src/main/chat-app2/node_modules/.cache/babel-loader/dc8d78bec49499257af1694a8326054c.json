{"ast":null,"code":"import React__default, { useContext } from 'react';\nimport { a as LocalizationContext } from '../../LocalizationContext-076d6d2e.js';\nimport { L as Label, b as LabelColors, a as LabelTypography } from '../../index-63949de5.js';\nimport Icon, { IconTypes, IconColors } from '../../ui/Icon.js';\nimport '../../stringSet-13bbd4a2.js';\nimport '../../index-99aabd9e.js';\nimport 'prop-types';\nvar UnreadCount = function UnreadCount(_ref) {\n  var _time$toString, _time$toString$call;\n  var _ref$className = _ref.className,\n    className = _ref$className === void 0 ? '' : _ref$className,\n    _ref$count = _ref.count,\n    count = _ref$count === void 0 ? 0 : _ref$count,\n    _ref$time = _ref.time,\n    time = _ref$time === void 0 ? '' : _ref$time,\n    onClick = _ref.onClick;\n  var _useContext = useContext(LocalizationContext),\n    stringSet = _useContext.stringSet;\n  var timeArray = (time === null || time === void 0 ? void 0 : (_time$toString = time.toString) === null || _time$toString === void 0 ? void 0 : (_time$toString$call = _time$toString.call(time)) === null || _time$toString$call === void 0 ? void 0 : _time$toString$call.split(' ')) || [];\n  timeArray === null || timeArray === void 0 ? void 0 : timeArray.splice(-2, 0, stringSet.CHANNEL__MESSAGE_LIST__NOTIFICATION__ON);\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-notification\".concat(count < 1 ? '--hide' : '', \" \").concat(className),\n    onClick: onClick\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-notification__text\",\n    color: LabelColors.ONCONTENT_1,\n    type: LabelTypography.CAPTION_2\n  }, \"\".concat(count, \" \"), stringSet.CHANNEL__MESSAGE_LIST__NOTIFICATION__NEW_MESSAGE, \" \".concat(timeArray.join(' '))), /*#__PURE__*/React__default.createElement(Icon, {\n    width: \"24px\",\n    height: \"24px\",\n    type: IconTypes.CHEVRON_DOWN,\n    fillColor: IconColors.CONTENT\n  }));\n};\nexport { UnreadCount as default };","map":{"version":3,"mappings":";;;;;;;AAcMA,eAAuC,GAAGC,SAA1CD,WAAuC,CAAGC,MAKxB;EAAA;EAAA,qBAALA,KAJjBC,SAAS;IAATA,SAAS,+BAAG,EAAE;IAAA,aAIGD,KAHjBE,KAAK;IAALA,KAAK,2BAAG,CAAC;IAAA,YAGQF,KAFjBG,IAAI;IAAJA,IAAI,0BAAG,EAAE;IACTC,UACiBJ,KADjBI;EAEA,kBAAsBC,UAAU,CAACC,mBAAmB,CAAC;IAA7CC;EACR,IAAMC,SAAS,GAAG,KAAI,aAAJL,IAAI,yCAAJA,IAAI,CAAEM,QAAQ,0EAAdC,wBAAI,CAAc,sCAAlBC,sCAAoBC,KAAK,CAAC,GAAG,CAAC,KAAI,EAAE;EACtDJ,SAAS,KAATA,iBAAS,KAATA,2BAAS,CAAEK,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAEN,SAAS,CAACO,uCAAuC,CAAC;EAE3E,oBACEC;IACEd,SAAS,iCAA0BC,KAAK,GAAG,CAAC,GAAG,QAAQ,GAAG,EAAG,cAAGD,SAAU,CAAE;IAC5EG,OAAO,EAAEA;EAAQ,gBAEjBW,6BAACC,KAAK;IAACf,SAAS,EAAC,6BAA6B;IAACgB,KAAK,EAAEC,WAAW,CAACC,WAAY;IAACC,IAAI,EAAEC,eAAe,CAACC;GACjG,YAAEpB,KAAM,QACTK,SAAS,CAACgB,gDAAgD,aACtDf,SAAS,CAACgB,IAAI,CAAC,GAAG,CAAE,EACnB,eACRT,6BAACU,IAAI;IACHC,KAAK,EAAC,MAAM;IACZC,MAAM,EAAC,MAAM;IACbP,IAAI,EAAEQ,SAAS,CAACC,YAAa;IAC7BC,SAAS,EAAEC,UAAU,CAACC;EAAQ,EAC9B,CACE;AAEV","names":["UnreadCount","_ref","className","count","time","onClick","useContext","LocalizationContext","stringSet","timeArray","toString","_time$toString","_time$toString$call","split","splice","CHANNEL__MESSAGE_LIST__NOTIFICATION__ON","React","Label","color","LabelColors","ONCONTENT_1","type","LabelTypography","CAPTION_2","CHANNEL__MESSAGE_LIST__NOTIFICATION__NEW_MESSAGE","join","Icon","width","height","IconTypes","CHEVRON_DOWN","fillColor","IconColors","CONTENT"],"sources":["C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\modules\\Channel\\components\\UnreadCount\\index.tsx"],"sourcesContent":["import React, { useContext } from 'react';\n\nimport './unread-count.scss';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport Label, { LabelTypography, LabelColors } from '../../../../ui/Label';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\n\nexport interface UnreadCountProps {\n  className?: string;\n  count: number | undefined;\n  time: string;\n  onClick(): void;\n}\n\nconst UnreadCount: React.FC<UnreadCountProps> = ({\n  className = '',\n  count = 0,\n  time = '',\n  onClick,\n}: UnreadCountProps) => {\n  const { stringSet } = useContext(LocalizationContext);\n  const timeArray = time?.toString?.()?.split(' ') || [];\n  timeArray?.splice(-2, 0, stringSet.CHANNEL__MESSAGE_LIST__NOTIFICATION__ON);\n\n  return (\n    <div\n      className={`sendbird-notification${count < 1 ? '--hide' : ''} ${className}`}\n      onClick={onClick}\n    >\n      <Label className=\"sendbird-notification__text\" color={LabelColors.ONCONTENT_1} type={LabelTypography.CAPTION_2}>\n        {`${count} `}\n        {stringSet.CHANNEL__MESSAGE_LIST__NOTIFICATION__NEW_MESSAGE}\n        {` ${timeArray.join(' ')}`}\n      </Label>\n      <Icon\n        width=\"24px\"\n        height=\"24px\"\n        type={IconTypes.CHEVRON_DOWN}\n        fillColor={IconColors.CONTENT}\n      />\n    </div>\n  );\n};\n\nexport default UnreadCount;\n"]},"metadata":{},"sourceType":"module"}