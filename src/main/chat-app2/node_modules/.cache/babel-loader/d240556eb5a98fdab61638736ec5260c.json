{"ast":null,"code":"import React__default, { useState, useContext, useEffect, useCallback } from 'react';\nimport { a as LocalizationContext, u as useLocalization } from '../../LocalizationContext-076d6d2e.js';\nimport Accordion, { AccordionGroup } from '../../ui/Accordion.js';\nimport { L as Label, b as LabelColors, a as LabelTypography } from '../../index-63949de5.js';\nimport Icon, { IconTypes, IconColors } from '../../ui/Icon.js';\nimport Badge from '../../ui/Badge.js';\nimport { Toggle } from '../../ui/Toggle.js';\nimport Button, { ButtonTypes, ButtonSizes } from '../../ui/Button.js';\nimport IconButton from '../../ui/IconButton.js';\nimport ContextMenu, { MenuItems, MenuItem } from '../../ui/ContextMenu.js';\nimport UserListItem$1 from './UserListItem.js';\nimport Modal from '../../ui/Modal.js';\nimport UserListItem from '../../ui/UserListItem.js';\nimport { useChannelSettingsContext } from '../context.js';\nimport useSendbirdStateContext from '../../useSendbirdStateContext.js';\nimport { _ as _objectSpread2 } from '../../_rollupPluginBabelHelpers-6bb0305c.js';\nimport { OperatorFilter } from '@sendbird/chat/groupChannel';\nimport { M as MemberList } from '../../MemberList-061d186f.js';\nimport { n as noop } from '../../utils-4bbbca2c.js';\nimport '../../stringSet-13bbd4a2.js';\nimport '../../index-99aabd9e.js';\nimport '../../ui/AccordionGroup.js';\nimport '../../context-63cbe5bd.js';\nimport 'prop-types';\nimport 'react-dom';\nimport '../../ui/SortByRow.js';\nimport '../../uuid-1adedf62.js';\nimport '../../index-7eb65acf.js';\nimport '../../utils/message/getOutgoingMessageState.js';\nimport '../../UserProfileContext-9cfbab4d.js';\nimport '../../ui/Avatar.js';\nimport '../../ui/ImageRenderer.js';\nimport '../../ui/MutedAvatarOverlay.js';\nimport '../../ui/UserProfile.js';\nimport '../../sendbirdSelectors.js';\nimport '../../topics-b2b77fb9.js';\nimport '../../index-38e61c64.js';\nimport '../../MediaQueryContext-11f0e43f.js';\nimport '../../ui/Checkbox.js';\nimport '../../withSendbird.js';\nfunction OperatorsModal(_ref) {\n  var _state$config;\n  let {\n    onCancel\n  } = _ref;\n  const [operators, setOperators] = useState([]);\n  const [operatorQuery, setOperatorQuery] = useState(null);\n  const {\n    channel\n  } = useChannelSettingsContext();\n  const state = useSendbirdStateContext();\n  const currentUserId = state === null || state === void 0 ? void 0 : (_state$config = state.config) === null || _state$config === void 0 ? void 0 : _state$config.userId;\n  const {\n    stringSet\n  } = useContext(LocalizationContext);\n  useEffect(() => {\n    const operatorListQuery = channel === null || channel === void 0 ? void 0 : channel.createOperatorListQuery({\n      limit: 20\n    });\n    operatorListQuery.next().then(operators => {\n      setOperators(operators);\n    });\n    setOperatorQuery(operatorListQuery);\n  }, []);\n  return /*#__PURE__*/React__default.createElement(\"div\", null, /*#__PURE__*/React__default.createElement(Modal, {\n    isFullScreenOnMobile: true,\n    hideFooter: true,\n    titleText: stringSet.CHANNEL_SETTING__OPERATORS__TITLE_ALL,\n    onCancel: onCancel\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-more-members__popup-scroll\",\n    onScroll: e => {\n      const {\n        hasNext\n      } = operatorQuery;\n      const target = e.target;\n      const fetchMore = target.clientHeight + target.scrollTop === target.scrollHeight;\n      if (hasNext && fetchMore) {\n        operatorQuery.next().then(o => {\n          setOperators([...operators, ...o]);\n        });\n      }\n    }\n  }, operators.map(member => /*#__PURE__*/React__default.createElement(UserListItem, {\n    currentUser: currentUserId,\n    user: member,\n    key: member.userId,\n    action: _ref2 => {\n      let {\n        parentRef,\n        actionRef\n      } = _ref2;\n      return (member === null || member === void 0 ? void 0 : member.userId) !== currentUserId && /*#__PURE__*/React__default.createElement(ContextMenu, {\n        menuTrigger: toggleDropdown => /*#__PURE__*/React__default.createElement(IconButton, {\n          className: \"sendbird-user-message__more__menu\",\n          width: \"32px\",\n          height: \"32px\",\n          onClick: toggleDropdown\n        }, /*#__PURE__*/React__default.createElement(Icon, {\n          width: \"24px\",\n          height: \"24px\",\n          type: IconTypes.MORE,\n          fillColor: IconColors.CONTENT_INVERSE\n        })),\n        menuItems: closeDropdown => /*#__PURE__*/React__default.createElement(MenuItems, {\n          parentContainRef: parentRef,\n          parentRef: actionRef // for catching location(x, y) of MenuItems\n          ,\n\n          closeDropdown: closeDropdown,\n          openLeft: true\n        }, /*#__PURE__*/React__default.createElement(MenuItem, {\n          onClick: () => {\n            channel === null || channel === void 0 ? void 0 : channel.removeOperators([member.userId]).then(() => {\n              setOperators(operators.filter(_ref3 => {\n                let {\n                  userId\n                } = _ref3;\n                return userId !== member.userId;\n              }));\n            });\n            closeDropdown();\n          },\n          dataSbId: \"channel_setting_operator_context_menu_unregister_unregister_operator\"\n        }, stringSet.CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR))\n      });\n    }\n  })))));\n}\nfunction AddOperatorsModal(_ref) {\n  let {\n    onCancel,\n    onSubmit\n  } = _ref;\n  const [members, setMembers] = useState([]);\n  const [selectedMembers, setSelectedMembers] = useState({});\n  const [memberQuery, setMemberQuery] = useState(null);\n  const {\n    stringSet\n  } = useContext(LocalizationContext);\n  const {\n    channel\n  } = useChannelSettingsContext();\n  useEffect(() => {\n    const memberListQuery = channel === null || channel === void 0 ? void 0 : channel.createMemberListQuery({\n      operatorFilter: OperatorFilter.NONOPERATOR,\n      limit: 20\n    });\n    memberListQuery.next().then(members => {\n      setMembers(members);\n    });\n    setMemberQuery(memberListQuery);\n  }, []);\n  const selectedCount = Object.keys(selectedMembers).filter(m => selectedMembers[m]).length;\n  return /*#__PURE__*/React__default.createElement(\"div\", null, /*#__PURE__*/React__default.createElement(Modal, {\n    isFullScreenOnMobile: true,\n    type: ButtonTypes.PRIMARY,\n    submitText: stringSet.CHANNEL_SETTING__OPERATORS__ADD_BUTTON,\n    onCancel: onCancel,\n    onSubmit: () => {\n      const members = Object.keys(selectedMembers).filter(m => selectedMembers[m]);\n      channel === null || channel === void 0 ? void 0 : channel.addOperators(members).then(() => {\n        onSubmit(members);\n      });\n    },\n    titleText: stringSet.CHANNEL_SETTING__MEMBERS__SELECT_TITLE\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    color: selectedCount > 0 ? LabelColors.PRIMARY : LabelColors.ONBACKGROUND_3,\n    type: LabelTypography.CAPTION_1\n  }, `${selectedCount} ${stringSet.MODAL__INVITE_MEMBER__SELECTED}`), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-more-members__popup-scroll\",\n    onScroll: e => {\n      const {\n        hasNext\n      } = memberQuery;\n      const target = e.target;\n      const fetchMore = target.clientHeight + target.scrollTop === target.scrollHeight;\n      if (hasNext && fetchMore) {\n        memberQuery.next().then(o => {\n          setMembers([...members, ...o]);\n        });\n      }\n    }\n  }, members.map(member => /*#__PURE__*/React__default.createElement(UserListItem, {\n    checkBox: true,\n    checked: selectedMembers[member.userId],\n    isOperator: (member === null || member === void 0 ? void 0 : member.role) === 'operator',\n    disabled: (member === null || member === void 0 ? void 0 : member.role) === 'operator',\n    onChange: event => {\n      const modifiedSelectedMembers = _objectSpread2(_objectSpread2({}, selectedMembers), {}, {\n        [event.target.id]: event.target.checked\n      });\n      if (!event.target.checked) {\n        delete modifiedSelectedMembers[event.target.id];\n      }\n      setSelectedMembers(modifiedSelectedMembers);\n    },\n    user: member,\n    key: member.userId\n  })))));\n}\nconst OperatorList = () => {\n  var _state$config;\n  const [operators, setOperators] = useState([]);\n  const [showMore, setShowMore] = useState(false);\n  const [showAdd, setShowAdd] = useState(false);\n  const [hasNext, setHasNext] = useState(false);\n  const {\n    stringSet\n  } = useContext(LocalizationContext);\n  const state = useSendbirdStateContext();\n  const {\n    channel\n  } = useChannelSettingsContext();\n  const userId = state === null || state === void 0 ? void 0 : (_state$config = state.config) === null || _state$config === void 0 ? void 0 : _state$config.userId;\n  useEffect(() => {\n    if (!channel) {\n      setOperators([]);\n      return;\n    }\n    const operatorListQuery = channel === null || channel === void 0 ? void 0 : channel.createOperatorListQuery({\n      limit: 10\n    });\n    operatorListQuery.next().then(operators => {\n      setOperators(operators);\n      setHasNext(operatorListQuery.hasNext);\n    });\n  }, [channel]);\n  const refreshList = useCallback(() => {\n    if (!channel) {\n      setOperators([]);\n      return;\n    }\n    const operatorListQuery = channel === null || channel === void 0 ? void 0 : channel.createOperatorListQuery({\n      limit: 10\n    });\n    operatorListQuery.next().then(operators => {\n      setOperators(operators);\n      setHasNext(operatorListQuery.hasNext);\n    });\n  }, [channel]);\n  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, operators.map(operator => /*#__PURE__*/React__default.createElement(UserListItem$1, {\n    key: operator.userId,\n    user: operator,\n    currentUser: userId,\n    action: _ref => {\n      let {\n        actionRef\n      } = _ref;\n      if ((operator === null || operator === void 0 ? void 0 : operator.userId) === userId) {\n        return null;\n      }\n      return /*#__PURE__*/React__default.createElement(ContextMenu, {\n        menuTrigger: toggleDropdown => /*#__PURE__*/React__default.createElement(IconButton, {\n          className: \"sendbird-user-message__more__menu\",\n          width: \"32px\",\n          height: \"32px\",\n          onClick: toggleDropdown\n        }, /*#__PURE__*/React__default.createElement(Icon, {\n          width: \"24px\",\n          height: \"24px\",\n          type: IconTypes.MORE,\n          fillColor: IconColors.CONTENT_INVERSE\n        })),\n        menuItems: closeDropdown => /*#__PURE__*/React__default.createElement(MenuItems, {\n          parentRef: actionRef,\n          closeDropdown: closeDropdown,\n          openLeft: true\n        }, /*#__PURE__*/React__default.createElement(MenuItem, {\n          onClick: () => {\n            channel === null || channel === void 0 ? void 0 : channel.removeOperators([operator.userId]).then(() => {\n              setOperators(operators.filter(_ref2 => {\n                let {\n                  userId\n                } = _ref2;\n                return userId !== operator.userId;\n              }));\n            });\n            closeDropdown();\n          },\n          dataSbId: \"channel_setting_operator_context_menu_unregister_operator\"\n        }, stringSet.CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR))\n      });\n    }\n  })), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-settings-accordion__footer\"\n  }, /*#__PURE__*/React__default.createElement(Button, {\n    type: ButtonTypes.SECONDARY,\n    size: ButtonSizes.SMALL,\n    onClick: () => {\n      setShowAdd(true);\n    }\n  }, stringSet.CHANNEL_SETTING__OPERATORS__TITLE_ADD), hasNext && /*#__PURE__*/React__default.createElement(Button, {\n    type: ButtonTypes.SECONDARY,\n    size: ButtonSizes.SMALL,\n    onClick: () => {\n      setShowMore(true);\n    }\n  }, stringSet.CHANNEL_SETTING__OPERATORS__TITLE_ALL)), showMore && /*#__PURE__*/React__default.createElement(OperatorsModal, {\n    onCancel: () => {\n      setShowMore(false);\n      refreshList();\n    }\n  }), showAdd && /*#__PURE__*/React__default.createElement(AddOperatorsModal, {\n    onCancel: () => setShowAdd(false),\n    onSubmit: () => {\n      refreshList();\n      setShowAdd(false);\n    }\n  }));\n};\nfunction BannedUsersModal(_ref) {\n  let {\n    onCancel\n  } = _ref;\n  const [members, setMembers] = useState([]);\n  const [memberQuery, setMemberQuery] = useState(null);\n  const {\n    channel\n  } = useChannelSettingsContext();\n  const {\n    stringSet\n  } = useLocalization();\n  useEffect(() => {\n    const bannedUserListQuery = channel === null || channel === void 0 ? void 0 : channel.createBannedUserListQuery();\n    bannedUserListQuery.next().then(users => {\n      setMembers(users);\n    });\n    setMemberQuery(bannedUserListQuery);\n  }, []);\n  return /*#__PURE__*/React__default.createElement(\"div\", null, /*#__PURE__*/React__default.createElement(Modal, {\n    isFullScreenOnMobile: true,\n    hideFooter: true,\n    onCancel: () => onCancel(),\n    onSubmit: noop,\n    titleText: stringSet.CHANNEL_SETTING__MUTED_MEMBERS__TITLE\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-more-members__popup-scroll\",\n    onScroll: e => {\n      const {\n        hasNext\n      } = memberQuery;\n      const target = e.target;\n      const fetchMore = target.clientHeight + target.scrollTop === target.scrollHeight;\n      if (hasNext && fetchMore) {\n        memberQuery.next().then(o => {\n          setMembers([...members, ...o]);\n        });\n      }\n    }\n  }, members.map(member => /*#__PURE__*/React__default.createElement(UserListItem, {\n    user: member,\n    key: member.userId,\n    action: _ref2 => {\n      let {\n        parentRef,\n        actionRef\n      } = _ref2;\n      return /*#__PURE__*/React__default.createElement(ContextMenu, {\n        menuTrigger: toggleDropdown => /*#__PURE__*/React__default.createElement(IconButton, {\n          className: \"sendbird-user-message__more__menu\",\n          width: \"32px\",\n          height: \"32px\",\n          onClick: toggleDropdown\n        }, /*#__PURE__*/React__default.createElement(Icon, {\n          width: \"24px\",\n          height: \"24px\",\n          type: IconTypes.MORE,\n          fillColor: IconColors.CONTENT_INVERSE\n        })),\n        menuItems: closeDropdown => /*#__PURE__*/React__default.createElement(MenuItems, {\n          parentContainRef: parentRef,\n          parentRef: actionRef // for catching location(x, y) of MenuItems\n          ,\n\n          closeDropdown: closeDropdown,\n          openLeft: true\n        }, /*#__PURE__*/React__default.createElement(MenuItem, {\n          onClick: () => {\n            channel === null || channel === void 0 ? void 0 : channel.unbanUser(member).then(() => {\n              closeDropdown();\n              setMembers(members.filter(m => {\n                return m.userId !== member.userId;\n              }));\n            });\n          },\n          dataSbId: \"channel_setting_banned_user_context_menu_ban\"\n        }, stringSet.CHANNEL_SETTING__MODERATION__BAN))\n      });\n    }\n  })))));\n}\nconst BannedMemberList = () => {\n  const [members, setMembers] = useState([]);\n  const [hasNext, setHasNext] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const {\n    stringSet\n  } = useContext(LocalizationContext);\n  const {\n    channel\n  } = useChannelSettingsContext();\n  const bannedUserListQueryParams = {\n    limit: 10\n  };\n  useEffect(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n    const bannedUserListQuery = channel === null || channel === void 0 ? void 0 : channel.createBannedUserListQuery(bannedUserListQueryParams);\n    bannedUserListQuery.next().then(users => {\n      setMembers(users);\n      setHasNext(bannedUserListQuery.hasNext);\n    });\n  }, [channel]);\n  const refreshList = useCallback(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n    const bannedUserListQuery = channel === null || channel === void 0 ? void 0 : channel.createBannedUserListQuery(bannedUserListQueryParams);\n    bannedUserListQuery.next().then(users => {\n      setMembers(users);\n      setHasNext(bannedUserListQuery.hasNext);\n    });\n  }, [channel]);\n  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, members.map(member => /*#__PURE__*/React__default.createElement(UserListItem$1, {\n    key: member.userId,\n    user: member,\n    action: _ref => {\n      let {\n        actionRef,\n        parentRef\n      } = _ref;\n      return /*#__PURE__*/React__default.createElement(ContextMenu, {\n        menuTrigger: toggleDropdown => /*#__PURE__*/React__default.createElement(IconButton, {\n          className: \"sendbird-user-message__more__menu\",\n          width: \"32px\",\n          height: \"32px\",\n          onClick: toggleDropdown\n        }, /*#__PURE__*/React__default.createElement(Icon, {\n          width: \"24px\",\n          height: \"24px\",\n          type: IconTypes.MORE,\n          fillColor: IconColors.CONTENT_INVERSE\n        })),\n        menuItems: closeDropdown => /*#__PURE__*/React__default.createElement(MenuItems, {\n          parentContainRef: parentRef,\n          parentRef: actionRef // for catching location(x, y) of MenuItems\n          ,\n\n          closeDropdown: closeDropdown,\n          openLeft: true\n        }, /*#__PURE__*/React__default.createElement(MenuItem, {\n          onClick: () => {\n            channel === null || channel === void 0 ? void 0 : channel.unbanUser(member).then(() => {\n              closeDropdown();\n              refreshList();\n            });\n          },\n          dataSbId: \"channel_setting_banned_user_context_menu_unban\"\n        }, stringSet.CHANNEL_SETTING__MODERATION__UNBAN))\n      });\n    }\n  })), members && members.length === 0 && /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-channel-settings__empty-list\",\n    type: LabelTypography.SUBTITLE_2,\n    color: LabelColors.ONBACKGROUND_3\n  }, stringSet.CHANNEL_SETTING__MODERATION__EMPTY_BAN), hasNext && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-settings-accordion__footer\"\n  }, /*#__PURE__*/React__default.createElement(Button, {\n    type: ButtonTypes.SECONDARY,\n    size: ButtonSizes.SMALL,\n    onClick: () => {\n      setShowModal(true);\n    }\n  }, stringSet.CHANNEL_SETTING__MODERATION__ALL_BAN)), showModal && /*#__PURE__*/React__default.createElement(BannedUsersModal, {\n    onCancel: () => {\n      setShowModal(false);\n      refreshList();\n    }\n  }));\n};\nfunction MutedMembersModal(_ref) {\n  var _state$config;\n  let {\n    onCancel\n  } = _ref;\n  const [members, setMembers] = useState([]);\n  const [memberQuery, setMemberQuery] = useState(null);\n  const {\n    channel\n  } = useChannelSettingsContext();\n  const state = useSendbirdStateContext();\n  const currentUser = state === null || state === void 0 ? void 0 : (_state$config = state.config) === null || _state$config === void 0 ? void 0 : _state$config.userId;\n  const {\n    stringSet\n  } = useLocalization();\n  useEffect(() => {\n    const memberUserListQuery = channel === null || channel === void 0 ? void 0 : channel.createMemberListQuery({\n      limit: 10,\n      // @ts-ignore\n      mutedMemberFilter: 'muted'\n    });\n    memberUserListQuery.next().then(members => {\n      setMembers(members);\n    });\n    setMemberQuery(memberUserListQuery);\n  }, []);\n  return /*#__PURE__*/React__default.createElement(\"div\", null, /*#__PURE__*/React__default.createElement(Modal, {\n    isFullScreenOnMobile: true,\n    hideFooter: true,\n    onCancel: () => onCancel(),\n    onSubmit: noop,\n    titleText: stringSet.CHANNEL_SETTING__MUTED_MEMBERS__TITLE\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-more-members__popup-scroll\",\n    onScroll: e => {\n      const {\n        hasNext\n      } = memberQuery;\n      const target = e.target;\n      const fetchMore = target.clientHeight + target.scrollTop === target.scrollHeight;\n      if (hasNext && fetchMore) {\n        memberQuery.next().then(o => {\n          setMembers([...members, ...o]);\n        });\n      }\n    }\n  }, members.map(member => /*#__PURE__*/React__default.createElement(UserListItem, {\n    currentUser: currentUser,\n    user: member,\n    key: member.userId,\n    action: _ref2 => {\n      let {\n        actionRef,\n        parentRef\n      } = _ref2;\n      return /*#__PURE__*/React__default.createElement(ContextMenu, {\n        menuTrigger: toggleDropdown => /*#__PURE__*/React__default.createElement(IconButton, {\n          className: \"sendbird-user-message__more__menu\",\n          width: \"32px\",\n          height: \"32px\",\n          onClick: toggleDropdown\n        }, /*#__PURE__*/React__default.createElement(Icon, {\n          width: \"24px\",\n          height: \"24px\",\n          type: IconTypes.MORE,\n          fillColor: IconColors.CONTENT_INVERSE\n        })),\n        menuItems: closeDropdown => /*#__PURE__*/React__default.createElement(MenuItems, {\n          parentContainRef: parentRef,\n          parentRef: actionRef // for catching location(x, y) of MenuItems\n          ,\n\n          closeDropdown: closeDropdown,\n          openLeft: true\n        }, /*#__PURE__*/React__default.createElement(MenuItem, {\n          onClick: () => {\n            channel === null || channel === void 0 ? void 0 : channel.unmuteUser(member).then(() => {\n              closeDropdown();\n              setMembers(members.filter(m => {\n                return m.userId !== member.userId;\n              }));\n            });\n          },\n          dataSbId: \"channel_setting_muted_member_context_menu_unmute\"\n        }, stringSet.CHANNEL_SETTING__MODERATION__UNMUTE))\n      });\n    }\n  })))));\n}\nconst MutedMemberList = () => {\n  var _state$config;\n  const [members, setMembers] = useState([]);\n  const [hasNext, setHasNext] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const {\n    stringSet\n  } = useLocalization();\n  const {\n    channel\n  } = useChannelSettingsContext();\n  const state = useSendbirdStateContext();\n  const currentUser = state === null || state === void 0 ? void 0 : (_state$config = state.config) === null || _state$config === void 0 ? void 0 : _state$config.userId;\n  useEffect(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n    const memberUserListQuery = channel === null || channel === void 0 ? void 0 : channel.createMemberListQuery({\n      limit: 10,\n      // @ts-ignore\n      mutedMemberFilter: 'muted'\n    });\n    memberUserListQuery.next().then(members => {\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n  const refreshList = useCallback(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n    const memberUserListQuery = channel === null || channel === void 0 ? void 0 : channel.createMemberListQuery({\n      limit: 10,\n      // @ts-ignore\n      mutedMemberFilter: 'muted'\n    });\n    memberUserListQuery.next().then(members => {\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, members.map(member => /*#__PURE__*/React__default.createElement(UserListItem$1, {\n    key: member.userId,\n    user: member,\n    currentUser: currentUser,\n    action: _ref => {\n      let {\n        actionRef,\n        parentRef\n      } = _ref;\n      return /*#__PURE__*/React__default.createElement(ContextMenu, {\n        menuTrigger: toggleDropdown => /*#__PURE__*/React__default.createElement(IconButton, {\n          className: \"sendbird-user-message__more__menu\",\n          width: \"32px\",\n          height: \"32px\",\n          onClick: toggleDropdown\n        }, /*#__PURE__*/React__default.createElement(Icon, {\n          width: \"24px\",\n          height: \"24px\",\n          type: IconTypes.MORE,\n          fillColor: IconColors.CONTENT_INVERSE\n        })),\n        menuItems: closeDropdown => /*#__PURE__*/React__default.createElement(MenuItems, {\n          closeDropdown: closeDropdown,\n          openLeft: true,\n          parentContainRef: parentRef,\n          parentRef: actionRef // for catching location(x, y) of MenuItems\n        }, /*#__PURE__*/React__default.createElement(MenuItem, {\n          onClick: () => {\n            channel === null || channel === void 0 ? void 0 : channel.unmuteUser(member).then(() => {\n              refreshList();\n              closeDropdown();\n            });\n          },\n          dataSbId: \"channel_setting_muted_member_context_menu_unmute\"\n        }, (stringSet === null || stringSet === void 0 ? void 0 : stringSet.CHANNEL_SETTING__UNMUTE) || stringSet.CHANNEL_SETTING__MODERATION__UNMUTE))\n      });\n    }\n  })), members && members.length === 0 && /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-channel-settings__empty-list\",\n    type: LabelTypography.SUBTITLE_2,\n    color: LabelColors.ONBACKGROUND_3\n  }, stringSet.CHANNEL_SETTING__NO_UNMUTED), hasNext && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-settings-accordion__footer\"\n  }, /*#__PURE__*/React__default.createElement(Button, {\n    type: ButtonTypes.SECONDARY,\n    size: ButtonSizes.SMALL,\n    onClick: () => {\n      setShowModal(true);\n    }\n  }, stringSet.CHANNEL_SETTING__MUTED_MEMBERS__TITLE_ALL)), showModal && /*#__PURE__*/React__default.createElement(MutedMembersModal, {\n    onCancel: () => {\n      setShowModal(false);\n      refreshList();\n    }\n  }));\n};\nconst kFormatter = num => {\n  return Math.abs(num) > 999 ? `${(Math.abs(num) / 1000).toFixed(1)}K` : num;\n};\nfunction AdminPannel() {\n  const [frozen, setFrozen] = useState(false);\n  const {\n    stringSet\n  } = useContext(LocalizationContext);\n  const {\n    channel\n  } = useChannelSettingsContext();\n\n  // work around for\n  // https://sendbird.slack.com/archives/G01290GCDCN/p1595922832000900\n  // SDK bug - after frozen/unfrozen myRole becomes \"none\"\n  useEffect(() => {\n    setFrozen(channel === null || channel === void 0 ? void 0 : channel.isFrozen);\n  }, [channel]);\n  return /*#__PURE__*/React__default.createElement(AccordionGroup, {\n    className: \"sendbird-channel-settings__operator\"\n  }, /*#__PURE__*/React__default.createElement(Accordion, {\n    className: \"sendbird-channel-settings__operators-list\",\n    id: \"operators\",\n    renderTitle: () => /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(Icon, {\n      type: IconTypes.OPERATOR,\n      fillColor: IconColors.PRIMARY,\n      width: 24,\n      height: 24,\n      className: \"sendbird-channel-settings__accordion-icon\"\n    }), /*#__PURE__*/React__default.createElement(Label, {\n      type: LabelTypography.SUBTITLE_1,\n      color: LabelColors.ONBACKGROUND_1\n    }, stringSet.CHANNEL_SETTING__OPERATORS__TITLE)),\n    renderContent: () => /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(OperatorList, null))\n  }), /*#__PURE__*/React__default.createElement(Accordion, {\n    className: \"sendbird-channel-settings__members-list\",\n    id: \"members\",\n    renderTitle: () => /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(Icon, {\n      type: IconTypes.MEMBERS,\n      fillColor: IconColors.PRIMARY,\n      width: 24,\n      height: 24,\n      className: \"sendbird-channel-settings__accordion-icon\"\n    }), /*#__PURE__*/React__default.createElement(Label, {\n      type: LabelTypography.SUBTITLE_1,\n      color: LabelColors.ONBACKGROUND_1\n    }, stringSet.CHANNEL_SETTING__MEMBERS__TITLE), /*#__PURE__*/React__default.createElement(Badge, {\n      count: kFormatter(channel === null || channel === void 0 ? void 0 : channel.memberCount)\n    })),\n    renderContent: () => /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(MemberList, null))\n  }),\n  // No muted members in broadcast channel\n  !(channel !== null && channel !== void 0 && channel.isBroadcast) && /*#__PURE__*/React__default.createElement(Accordion, {\n    id: \"mutedMembers\",\n    className: \"sendbird-channel-settings__muted-members-list\",\n    renderTitle: () => /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(Icon, {\n      type: IconTypes.MUTE,\n      fillColor: IconColors.PRIMARY,\n      width: 24,\n      height: 24,\n      className: \"sendbird-channel-settings__accordion-icon\"\n    }), /*#__PURE__*/React__default.createElement(Label, {\n      type: LabelTypography.SUBTITLE_1,\n      color: LabelColors.ONBACKGROUND_1\n    }, stringSet.CHANNEL_SETTING__MUTED_MEMBERS__TITLE)),\n    renderContent: () => /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(MutedMemberList, null))\n  }), /*#__PURE__*/React__default.createElement(Accordion, {\n    className: \"sendbird-channel-settings__banned-members-list\",\n    id: \"bannedUsers\",\n    renderTitle: () => /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(Icon, {\n      type: IconTypes.BAN,\n      fillColor: IconColors.PRIMARY,\n      width: 24,\n      height: 24,\n      className: \"sendbird-channel-settings__accordion-icon\"\n    }), /*#__PURE__*/React__default.createElement(Label, {\n      type: LabelTypography.SUBTITLE_1,\n      color: LabelColors.ONBACKGROUND_1\n    }, stringSet.CHANNEL_SETTING__BANNED_MEMBERS__TITLE)),\n    renderContent: () => /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(BannedMemberList, null))\n  }),\n  // cannot freeze broadcast channel\n  !(channel !== null && channel !== void 0 && channel.isBroadcast) && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-settings__freeze\"\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    type: IconTypes.FREEZE,\n    fillColor: IconColors.PRIMARY,\n    width: 24,\n    height: 24,\n    className: \"sendbird-channel-settings__accordion-icon\"\n  }), /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.SUBTITLE_1,\n    color: LabelColors.ONBACKGROUND_1\n  }, stringSet.CHANNEL_SETTING__FREEZE_CHANNEL), /*#__PURE__*/React__default.createElement(Toggle, {\n    className: \"sendbird-channel-settings__frozen-icon\",\n    checked: frozen,\n    onChange: () => {\n      if (frozen) {\n        channel === null || channel === void 0 ? void 0 : channel.unfreeze().then(() => {\n          setFrozen(prev => !prev);\n        });\n      } else {\n        channel === null || channel === void 0 ? void 0 : channel.freeze().then(() => {\n          setFrozen(prev => !prev);\n        });\n      }\n    }\n  })));\n}\nexport { AdminPannel as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBe,SAASA,cAAcA,OAAoC;EAAA;EAAA,IAAnC;IAAEC;EAAgB,CAAC;EACxD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGF,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAM;IAAEG;GAAS,GAAGC,yBAAyB,EAAE;EAC/C,MAAMC,KAAK,GAAGC,uBAAuB,EAAE;EACvC,MAAMC,aAAa,GAAGF,KAAK,KAALA,aAAK,wCAALA,KAAK,CAAEG,MAAM,gCAAbC,gCAAeC,MAAM;EAC3C,MAAM;IAAEC;EAAU,CAAC,GAAGC,UAAU,CAACC,mBAAmB,CAAC;EAErDC,SAAS,CAAC,MAAM;IACd,MAAMC,iBAAiB,GAAGZ,OAAO,aAAPA,OAAO,KAAPA,yBAAO,CAAEa,uBAAuB,CAAC;MACzDC,KAAK,EAAE;IACT,CAAC,CAAC;IACFF,iBAAiB,CAACG,IAAI,EAAE,CAACC,IAAI,CAAErB,SAAS,IAAK;MAC3CC,YAAY,CAACD,SAAS,CAAC;IACzB,CAAC,CAAC;IACFI,gBAAgB,CAACa,iBAAiB,CAAC;GACpC,EAAE,EAAE,CAAC;EACN,oBACEK,uDACEA,6BAACC,KAAK;IACJC,oBAAoB;IACpBC,UAAU;IACVC,SAAS,EAAEb,SAAS,CAACc,qCAAsC;IAC3D5B,QAAQ,EAAEA;GAEVuB;IACEM,SAAS,EAAC,qCAAqC;IAC/CC,QAAQ,EAAGC,CAAC,IAAK;MACf,MAAM;QAAEC;MAAQ,CAAC,GAAG5B,aAAa;MACjC,MAAM6B,MAAM,GAAGF,CAAC,CAACE,MAA6B;MAC9C,MAAMC,SAAS,GACbD,MAAM,CAACE,YAAY,GAAGF,MAAM,CAACG,SAAS,KAAKH,MAAM,CAACI,YACnD;MAED,IAAIL,OAAO,IAAIE,SAAS,EAAE;QACxB9B,aAAa,CAACiB,IAAI,EAAE,CAACC,IAAI,CAAEgB,CAAC,IAAK;UAC/BpC,YAAY,CAAC,CACX,GAAGD,SAAS,EACZ,GAAGqC,CAAC,CACL,CAAC;QACJ,CAAC,CAAC;MACJ;IACF;GAECrC,WAAS,CAACsC,GAAG,CAAEC,MAAM,iBACpBjB,6BAACkB,YAAY;IACXC,WAAW,EAAEhC,aAAc;IAC3BiC,IAAI,EAAEH,MAAO;IACbI,GAAG,EAAEJ,MAAM,CAAC3B,MAAO;IACnBgC,MAAM,EAAEC;MAAA,IAAC;QAAEC,SAAS;QAAEC;MAAU,CAAC;MAAA,OAC/B,OAAM,KAANR,cAAM,uBAANA,MAAM,CAAE3B,MAAM,MAAKH,aAAa,iBAC9Ba,6BAAC0B,WAAW;QACVC,WAAW,EAAGC,cAAc,iBAC1B5B,6BAAC6B,UAAU;UACTvB,SAAS,EAAC,mCAAmC;UAC7CwB,KAAK,EAAC,MAAM;UACZC,MAAM,EAAC,MAAM;UACbC,OAAO,EAAEJ;QAAe,gBAExB5B,6BAACiC,IAAI;UACHH,KAAK,EAAC,MAAM;UACZC,MAAM,EAAC,MAAM;UACbG,IAAI,EAAEC,SAAS,CAACC,IAAK;UACrBC,SAAS,EAAEC,UAAU,CAACC;QAAgB,EACtC,CAEJ;QACFC,SAAS,EAAGC,aAAa,iBACvBzC,6BAAC0C,SAAS;UACRC,gBAAgB,EAAEnB,SAAU;UAC5BA,SAAS,EAAEC,SAAU;UAAA;;UACrBgB,aAAa,EAAEA,aAAc;UAC7BG,QAAQ;QAAA,gBAER5C,6BAAC6C,QAAQ;UACPb,OAAO,EAAEA,MAAM;YACbjD,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAE+D,eAAe,CAAC,CAAC7B,MAAM,CAAC3B,MAAM,CAAC,CAAC,CAACS,IAAI,CAAC,MAAM;cACnDpB,YAAY,CAACD,SAAS,CAACqE,MAAM,CAACC,SAAgB;gBAAA,IAAf;kBAAE1D;gBAAO,CAAC;gBACvC,OAAOA,MAAM,KAAK2B,MAAM,CAAC3B,MAAM;cACjC,CAAC,CAAC,CAAC;YACL,CAAC,CAAC;YACFmD,aAAa,EAAE;WACf;UACFQ,QAAQ,EAAC;SAER1D,WAAS,CAAC2D,gDAAgD,CAClD;OAIlB;IAAA;GAGN,EAAC,CACE,CACA,CACJ;AAEV;AC/Fe,SAASC,iBAAiBA,OAGjB;EAAA,IAHkB;IACxC1E,QAAQ;IACR2E;EACK,CAAC;EACN,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAG1E,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC2E,eAAe,EAAEC,kBAAkB,CAAC,GAAG5E,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAAC6E,WAAW,EAAEC,cAAc,CAAC,GAAG9E,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM;IAAEW;EAAU,CAAC,GAAGC,UAAU,CAACC,mBAAmB,CAAC;EAErD,MAAM;IAAEV;GAAS,GAAGC,yBAAyB,EAAE;EAE/CU,SAAS,CAAC,MAAM;IACd,MAAMiE,eAAe,GAAG5E,OAAO,aAAPA,OAAO,KAAPA,yBAAO,CAAE6E,qBAAqB,CAAC;MACrDC,cAAc,EAAEC,cAAc,CAACC,WAAW;MAC1ClE,KAAK,EAAE;IACT,CAAC,CAAC;IACF8D,eAAe,CAAC7D,IAAI,EAAE,CAACC,IAAI,CAAEsD,OAAO,IAAK;MACvCC,UAAU,CAACD,OAAO,CAAC;IACrB,CAAC,CAAC;IACFK,cAAc,CAACC,eAAe,CAAC;GAChC,EAAE,EAAE,CAAC;EAEN,MAAMK,aAAa,GAAGC,MAAM,CAACC,IAAI,CAACX,eAAe,CAAC,CAACR,MAAM,CAAEoB,CAAC,IAAKZ,eAAe,CAACY,CAAC,CAAC,CAAC,CAACC,MAAM;EAC3F,oBACEpE,uDACEA,6BAACC,KAAK;IACJC,oBAAoB;IACpBgC,IAAI,EAAEmC,WAAW,CAACC,OAAQ;IAC1BC,UAAU,EAAEhF,SAAS,CAACiF,sCAAuC;IAC7D/F,QAAQ,EAAEA,QAAS;IACnB2E,QAAQ,EAAEA,MAAM;MACd,MAAMC,OAAO,GAAGY,MAAM,CAACC,IAAI,CAACX,eAAe,CAAC,CAACR,MAAM,CAAEoB,CAAC,IAAKZ,eAAe,CAACY,CAAC,CAAC,CAAC;MAC9EpF,OAAO,KAAPA,eAAO,KAAPA,yBAAO,CAAE0F,YAAY,CAACpB,OAAO,CAAC,CAACtD,IAAI,CAAC,MAAM;QACxCqD,QAAQ,CAACC,OAAO,CAAC;MACnB,CAAC,CAAC;KACF;IACFjD,SAAS,EAAEb,SAAS,CAACmF;EAAuC,gBAE5D1E,6BAAC2E,KAAK;IACJC,KAAK,EAAGZ,aAAa,GAAG,CAAC,GAAIa,WAAW,CAACP,OAAO,GAAGO,WAAW,CAACC,cAAe;IAC9E5C,IAAI,EAAE6C,eAAe,CAACC;GAEpB,KAAEhB,aAAc,IAAGzE,SAAS,CAAC0F,8BAA+B,EAAC,CACzD,eACRjF;IACEM,SAAS,EAAC,qCAAqC;IAC/CC,QAAQ,EAAGC,CAAC,IAAK;MACf,MAAM;QAAEC;MAAQ,CAAC,GAAGgD,WAAW;MAC/B,MAAM/C,MAAM,GAAGF,CAAC,CAACE,MAA6B;MAC9C,MAAMC,SAAS,GACbD,MAAM,CAACE,YAAY,GAAGF,MAAM,CAACG,SAAS,KAAKH,MAAM,CAACI,YACnD;MACD,IAAIL,OAAO,IAAIE,SAAS,EAAE;QACxB8C,WAAW,CAAC3D,IAAI,EAAE,CAACC,IAAI,CAAEgB,CAAC,IAAK;UAC7BuC,UAAU,CAAC,CACT,GAAGD,OAAO,EACV,GAAGtC,CAAC,CACL,CAAC;QACJ,CAAC,CAAC;MACJ;IACF;GAGEsC,SAAO,CAACrC,GAAG,CAAEC,MAAM,iBACjBjB,6BAACkB,YAAY;IACXgE,QAAQ;IACRC,OAAO,EAAE5B,eAAe,CAACtC,MAAM,CAAC3B,MAAM,CAAE;IACxC8F,UAAU,EAAE,OAAM,KAANnE,cAAM,uBAANA,MAAM,CAAEoE,IAAI,MAAK,UAAW;IACxCC,QAAQ,EAAE,OAAM,KAANrE,cAAM,uBAANA,MAAM,CAAEoE,IAAI,MAAK,UAAW;IACtCE,QAAQ,EACLC,KAAK,IAAK;MACT,MAAMC,uBAAuB,qCACxBlC,eAAe;QAClB,CAACiC,KAAK,CAAC9E,MAAM,CAACgF,EAAE,GAAGF,KAAK,CAAC9E,MAAM,CAACyE;OACjC;MACD,IAAI,CAACK,KAAK,CAAC9E,MAAM,CAACyE,OAAO,EAAE;QACzB,OAAOM,uBAAuB,CAACD,KAAK,CAAC9E,MAAM,CAACgF,EAAE,CAAC;MACjD;MACAlC,kBAAkB,CAACiC,uBAAuB,CAAC;KAE9C;IACDrE,IAAI,EAAEH,MAAO;IACbI,GAAG,EAAEJ,MAAM,CAAC3B;GAEf,EAAC,CAEA,CACA,CACJ;AAEV;AC7FO,MAAMqG,YAAY,GAAGA,MAAoB;EAAA;EAC9C,MAAM,CAACjH,SAAS,EAAEC,YAAY,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACgH,QAAQ,EAAEC,WAAW,CAAC,GAAGjH,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACkH,OAAO,EAAEC,UAAU,CAAC,GAAGnH,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC6B,OAAO,EAAEuF,UAAU,CAAC,GAAGpH,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM;IAAEW;EAAU,CAAC,GAAGC,UAAU,CAACC,mBAAmB,CAAC;EAErD,MAAMR,KAAK,GAAGC,uBAAuB,EAAE;EACvC,MAAM;IAAEH;GAAS,GAAGC,yBAAyB,EAAE;EAE/C,MAAMM,MAAM,GAAGL,KAAK,KAALA,aAAK,wCAALA,KAAK,CAAEG,MAAM,gCAAbC,gCAAeC,MAAM;EAEpCI,SAAS,CAAC,MAAM;IACd,IAAI,CAACX,OAAO,EAAE;MACZJ,YAAY,CAAC,EAAE,CAAC;MAChB;IACF;IAEA,MAAMgB,iBAAiB,GAAGZ,OAAO,aAAPA,OAAO,KAAPA,yBAAO,CAAEa,uBAAuB,CAAC;MACzDC,KAAK,EAAE;IACT,CAAC,CAAC;IACFF,iBAAiB,CAACG,IAAI,EAAE,CAACC,IAAI,CAAErB,SAAS,IAAK;MAC3CC,YAAY,CAACD,SAAS,CAAC;MACvBsH,UAAU,CAACrG,iBAAiB,CAACc,OAAO,CAAC;IACvC,CAAC,CAAC;EACJ,CAAC,EAAE,CAAC1B,OAAO,CAAC,CAAC;EAEb,MAAMkH,WAAW,GAAGC,WAAW,CAC7B,MAAM;IACJ,IAAI,CAACnH,OAAO,EAAE;MACZJ,YAAY,CAAC,EAAE,CAAC;MAChB;IACF;IACA,MAAMgB,iBAAiB,GAAGZ,OAAO,aAAPA,OAAO,KAAPA,yBAAO,CAAEa,uBAAuB,CAAC;MACzDC,KAAK,EAAE;IACT,CAAC,CAAC;IACFF,iBAAiB,CAACG,IAAI,EAAE,CAACC,IAAI,CAAErB,SAAS,IAAK;MAC3CC,YAAY,CAACD,SAAS,CAAC;MACvBsH,UAAU,CAACrG,iBAAiB,CAACc,OAAO,CAAC;IACvC,CAAC,CAAC;EACJ,CAAC,EACD,CAAC1B,OAAO,CAAC,CACV;EAED,oBACEiB,sDAEItB,eAAS,CAACsC,GAAG,CAAEmF,QAAQ,iBACrBnG,6BAACkB,cAAY;IACXG,GAAG,EAAE8E,QAAQ,CAAC7G,MAAO;IACrB8B,IAAI,EAAE+E,QAAS;IACfhF,WAAW,EAAE7B,MAAO;IACpBgC,MAAM,EAAE8E,QAAmB;MAAA,IAAlB;QAAE3E;MAAU,CAAC;MACpB,IAAI,SAAQ,aAAR0E,QAAQ,uBAARA,QAAQ,CAAE7G,MAAM,MAAKA,MAAM,EAAE;QAC/B,OAAO,IAAI;MACb;MACA,oBACEU,6BAAC0B,WAAW;QACVC,WAAW,EAAGC,cAAc,iBAC1B5B,6BAAC6B,UAAU;UACTvB,SAAS,EAAC,mCAAmC;UAC7CwB,KAAK,EAAC,MAAM;UACZC,MAAM,EAAC,MAAM;UACbC,OAAO,EAAEJ;QAAe,gBAExB5B,6BAACiC,IAAI;UACHH,KAAK,EAAC,MAAM;UACZC,MAAM,EAAC,MAAM;UACbG,IAAI,EAAEC,SAAS,CAACC,IAAK;UACrBC,SAAS,EAAEC,UAAU,CAACC;QAAgB,EACtC,CAEJ;QACFC,SAAS,EAAGC,aAAa,iBACvBzC,6BAAC0C,SAAS;UACRlB,SAAS,EAAEC,SAAU;UACrBgB,aAAa,EAAEA,aAAc;UAC7BG,QAAQ;QAAA,gBAER5C,6BAAC6C,QAAQ;UACPb,OAAO,EAAEA,MAAM;YACbjD,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAE+D,eAAe,CAAC,CAACqD,QAAQ,CAAC7G,MAAM,CAAC,CAAC,CAACS,IAAI,CAAC,MAAM;cACrDpB,YAAY,CAACD,SAAS,CAACqE,MAAM,CAACxB;gBAAA,IAAC;kBAAEjC;gBAAO,CAAC;gBAAA,OACvCA,MAAM,KAAK6G,QAAQ,CAAC7G,MAAM;cAAA,CAC3B,CAAC,CAAC;YACL,CAAC,CAAC;YACFmD,aAAa,EAAE;WACf;UACFQ,QAAQ,EAAC;SAER1D,WAAS,CAAC2D,gDAAgD,CAClD;OAGf;IAEN;EAAE,EAEL,CAAC,eAEJlD;IACEM,SAAS,EAAC;EAA6C,gBAEvDN,6BAACqG,MAAM;IACLnE,IAAI,EAAEmC,WAAW,CAACiC,SAAU;IAC5BC,IAAI,EAAEC,WAAW,CAACC,KAAM;IACxBzE,OAAO,EAAEA,MAAM;MACb+D,UAAU,CAAC,IAAI,CAAC;IAClB;GAECxG,WAAS,CAACmH,qCAAqC,CACzC,EAEPjG,OAAO,iBACLT,6BAACqG,MAAM;IACLnE,IAAI,EAAEmC,WAAW,CAACiC,SAAU;IAC5BC,IAAI,EAAEC,WAAW,CAACC,KAAM;IACxBzE,OAAO,EAAEA,MAAM;MACb6D,WAAW,CAAC,IAAI,CAAC;IACnB;EAAE,GAEDtG,SAAS,CAACc,qCAAqC,CAEnD,CAEC,EAEJuF,QAAQ,iBACN5F,6BAACxB,cAAc;IAACC,QAAQ,EAAEA,MAAM;MAC9BoH,WAAW,CAAC,KAAK,CAAC;MAClBI,WAAW,EAAE;IACf;EAAE,EACH,EAGDH,OAAO,iBACL9F,6BAACmD,iBAAiB;IAChB1E,QAAQ,EAAEA,MAAMsH,UAAU,CAAC,KAAK,CAAE;IAClC3C,QAAQ,EAAEA,MAAM;MACd6C,WAAW,EAAE;MACbF,UAAU,CAAC,KAAK,CAAC;IACnB;EAAE,EAEL,CAEF;AAEP,CAAC;ACnJc,SAASY,gBAAgBA,OAEhB;EAAA,IAFiB;IACvClI;EACK,CAAC;EACN,MAAM,CAAC4E,OAAO,EAAEC,UAAU,CAAC,GAAG1E,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC6E,WAAW,EAAEC,cAAc,CAAC,GAAG9E,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM;IAAEG;GAAS,GAAGC,yBAAyB,EAAE;EAC/C,MAAM;IAAEO;GAAW,GAAGqH,eAAe,EAAE;EAEvClH,SAAS,CAAC,MAAM;IACd,MAAMmH,mBAAmB,GAAG9H,OAAO,aAAPA,OAAO,KAAPA,yBAAO,CAAE+H,yBAAyB,EAAE;IAChED,mBAAmB,CAAC/G,IAAI,EAAE,CAACC,IAAI,CAAEgH,KAAK,IAAK;MACzCzD,UAAU,CAACyD,KAAK,CAAC;IACnB,CAAC,CAAC;IACFrD,cAAc,CAACmD,mBAAmB,CAAC;GACpC,EAAE,EAAE,CAAC;EACN,oBACE7G,uDACEA,6BAACC,KAAK;IACJC,oBAAoB;IACpBC,UAAU;IACV1B,QAAQ,EAAEA,MAAMA,QAAQ,EAAG;IAC3B2E,QAAQ,EAAE4D,IAAK;IACf5G,SAAS,EAAEb,SAAS,CAAC0H;GAErBjH;IACEM,SAAS,EAAC,qCAAqC;IAC/CC,QAAQ,EAAGC,CAAC,IAAK;MACf,MAAM;QAAEC;MAAQ,CAAC,GAAGgD,WAAW;MAC/B,MAAM/C,MAAM,GAAGF,CAAC,CAACE,MAA6B;MAC9C,MAAMC,SAAS,GACbD,MAAM,CAACE,YAAY,GAAGF,MAAM,CAACG,SAAS,KAAKH,MAAM,CAACI,YACnD;MAED,IAAIL,OAAO,IAAIE,SAAS,EAAE;QACxB8C,WAAW,CAAC3D,IAAI,EAAE,CAACC,IAAI,CAAEgB,CAAC,IAAK;UAC7BuC,UAAU,CAAC,CACT,GAAGD,OAAO,EACV,GAAGtC,CAAC,CACL,CAAC;QACJ,CAAC,CAAC;MACJ;IACF;GAEEsC,SAAO,CAACrC,GAAG,CAAEC,MAAM,iBACnBjB,6BAACkB,YAAY;IACXE,IAAI,EAAEH,MAAO;IACbI,GAAG,EAAEJ,MAAM,CAAC3B,MAAO;IACnBgC,MAAM,EAAEC;MAAA,IAAC;QAAEC,SAAS;QAAEC;MAAU,CAAC;MAAA,oBAC/BzB,6BAAC0B,WAAW;QACVC,WAAW,EAAGC,cAAc,iBAC1B5B,6BAAC6B,UAAU;UACTvB,SAAS,EAAC,mCAAmC;UAC7CwB,KAAK,EAAC,MAAM;UACZC,MAAM,EAAC,MAAM;UACbC,OAAO,EAAEJ;QAAe,gBAExB5B,6BAACiC,IAAI;UACHH,KAAK,EAAC,MAAM;UACZC,MAAM,EAAC,MAAM;UACbG,IAAI,EAAEC,SAAS,CAACC,IAAK;UACrBC,SAAS,EAAEC,UAAU,CAACC;QAAgB,EACtC,CAEJ;QACFC,SAAS,EAAGC,aAAa,iBACvBzC,6BAAC0C,SAAS;UACRC,gBAAgB,EAAEnB,SAAU;UAC5BA,SAAS,EAAEC,SAAU;UAAA;;UACrBgB,aAAa,EAAEA,aAAc;UAC7BG,QAAQ;QAAA,gBAER5C,6BAAC6C,QAAQ;UACPb,OAAO,EAAEA,MAAM;YACbjD,OAAO,KAAPA,eAAO,KAAPA,yBAAO,CAAEmI,SAAS,CAACjG,MAAM,CAAC,CAAClB,IAAI,CAAC,MAAM;cACpC0C,aAAa,EAAE;cACfa,UAAU,CAACD,OAAO,CAACN,MAAM,CAACoB,CAAC,IAAI;gBAC7B,OAAQA,CAAC,CAAC7E,MAAM,KAAK2B,MAAM,CAAC3B,MAAM;cACpC,CAAC,CAAC,CAAC;YACL,CAAC,CAAC;WACF;UACF2D,QAAQ,EAAC;SAER1D,WAAS,CAAC4H,gCAAgC,CAClC;OAGf;IAAA;GAIP,EAAC,CACE,CACA,CACJ;AAEV;AC3FO,MAAMC,gBAAgB,GAAGA,MAAoB;EAClD,MAAM,CAAC/D,OAAO,EAAEC,UAAU,CAAC,GAAG1E,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC6B,OAAO,EAAEuF,UAAU,CAAC,GAAGpH,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACyI,SAAS,EAAEC,YAAY,CAAC,GAAG1I,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAM;IAAEW;EAAU,CAAC,GAAGC,UAAU,CAACC,mBAAmB,CAAC;EACrD,MAAM;IAAEV;GAAS,GAAGC,yBAAyB,EAAE;EAE/C,MAAMuI,yBAAoD,GAAG;IAAE1H,KAAK,EAAE;GAAI;EAC1EH,SAAS,CAAC,MAAM;IACd,IAAI,CAACX,OAAO,EAAE;MACZuE,UAAU,CAAC,EAAE,CAAC;MACd;IACF;IACA,MAAMuD,mBAAmB,GAAG9H,OAAO,KAAPA,eAAO,KAAPA,yBAAO,CAAE+H,yBAAyB,CAACS,yBAAyB,CAAC;IACzFV,mBAAmB,CAAC/G,IAAI,EAAE,CAACC,IAAI,CAAEgH,KAAK,IAAK;MACzCzD,UAAU,CAACyD,KAAK,CAAC;MACjBf,UAAU,CAACa,mBAAmB,CAACpG,OAAO,CAAC;IACzC,CAAC,CAAC;EACJ,CAAC,EAAE,CAAC1B,OAAO,CAAC,CAAC;EAEb,MAAMkH,WAAW,GAAGC,WAAW,CAAC,MAAM;IACpC,IAAI,CAACnH,OAAO,EAAE;MACZuE,UAAU,CAAC,EAAE,CAAC;MACd;IACF;IACA,MAAMuD,mBAAmB,GAAG9H,OAAO,KAAPA,eAAO,KAAPA,yBAAO,CAAE+H,yBAAyB,CAACS,yBAAyB,CAAC;IACzFV,mBAAmB,CAAC/G,IAAI,EAAE,CAACC,IAAI,CAAEgH,KAAK,IAAK;MACzCzD,UAAU,CAACyD,KAAK,CAAC;MACjBf,UAAU,CAACa,mBAAmB,CAACpG,OAAO,CAAC;IACzC,CAAC,CAAC;EACJ,CAAC,EAAE,CAAC1B,OAAO,CAAC,CAAC;EACb,oBACEiB,sDAEIqD,aAAO,CAACrC,GAAG,CAAEC,MAAM,iBACjBjB,6BAACkB,cAAY;IACXG,GAAG,EAAEJ,MAAM,CAAC3B,MAAO;IACnB8B,IAAI,EAAEH,MAAO;IACbK,MAAM,EAAE8E,QAA8B;MAAA,IAA7B;QAAE3E,SAAS;QAAED;MAAU,CAAC;MAC/B,oBACExB,6BAAC0B,WAAW;QACVC,WAAW,EAAGC,cAAc,iBAC1B5B,6BAAC6B,UAAU;UACTvB,SAAS,EAAC,mCAAmC;UAC7CwB,KAAK,EAAC,MAAM;UACZC,MAAM,EAAC,MAAM;UACbC,OAAO,EAAEJ;QAAe,gBAExB5B,6BAACiC,IAAI;UACHH,KAAK,EAAC,MAAM;UACZC,MAAM,EAAC,MAAM;UACbG,IAAI,EAAEC,SAAS,CAACC,IAAK;UACrBC,SAAS,EAAEC,UAAU,CAACC;QAAgB,EACtC,CAEJ;QACFC,SAAS,EAAGC,aAAa,iBACvBzC,6BAAC0C,SAAS;UACRC,gBAAgB,EAAEnB,SAAU;UAC5BA,SAAS,EAAEC,SAAU;UAAA;;UACrBgB,aAAa,EAAEA,aAAc;UAC7BG,QAAQ;QAAA,gBAER5C,6BAAC6C,QAAQ;UACPb,OAAO,EAAEA,MAAM;YACbjD,OAAO,KAAPA,eAAO,KAAPA,yBAAO,CAAEmI,SAAS,CAACjG,MAAM,CAAC,CAAClB,IAAI,CAAC,MAAM;cACpC0C,aAAa,EAAE;cACfwD,WAAW,EAAE;YACf,CAAC,CAAC;WACF;UACFhD,QAAQ,EAAC;SAER1D,WAAS,CAACiI,kCAAkC,CACpC;OAGf;IAEN;EAAE,EAEL,CAAC,EAGFnE,OAAO,IAAIA,OAAO,CAACe,MAAM,KAAK,CAAC,iBAC7BpE,6BAAC2E,KAAK;IACJrE,SAAS,EAAC,uCAAuC;IACjD4B,IAAI,EAAE6C,eAAe,CAAC0C,UAAW;IACjC7C,KAAK,EAAEC,WAAW,CAACC;GAElBvF,WAAS,CAACmI,sCAAsC,CAEpD,EAGDjH,OAAO,iBACLT;IACEM,SAAS,EAAC;EAA6C,gBAEvDN,6BAACqG,MAAM;IACLnE,IAAI,EAAEmC,WAAW,CAACiC,SAAU;IAC5BC,IAAI,EAAEC,WAAW,CAACC,KAAM;IACxBzE,OAAO,EAAEA,MAAM;MACbsF,YAAY,CAAC,IAAI,CAAC;IACpB;EAAE,GAED/H,SAAS,CAACoI,oCAAoC,CACxC,CAEZ,EAGDN,SAAS,iBACPrH,6BAAC2G,gBAAgB;IACflI,QAAQ,EAAEA,MAAM;MACd6I,YAAY,CAAC,KAAK,CAAC;MACnBrB,WAAW,EAAE;IACf;EAAE,EAEL,CAEF;AAEP,CAAC;AC/Hc,SAAS2B,iBAAiBA,OAEjB;EAAA;EAAA,IAFkB;IACxCnJ;EACK,CAAC;EACN,MAAM,CAAC4E,OAAO,EAAEC,UAAU,CAAC,GAAG1E,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC6E,WAAW,EAAEC,cAAc,CAAC,GAAG9E,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAM;IAAEG;GAAS,GAAGC,yBAAyB,EAAE;EAC/C,MAAMC,KAAK,GAAGC,uBAAuB,EAAE;EACvC,MAAMiC,WAAW,GAAGlC,KAAK,KAALA,aAAK,wCAALA,KAAK,CAAEG,MAAM,gCAAbC,gCAAeC,MAAM;EACzC,MAAM;IAAEC;GAAW,GAAGqH,eAAe,EAAE;EAEvClH,SAAS,CAAC,MAAM;IACd,MAAMmI,mBAAmB,GAAG9I,OAAO,aAAPA,OAAO,KAAPA,yBAAO,CAAE6E,qBAAqB,CAAC;MACzD/D,KAAK,EAAE,EAAE;MACT;MACAiI,iBAAiB,EAAE;IACrB,CAAC,CAAC;IACFD,mBAAmB,CAAC/H,IAAI,EAAE,CAACC,IAAI,CAAEsD,OAAO,IAAK;MAC3CC,UAAU,CAACD,OAAO,CAAC;IACrB,CAAC,CAAC;IACFK,cAAc,CAACmE,mBAAmB,CAAC;GACpC,EAAE,EAAE,CAAC;EACN,oBACE7H,uDACEA,6BAACC,KAAK;IACJC,oBAAoB;IACpBC,UAAU;IACV1B,QAAQ,EAAEA,MAAMA,QAAQ,EAAG;IAC3B2E,QAAQ,EAAE4D,IAAK;IACf5G,SAAS,EAAEb,SAAS,CAAC0H;GAErBjH;IACEM,SAAS,EAAC,qCAAqC;IAC/CC,QAAQ,EAAGC,CAAC,IAAK;MACf,MAAM;QAAEC;MAAQ,CAAC,GAAGgD,WAAW;MAC/B,MAAM/C,MAAM,GAAGF,CAAC,CAACE,MAA6B;MAC9C,MAAMC,SAAS,GACbD,MAAM,CAACE,YAAY,GAAGF,MAAM,CAACG,SAAS,KAAKH,MAAM,CAACI,YACnD;MAED,IAAIL,OAAO,IAAIE,SAAS,EAAE;QACxB8C,WAAW,CAAC3D,IAAI,EAAE,CAACC,IAAI,CAAEgB,CAAC,IAAK;UAC7BuC,UAAU,CAAC,CACT,GAAGD,OAAO,EACV,GAAGtC,CAAC,CACL,CAAC;QACJ,CAAC,CAAC;MACJ;IACF;GAEEsC,SAAO,CAACrC,GAAG,CAAEC,MAAM,iBACnBjB,6BAACkB,YAAY;IACXC,WAAW,EAAEA,WAAY;IACzBC,IAAI,EAAEH,MAAO;IACbI,GAAG,EAAEJ,MAAM,CAAC3B,MAAO;IACnBgC,MAAM,EAAEC;MAAA,IAAC;QAAEE,SAAS;QAAED;MAAU,CAAC;MAAA,oBAC/BxB,6BAAC0B,WAAW;QACVC,WAAW,EAAGC,cAAc,iBAC1B5B,6BAAC6B,UAAU;UACTvB,SAAS,EAAC,mCAAmC;UAC7CwB,KAAK,EAAC,MAAM;UACZC,MAAM,EAAC,MAAM;UACbC,OAAO,EAAEJ;QAAe,gBAExB5B,6BAACiC,IAAI;UACHH,KAAK,EAAC,MAAM;UACZC,MAAM,EAAC,MAAM;UACbG,IAAI,EAAEC,SAAS,CAACC,IAAK;UACrBC,SAAS,EAAEC,UAAU,CAACC;QAAgB,EACtC,CAEJ;QACFC,SAAS,EAAGC,aAAa,iBACvBzC,6BAAC0C,SAAS;UACRC,gBAAgB,EAAEnB,SAAU;UAC5BA,SAAS,EAAEC,SAAU;UAAA;;UACrBgB,aAAa,EAAEA,aAAc;UAC7BG,QAAQ;QAAA,gBAER5C,6BAAC6C,QAAQ;UACPb,OAAO,EAAEA,MAAM;YACbjD,OAAO,KAAPA,eAAO,KAAPA,yBAAO,CAAEgJ,UAAU,CAAC9G,MAAM,CAAC,CAAClB,IAAI,CAAC,MAAM;cACrC0C,aAAa,EAAE;cACfa,UAAU,CAACD,OAAO,CAACN,MAAM,CAACoB,CAAC,IAAI;gBAC7B,OAAQA,CAAC,CAAC7E,MAAM,KAAK2B,MAAM,CAAC3B,MAAM;cACpC,CAAC,CAAC,CAAC;YACL,CAAC,CAAC;WACF;UACF2D,QAAQ,EAAC;SAER1D,WAAS,CAACyI,mCAAmC,CACrC;OAGf;IAAA;GAGP,EAAC,CACE,CACA,CACJ;AAEV;ACpGO,MAAMC,eAAe,GAAGA,MAAoB;EAAA;EACjD,MAAM,CAAC5E,OAAO,EAAEC,UAAU,CAAC,GAAG1E,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC6B,OAAO,EAAEuF,UAAU,CAAC,GAAGpH,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACyI,SAAS,EAAEC,YAAY,CAAC,GAAG1I,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM;IAAEW;GAAW,GAAGqH,eAAe,EAAE;EAEvC,MAAM;IAAE7H;GAAS,GAAGC,yBAAyB,EAAE;EAC/C,MAAMC,KAAK,GAAGC,uBAAuB,EAAE;EACvC,MAAMiC,WAAW,GAAGlC,KAAK,KAALA,aAAK,wCAALA,KAAK,CAAEG,MAAM,gCAAbC,gCAAeC,MAAM;EAEzCI,SAAS,CAAC,MAAM;IACd,IAAI,CAACX,OAAO,EAAE;MACZuE,UAAU,CAAC,EAAE,CAAC;MACd;IACF;IAEA,MAAMuE,mBAAmB,GAAG9I,OAAO,aAAPA,OAAO,KAAPA,yBAAO,CAAE6E,qBAAqB,CAAC;MACzD/D,KAAK,EAAE,EAAE;MACT;MACAiI,iBAAiB,EAAE;IACrB,CAAC,CAAC;IACFD,mBAAmB,CAAC/H,IAAI,EAAE,CAACC,IAAI,CAAEsD,OAAO,IAAK;MAC3CC,UAAU,CAACD,OAAO,CAAC;MACnB2C,UAAU,CAAC6B,mBAAmB,CAACpH,OAAO,CAAC;IACzC,CAAC,CAAC;EACJ,CAAC,EAAE,CAAC1B,OAAO,CAAC,CAAC;EAEb,MAAMkH,WAAW,GAAGC,WAAW,CAAC,MAAM;IACpC,IAAI,CAACnH,OAAO,EAAE;MACZuE,UAAU,CAAC,EAAE,CAAC;MACd;IACF;IAEA,MAAMuE,mBAAmB,GAAG9I,OAAO,aAAPA,OAAO,KAAPA,yBAAO,CAAE6E,qBAAqB,CAAC;MACzD/D,KAAK,EAAE,EAAE;MACT;MACAiI,iBAAiB,EAAE;IACrB,CAAC,CAAC;IACFD,mBAAmB,CAAC/H,IAAI,EAAE,CAACC,IAAI,CAAEsD,OAAO,IAAK;MAC3CC,UAAU,CAACD,OAAO,CAAC;MACnB2C,UAAU,CAAC6B,mBAAmB,CAACpH,OAAO,CAAC;IACzC,CAAC,CAAC;EACJ,CAAC,EAAE,CAAC1B,OAAO,CAAC,CAAC;EACb,oBACEiB,sDAEIqD,aAAO,CAACrC,GAAG,CAAEC,MAAM,iBACjBjB,6BAACkB,cAAY;IACXG,GAAG,EAAEJ,MAAM,CAAC3B,MAAO;IACnB8B,IAAI,EAAEH,MAAO;IACbE,WAAW,EAAEA,WAAY;IACzBG,MAAM,EAAE8E,QAA8B;MAAA,IAA7B;QAAE3E,SAAS;QAAED;MAAU,CAAC;MAC/B,oBACExB,6BAAC0B,WAAW;QACVC,WAAW,EAAGC,cAAc,iBAC1B5B,6BAAC6B,UAAU;UACTvB,SAAS,EAAC,mCAAmC;UAC7CwB,KAAK,EAAC,MAAM;UACZC,MAAM,EAAC,MAAM;UACbC,OAAO,EAAEJ;QAAe,gBAExB5B,6BAACiC,IAAI;UACHH,KAAK,EAAC,MAAM;UACZC,MAAM,EAAC,MAAM;UACbG,IAAI,EAAEC,SAAS,CAACC,IAAK;UACrBC,SAAS,EAAEC,UAAU,CAACC;QAAgB,EACtC,CAEJ;QACFC,SAAS,EAAGC,aAAa,iBACvBzC,6BAAC0C,SAAS;UACRD,aAAa,EAAEA,aAAc;UAC7BG,QAAQ;UACRD,gBAAgB,EAAEnB,SAAU;UAC5BA,SAAS,EAAEC,SAAU;QAAC,gBAEtBzB,6BAAC6C,QAAQ;UACPb,OAAO,EAAEA,MAAM;YACbjD,OAAO,KAAPA,eAAO,KAAPA,yBAAO,CAAEgJ,UAAU,CAAC9G,MAAM,CAAC,CAAClB,IAAI,CAAC,MAAM;cACrCkG,WAAW,EAAE;cACbxD,aAAa,EAAE;YACjB,CAAC,CAAC;WACF;UACFQ,QAAQ,EAAC;QAAkD,GAE1D,UAAS,KAAT1D,iBAAS,KAATA,2BAAS,CAAE2I,uBAAuB,KAAI3I,SAAS,CAACyI,mCAAmC,CAC3E;OAGf;IAEN;EACC,EAEJ,CAAC,EAGF3E,OAAO,IAAIA,OAAO,CAACe,MAAM,KAAK,CAAC,iBAC7BpE,6BAAC2E,KAAK;IACJrE,SAAS,EAAC,uCAAuC;IACjD4B,IAAI,EAAE6C,eAAe,CAAC0C,UAAW;IACjC7C,KAAK,EAAEC,WAAW,CAACC;GAElBvF,WAAS,CAAC4I,2BAA2B,CAEzC,EAGD1H,OAAO,iBACLT;IACEM,SAAS,EAAC;EAA6C,gBAEvDN,6BAACqG,MAAM;IACLnE,IAAI,EAAEmC,WAAW,CAACiC,SAAU;IAC5BC,IAAI,EAAEC,WAAW,CAACC,KAAM;IACxBzE,OAAO,EAAEA,MAAM;MACbsF,YAAY,CAAC,IAAI,CAAC;IACpB;EAAE,GAED/H,SAAS,CAAC6I,yCAAyC,CAC7C,CAEZ,EAGDf,SAAS,iBACPrH,6BAAC4H,iBAAiB;IAChBnJ,QAAQ,EAAEA,MAAM;MACd6I,YAAY,CAAC,KAAK,CAAC;MACnBrB,WAAW,EAAE;IACf;EAAE,EAEL,CAEF;AAEP,CAAC;ACpID,MAAMoC,UAAU,GAAIC,GAAW,IAAoB;EACjD,OAAOC,IAAI,CAACC,GAAG,CAACF,GAAG,CAAC,GAAG,GAAG,GACnB,IAACC,IAAI,CAACC,GAAG,CAACF,GAAG,CAAC,GAAG,IAAI,EAAEG,OAAO,CAAC,CAAC,CAAI,MACvCH,GAAG;AACT,CAAC;AAEc,SAASI,WAAWA,GAAiB;EAClD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGhK,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAM;IAAEW;EAAU,CAAC,GAAGC,UAAU,CAACC,mBAAmB,CAAC;EACrD,MAAM;IAAEV;GAAS,GAAGC,yBAAyB,EAAE;;EAE/C;EACA;EACA;EACAU,SAAS,CAAC,MAAM;IACdkJ,SAAS,CAAC7J,OAAO,KAAPA,eAAO,uBAAPA,OAAO,CAAE8J,QAAQ,CAAC;EAC9B,CAAC,EAAE,CAAC9J,OAAO,CAAC,CAAC;EAEb,oBACEiB,6BAAC8I,cAAc;IAACxI,SAAS,EAAC;EAAqC,gBAC7DN,6BAAC+I,SAAS;IACRzI,SAAS,EAAC,2CAA2C;IACrDoF,EAAE,EAAC,WAAW;IACdsD,WAAW,EAAEA,mBACXhJ,sDACEA,gDAACiC,IAAI;MACHC,IAAI,EAAEC,SAAS,CAAC8G,QAAS;MACzB5G,SAAS,EAAEC,UAAU,CAACgC,OAAQ;MAC9BxC,KAAK,EAAE,EAAG;MACVC,MAAM,EAAE,EAAG;MACXzB,SAAS,EAAC;IAA2C,EACrD,eACFN,6BAAC2E,KAAK;MACJzC,IAAI,EAAE6C,eAAe,CAACmE,UAAW;MACjCtE,KAAK,EAAEC,WAAW,CAACsE;IAAe,GAEjC5J,SAAS,CAAC6J,iCAAiC,CACtC,CAEV;IACFC,aAAa,EAAEA,mBACbrJ,yEACEA,6BAAC2F,YAAY,EAAG;EAElB,EACF,eACF3F,6BAAC+I,SAAS;IACRzI,SAAS,EAAC,yCAAyC;IACnDoF,EAAE,EAAC,SAAS;IACZsD,WAAW,EAAEA,mBACXhJ,sDACEA,gDAACiC,IAAI;MACHC,IAAI,EAAEC,SAAS,CAACmH,OAAQ;MACxBjH,SAAS,EAAEC,UAAU,CAACgC,OAAQ;MAC9BxC,KAAK,EAAE,EAAG;MACVC,MAAM,EAAE,EAAG;MACXzB,SAAS,EAAC;IAA2C,EACrD,eACFN,6BAAC2E,KAAK;MACJzC,IAAI,EAAE6C,eAAe,CAACmE,UAAW;MACjCtE,KAAK,EAAEC,WAAW,CAACsE;KAElB5J,WAAS,CAACgK,+BAA+B,CACpC,eACRvJ,6BAACwJ,KAAK;MAACC,KAAK,EAAEpB,UAAU,CAACtJ,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAE2K,WAAW;IAAE,EAAG,CAEpD;IACFL,aAAa,EAAEA,mBACbrJ,yEACEA,6BAAC2J,UAAU,EAAG;GAGlB;EAEA;EACA,EAAC5K,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAE6K,WAAW,kBACnB5J,6BAAC+I,SAAS;IACRrD,EAAE,EAAC,cAAc;IACjBpF,SAAS,EAAC,+CAA+C;IACzD0I,WAAW,EAAEA,mBACXhJ,sDACEA,gDAACiC,IAAI;MACHC,IAAI,EAAEC,SAAS,CAAC0H,IAAK;MACrBxH,SAAS,EAAEC,UAAU,CAACgC,OAAQ;MAC9BxC,KAAK,EAAE,EAAG;MACVC,MAAM,EAAE,EAAG;MACXzB,SAAS,EAAC;IAA2C,EACrD,eACFN,6BAAC2E,KAAK;MACJzC,IAAI,EAAE6C,eAAe,CAACmE,UAAW;MACjCtE,KAAK,EAAEC,WAAW,CAACsE;IAAe,GAEjC5J,SAAS,CAAC0H,qCAAqC,CAC1C,CAEV;IACFoC,aAAa,EAAEA,mBACbrJ,yEACEA,6BAACiI,eAAe,EAAG;EAErB,EAEL,eAEHjI,6BAAC+I,SAAS;IACRzI,SAAS,EAAC,gDAAgD;IAC1DoF,EAAE,EAAC,aAAa;IAChBsD,WAAW,EAAEA,mBACXhJ,sDACEA,gDAACiC,IAAI;MACHC,IAAI,EAAEC,SAAS,CAAC2H,GAAI;MACpBzH,SAAS,EAAEC,UAAU,CAACgC,OAAQ;MAC9BxC,KAAK,EAAE,EAAG;MACVC,MAAM,EAAE,EAAG;MACXzB,SAAS,EAAC;IAA2C,EACrD,eACFN,6BAAC2E,KAAK;MACJzC,IAAI,EAAE6C,eAAe,CAACmE,UAAW;MACjCtE,KAAK,EAAEC,WAAW,CAACsE;IAAe,GAEjC5J,SAAS,CAACwK,sCAAsC,CAC3C,CAEV;IACFV,aAAa,EAAEA,mBACbrJ,yEACEA,6BAACgK,gBAAc,EAAG;GAGtB;EAEA;EACA,EAACjL,OAAO,KAAPA,eAAO,KAAPA,iBAAO,CAAE6K,WAAW,kBACnB5J;IAAKM,SAAS,EAAC;EAAmC,gBAChDN,6BAACiC,IAAI;IACHC,IAAI,EAAEC,SAAS,CAAC8H,MAAO;IACvB5H,SAAS,EAAEC,UAAU,CAACgC,OAAQ;IAC9BxC,KAAK,EAAE,EAAG;IACVC,MAAM,EAAE,EAAG;IACXzB,SAAS,EAAC;EAA2C,EACrD,eACFN,6BAAC2E,KAAK;IACJzC,IAAI,EAAE6C,eAAe,CAACmE,UAAW;IACjCtE,KAAK,EAAEC,WAAW,CAACsE;GAElB5J,WAAS,CAAC2K,+BAA+B,CACpC,eACRlK,6BAACmK,MAAM;IACL7J,SAAS,EAAC,wCAAwC;IAClD6E,OAAO,EAAEwD,MAAO;IAChBpD,QAAQ,EAAEA,MAAM;MACd,IAAIoD,MAAM,EAAE;QACV5J,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEqL,QAAQ,EAAE,CAACrK,IAAI,CAAC,MAAM;UAC7B6I,SAAS,CAAEyB,IAAI,IAAK,CAACA,IAAI,CAAC;QAC5B,CAAC,CAAC;MACJ,CAAC,MAAM;QACLtL,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEuL,MAAM,EAAE,CAACvK,IAAI,CAAC,MAAM;UAC3B6I,SAAS,CAAEyB,IAAI,IAAK,CAACA,IAAI,CAAC;QAC5B,CAAC,CAAC;MACJ;IACF;EAAE,EACF,CAEL,CAEY;AAErB","names":["OperatorsModal","onCancel","operators","setOperators","useState","operatorQuery","setOperatorQuery","channel","useChannelSettingsContext","state","useSendbirdStateContext","currentUserId","config","_state$config","userId","stringSet","useContext","LocalizationContext","useEffect","operatorListQuery","createOperatorListQuery","limit","next","then","React","Modal","isFullScreenOnMobile","hideFooter","titleText","CHANNEL_SETTING__OPERATORS__TITLE_ALL","className","onScroll","e","hasNext","target","fetchMore","clientHeight","scrollTop","scrollHeight","o","map","member","UserListItem","currentUser","user","key","action","_ref2","parentRef","actionRef","ContextMenu","menuTrigger","toggleDropdown","IconButton","width","height","onClick","Icon","type","IconTypes","MORE","fillColor","IconColors","CONTENT_INVERSE","menuItems","closeDropdown","MenuItems","parentContainRef","openLeft","MenuItem","removeOperators","filter","_ref3","dataSbId","CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR","AddOperatorsModal","onSubmit","members","setMembers","selectedMembers","setSelectedMembers","memberQuery","setMemberQuery","memberListQuery","createMemberListQuery","operatorFilter","OperatorFilter","NONOPERATOR","selectedCount","Object","keys","m","length","ButtonTypes","PRIMARY","submitText","CHANNEL_SETTING__OPERATORS__ADD_BUTTON","addOperators","CHANNEL_SETTING__MEMBERS__SELECT_TITLE","Label","color","LabelColors","ONBACKGROUND_3","LabelTypography","CAPTION_1","MODAL__INVITE_MEMBER__SELECTED","checkBox","checked","isOperator","role","disabled","onChange","event","modifiedSelectedMembers","id","OperatorList","showMore","setShowMore","showAdd","setShowAdd","setHasNext","refreshList","useCallback","operator","_ref","Button","SECONDARY","size","ButtonSizes","SMALL","CHANNEL_SETTING__OPERATORS__TITLE_ADD","BannedUsersModal","useLocalization","bannedUserListQuery","createBannedUserListQuery","users","noop","CHANNEL_SETTING__MUTED_MEMBERS__TITLE","unbanUser","CHANNEL_SETTING__MODERATION__BAN","BannedMemberList","showModal","setShowModal","bannedUserListQueryParams","CHANNEL_SETTING__MODERATION__UNBAN","SUBTITLE_2","CHANNEL_SETTING__MODERATION__EMPTY_BAN","CHANNEL_SETTING__MODERATION__ALL_BAN","MutedMembersModal","memberUserListQuery","mutedMemberFilter","unmuteUser","CHANNEL_SETTING__MODERATION__UNMUTE","MutedMemberList","CHANNEL_SETTING__UNMUTE","CHANNEL_SETTING__NO_UNMUTED","CHANNEL_SETTING__MUTED_MEMBERS__TITLE_ALL","kFormatter","num","Math","abs","toFixed","AdminPannel","frozen","setFrozen","isFrozen","AccordionGroup","Accordion","renderTitle","OPERATOR","SUBTITLE_1","ONBACKGROUND_1","CHANNEL_SETTING__OPERATORS__TITLE","renderContent","MEMBERS","CHANNEL_SETTING__MEMBERS__TITLE","Badge","count","memberCount","MemberList","isBroadcast","MUTE","BAN","CHANNEL_SETTING__BANNED_MEMBERS__TITLE","BannedUserList","FREEZE","CHANNEL_SETTING__FREEZE_CHANNEL","Toggle","unfreeze","prev","freeze"],"sources":["C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\modules\\ChannelSettings\\components\\ModerationPanel\\OperatorsModal.tsx","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\modules\\ChannelSettings\\components\\ModerationPanel\\AddOperatorsModal.tsx","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\modules\\ChannelSettings\\components\\ModerationPanel\\OperatorList.tsx","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\modules\\ChannelSettings\\components\\ModerationPanel\\BannedUsersModal.tsx","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\modules\\ChannelSettings\\components\\ModerationPanel\\BannedUserList.tsx","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\modules\\ChannelSettings\\components\\ModerationPanel\\MutedMembersModal.tsx","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\modules\\ChannelSettings\\components\\ModerationPanel\\MutedMemberList.tsx","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\modules\\ChannelSettings\\components\\ModerationPanel\\index.tsx"],"sourcesContent":["import React, {\n  ReactElement,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\n\ninterface Props { onCancel?(): void }\n\nexport default function OperatorsModal({ onCancel }: Props): ReactElement {\n  const [operators, setOperators] = useState([]);\n  const [operatorQuery, setOperatorQuery] = useState(null);\n\n  const { channel } = useChannelSettingsContext();\n  const state = useSendbirdStateContext();\n  const currentUserId = state?.config?.userId;\n  const { stringSet } = useContext(LocalizationContext);\n\n  useEffect(() => {\n    const operatorListQuery = channel?.createOperatorListQuery({\n      limit: 20,\n    });\n    operatorListQuery.next().then((operators) => {\n      setOperators(operators);\n    });\n    setOperatorQuery(operatorListQuery);\n  }, []);\n  return (\n    <div>\n      <Modal\n        isFullScreenOnMobile\n        hideFooter\n        titleText={stringSet.CHANNEL_SETTING__OPERATORS__TITLE_ALL}\n        onCancel={onCancel}\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = operatorQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              operatorQuery.next().then((o) => {\n                setOperators([\n                  ...operators,\n                  ...o,\n                ]);\n              });\n            }\n          }}\n        >\n          {operators.map((member) => (\n            <UserListItem\n              currentUser={currentUserId}\n              user={member}\n              key={member.userId}\n              action={({ parentRef, actionRef }) => (\n                member?.userId !== currentUserId && (\n                  <ContextMenu\n                    menuTrigger={(toggleDropdown) => (\n                      <IconButton\n                        className=\"sendbird-user-message__more__menu\"\n                        width=\"32px\"\n                        height=\"32px\"\n                        onClick={toggleDropdown}\n                      >\n                        <Icon\n                          width=\"24px\"\n                          height=\"24px\"\n                          type={IconTypes.MORE}\n                          fillColor={IconColors.CONTENT_INVERSE}\n                        />\n                      </IconButton>\n                    )}\n                    menuItems={(closeDropdown) => (\n                      <MenuItems\n                        parentContainRef={parentRef}\n                        parentRef={actionRef} // for catching location(x, y) of MenuItems\n                        closeDropdown={closeDropdown}\n                        openLeft\n                      >\n                        <MenuItem\n                          onClick={() => {\n                            channel?.removeOperators([member.userId]).then(() => {\n                              setOperators(operators.filter(({ userId }) => {\n                                return userId !== member.userId;\n                              }));\n                            });\n                            closeDropdown();\n                          }}\n                          dataSbId=\"channel_setting_operator_context_menu_unregister_unregister_operator\"\n                        >\n                          {stringSet.CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR}\n                        </MenuItem>\n                      </MenuItems>\n                    )}\n                  />\n                )\n              )}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useContext,\n} from 'react';\n\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport Modal from '../../../../ui/Modal';\nimport Label, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport { ButtonTypes } from '../../../../ui/Button';\nimport UserListItem from '../../../../ui/UserListItem';\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\nimport { OperatorFilter } from '@sendbird/chat/groupChannel';\n\ninterface Props {\n  onCancel(): void;\n  onSubmit(members: Array<string>): void;\n}\n\nexport default function AddOperatorsModal({\n  onCancel,\n  onSubmit,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [selectedMembers, setSelectedMembers] = useState({});\n  const [memberQuery, setMemberQuery] = useState(null);\n  const { stringSet } = useContext(LocalizationContext);\n\n  const { channel } = useChannelSettingsContext();\n\n  useEffect(() => {\n    const memberListQuery = channel?.createMemberListQuery({\n      operatorFilter: OperatorFilter.NONOPERATOR,\n      limit: 20,\n    });\n    memberListQuery.next().then((members) => {\n      setMembers(members);\n    });\n    setMemberQuery(memberListQuery);\n  }, []);\n\n  const selectedCount = Object.keys(selectedMembers).filter((m) => selectedMembers[m]).length;\n  return (\n    <div>\n      <Modal\n        isFullScreenOnMobile\n        type={ButtonTypes.PRIMARY}\n        submitText={stringSet.CHANNEL_SETTING__OPERATORS__ADD_BUTTON}\n        onCancel={onCancel}\n        onSubmit={() => {\n          const members = Object.keys(selectedMembers).filter((m) => selectedMembers[m]);\n          channel?.addOperators(members).then(() => {\n            onSubmit(members);\n          });\n        }}\n        titleText={stringSet.CHANNEL_SETTING__MEMBERS__SELECT_TITLE}\n      >\n        <Label\n          color={(selectedCount > 0) ? LabelColors.PRIMARY : LabelColors.ONBACKGROUND_3}\n          type={LabelTypography.CAPTION_1}\n        >\n          {`${selectedCount} ${stringSet.MODAL__INVITE_MEMBER__SELECTED}`}\n        </Label>\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n            if (hasNext && fetchMore) {\n              memberQuery.next().then((o) => {\n                setMembers([\n                  ...members,\n                  ...o,\n                ]);\n              });\n            }\n          }}\n        >\n          {\n            members.map((member) => (\n              <UserListItem\n                checkBox\n                checked={selectedMembers[member.userId]}\n                isOperator={member?.role === 'operator'}\n                disabled={member?.role === 'operator'}\n                onChange={\n                  (event) => {\n                    const modifiedSelectedMembers = {\n                      ...selectedMembers,\n                      [event.target.id]: event.target.checked,\n                    };\n                    if (!event.target.checked) {\n                      delete modifiedSelectedMembers[event.target.id];\n                    }\n                    setSelectedMembers(modifiedSelectedMembers);\n                  }\n                }\n                user={member}\n                key={member.userId}\n              />\n            ))\n          }\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n  useContext,\n} from 'react';\n\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport UserListItem from '../UserListItem';\nimport OperatorsModal from './OperatorsModal';\nimport AddOperatorsModal from './AddOperatorsModal';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\n\nexport const OperatorList = (): ReactElement => {\n  const [operators, setOperators] = useState([]);\n  const [showMore, setShowMore] = useState(false);\n  const [showAdd, setShowAdd] = useState(false);\n  const [hasNext, setHasNext] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n\n  const state = useSendbirdStateContext();\n  const { channel } = useChannelSettingsContext();\n\n  const userId = state?.config?.userId;\n\n  useEffect(() => {\n    if (!channel) {\n      setOperators([]);\n      return;\n    }\n\n    const operatorListQuery = channel?.createOperatorListQuery({\n      limit: 10,\n    });\n    operatorListQuery.next().then((operators) => {\n      setOperators(operators);\n      setHasNext(operatorListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refreshList = useCallback(\n    () => {\n      if (!channel) {\n        setOperators([]);\n        return;\n      }\n      const operatorListQuery = channel?.createOperatorListQuery({\n        limit: 10,\n      });\n      operatorListQuery.next().then((operators) => {\n        setOperators(operators);\n        setHasNext(operatorListQuery.hasNext);\n      });\n    },\n    [channel],\n  );\n\n  return (\n    <>\n      {\n        operators.map((operator) => (\n          <UserListItem\n            key={operator.userId}\n            user={operator}\n            currentUser={userId}\n            action={({ actionRef }) => {\n              if (operator?.userId === userId) {\n                return null;\n              }\n              return (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentRef={actionRef}\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel?.removeOperators([operator.userId]).then(() => {\n                            setOperators(operators.filter(({ userId }) => (\n                              userId !== operator.userId\n                            )));\n                          });\n                          closeDropdown();\n                        }}\n                        dataSbId=\"channel_setting_operator_context_menu_unregister_operator\"\n                      >\n                        {stringSet.CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR}\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              );\n            }}\n          />\n        ))\n      }\n      <div\n        className=\"sendbird-channel-settings-accordion__footer\"\n      >\n        <Button\n          type={ButtonTypes.SECONDARY}\n          size={ButtonSizes.SMALL}\n          onClick={() => {\n            setShowAdd(true);\n          }}\n        >\n          {stringSet.CHANNEL_SETTING__OPERATORS__TITLE_ADD}\n        </Button>\n        {\n          hasNext && (\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowMore(true);\n              }}\n            >\n              {stringSet.CHANNEL_SETTING__OPERATORS__TITLE_ALL}\n            </Button>\n          )\n        }\n      </div>\n      {\n        showMore && (\n          <OperatorsModal onCancel={() => {\n            setShowMore(false);\n            refreshList();\n          }} />\n        )\n      }\n      {\n        showAdd && (\n          <AddOperatorsModal\n            onCancel={() => setShowAdd(false)}\n            onSubmit={() => {\n              refreshList();\n              setShowAdd(false);\n            }}\n          />\n        )\n      }\n    </>\n  );\n};\n\nexport default OperatorList;\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport { noop } from '../../../../utils/utils';\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\nimport { useLocalization } from '../../../../lib/LocalizationContext';\n\ninterface Props {\n  onCancel(): void;\n}\n\nexport default function BannedUsersModal({\n  onCancel,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [memberQuery, setMemberQuery] = useState(null);\n  const { channel } = useChannelSettingsContext();\n  const { stringSet } = useLocalization();\n\n  useEffect(() => {\n    const bannedUserListQuery = channel?.createBannedUserListQuery();\n    bannedUserListQuery.next().then((users) => {\n      setMembers(users);\n    });\n    setMemberQuery(bannedUserListQuery);\n  }, []);\n  return (\n    <div>\n      <Modal\n        isFullScreenOnMobile\n        hideFooter\n        onCancel={() => onCancel()}\n        onSubmit={noop}\n        titleText={stringSet.CHANNEL_SETTING__MUTED_MEMBERS__TITLE}\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              memberQuery.next().then((o) => {\n                setMembers([\n                  ...members,\n                  ...o,\n                ]);\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              user={member}\n              key={member.userId}\n              action={({ parentRef, actionRef }) => (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel?.unbanUser(member).then(() => {\n                            closeDropdown();\n                            setMembers(members.filter(m => {\n                              return (m.userId !== member.userId);\n                            }));\n                          });\n                        }}\n                        dataSbId=\"channel_setting_banned_user_context_menu_ban\"\n                      >\n                        {stringSet.CHANNEL_SETTING__MODERATION__BAN}\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              )\n              }\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n  useContext,\n} from 'react';\nimport { BannedUserListQueryParams } from '@sendbird/chat';\n\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport\nLabel, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport UserListItem from '../UserListItem';\nimport BannedUsersModal from './BannedUsersModal';\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\n\nexport const BannedMemberList = (): ReactElement => {\n  const [members, setMembers] = useState([]);\n  const [hasNext, setHasNext] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n  const { stringSet } = useContext(LocalizationContext);\n  const { channel } = useChannelSettingsContext();\n\n  const bannedUserListQueryParams: BannedUserListQueryParams = { limit: 10 };\n  useEffect(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n    const bannedUserListQuery = channel?.createBannedUserListQuery(bannedUserListQueryParams);\n    bannedUserListQuery.next().then((users) => {\n      setMembers(users);\n      setHasNext(bannedUserListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refreshList = useCallback(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n    const bannedUserListQuery = channel?.createBannedUserListQuery(bannedUserListQueryParams);\n    bannedUserListQuery.next().then((users) => {\n      setMembers(users);\n      setHasNext(bannedUserListQuery.hasNext);\n    });\n  }, [channel]);\n  return (\n    <>\n      {\n        members.map((member) => (\n          <UserListItem\n            key={member.userId}\n            user={member}\n            action={({ actionRef, parentRef }) => {\n              return (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel?.unbanUser(member).then(() => {\n                            closeDropdown();\n                            refreshList();\n                          });\n                        }}\n                        dataSbId=\"channel_setting_banned_user_context_menu_unban\"\n                      >\n                        {stringSet.CHANNEL_SETTING__MODERATION__UNBAN}\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              );\n            }}\n          />\n        ))\n      }\n      {\n        members && members.length === 0 && (\n          <Label\n            className=\"sendbird-channel-settings__empty-list\"\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_3}\n          >\n            {stringSet.CHANNEL_SETTING__MODERATION__EMPTY_BAN}\n          </Label>\n        )\n      }\n      {\n        hasNext && (\n          <div\n            className=\"sendbird-channel-settings-accordion__footer\"\n          >\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowModal(true);\n              }}\n            >\n              {stringSet.CHANNEL_SETTING__MODERATION__ALL_BAN}\n            </Button>\n          </div>\n        )\n      }\n      {\n        showModal && (\n          <BannedUsersModal\n            onCancel={() => {\n              setShowModal(false);\n              refreshList();\n            }}\n          />\n        )\n      }\n    </>\n  );\n};\n\nexport default BannedMemberList;\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport { noop } from '../../../../utils/utils';\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { useLocalization } from '../../../../lib/LocalizationContext';\n\ninterface Props {\n  onCancel(): void;\n}\n\nexport default function MutedMembersModal({\n  onCancel,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [memberQuery, setMemberQuery] = useState(null);\n\n  const { channel } = useChannelSettingsContext();\n  const state = useSendbirdStateContext();\n  const currentUser = state?.config?.userId;\n  const { stringSet } = useLocalization();\n\n  useEffect(() => {\n    const memberUserListQuery = channel?.createMemberListQuery({\n      limit: 10,\n      // @ts-ignore\n      mutedMemberFilter: 'muted',\n    });\n    memberUserListQuery.next().then((members) => {\n      setMembers(members);\n    });\n    setMemberQuery(memberUserListQuery);\n  }, []);\n  return (\n    <div>\n      <Modal\n        isFullScreenOnMobile\n        hideFooter\n        onCancel={() => onCancel()}\n        onSubmit={noop}\n        titleText={stringSet.CHANNEL_SETTING__MUTED_MEMBERS__TITLE}\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              memberQuery.next().then((o) => {\n                setMembers([\n                  ...members,\n                  ...o,\n                ]);\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              currentUser={currentUser}\n              user={member}\n              key={member.userId}\n              action={({ actionRef, parentRef }) => (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel?.unmuteUser(member).then(() => {\n                            closeDropdown();\n                            setMembers(members.filter(m => {\n                              return (m.userId !== member.userId);\n                            }));\n                          });\n                        }}\n                        dataSbId=\"channel_setting_muted_member_context_menu_unmute\"\n                      >\n                        {stringSet.CHANNEL_SETTING__MODERATION__UNMUTE}\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              )}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n} from 'react';\n\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport\nLabel, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport UserListItem from '../UserListItem';\nimport MutedMembersModal from './MutedMembersModal';\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { useLocalization } from '../../../../lib/LocalizationContext';\n\nexport const MutedMemberList = (): ReactElement => {\n  const [members, setMembers] = useState([]);\n  const [hasNext, setHasNext] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const { stringSet } = useLocalization();\n\n  const { channel } = useChannelSettingsContext();\n  const state = useSendbirdStateContext();\n  const currentUser = state?.config?.userId;\n\n  useEffect(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const memberUserListQuery = channel?.createMemberListQuery({\n      limit: 10,\n      // @ts-ignore\n      mutedMemberFilter: 'muted',\n    });\n    memberUserListQuery.next().then((members) => {\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refreshList = useCallback(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const memberUserListQuery = channel?.createMemberListQuery({\n      limit: 10,\n      // @ts-ignore\n      mutedMemberFilter: 'muted',\n    });\n    memberUserListQuery.next().then((members) => {\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n  return (\n    <>\n      {\n        members.map((member) => (\n          <UserListItem\n            key={member.userId}\n            user={member}\n            currentUser={currentUser}\n            action={({ actionRef, parentRef }) => {\n              return (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel?.unmuteUser(member).then(() => {\n                            refreshList();\n                            closeDropdown();\n                          });\n                        }}\n                        dataSbId=\"channel_setting_muted_member_context_menu_unmute\"\n                      >\n                        {stringSet?.CHANNEL_SETTING__UNMUTE || stringSet.CHANNEL_SETTING__MODERATION__UNMUTE}\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              );\n            }\n            }\n          />\n        ))\n      }\n      {\n        members && members.length === 0 && (\n          <Label\n            className=\"sendbird-channel-settings__empty-list\"\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_3}\n          >\n            {stringSet.CHANNEL_SETTING__NO_UNMUTED}\n          </Label>\n        )\n      }\n      {\n        hasNext && (\n          <div\n            className=\"sendbird-channel-settings-accordion__footer\"\n          >\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowModal(true);\n              }}\n            >\n              {stringSet.CHANNEL_SETTING__MUTED_MEMBERS__TITLE_ALL}\n            </Button>\n          </div>\n        )\n      }\n      {\n        showModal && (\n          <MutedMembersModal\n            onCancel={() => {\n              setShowModal(false);\n              refreshList();\n            }}\n          />\n        )\n      }\n    </>\n  );\n};\n\nexport default MutedMemberList;\n","import './admin-panel.scss';\nimport React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useContext,\n} from 'react';\n\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport Accordion, { AccordionGroup } from '../../../../ui/Accordion';\nimport\nLabel, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport Badge from '../../../../ui/Badge';\nimport { Toggle } from '../../../../ui/Toggle';\n\nimport OperatorList from './OperatorList';\nimport MemberList from './MemberList';\nimport BannedUserList from './BannedUserList';\nimport MutedMemberList from './MutedMemberList';\n\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\n\nconst kFormatter = (num: number): string|number => {\n  return Math.abs(num) > 999\n    ? `${(Math.abs(num) / 1000).toFixed(1)}K`\n    : num;\n};\n\nexport default function AdminPannel(): ReactElement {\n  const [frozen, setFrozen] = useState(false);\n\n  const { stringSet } = useContext(LocalizationContext);\n  const { channel } = useChannelSettingsContext();\n\n  // work around for\n  // https://sendbird.slack.com/archives/G01290GCDCN/p1595922832000900\n  // SDK bug - after frozen/unfrozen myRole becomes \"none\"\n  useEffect(() => {\n    setFrozen(channel?.isFrozen);\n  }, [channel]);\n\n  return (\n    <AccordionGroup className=\"sendbird-channel-settings__operator\">\n      <Accordion\n        className=\"sendbird-channel-settings__operators-list\"\n        id=\"operators\"\n        renderTitle={() => (\n          <>\n            <Icon\n              type={IconTypes.OPERATOR}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__OPERATORS__TITLE}\n            </Label>\n          </>\n        )}\n        renderContent={() => (\n          <>\n            <OperatorList />\n          </>\n        )}\n      />\n      <Accordion\n        className=\"sendbird-channel-settings__members-list\"\n        id=\"members\"\n        renderTitle={() => (\n          <>\n            <Icon\n              type={IconTypes.MEMBERS}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__MEMBERS__TITLE}\n            </Label>\n            <Badge count={kFormatter(channel?.memberCount)} />\n          </>\n        )}\n        renderContent={() => (\n          <>\n            <MemberList />\n          </>\n        )}\n      />\n      {\n        // No muted members in broadcast channel\n        !channel?.isBroadcast && (\n          <Accordion\n            id=\"mutedMembers\"\n            className=\"sendbird-channel-settings__muted-members-list\"\n            renderTitle={() => (\n              <>\n                <Icon\n                  type={IconTypes.MUTE}\n                  fillColor={IconColors.PRIMARY}\n                  width={24}\n                  height={24}\n                  className=\"sendbird-channel-settings__accordion-icon\"\n                />\n                <Label\n                  type={LabelTypography.SUBTITLE_1}\n                  color={LabelColors.ONBACKGROUND_1}\n                >\n                  {stringSet.CHANNEL_SETTING__MUTED_MEMBERS__TITLE}\n                </Label>\n              </>\n            )}\n            renderContent={() => (\n              <>\n                <MutedMemberList />\n              </>\n            )}\n          />\n        )\n      }\n      <Accordion\n        className=\"sendbird-channel-settings__banned-members-list\"\n        id=\"bannedUsers\"\n        renderTitle={() => (\n          <>\n            <Icon\n              type={IconTypes.BAN}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__BANNED_MEMBERS__TITLE}\n            </Label>\n          </>\n        )}\n        renderContent={() => (\n          <>\n            <BannedUserList />\n          </>\n        )}\n      />\n      {\n        // cannot freeze broadcast channel\n        !channel?.isBroadcast && (\n          <div className=\"sendbird-channel-settings__freeze\">\n            <Icon\n              type={IconTypes.FREEZE}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__FREEZE_CHANNEL}\n            </Label>\n            <Toggle\n              className=\"sendbird-channel-settings__frozen-icon\"\n              checked={frozen}\n              onChange={() => {\n                if (frozen) {\n                  channel?.unfreeze().then(() => {\n                    setFrozen((prev) => !prev);\n                  });\n                } else {\n                  channel?.freeze().then(() => {\n                    setFrozen((prev) => !prev);\n                  });\n                }\n              }}\n            />\n          </div>\n        )\n      }\n    </AccordionGroup>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}