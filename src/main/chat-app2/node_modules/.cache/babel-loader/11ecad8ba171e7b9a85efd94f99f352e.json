{"ast":null,"code":"let OutgoingMessageStates = /*#__PURE__*/function (OutgoingMessageStates) {\n  OutgoingMessageStates[\"NONE\"] = \"NONE\";\n  OutgoingMessageStates[\"PENDING\"] = \"PENDING\";\n  OutgoingMessageStates[\"SENT\"] = \"SENT\";\n  OutgoingMessageStates[\"FAILED\"] = \"FAILED\";\n  OutgoingMessageStates[\"DELIVERED\"] = \"DELIVERED\";\n  OutgoingMessageStates[\"READ\"] = \"READ\";\n  return OutgoingMessageStates;\n}({});\nconst getOutgoingMessageState = (channel, message) => {\n  var _channel$isGroupChann;\n  if (message.sendingStatus === 'pending') {\n    return OutgoingMessageStates.PENDING;\n  }\n  if (message.sendingStatus === 'failed') {\n    return OutgoingMessageStates.FAILED;\n  }\n  if (channel !== null && channel !== void 0 && (_channel$isGroupChann = channel.isGroupChannel) !== null && _channel$isGroupChann !== void 0 && _channel$isGroupChann.call(channel)) {\n    var _getUnreadMemberCount, _ref, _getUndeliveredMember, _ref2;\n    /* GroupChannel only */\n    if (((_getUnreadMemberCount = (_ref = channel).getUnreadMemberCount) === null || _getUnreadMemberCount === void 0 ? void 0 : _getUnreadMemberCount.call(_ref, message)) === 0) {\n      return OutgoingMessageStates.READ;\n    } else if (((_getUndeliveredMember = (_ref2 = channel).getUndeliveredMemberCount) === null || _getUndeliveredMember === void 0 ? void 0 : _getUndeliveredMember.call(_ref2, message)) === 0) {\n      return OutgoingMessageStates.DELIVERED;\n    }\n  }\n  if (message.sendingStatus === 'succeeded') {\n    return OutgoingMessageStates.SENT;\n  }\n  return OutgoingMessageStates.NONE;\n};\nexport { OutgoingMessageStates, getOutgoingMessageState };","map":{"version":3,"mappings":"AAKYA,yBAAqB,0BAArBA,qBAAqB;EAArBA,qBAAqB;EAArBA,qBAAqB;EAArBA,qBAAqB;EAArBA,qBAAqB;EAArBA,qBAAqB;EAArBA,qBAAqB;EAAA,OAArBA,qBAAqB;AAAA;MASpBC,uBAAuB,GAAGA,CAACC,OAA6C,EAAEC,OAAkC,KAAa;EAAA;EACpI,IAAIA,OAAO,CAACC,aAAa,KAAK,SAAS,EAAE;IACvC,OAAOJ,qBAAqB,CAACK,OAAO;EACtC;EACA,IAAIF,OAAO,CAACC,aAAa,KAAK,QAAQ,EAAE;IACtC,OAAOJ,qBAAqB,CAACM,MAAM;EACrC;EACA,IAAIJ,OAAO,KAAPA,eAAO,wCAAPA,OAAO,CAAEK,cAAc,kDAAvBC,kCAAO,CAAoB,EAAE;IAAA;IAC/B;IACA,IAAI,kCAACN,OAAO,EAAkBO,oBAAoB,0DAA9CC,iCAAiDP,OAAO,CAAC,MAAK,CAAC,EAAE;MACnE,OAAOH,qBAAqB,CAACW,IAAI;KAClC,MAAM,IAAI,mCAACT,OAAO,EAAkBU,yBAAyB,wCAAnDC,oDAAsDV,OAAO,CAAC,MAAK,CAAC,EAAE;MAC/E,OAAOH,qBAAqB,CAACc,SAAS;IACxC;EACF;EACA,IAAIX,OAAO,CAACC,aAAa,KAAK,WAAW,EAAE;IACzC,OAAOJ,qBAAqB,CAACe,IAAI;EACnC;EACA,OAAOf,qBAAqB,CAACgB,IAAI;AACnC","names":["OutgoingMessageStates","getOutgoingMessageState","channel","message","sendingStatus","PENDING","FAILED","isGroupChannel","_channel$isGroupChann","getUnreadMemberCount","_getUnreadMemberCount","READ","getUndeliveredMemberCount","_getUndeliveredMember","DELIVERED","SENT","NONE"],"sources":["C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\utils\\exports\\getOutgoingMessageState.ts"],"sourcesContent":["import { GroupChannel } from '@sendbird/chat/groupChannel';\nimport { OpenChannel } from '@sendbird/chat/openChannel';\nimport { UserMessage, FileMessage } from '@sendbird/chat/message';\nimport { Nullable } from '../../types';\n\nexport enum OutgoingMessageStates {\n  NONE = 'NONE',\n  PENDING = 'PENDING',\n  SENT = 'SENT',\n  FAILED = 'FAILED',\n  DELIVERED = 'DELIVERED',\n  READ = 'READ',\n}\n\nexport const getOutgoingMessageState = (channel: Nullable<GroupChannel | OpenChannel>, message: UserMessage | FileMessage): string => {\n  if (message.sendingStatus === 'pending') {\n    return OutgoingMessageStates.PENDING;\n  }\n  if (message.sendingStatus === 'failed') {\n    return OutgoingMessageStates.FAILED;\n  }\n  if (channel?.isGroupChannel?.()) {\n    /* GroupChannel only */\n    if ((channel as GroupChannel).getUnreadMemberCount?.(message) === 0) {\n      return OutgoingMessageStates.READ;\n    } else if ((channel as GroupChannel).getUndeliveredMemberCount?.(message) === 0) {\n      return OutgoingMessageStates.DELIVERED;\n    }\n  }\n  if (message.sendingStatus === 'succeeded') {\n    return OutgoingMessageStates.SENT;\n  }\n  return OutgoingMessageStates.NONE;\n};\n"]},"metadata":{},"sourceType":"module"}