{"ast":null,"code":"import _toConsumableArray from \"C:/Users/\\uC774\\uACBD\\uBBFC/IdeaProjects/sendbird-uikit-whatsapp-sample/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport React__default, { useRef, useContext } from 'react';\nimport { a as LocalizationContext } from '../../LocalizationContext-076d6d2e.js';\nimport { a as UserProfileContext } from '../../UserProfileContext-9cfbab4d.js';\nimport Avatar from '../../ui/Avatar.js';\nimport MutedAvatarOverlay from '../../ui/MutedAvatarOverlay.js';\nimport { L as Label, a as LabelTypography, b as LabelColors } from '../../index-63949de5.js';\nimport UserProfile from '../../ui/UserProfile.js';\nimport ContextMenu, { MenuItems } from '../../ui/ContextMenu.js';\nimport '../../stringSet-13bbd4a2.js';\nimport '../../index-99aabd9e.js';\nimport 'prop-types';\nimport '../../ui/ImageRenderer.js';\nimport '../../ui/Icon.js';\nimport '../../uuid-1adedf62.js';\nimport '../../sendbirdSelectors.js';\nimport '../../_rollupPluginBabelHelpers-6bb0305c.js';\nimport '../../topics-b2b77fb9.js';\nimport '../../utils-4bbbca2c.js';\nimport '../../ui/Button.js';\nimport '../../useSendbirdStateContext.js';\nimport '../../withSendbird.js';\nimport 'react-dom';\nimport '../../ui/SortByRow.js';\nimport '../../index-7eb65acf.js';\nimport '../../utils/message/getOutgoingMessageState.js';\nvar UserListItem = function UserListItem(_ref) {\n  var user = _ref.user,\n    className = _ref.className,\n    currentUser = _ref.currentUser,\n    action = _ref.action;\n  var actionRef = useRef(null);\n  var parentRef = useRef(null);\n  var avatarRef = useRef(null);\n  var _useContext = useContext(LocalizationContext),\n    stringSet = _useContext.stringSet;\n  var _useContext2 = useContext(UserProfileContext),\n    disableUserProfile = _useContext2.disableUserProfile,\n    renderUserProfile = _useContext2.renderUserProfile;\n  var injectingClassNames = Array.isArray(className) ? className : [className];\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: parentRef,\n    className: ['sendbird-user-list-item--small'].concat(_toConsumableArray(injectingClassNames)).join(' ')\n  }, /*#__PURE__*/React__default.createElement(ContextMenu, {\n    menuTrigger: function menuTrigger(toggleDropdown) {\n      return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(Avatar, {\n        onClick: function onClick() {\n          if (!disableUserProfile) {\n            toggleDropdown();\n          }\n        },\n        ref: avatarRef,\n        className: \"sendbird-user-list-item--small__avatar\",\n        src: user.profileUrl,\n        width: 24,\n        height: 24\n      }), user.isMuted && /*#__PURE__*/React__default.createElement(MutedAvatarOverlay, null));\n    },\n    menuItems: function menuItems(closeDropdown) {\n      return /*#__PURE__*/React__default.createElement(MenuItems, {\n        openLeft: true,\n        parentRef: avatarRef\n        // for catching location(x, y) of MenuItems\n        ,\n\n        parentContainRef: avatarRef\n        // for toggling more options(menus & reactions)\n        ,\n\n        closeDropdown: closeDropdown,\n        style: {\n          paddingTop: '0px',\n          paddingBottom: '0px'\n        }\n      }, renderUserProfile ? renderUserProfile({\n        user: user,\n        currentUserId: currentUser,\n        close: closeDropdown\n      }) : /*#__PURE__*/React__default.createElement(UserProfile, {\n        user: user,\n        currentUserId: currentUser,\n        onSuccess: closeDropdown\n      }));\n    }\n  }), /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-user-list-item--small__title\",\n    type: LabelTypography.SUBTITLE_1,\n    color: LabelColors.ONBACKGROUND_1\n  }, user.nickname || stringSet.NO_NAME, currentUser === user.userId && stringSet.CHANNEL_SETTING__MEMBERS__YOU),\n  // if there is now nickname, display userId\n  !user.nickname && /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-user-list-item--small__subtitle\",\n    type: LabelTypography.CAPTION_3,\n    color: LabelColors.ONBACKGROUND_2\n  }, user.userId), user.role === 'operator' && /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-user-list-item--small__operator\",\n    type: LabelTypography.SUBTITLE_2,\n    color: LabelColors.ONBACKGROUND_2\n  }, stringSet.CHANNEL_SETTING__MEMBERS__OPERATOR), action && /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: actionRef,\n    className: \"sendbird-user-list-item--small__action\"\n  }, action({\n    actionRef: actionRef,\n    parentRef: parentRef\n  })));\n};\nexport { UserListItem as default };","map":{"version":3,"mappings":"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","names":["UserListItem","_ref","user","className","currentUser","action","actionRef","useRef","parentRef","avatarRef","useContext","LocalizationContext","stringSet","UserProfileContext","disableUserProfile","renderUserProfile","injectingClassNames","Array","isArray","React","ref","join","ContextMenu","menuTrigger","toggleDropdown","Avatar","onClick","src","profileUrl","width","height","isMuted","MutedAvatarOverlay","menuItems","closeDropdown","MenuItems","openLeft","parentContainRef","style","paddingTop","paddingBottom","currentUserId","close","UserProfile","onSuccess","Label","type","LabelTypography","SUBTITLE_1","color","LabelColors","ONBACKGROUND_1","nickname","NO_NAME","userId","CHANNEL_SETTING__MEMBERS__YOU","CAPTION_3","ONBACKGROUND_2","role","SUBTITLE_2","CHANNEL_SETTING__MEMBERS__OPERATOR"],"sources":["C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\modules\\ChannelSettings\\components\\UserListItem\\index.tsx"],"sourcesContent":["import React, { ReactElement, useRef, useContext } from 'react';\nimport { User } from '@sendbird/chat';\n\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport { UserProfileContext } from '../../../../lib/UserProfileContext';\nimport Avatar from '../../../../ui/Avatar/index';\nimport MutedAvatarOverlay from '../../../../ui/Avatar/MutedAvatarOverlay';\nimport Label, { LabelTypography, LabelColors } from '../../../../ui/Label';\nimport UserProfile from '../../../../ui/UserProfile';\nimport ContextMenu, { MenuItems } from '../../../../ui/ContextMenu';\n\nimport './user-list-item.scss';\n\ninterface ActionProps {\n  actionRef: React.RefObject<HTMLInputElement>;\n  parentRef: React.RefObject<HTMLInputElement>;\n}\n\ntype CustomUser = User & {\n  isMuted: boolean;\n  role: string;\n};\n\ninterface Props {\n  user: CustomUser;\n  currentUser?: string;\n  className?: string;\n  action?(props: ActionProps): ReactElement;\n}\n\nconst UserListItem = ({\n  user,\n  className,\n  currentUser,\n  action,\n}: Props): ReactElement => {\n  const actionRef = useRef(null);\n  const parentRef = useRef(null);\n  const avatarRef = useRef(null);\n  const { stringSet } = useContext(LocalizationContext);\n  const {\n    disableUserProfile,\n    renderUserProfile,\n  } = useContext<UserProfileContext>(UserProfileContext);\n  const injectingClassNames = Array.isArray(className) ? className : [className];\n  return (\n    <div\n      ref={parentRef}\n      className={[\n        'sendbird-user-list-item--small', ...injectingClassNames,\n      ].join(' ')}\n    >\n      <ContextMenu\n        menuTrigger={(toggleDropdown) => (\n          <>\n            <Avatar\n              onClick={() => {\n                if (!disableUserProfile) {\n                  toggleDropdown();\n                }\n              }}\n              ref={avatarRef}\n              className=\"sendbird-user-list-item--small__avatar\"\n              src={user.profileUrl}\n              width={24}\n              height={24}\n            />\n            {\n              user.isMuted && (\n                <MutedAvatarOverlay />\n              )\n            }\n          </>\n        )}\n        menuItems={(closeDropdown) => (\n          <MenuItems\n            openLeft\n            parentRef={avatarRef}\n            // for catching location(x, y) of MenuItems\n            parentContainRef={avatarRef}\n            // for toggling more options(menus & reactions)\n            closeDropdown={closeDropdown}\n            style={{ paddingTop: '0px', paddingBottom: '0px' }}\n          >\n            {\n              renderUserProfile\n                ? renderUserProfile({\n                  user,\n                  currentUserId: currentUser,\n                  close: closeDropdown,\n                })\n                : (\n                  <UserProfile\n                    user={user}\n                    currentUserId={currentUser}\n                    onSuccess={closeDropdown}\n                  />\n                )\n            }\n          </MenuItems>\n        )}\n      />\n      {/* {\n        user.isMuted && (\n          <MutedAvatarOverlay />\n        )\n      } */}\n      <Label\n        className=\"sendbird-user-list-item--small__title\"\n        type={LabelTypography.SUBTITLE_1}\n        color={LabelColors.ONBACKGROUND_1}\n      >\n        {user.nickname || stringSet.NO_NAME}\n        {\n          (currentUser === user.userId) && (\n            stringSet.CHANNEL_SETTING__MEMBERS__YOU\n          )\n        }\n      </Label>\n      { // if there is now nickname, display userId\n        !user.nickname && (\n          <Label\n            className=\"sendbird-user-list-item--small__subtitle\"\n            type={LabelTypography.CAPTION_3}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {user.userId}\n          </Label>\n        )\n      }\n      {\n        user.role === 'operator' && (\n          <Label\n            className=\"sendbird-user-list-item--small__operator\"\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {stringSet.CHANNEL_SETTING__MEMBERS__OPERATOR}\n          </Label>\n        )\n      }\n      {\n        action && (\n          <div ref={actionRef} className=\"sendbird-user-list-item--small__action\">\n            {action({ actionRef, parentRef })}\n          </div>\n        )\n      }\n    </div>\n  );\n};\n\nexport default UserListItem;\n"]},"metadata":{},"sourceType":"module"}