{"ast":null,"code":"import { _ as _objectSpread2, a as _defineProperty } from './_rollupPluginBabelHelpers-6bb0305c.js';\nimport React__default, { useLayoutEffect, useState, useEffect, useCallback, useContext, createContext, useMemo, useReducer } from 'react';\nimport { SendbirdSdkContext } from './withSendbird.js';\nimport cssVars from 'css-vars-ponyfill';\nimport { K } from './index.module-54d57ec3.js';\nimport { U as USER_ACTIONS } from './actionTypes-ce6caec1.js';\nimport SendbirdChat, { ConnectionHandler } from '@sendbird/chat';\nimport { u as uuidv4 } from './uuid-1adedf62.js';\nimport { OpenChannelModule } from '@sendbird/chat/openChannel';\nimport { GroupChannelModule } from '@sendbird/chat/groupChannel';\nimport { i as isTextuallyNull } from './index-7eb65acf.js';\nimport { V as VoicePlayerProvider } from './index-5c985608.js';\nimport { VoiceRecorderProvider } from './VoiceRecorder/context.js';\nimport { L as LocalizationProvider } from './LocalizationContext-076d6d2e.js';\nimport { M as MediaQueryProvider } from './MediaQueryContext-11f0e43f.js';\nimport { g as getStringSet } from './stringSet-13bbd4a2.js';\nimport { V as VOICE_RECORDER_DEFAULT_MAX, a as VOICE_RECORDER_DEFAULT_MIN } from './consts-95d8566e.js';\nimport './utils/message/getOutgoingMessageState.js';\nimport './useSendbirdStateContext.js';\nimport './index-99aabd9e.js';\nconst isEmpty = obj => {\n  if (obj === null || obj === undefined) {\n    return true;\n  }\n  for (const prop in obj) {\n    if (obj.hasOwnProperty(prop)) {\n      return false;\n    }\n  }\n  return JSON.stringify(obj) === JSON.stringify({});\n};\nconst useTheme = overrides => {\n  useLayoutEffect(() => {\n    if (!isEmpty(overrides)) {\n      cssVars({\n        variables: _objectSpread2(_objectSpread2({}, {\n          '--sendbird-dark-primary-500': '#4d2aa6',\n          '--sendbird-dark-primary-400': '#6440C4',\n          '--sendbird-dark-primary-300': '#7B53EF',\n          '--sendbird-dark-primary-200': '#9E8CF5',\n          '--sendbird-dark-primary-100': '#E2DFFF',\n          '--sendbird-dark-secondary-500': '#007A7A',\n          '--sendbird-dark-secondary-400': '#189A8D',\n          '--sendbird-dark-secondary-300': '#2EBA9F',\n          '--sendbird-dark-secondary-200': '#6FD6BE',\n          '--sendbird-dark-secondary-100': '#AEF2DC',\n          '--sendbird-dark-information-100': '#b2d9ff',\n          '--sendbird-dark-error-500': '#A30E2D',\n          '--sendbird-dark-error-400': '#C11F41',\n          '--sendbird-dark-error-300': '#E53157',\n          '--sendbird-dark-error-200': '#FF6183',\n          '--sendbird-dark-error-100': '#FFABBD',\n          '--sendbird-dark-background-700': '#000000',\n          '--sendbird-dark-background-600': '#161616',\n          '--sendbird-dark-background-500': '#2C2C2C',\n          '--sendbird-dark-background-400': '#393939',\n          '--sendbird-dark-background-300': '#A8A8A8',\n          '--sendbird-dark-background-200': '#D9D9D9',\n          '--sendbird-dark-background-100': '#F0F0F0',\n          '--sendbird-dark-background-50': '#FFFFFF',\n          '--sendbird-dark-overlay': 'rgba(0, 0, 0, 0.32)',\n          '--sendbird-dark-onlight-01': 'rgba(0, 0, 0, 0.88)',\n          '--sendbird-dark-onlight-02': 'rgba(0, 0, 0, 0.50)',\n          '--sendbird-dark-onlight-03': 'rgba(0, 0, 0, 0.38)',\n          '--sendbird-dark-onlight-04': 'rgba(0, 0, 0, 0.12)',\n          '--sendbird-dark-ondark-01': 'rgba(255, 255, 255, 0.88)',\n          '--sendbird-dark-ondark-02': 'rgba(255, 255, 255, 0.50)',\n          '--sendbird-dark-ondark-03': 'rgba(255, 255, 255, 0.38)',\n          '--sendbird-dark-ondark-04': 'rgba(255, 255, 255, 0.12)',\n          '--sendbird-dark-shadow-01': '0 1px 5px 0 rgba(33, 34, 66, 0.04), 0 0 3px 0 rgba(0, 0, 0, 0.08), 0 2px 1px 0 rgba(0, 0, 0, 0.12)',\n          '--sendbird-dark-shadow-02': '0 3px 5px -3px rgba(33, 34, 66, 0.04), 0 3px 14px 2px rgba(0, 0, 0, 0.08), 0 8px 10px 1px rgba(0, 0, 0, 0.12)',\n          '--sendbird-dark-shadow-03': '0 6px 10px -5px rgba(0, 0, 0, 0.04), 0 6px 30px 5px rgba(0, 0, 0, 0.08), 0 16px 24px 2px rgba(0, 0, 0, 0.12)',\n          '--sendbird-dark-shadow-04': '0 9px 15px -7px rgba(0, 0, 0, 0.04), 0 9px 46px 8px rgba(0, 0, 0, 0.08), 0 24px 38px 3px rgba(0, 0, 0, 0.12)',\n          '--sendbird-dark-shadow-message-input': '0 1px 5px 0 rgba(33, 34, 66, 0.12), 0 0 1px 0 rgba(33, 34, 66, 0.16), 0 2px 1px 0 rgba(33, 34, 66, 0.08), 0 1px 5px 0 rgba(0, 0, 0, 0.12)',\n          '--sendbird-light-primary-500': '#4d2aa6',\n          '--sendbird-light-primary-400': '#6440C4',\n          '--sendbird-light-primary-300': '#7B53EF',\n          '--sendbird-light-primary-200': '#9E8CF5',\n          '--sendbird-light-primary-100': '#E2DFFF',\n          '--sendbird-light-secondary-500': '#007A7A',\n          '--sendbird-light-secondary-400': '#189A8D',\n          '--sendbird-light-secondary-300': '#2EBA9F',\n          '--sendbird-light-secondary-200': '#6FD6BE',\n          '--sendbird-light-secondary-100': '#AEF2DC',\n          '--sendbird-light-information-100': '#b2d9ff',\n          '--sendbird-light-error-500': '#A30E2D',\n          '--sendbird-light-error-400': '#C11F41',\n          '--sendbird-light-error-300': '#E53157',\n          '--sendbird-light-error-200': '#FF6183',\n          '--sendbird-light-error-100': '#FFABBD',\n          '--sendbird-light-background-700': '#000000',\n          '--sendbird-light-background-600': '#161616',\n          '--sendbird-light-background-500': '#2C2C2C',\n          '--sendbird-light-background-400': '#393939',\n          '--sendbird-light-background-300': '#A8A8A8',\n          '--sendbird-light-background-200': '#D9D9D9',\n          '--sendbird-light-background-100': '#F0F0F0',\n          '--sendbird-light-background-50': ' #FFFFFF',\n          '--sendbird-light-overlay': 'rgba(0, 0, 0, 0.32)',\n          '--sendbird-light-onlight-01': 'rgba(0, 0, 0, 0.88)',\n          '--sendbird-light-onlight-02': 'rgba(0, 0, 0, 0.50)',\n          '--sendbird-light-onlight-03': 'rgba(0, 0, 0, 0.38)',\n          '--sendbird-light-onlight-04': 'rgba(0, 0, 0, 0.12)',\n          '--sendbird-light-ondark-01': 'rgba(255, 255, 255, 0.88)',\n          '--sendbird-light-ondark-02': 'rgba(255, 255, 255, 0.50)',\n          '--sendbird-light-ondark-03': 'rgba(255, 255, 255, 0.38)',\n          '--sendbird-light-ondark-04': 'rgba(255, 255, 255, 0.12)',\n          '--sendbird-light-shadow-01': '0 1px 5px 0 rgba(33, 34, 66, 0.04), 0 0 3px 0 rgba(0, 0, 0, 0.08), 0 2px 1px 0 rgba(0, 0, 0, 0.12)',\n          '--sendbird-light-shadow-02': '0 3px 5px -3px rgba(33, 34, 66, 0.04), 0 3px 14px 2px rgba(0, 0, 0, 0.08), 0 8px 10px 1px rgba(0, 0, 0, 0.12)',\n          '--sendbird-light-shadow-03': '0 6px 10px -5px rgba(0, 0, 0, 0.04), 0 6px 30px 5px rgba(0, 0, 0, 0.08), 0 16px 24px 2px rgba(0, 0, 0, 0.12)',\n          '--sendbird-light-shadow-04': '0 9px 15px -7px rgba(0, 0, 0, 0.04), 0 9px 46px 8px rgba(0, 0, 0, 0.08), 0 24px 38px 3px rgba(0, 0, 0, 0.12)',\n          '--sendbird-light-shadow-message-input': '0 1px 5px 0 rgba(33, 34, 66, 0.12), 0 0 1px 0 rgba(33, 34, 66, 0.16), 0 2px 1px 0 rgba(33, 34, 66, 0.08), 0 1px 5px 0 rgba(0, 0, 0, 0.12)'\n        }), overrides)\n      });\n    }\n  }, [overrides]);\n};\nconst SDK_ACTIONS = {\n  INIT_SDK: 'INIT_SDK',\n  SET_SDK_LOADING: 'SET_SDK_LOADING',\n  RESET_SDK: 'RESET_SDK',\n  SDK_ERROR: 'SDK_ERROR'\n};\nconst initialState$1 = {\n  initialized: false,\n  loading: false,\n  sdk: {},\n  error: false\n};\nfunction reducer$1(state, action) {\n  return K(action).with({\n    type: SDK_ACTIONS.SET_SDK_LOADING\n  }, _ref => {\n    let {\n      payload\n    } = _ref;\n    return _objectSpread2(_objectSpread2({}, state), {}, {\n      initialized: false,\n      loading: payload\n    });\n  }).with({\n    type: SDK_ACTIONS.SDK_ERROR\n  }, () => {\n    return _objectSpread2(_objectSpread2({}, state), {}, {\n      initialized: false,\n      loading: false,\n      error: true\n    });\n  }).with({\n    type: SDK_ACTIONS.INIT_SDK\n  }, _ref2 => {\n    let {\n      payload\n    } = _ref2;\n    return {\n      sdk: payload,\n      initialized: true,\n      loading: false,\n      error: false\n    };\n  }).with({\n    type: SDK_ACTIONS.RESET_SDK\n  }, () => {\n    return initialState$1;\n  }).otherwise(() => {\n    return state;\n  });\n}\nconst initialState = {\n  initialized: false,\n  loading: false,\n  user: {}\n};\nfunction reducer(state, action) {\n  return K(action).with({\n    type: USER_ACTIONS.INIT_USER\n  }, _ref => {\n    let {\n      payload\n    } = _ref;\n    return {\n      initialized: true,\n      loading: false,\n      user: payload\n    };\n  }).with({\n    type: USER_ACTIONS.RESET_USER\n  }, () => {\n    return initialState;\n  }).with({\n    type: USER_ACTIONS.UPDATE_USER_INFO\n  }, _ref2 => {\n    let {\n      payload\n    } = _ref2;\n    return _objectSpread2(_objectSpread2({}, state), {}, {\n      user: payload\n    });\n  }).otherwise(() => {\n    return state;\n  });\n}\nfunction useConnectionStatus(sdk, logger) {\n  const [isOnline, setIsOnline] = useState(true);\n  useEffect(() => {\n    const uniqueHandlerId = uuidv4();\n    try {\n      logger.warning('sdk changed', uniqueHandlerId);\n      const handler = new ConnectionHandler();\n      handler.onDisconnected = () => {\n        logger.warning('onDisconnected', {\n          isOnline\n        });\n      };\n      handler.onReconnectStarted = () => {\n        setIsOnline(false);\n        logger.warning('onReconnectStarted', {\n          isOnline\n        });\n      };\n      handler.onReconnectSucceeded = () => {\n        setIsOnline(true);\n        logger.warning('onReconnectSucceeded', {\n          isOnline\n        });\n      };\n      handler.onReconnectFailed = () => {\n        sdk.reconnect();\n        logger.warning('onReconnectFailed');\n      };\n      logger.info('Added ConnectionHandler', uniqueHandlerId);\n      // workaround -> addConnectionHandler invalidates session handler\n      // provided through configureSession\n      if (sdk !== null && sdk !== void 0 && sdk.addConnectionHandler) {\n        sdk.addConnectionHandler(uniqueHandlerId, handler);\n      }\n    } catch (_unused) {\n      //\n    }\n    return () => {\n      try {\n        sdk.removeConnectionHandler(uniqueHandlerId);\n        logger.info('Removed ConnectionHandler', uniqueHandlerId);\n      } catch (_unused2) {\n        //\n      }\n    };\n  }, [sdk]);\n  useEffect(() => {\n    const tryReconnect = () => {\n      try {\n        logger.warning('Try reconnecting SDK');\n        if (sdk.connectionState !== 'OPEN') {\n          // connection is not broken yet\n          sdk.reconnect();\n        }\n      } catch (_unused3) {\n        //\n      }\n    };\n    // addEventListener version\n    window.addEventListener('online', tryReconnect);\n    return () => {\n      window.removeEventListener('online', tryReconnect);\n    };\n  }, [sdk]);\n\n  // add offline-class to body\n  useEffect(() => {\n    const body = document.querySelector('body');\n    if (!isOnline) {\n      try {\n        body.classList.add('sendbird__offline');\n        logger.info('Added class sendbird__offline to body');\n      } catch (e) {\n        //\n      }\n    } else {\n      try {\n        body.classList.remove('sendbird__offline');\n        logger.info('Removed class sendbird__offline from body');\n      } catch (e) {\n        //\n      }\n    }\n  }, [isOnline]);\n  return isOnline;\n}\nasync function disconnectSdk(_ref) {\n  let {\n    sdkDispatcher,\n    userDispatcher,\n    sdk\n  } = _ref;\n  return new Promise(resolve => {\n    sdkDispatcher({\n      type: SDK_ACTIONS.SET_SDK_LOADING,\n      payload: true\n    });\n    if (sdk !== null && sdk !== void 0 && sdk.disconnect) {\n      sdk.disconnect().then(() => {\n        sdkDispatcher({\n          type: SDK_ACTIONS.RESET_SDK\n        });\n        userDispatcher({\n          type: USER_ACTIONS.RESET_USER\n        });\n      }).finally(() => {\n        resolve(true);\n      });\n    } else {\n      resolve(true);\n    }\n  });\n}\nconst APP_VERSION_STRING = '3.4.9';\nconst {\n  INIT_SDK,\n  SET_SDK_LOADING,\n  RESET_SDK,\n  SDK_ERROR\n} = SDK_ACTIONS;\nconst {\n  INIT_USER,\n  UPDATE_USER_INFO,\n  RESET_USER\n} = USER_ACTIONS;\nfunction getMissingParamError(_ref) {\n  let {\n    userId,\n    appId\n  } = _ref;\n  return `SendbirdProvider | useConnect/setupConnection/Connection failed UserId: ${userId} or appId: ${appId} missing`;\n}\nfunction getConnectSbError(error) {\n  return `SendbirdProvider | useConnect/setupConnection/Connection failed. ${(error === null || error === void 0 ? void 0 : error.code) || ''} ${(error === null || error === void 0 ? void 0 : error.message) || ''}`;\n}\nfunction setUpParams(_ref2) {\n  let {\n    appId,\n    customApiHost,\n    customWebSocketHost\n  } = _ref2;\n  const params = {\n    appId,\n    modules: [new GroupChannelModule(), new OpenChannelModule()]\n  };\n  if (customApiHost) {\n    params['customApiHost'] = customApiHost;\n  }\n  if (customWebSocketHost) {\n    params['customWebSocketHost'] = customWebSocketHost;\n  }\n  const newSdk = SendbirdChat.init(params);\n  return newSdk;\n}\n\n// Steps\n// 1. Check if minimum userID/appID is provided\n//  1.a. If not, throw error > !reject\n//  1.b. If yes, continue\n// 2. Set up params with custom host if provided\n// 3. Set up session handler if provided\n// 4. Set up version\n// 5. Connect to Sendbird -> either using user ID or (user ID + access token)\n// 6. If connected, connectCbSucess\n//  6.a check if nickname is to be updated -> no > !resolve immediately\n//  6.b check if nickname is to be updated -> yes > update nickname > !resolve\n// 7. If not connected, connectCbError > !reject\nasync function setUpConnection(_ref3) {\n  let {\n    logger,\n    sdkDispatcher,\n    userDispatcher,\n    initDashboardConfigs,\n    userId,\n    appId,\n    customApiHost,\n    customWebSocketHost,\n    configureSession,\n    nickname,\n    profileUrl,\n    accessToken\n  } = _ref3;\n  return new Promise((resolve, reject) => {\n    var _logger$info;\n    logger === null || logger === void 0 ? void 0 : (_logger$info = logger.info) === null || _logger$info === void 0 ? void 0 : _logger$info.call(logger, 'SendbirdProvider | useConnect/setupConnection/init', {\n      userId,\n      appId\n    });\n    sdkDispatcher({\n      type: SET_SDK_LOADING,\n      payload: true\n    });\n    if (userId && appId) {\n      var _logger$info3, _logger$info8;\n      const newSdk = setUpParams({\n        appId,\n        customApiHost,\n        customWebSocketHost\n      });\n      if (configureSession && typeof configureSession === 'function') {\n        var _logger$info2;\n        const sessionHandler = configureSession(newSdk);\n        logger === null || logger === void 0 ? void 0 : (_logger$info2 = logger.info) === null || _logger$info2 === void 0 ? void 0 : _logger$info2.call(logger, 'SendbirdProvider | useConnect/setupConnection/configureSession', sessionHandler);\n        newSdk.setSessionHandler(sessionHandler);\n      }\n      logger === null || logger === void 0 ? void 0 : (_logger$info3 = logger.info) === null || _logger$info3 === void 0 ? void 0 : _logger$info3.call(logger, 'SendbirdProvider | useConnect/setupConnection/setVersion', {\n        version: APP_VERSION_STRING\n      });\n      newSdk.addExtension('sb_uikit', APP_VERSION_STRING);\n      const connectCbSucess = async user => {\n        var _logger$info4;\n        logger === null || logger === void 0 ? void 0 : (_logger$info4 = logger.info) === null || _logger$info4 === void 0 ? void 0 : _logger$info4.call(logger, 'SendbirdProvider | useConnect/setupConnection/connectCbSucess', user);\n        sdkDispatcher({\n          type: INIT_SDK,\n          payload: newSdk\n        });\n        userDispatcher({\n          type: INIT_USER,\n          payload: user\n        });\n        initDashboardConfigs(newSdk).then(config => {\n          var _logger$info5;\n          logger === null || logger === void 0 ? void 0 : (_logger$info5 = logger.info) === null || _logger$info5 === void 0 ? void 0 : _logger$info5.call(logger, 'SendbirdProvider | useConnect/setupConnection/getUIKitConfiguration success', {\n            config\n          });\n        }).catch(error => {\n          var _logger$error;\n          logger === null || logger === void 0 ? void 0 : (_logger$error = logger.error) === null || _logger$error === void 0 ? void 0 : _logger$error.call(logger, 'SendbirdProvider | useConnect/setupConnection/getUIKitConfiguration failed', {\n            error\n          });\n        });\n\n        // use nickname/profileUrl if provided\n        // or set userID as nickname\n        if ((nickname !== user.nickname || profileUrl !== user.profileUrl) && !(isTextuallyNull(nickname) && isTextuallyNull(profileUrl))) {\n          var _logger$info6;\n          logger === null || logger === void 0 ? void 0 : (_logger$info6 = logger.info) === null || _logger$info6 === void 0 ? void 0 : _logger$info6.call(logger, 'SendbirdProvider | useConnect/setupConnection/updateCurrentUserInfo', {\n            nickname,\n            profileUrl\n          });\n          newSdk.updateCurrentUserInfo({\n            nickname: nickname || user.nickname,\n            profileUrl: profileUrl || user.profileUrl\n          }).then(namedUser => {\n            var _logger$info7;\n            logger === null || logger === void 0 ? void 0 : (_logger$info7 = logger.info) === null || _logger$info7 === void 0 ? void 0 : _logger$info7.call(logger, 'SendbirdProvider | useConnect/setupConnection/updateCurrentUserInfo success', {\n              nickname,\n              profileUrl\n            });\n            userDispatcher({\n              type: UPDATE_USER_INFO,\n              payload: namedUser\n            });\n          }).finally(() => {\n            resolve();\n          });\n        } else {\n          resolve();\n        }\n      };\n      const connectCbError = e => {\n        var _logger$error2;\n        const errorMessage = getConnectSbError(e);\n        logger === null || logger === void 0 ? void 0 : (_logger$error2 = logger.error) === null || _logger$error2 === void 0 ? void 0 : _logger$error2.call(logger, errorMessage, {\n          e,\n          appId,\n          userId\n        });\n        sdkDispatcher({\n          type: RESET_SDK\n        });\n        userDispatcher({\n          type: RESET_USER\n        });\n        sdkDispatcher({\n          type: SDK_ERROR\n        });\n        // exit promise with error\n        reject(errorMessage);\n      };\n      logger === null || logger === void 0 ? void 0 : (_logger$info8 = logger.info) === null || _logger$info8 === void 0 ? void 0 : _logger$info8.call(logger, `SendbirdProvider | useConnect/setupConnection/connect connecting using ${accessToken !== null && accessToken !== void 0 ? accessToken : userId}`);\n      newSdk.connect(userId, accessToken).then(res => connectCbSucess(res)).catch(err => connectCbError(err));\n    } else {\n      var _logger$error3;\n      const errorMessage = getMissingParamError({\n        userId,\n        appId\n      });\n      sdkDispatcher({\n        type: SDK_ERROR\n      });\n      logger === null || logger === void 0 ? void 0 : (_logger$error3 = logger.error) === null || _logger$error3 === void 0 ? void 0 : _logger$error3.call(logger, errorMessage);\n      // exit promise with error\n      reject(errorMessage);\n    }\n  });\n}\nasync function connect(_ref) {\n  let {\n    logger,\n    sdkDispatcher,\n    userDispatcher,\n    initDashboardConfigs,\n    userId,\n    appId,\n    customApiHost,\n    customWebSocketHost,\n    configureSession,\n    nickname,\n    profileUrl,\n    accessToken,\n    sdk\n  } = _ref;\n  await disconnectSdk({\n    logger,\n    sdkDispatcher,\n    userDispatcher,\n    sdk\n  });\n  await setUpConnection({\n    logger,\n    sdkDispatcher,\n    userDispatcher,\n    initDashboardConfigs,\n    userId,\n    appId,\n    customApiHost,\n    customWebSocketHost,\n    configureSession,\n    nickname,\n    profileUrl,\n    accessToken\n  });\n}\nfunction useConnect(triggerTypes, staticTypes) {\n  var _logger$info;\n  const {\n    userId,\n    appId,\n    accessToken\n  } = triggerTypes;\n  const {\n    logger,\n    nickname,\n    profileUrl,\n    configureSession,\n    customApiHost,\n    customWebSocketHost,\n    sdk,\n    sdkDispatcher,\n    userDispatcher,\n    initDashboardConfigs\n  } = staticTypes;\n  logger === null || logger === void 0 ? void 0 : (_logger$info = logger.info) === null || _logger$info === void 0 ? void 0 : _logger$info.call(logger, 'SendbirdProvider | useConnect', _objectSpread2(_objectSpread2({}, triggerTypes), staticTypes));\n  useEffect(() => {\n    var _logger$info2;\n    logger === null || logger === void 0 ? void 0 : (_logger$info2 = logger.info) === null || _logger$info2 === void 0 ? void 0 : _logger$info2.call(logger, 'SendbirdProvider | useConnect/useEffect', {\n      userId,\n      appId,\n      accessToken\n    });\n    try {\n      connect({\n        userId,\n        appId,\n        accessToken,\n        logger,\n        nickname,\n        profileUrl,\n        configureSession,\n        customApiHost,\n        customWebSocketHost,\n        sdk,\n        sdkDispatcher,\n        userDispatcher,\n        initDashboardConfigs\n      });\n    } catch (error) {\n      var _logger$error;\n      logger === null || logger === void 0 ? void 0 : (_logger$error = logger.error) === null || _logger$error === void 0 ? void 0 : _logger$error.call(logger, 'SendbirdProvider | useConnect/useEffect', error);\n    }\n  }, [userId, appId, accessToken]);\n  const reconnect = useCallback(() => {\n    var _logger$info3;\n    logger === null || logger === void 0 ? void 0 : (_logger$info3 = logger.info) === null || _logger$info3 === void 0 ? void 0 : _logger$info3.call(logger, 'SendbirdProvider | useConnect/reconnect/useCallback', {\n      sdk\n    });\n    try {\n      connect({\n        userId,\n        appId,\n        accessToken,\n        logger,\n        nickname,\n        profileUrl,\n        configureSession,\n        customApiHost,\n        customWebSocketHost,\n        sdk,\n        sdkDispatcher,\n        userDispatcher,\n        initDashboardConfigs\n      });\n    } catch (error) {\n      var _logger$error2;\n      logger === null || logger === void 0 ? void 0 : (_logger$error2 = logger.error) === null || _logger$error2 === void 0 ? void 0 : _logger$error2.call(logger, 'SendbirdProvider | useConnect/reconnect/useCallback', error);\n    }\n  }, [sdk]);\n  return reconnect;\n}\n\n// Logger, pretty much explains it\n// in SendbirdProvider\n\n// const [logger, setLogger] = useState(LoggerFactory(logLevel));\nconst LOG_LEVELS = {\n  DEBUG: 'debug',\n  WARNING: 'warning',\n  ERROR: 'error',\n  INFO: 'info',\n  ALL: 'all'\n};\nconst colorLog = level => {\n  switch (level) {\n    case LOG_LEVELS.WARNING:\n      return 'color: Orange';\n    case LOG_LEVELS.ERROR:\n      return 'color: Red';\n    default:\n      return 'color: Gray';\n  }\n};\nconst printLog = _ref => {\n  let {\n    level,\n    title,\n    description = ''\n  } = _ref;\n  // eslint-disable-next-line no-console\n  console.log(`%c SendbirdUIKit | ${level} | ${new Date().toISOString()} | ${title} ${description && '|'}`, colorLog(level), description);\n};\nconst noop = () => {/* noop */};\nconst getDefaultLogger = () => ({\n  info: noop,\n  error: noop,\n  warning: noop\n});\nconst LoggerFactory = (lvl, customInterface) => {\n  const logInterface = customInterface || printLog;\n  const lvlArray = Array.isArray(lvl) ? lvl : [lvl];\n  const applyLog = lgLvl => (title, description) => logInterface({\n    level: lgLvl,\n    title,\n    description\n  });\n  const logger = lvlArray.reduce((accumulator, currentLvl) => {\n    if (currentLvl === LOG_LEVELS.DEBUG || currentLvl === LOG_LEVELS.ALL) {\n      return _objectSpread2(_objectSpread2({}, accumulator), {}, {\n        info: applyLog(LOG_LEVELS.INFO),\n        error: applyLog(LOG_LEVELS.ERROR),\n        warning: applyLog(LOG_LEVELS.WARNING)\n      });\n    }\n    if (currentLvl === LOG_LEVELS.INFO) {\n      return _objectSpread2(_objectSpread2({}, accumulator), {}, {\n        info: applyLog(LOG_LEVELS.INFO)\n      });\n    }\n    if (currentLvl === LOG_LEVELS.ERROR) {\n      return _objectSpread2(_objectSpread2({}, accumulator), {}, {\n        error: applyLog(LOG_LEVELS.ERROR)\n      });\n    }\n    if (currentLvl === LOG_LEVELS.WARNING) {\n      return _objectSpread2(_objectSpread2({}, accumulator), {}, {\n        warning: applyLog(LOG_LEVELS.WARNING)\n      });\n    }\n    return _objectSpread2({}, accumulator);\n  }, getDefaultLogger());\n  return logger;\n};\n\n// TODO: Make this to hook, useLogger\n\n// https://davidwalsh.name/pubsub-javascript\n// we use pubsub to sync events between multiple components(example - ChannelList, Channel)\n// for example, if customer sends a message from their custom component\n// without pubsub,we would not be able to listen to it\n// in our ChannelList or Conversation\n\nconst pubSubFactory = () => {\n  const topics = {};\n  const hOP = topics.hasOwnProperty;\n  return {\n    __getTopics: () => topics,\n    subscribe: (topic, listener) => {\n      // Create the topic's object if not yet created\n      if (!hOP.call(topics, topic)) {\n        topics[topic] = [];\n      }\n\n      // Add the listener to queue\n      const index = topics[topic].push(listener) - 1;\n\n      // Provide handle back for removal of topic\n      return {\n        remove: () => {\n          delete topics[topic][index];\n        }\n      };\n    },\n    publish: (topic, info) => {\n      // If the topic doesn't exist, or there's no listeners in queue, just leave\n      if (!hOP.call(topics, topic)) {\n        return;\n      }\n\n      // Cycle through topics queue, fire!\n      topics[topic].forEach(item => {\n        item(info !== undefined ? info : {});\n      });\n    }\n  };\n};\n\n/* eslint-disable default-param-last */\nfunction useAppendDomNode() {\n  let ids = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let rootSelector = arguments.length > 1 ? arguments[1] : undefined;\n  useEffect(() => {\n    const root = document.querySelector(rootSelector);\n    ids.forEach(id => {\n      const elem = document.createElement('div');\n      elem.setAttribute('id', id);\n      root.appendChild(elem);\n    });\n    return () => {\n      ids.forEach(id => {\n        const target = document.getElementById(id);\n        if (target) {\n          root.removeChild(target);\n        }\n      });\n    };\n  }, []);\n}\nfunction snakeToCamel(obj) {\n  if (typeof obj !== 'object' || obj === null) {\n    return obj;\n  }\n  if (Array.isArray(obj)) {\n    return obj.map(item => snakeToCamel(item));\n  }\n  const result = {};\n  Object.keys(obj).forEach(key => {\n    const camelKey = key.replace(/_\\w/g, m => m[1].toUpperCase());\n    result[camelKey] = snakeToCamel(obj[key]);\n  });\n  return result;\n}\n\n// @link https://gist.github.com/navix/6c25c15e0a2d3cd0e5bce999e0086fc9\n/* eslint-disable @typescript-eslint/ban-types */\n\nfunction isSameType(a, b) {\n  // we do this cause typeof can't differenciate object/ array/ null\n  return Object.prototype.toString.call(a) === Object.prototype.toString.call(b);\n}\n\n/**\n * @param localConfigs Set directly in code level. It has higher priority than remote ones\n * @param remoteConfigs Set by Feature Config setting in Dashboard\n * @returns\n */\nfunction getConfigsByPriority(localConfigs, remoteConfigs) {\n  const prioritizedConfigs = _objectSpread2({}, remoteConfigs); // copy remoteConfigs to prevent mutation\n\n  Object.keys(localConfigs).forEach(key => {\n    if (prioritizedConfigs.hasOwnProperty(key) && isSameType(localConfigs[key], prioritizedConfigs[key])) {\n      prioritizedConfigs[key] = typeof localConfigs[key] === 'object'\n      // Recursively call getConfigsByPriority only when the value of the key is Object\n      ? getConfigsByPriority(localConfigs[key], prioritizedConfigs[key]) : localConfigs[key];\n    }\n  });\n  return prioritizedConfigs;\n}\n\n// @link: https://docs.google.com/spreadsheets/d/1-AozBMHRYOXS74vZ-7x2ptQcBL6nnM-orJWRvUgmkd4/edit#gid=0\nconst initialConfig = {\n  common: {\n    enableUsingDefaultUserProfile: false\n  },\n  groupChannel: {\n    channel: {\n      enableMention: false,\n      enableOgtag: true,\n      enableReactions: true,\n      enableTypingIndicator: true,\n      enableVoiceMessage: false,\n      input: {\n        camera: {\n          enablePhoto: true,\n          enableVideo: true\n        },\n        enableDocument: true,\n        gallery: {\n          enablePhoto: true,\n          enableVideo: true\n        }\n      },\n      replyType: 'quote_reply',\n      threadReplySelectType: 'thread'\n    },\n    channelList: {\n      enableMessageReceiptStatus: false,\n      enableTypingIndicator: false\n    },\n    setting: {\n      enableMessageSearch: false\n    }\n  },\n  openChannel: {\n    channel: {\n      enableOgtag: true,\n      input: {\n        camera: {\n          enablePhoto: true,\n          enableVideo: true\n        },\n        enableDocument: true,\n        gallery: {\n          enablePhoto: true,\n          enableVideo: true\n        }\n      }\n    }\n  }\n};\nclass UIKitConfigStorageManager {\n  constructor(storage) {\n    _defineProperty(this, \"key\", void 0);\n    _defineProperty(this, \"storage\", void 0);\n    this.storage = storage;\n  }\n  init(appId) {\n    this.key = `sbu@${appId}.uikitConfiguration`;\n    return this.get();\n  }\n  async update(payload) {\n    const storedConfig = await this.get();\n    const mergedConfig = {\n      lastUpdatedAt: payload.lastUpdatedAt,\n      uikitConfigurations: getConfigsByPriority(payload === null || payload === void 0 ? void 0 : payload.uikitConfigurations, storedConfig === null || storedConfig === void 0 ? void 0 : storedConfig.uikitConfigurations)\n    };\n    await this.storage.setItem(this.key, JSON.stringify(mergedConfig));\n    return mergedConfig;\n  }\n  async get() {\n    const initialPayload = {\n      lastUpdatedAt: 0,\n      uikitConfigurations: initialConfig\n    };\n    try {\n      const storedConfig = await this.storage.getItem(this.key);\n      if (storedConfig) {\n        // TODO: Validation\n        return JSON.parse(storedConfig);\n      } else {\n        return initialPayload;\n      }\n    } catch (_unused) {\n      return initialPayload;\n    }\n  }\n}\nconst UIKitConfigContext = /*#__PURE__*/createContext({\n  initDashboardConfigs: () => Promise.resolve(),\n  configs: initialConfig\n});\nconst UIKitConfigProvider = _ref => {\n  let {\n    storage,\n    children,\n    localConfigs\n  } = _ref;\n  // Set by Feature Config setting in Dashboard\n  const [remoteConfigs, setRemoteConfigs] = useState(initialConfig);\n  const initDashboardConfigs = useCallback(async sdk => {\n    try {\n      if (storage == null) {\n        const payload = await sdk.getUIKitConfiguration();\n        setRemoteConfigs(snakeToCamel(payload.json.uikit_configurations));\n        return;\n      }\n\n      // Compare the sdk uikitConfig's lastUpdatedAt <-> stored one\n      const manager = new UIKitConfigStorageManager(storage);\n      const storedConfigs = await manager.init(sdk.appId);\n      if (sdk.appInfo.uikitConfigInfo.lastUpdatedAt === storedConfigs.lastUpdatedAt) {\n        setRemoteConfigs(storedConfigs.uikitConfigurations);\n      } else {\n        const payload = await sdk.getUIKitConfiguration();\n        const updatedPayloed = await manager.update(snakeToCamel(payload.json));\n        setRemoteConfigs(updatedPayloed.uikitConfigurations);\n      }\n    } catch (error) {\n      //\n    }\n  }, []);\n  const configs = getConfigsByPriority(localConfigs, remoteConfigs);\n  return /*#__PURE__*/React__default.createElement(UIKitConfigContext.Provider, {\n    value: {\n      initDashboardConfigs,\n      configs\n    }\n  }, children);\n};\nconst useUIKitConfig = () => useContext(UIKitConfigContext);\nconst VoiceMessageProvider = _ref => {\n  let {\n    children,\n    isVoiceMessageEnabled = true\n  } = _ref;\n  if (!isVoiceMessageEnabled) {\n    return /*#__PURE__*/React__default.createElement(VoicePlayerProvider, null, children);\n  }\n  return /*#__PURE__*/React__default.createElement(VoiceRecorderProvider, null, /*#__PURE__*/React__default.createElement(VoicePlayerProvider, null, children));\n};\nconst TIMEOUT = 2000;\n\n/*\n  * This is a factory function that returns a scheduler.\n  * The scheduler is a queue that calls the callback function on intervals.\n  * If interval is empty, the callback function is called immediately.\n  * If interval is not empty, the callback function is called after the interval.\n*/\nfunction schedulerFactory(_ref) {\n  let {\n    logger,\n    timeout,\n    cb\n  } = _ref;\n  let queue = [];\n  let interval = null;\n  const push = channel => {\n    const channelPresent = queue.find(c => c.url === channel.url);\n    if (!channelPresent) {\n      queue.push(channel);\n    } else {\n      logger.info('Channel: Mark as read already in queue', {\n        channel\n      });\n    }\n    // start the interval if it's not already running\n    if (interval) {\n      return;\n    }\n    const item = queue.shift();\n    if (item) {\n      cb(item);\n    }\n    interval = setInterval(() => {\n      if (queue.length === 0 && interval) {\n        clearInterval(interval);\n        interval = null;\n        return;\n      }\n      const item = queue.shift();\n      if (item) {\n        cb(item);\n      }\n    }, timeout || TIMEOUT);\n  };\n  const clear = () => {\n    queue = [];\n    if (interval) {\n      clearInterval(interval);\n      interval = null;\n    }\n  };\n  return {\n    push,\n    clear,\n    getQueue: () => queue\n  };\n}\n\n// this hook accepts a callback to run component is unmounted\nfunction useUnmount(callback) {\n  useLayoutEffect(() => {\n    return () => {\n      callback();\n    };\n  }, []);\n}\nfunction useMarkAsReadScheduler(_ref, _ref2) {\n  let {\n    isConnected\n  } = _ref;\n  let {\n    logger\n  } = _ref2;\n  const markAsReadScheduler = useMemo(() => schedulerFactory({\n    logger,\n    cb: channel => {\n      try {\n        channel.markAsRead();\n      } catch (error) {\n        logger.warning('Channel: Mark as delivered failed', {\n          channel,\n          error\n        });\n      }\n    }\n  }), []);\n  useEffect(() => {\n    // for simplicity, we clear the queue when the connection is lost\n    if (!isConnected) {\n      markAsReadScheduler.clear();\n    }\n  }, [isConnected]);\n  useUnmount(() => {\n    markAsReadScheduler.clear();\n  });\n  return markAsReadScheduler;\n}\nfunction useMarkAsDeliveredScheduler(_ref, _ref2) {\n  let {\n    isConnected\n  } = _ref;\n  let {\n    logger\n  } = _ref2;\n  const markAsDeliveredScheduler = useMemo(() => schedulerFactory({\n    logger,\n    cb: channel => {\n      try {\n        channel.markAsDelivered();\n      } catch (error) {\n        logger.warning('Channel: Mark as delivered failed', {\n          channel,\n          error\n        });\n      }\n    }\n  }), []);\n  useEffect(() => {\n    // for simplicity, we clear the queue when the connection is lost\n    if (!isConnected) {\n      markAsDeliveredScheduler.clear();\n    }\n  }, [isConnected]);\n  useUnmount(() => {\n    markAsDeliveredScheduler.clear();\n  });\n  return markAsDeliveredScheduler;\n}\nfunction Sendbird(props) {\n  const {\n    replyType = 'NONE',\n    isMentionEnabled = false,\n    isReactionEnabled = true,\n    disableUserProfile = false,\n    isVoiceMessageEnabled = true,\n    isTypingIndicatorEnabledOnChannelList = false,\n    isMessageReceiptStatusEnabledOnChannelList = false\n  } = props;\n  return /*#__PURE__*/React__default.createElement(UIKitConfigProvider, {\n    localConfigs: {\n      common: {\n        enableUsingDefaultUserProfile: !disableUserProfile\n      },\n      groupChannel: {\n        channel: {\n          enableReactions: isReactionEnabled,\n          enableMention: isMentionEnabled,\n          enableVoiceMessage: isVoiceMessageEnabled,\n          /**\n           * Since dashbord UIKit Configuration's replyType is consisted of all lowercase letters,\n           * we convert it from here.\n           * i.e. 'THREAD' -> 'thread'\n           */\n          replyType: replyType.toLowerCase()\n        },\n        channelList: {\n          enableTypingIndicator: isTypingIndicatorEnabledOnChannelList,\n          enableMessageReceiptStatus: isMessageReceiptStatusEnabledOnChannelList\n        }\n      }\n    }\n  }, /*#__PURE__*/React__default.createElement(SendbirdSDK, props));\n}\nconst SendbirdSDK = _ref => {\n  let {\n    appId,\n    userId,\n    children,\n    accessToken = '',\n    customApiHost = '',\n    customWebSocketHost = '',\n    configureSession = null,\n    theme = 'light',\n    config = {},\n    nickname = '',\n    colorSet = null,\n    stringSet = null,\n    dateLocale = null,\n    profileUrl = '',\n    voiceRecord = {\n      maxRecordingTime: VOICE_RECORDER_DEFAULT_MAX,\n      minRecordingTime: VOICE_RECORDER_DEFAULT_MIN\n    },\n    userListQuery = null,\n    imageCompression = {},\n    allowProfileEdit = false,\n    disableMarkAsDelivered = false,\n    renderUserProfile = null,\n    onUserProfileMessage = null\n  } = _ref;\n  const breakpoint = false;\n  const {\n    logLevel = '',\n    userMention = {},\n    isREMUnitEnabled = false\n  } = config;\n  const [logger, setLogger] = useState(LoggerFactory(logLevel));\n  const [pubSub] = useState(pubSubFactory());\n  const [sdkStore, sdkDispatcher] = useReducer(reducer$1, initialState$1);\n  const [userStore, userDispatcher] = useReducer(reducer, initialState);\n  const {\n    configs,\n    initDashboardConfigs\n  } = useUIKitConfig();\n  useTheme(colorSet);\n  const reconnect = useConnect({\n    appId,\n    userId,\n    accessToken\n  }, {\n    logger,\n    nickname,\n    profileUrl,\n    configureSession,\n    customApiHost,\n    customWebSocketHost,\n    sdk: sdkStore === null || sdkStore === void 0 ? void 0 : sdkStore.sdk,\n    sdkDispatcher,\n    userDispatcher,\n    initDashboardConfigs\n  });\n\n  // to create a pubsub to communicate between parent and child\n  useEffect(() => {\n    setLogger(LoggerFactory(logLevel));\n  }, [logLevel]);\n  useAppendDomNode(['sendbird-modal-root', 'sendbird-dropdown-portal', 'sendbird-emoji-list-portal'], 'body');\n\n  // should move to reducer\n  const [currenttheme, setCurrenttheme] = useState(theme);\n  useEffect(() => {\n    setCurrenttheme(theme);\n  }, [theme]);\n  useEffect(() => {\n    const body = document.querySelector('body');\n    body.classList.remove('sendbird-experimental__rem__units');\n    if (isREMUnitEnabled) {\n      body.classList.add('sendbird-experimental__rem__units');\n    }\n  }, [isREMUnitEnabled]);\n  // add-remove theme from body\n  useEffect(() => {\n    logger.info('Setup theme', `Theme: ${currenttheme}`);\n    try {\n      const body = document.querySelector('body');\n      body.classList.remove('sendbird-theme--light');\n      body.classList.remove('sendbird-theme--dark');\n      body.classList.add(`sendbird-theme--${currenttheme || 'light'}`);\n      logger.info('Finish setup theme');\n      // eslint-disable-next-line no-empty\n    } catch (e) {\n      logger.warning('Setup theme failed', `${e}`);\n    }\n    return () => {\n      try {\n        const body = document.querySelector('body');\n        body.classList.remove('sendbird-theme--light');\n        body.classList.remove('sendbird-theme--dark');\n        // eslint-disable-next-line no-empty\n      } catch (_unused) {}\n    };\n  }, [currenttheme]);\n  const isOnline = useConnectionStatus(sdkStore.sdk, logger);\n  const markAsReadScheduler = useMarkAsReadScheduler({\n    isConnected: isOnline\n  }, {\n    logger\n  });\n  const markAsDeliveredScheduler = useMarkAsDeliveredScheduler({\n    isConnected: isOnline\n  }, {\n    logger\n  });\n  const localeStringSet = React__default.useMemo(() => {\n    if (!stringSet) {\n      return getStringSet('en');\n    }\n    return _objectSpread2(_objectSpread2({}, getStringSet('en')), stringSet);\n  }, [stringSet]);\n  return /*#__PURE__*/React__default.createElement(SendbirdSdkContext.Provider, {\n    value: {\n      stores: {\n        sdkStore,\n        userStore\n      },\n      dispatchers: {\n        sdkDispatcher,\n        userDispatcher,\n        reconnect\n      },\n      config: {\n        disableMarkAsDelivered,\n        renderUserProfile,\n        onUserProfileMessage,\n        allowProfileEdit,\n        isOnline,\n        userId,\n        appId,\n        accessToken,\n        theme: currenttheme,\n        setCurrenttheme,\n        userListQuery,\n        logger,\n        pubSub,\n        imageCompression: _objectSpread2({\n          compressionRate: 0.7\n        }, imageCompression),\n        voiceRecord,\n        userMention: {\n          maxMentionCount: (userMention === null || userMention === void 0 ? void 0 : userMention.maxMentionCount) || 10,\n          maxSuggestionCount: (userMention === null || userMention === void 0 ? void 0 : userMention.maxSuggestionCount) || 15\n        },\n        markAsReadScheduler,\n        markAsDeliveredScheduler,\n        // From UIKitConfigProvider.localConfigs\n        disableUserProfile: !configs.common.enableUsingDefaultUserProfile,\n        isReactionEnabled: configs.groupChannel.channel.enableReactions,\n        isMentionEnabled: configs.groupChannel.channel.enableMention,\n        isVoiceMessageEnabled: configs.groupChannel.channel.enableVoiceMessage,\n        replyType:\n        /**\n         * Since UIKitConfigContext's replyType is consisted of all lowercase letters,\n         * we need to convert it into all uppercase ones like\n         *  - 'thread' -> 'THREAD'\n         *  - 'quote_reply' -> 'QUOTE_REPLY'\n         */\n        configs.groupChannel.channel.replyType.toUpperCase(),\n        isTypingIndicatorEnabledOnChannelList: configs.groupChannel.channelList.enableTypingIndicator,\n        isMessageReceiptStatusEnabledOnChannelList: configs.groupChannel.channelList.enableMessageReceiptStatus\n        // TODO(Ahyoung): add more configs from UIKitConfigProvider.remoteConfigs\n      }\n    }\n  }, /*#__PURE__*/React__default.createElement(MediaQueryProvider, {\n    logger: logger,\n    breakpoint: breakpoint\n  }, /*#__PURE__*/React__default.createElement(LocalizationProvider, {\n    stringSet: localeStringSet,\n    dateLocale: dateLocale\n  }, /*#__PURE__*/React__default.createElement(VoiceMessageProvider, {\n    isVoiceMessageEnabled: configs.groupChannel.channel.enableVoiceMessage\n  }, children))));\n};\nexport { Sendbird as default };","map":{"version":3,"mappings":"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","names":["isEmpty","obj","undefined","prop","hasOwnProperty","JSON","stringify","useTheme","overrides","useLayoutEffect","cssVars","variables","SDK_ACTIONS","INIT_SDK","SET_SDK_LOADING","RESET_SDK","SDK_ERROR","initialState","initialized","loading","sdk","error","reducer","state","action","match","with","type","_ref","payload","_ref2","otherwise","user","USER_ACTIONS","INIT_USER","RESET_USER","UPDATE_USER_INFO","useConnectionStatus","logger","isOnline","setIsOnline","useState","useEffect","uniqueHandlerId","uuidv4","warning","handler","ConnectionHandler","onDisconnected","onReconnectStarted","onReconnectSucceeded","onReconnectFailed","reconnect","info","addConnectionHandler","removeConnectionHandler","tryReconnect","connectionState","window","addEventListener","removeEventListener","body","document","querySelector","classList","add","e","remove","disconnectSdk","sdkDispatcher","userDispatcher","Promise","resolve","disconnect","then","finally","APP_VERSION_STRING","getMissingParamError","userId","appId","getConnectSbError","code","message","setUpParams","customApiHost","customWebSocketHost","params","modules","GroupChannelModule","OpenChannelModule","newSdk","SendbirdChat","init","setUpConnection","initDashboardConfigs","configureSession","nickname","profileUrl","accessToken","reject","_logger$info","sessionHandler","_logger$info2","setSessionHandler","_logger$info3","version","addExtension","connectCbSucess","_logger$info4","config","_logger$info5","catch","_logger$error","isTextuallyNull","_logger$info6","updateCurrentUserInfo","namedUser","_logger$info7","connectCbError","errorMessage","_logger$error2","_logger$info8","connect","res","err","_logger$error3","useConnect","triggerTypes","staticTypes","useCallback","LOG_LEVELS","DEBUG","WARNING","ERROR","INFO","ALL","colorLog","level","printLog","title","description","console","log","Date","toISOString","noop","getDefaultLogger","LoggerFactory","lvl","customInterface","logInterface","lvlArray","Array","isArray","applyLog","lgLvl","reduce","accumulator","currentLvl","pubSubFactory","topics","hOP","__getTopics","subscribe","topic","listener","call","index","push","publish","forEach","item","useAppendDomNode","ids","rootSelector","root","id","elem","createElement","setAttribute","appendChild","target","getElementById","removeChild","snakeToCamel","map","result","Object","keys","key","camelKey","replace","m","toUpperCase","isSameType","a","b","prototype","toString","getConfigsByPriority","localConfigs","remoteConfigs","prioritizedConfigs","initialConfig","common","enableUsingDefaultUserProfile","groupChannel","channel","enableMention","enableOgtag","enableReactions","enableTypingIndicator","enableVoiceMessage","input","camera","enablePhoto","enableVideo","enableDocument","gallery","replyType","threadReplySelectType","channelList","enableMessageReceiptStatus","setting","enableMessageSearch","openChannel","UIKitConfigStorageManager","constructor","storage","_defineProperty","get","update","storedConfig","mergedConfig","lastUpdatedAt","uikitConfigurations","mergeConfigs","setItem","initialPayload","getItem","parse","UIKitConfigContext","createContext","configs","UIKitConfigProvider","children","setRemoteConfigs","getUIKitConfiguration","json","uikit_configurations","manager","storedConfigs","appInfo","uikitConfigInfo","updatedPayloed","React","Provider","value","useUIKitConfig","useContext","VoiceMessageProvider","isVoiceMessageEnabled","VoicePlayerProvider","VoiceRecorderProvider","TIMEOUT","schedulerFactory","timeout","cb","queue","interval","channelPresent","find","c","url","shift","setInterval","length","clearInterval","clear","getQueue","useUnmount","callback","useMarkAsReadScheduler","isConnected","markAsReadScheduler","useMemo","markAsRead","useMarkAsDeliveredScheduler","markAsDeliveredScheduler","markAsDelivered","Sendbird","props","isMentionEnabled","isReactionEnabled","disableUserProfile","isTypingIndicatorEnabledOnChannelList","isMessageReceiptStatusEnabledOnChannelList","toLowerCase","SendbirdSDK","theme","colorSet","stringSet","dateLocale","voiceRecord","maxRecordingTime","VOICE_RECORDER_DEFAULT_MAX","minRecordingTime","VOICE_RECORDER_DEFAULT_MIN","userListQuery","imageCompression","allowProfileEdit","disableMarkAsDelivered","renderUserProfile","onUserProfileMessage","breakpoint","logLevel","userMention","isREMUnitEnabled","setLogger","pubSub","sdkStore","useReducer","sdkReducers","sdkInitialState","userStore","userReducers","userInitialState","currenttheme","setCurrenttheme","useOnlineStatus","localeStringSet","getStringSet","SendbirdSdkContext","stores","dispatchers","compressionRate","maxMentionCount","maxSuggestionCount","MediaQueryProvider","LocalizationProvider"],"sources":["C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\lib\\hooks\\useTheme.ts","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\lib\\dux\\sdk\\actionTypes.ts","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\lib\\dux\\sdk\\initialState.ts","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\lib\\dux\\sdk\\reducers.ts","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\lib\\dux\\user\\initialState.ts","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\lib\\dux\\user\\reducers.ts","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\lib\\hooks\\useOnlineStatus.js","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\lib\\hooks\\useConnect\\disconnectSdk.ts","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\lib\\hooks\\useConnect\\setupConnection.ts","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\lib\\hooks\\useConnect\\connect.ts","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\lib\\hooks\\useConnect\\index.ts","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\lib\\Logger\\index.ts","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\lib\\pubSub\\index.ts","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\hooks\\useAppendDomNode.js","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\lib\\UIKitConfigProvider\\utils\\snakeToCamel.ts","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\lib\\UIKitConfigProvider\\utils\\types.ts","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\lib\\UIKitConfigProvider\\utils\\getConfigsByPriority.ts","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\lib\\UIKitConfigProvider\\const\\initialConfig.ts","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\lib\\UIKitConfigProvider\\UIKitConfigStorageManager\\index.ts","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\lib\\UIKitConfigProvider\\index.tsx","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\lib\\VoiceMessageProvider.tsx","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\lib\\hooks\\schedulerFactory.ts","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\hooks\\useUnmount.ts","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\lib\\hooks\\useMarkAsReadScheduler.ts","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\lib\\hooks\\useMarkAsDeliveredScheduler.ts","C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\lib\\Sendbird.tsx"],"sourcesContent":["import { useLayoutEffect } from 'react';\nimport cssVars from 'css-vars-ponyfill';\n\nconst isEmpty = (obj) => {\n  if (obj === null || obj === undefined) {\n    return true;\n  }\n\n  for (const prop in obj) {\n    if (obj.hasOwnProperty(prop)) {\n      return false;\n    }\n  }\n  return JSON.stringify(obj) === JSON.stringify({});\n};\n\nconst useTheme = (overrides: Record<string, string>): void => {\n  useLayoutEffect(() => {\n    if (!isEmpty(overrides)) {\n      cssVars({\n        variables: {\n          ...{\n            '--sendbird-dark-primary-500': '#4d2aa6',\n            '--sendbird-dark-primary-400': '#6440C4',\n            '--sendbird-dark-primary-300': '#7B53EF',\n            '--sendbird-dark-primary-200': '#9E8CF5',\n            '--sendbird-dark-primary-100': '#E2DFFF',\n\n            '--sendbird-dark-secondary-500': '#007A7A',\n            '--sendbird-dark-secondary-400': '#189A8D',\n            '--sendbird-dark-secondary-300': '#2EBA9F',\n            '--sendbird-dark-secondary-200': '#6FD6BE',\n            '--sendbird-dark-secondary-100': '#AEF2DC',\n\n            '--sendbird-dark-information-100': '#b2d9ff',\n\n            '--sendbird-dark-error-500': '#A30E2D',\n            '--sendbird-dark-error-400': '#C11F41',\n            '--sendbird-dark-error-300': '#E53157',\n            '--sendbird-dark-error-200': '#FF6183',\n            '--sendbird-dark-error-100': '#FFABBD',\n\n            '--sendbird-dark-background-700': '#000000',\n            '--sendbird-dark-background-600': '#161616',\n            '--sendbird-dark-background-500': '#2C2C2C',\n            '--sendbird-dark-background-400': '#393939',\n            '--sendbird-dark-background-300': '#A8A8A8',\n            '--sendbird-dark-background-200': '#D9D9D9',\n            '--sendbird-dark-background-100': '#F0F0F0',\n            '--sendbird-dark-background-50': '#FFFFFF',\n\n            '--sendbird-dark-overlay': 'rgba(0, 0, 0, 0.32)',\n\n            '--sendbird-dark-onlight-01': 'rgba(0, 0, 0, 0.88)',\n            '--sendbird-dark-onlight-02': 'rgba(0, 0, 0, 0.50)',\n            '--sendbird-dark-onlight-03': 'rgba(0, 0, 0, 0.38)',\n            '--sendbird-dark-onlight-04': 'rgba(0, 0, 0, 0.12)',\n\n            '--sendbird-dark-ondark-01': 'rgba(255, 255, 255, 0.88)',\n            '--sendbird-dark-ondark-02': 'rgba(255, 255, 255, 0.50)',\n            '--sendbird-dark-ondark-03': 'rgba(255, 255, 255, 0.38)',\n            '--sendbird-dark-ondark-04': 'rgba(255, 255, 255, 0.12)',\n\n            '--sendbird-dark-shadow-01': '0 1px 5px 0 rgba(33, 34, 66, 0.04), 0 0 3px 0 rgba(0, 0, 0, 0.08), 0 2px 1px 0 rgba(0, 0, 0, 0.12)',\n            '--sendbird-dark-shadow-02': '0 3px 5px -3px rgba(33, 34, 66, 0.04), 0 3px 14px 2px rgba(0, 0, 0, 0.08), 0 8px 10px 1px rgba(0, 0, 0, 0.12)',\n            '--sendbird-dark-shadow-03': '0 6px 10px -5px rgba(0, 0, 0, 0.04), 0 6px 30px 5px rgba(0, 0, 0, 0.08), 0 16px 24px 2px rgba(0, 0, 0, 0.12)',\n            '--sendbird-dark-shadow-04': '0 9px 15px -7px rgba(0, 0, 0, 0.04), 0 9px 46px 8px rgba(0, 0, 0, 0.08), 0 24px 38px 3px rgba(0, 0, 0, 0.12)',\n\n            '--sendbird-dark-shadow-message-input': '0 1px 5px 0 rgba(33, 34, 66, 0.12), 0 0 1px 0 rgba(33, 34, 66, 0.16), 0 2px 1px 0 rgba(33, 34, 66, 0.08), 0 1px 5px 0 rgba(0, 0, 0, 0.12)',\n\n            '--sendbird-light-primary-500': '#4d2aa6',\n            '--sendbird-light-primary-400': '#6440C4',\n            '--sendbird-light-primary-300': '#7B53EF',\n            '--sendbird-light-primary-200': '#9E8CF5',\n            '--sendbird-light-primary-100': '#E2DFFF',\n\n            '--sendbird-light-secondary-500': '#007A7A',\n            '--sendbird-light-secondary-400': '#189A8D',\n            '--sendbird-light-secondary-300': '#2EBA9F',\n            '--sendbird-light-secondary-200': '#6FD6BE',\n            '--sendbird-light-secondary-100': '#AEF2DC',\n\n            '--sendbird-light-information-100': '#b2d9ff',\n\n            '--sendbird-light-error-500': '#A30E2D',\n            '--sendbird-light-error-400': '#C11F41',\n            '--sendbird-light-error-300': '#E53157',\n            '--sendbird-light-error-200': '#FF6183',\n            '--sendbird-light-error-100': '#FFABBD',\n\n            '--sendbird-light-background-700': '#000000',\n            '--sendbird-light-background-600': '#161616',\n            '--sendbird-light-background-500': '#2C2C2C',\n            '--sendbird-light-background-400': '#393939',\n            '--sendbird-light-background-300': '#A8A8A8',\n            '--sendbird-light-background-200': '#D9D9D9',\n            '--sendbird-light-background-100': '#F0F0F0',\n            '--sendbird-light-background-50': ' #FFFFFF',\n\n            '--sendbird-light-overlay': 'rgba(0, 0, 0, 0.32)',\n\n            '--sendbird-light-onlight-01': 'rgba(0, 0, 0, 0.88)',\n            '--sendbird-light-onlight-02': 'rgba(0, 0, 0, 0.50)',\n            '--sendbird-light-onlight-03': 'rgba(0, 0, 0, 0.38)',\n            '--sendbird-light-onlight-04': 'rgba(0, 0, 0, 0.12)',\n\n            '--sendbird-light-ondark-01': 'rgba(255, 255, 255, 0.88)',\n            '--sendbird-light-ondark-02': 'rgba(255, 255, 255, 0.50)',\n            '--sendbird-light-ondark-03': 'rgba(255, 255, 255, 0.38)',\n            '--sendbird-light-ondark-04': 'rgba(255, 255, 255, 0.12)',\n\n            '--sendbird-light-shadow-01': '0 1px 5px 0 rgba(33, 34, 66, 0.04), 0 0 3px 0 rgba(0, 0, 0, 0.08), 0 2px 1px 0 rgba(0, 0, 0, 0.12)',\n            '--sendbird-light-shadow-02': '0 3px 5px -3px rgba(33, 34, 66, 0.04), 0 3px 14px 2px rgba(0, 0, 0, 0.08), 0 8px 10px 1px rgba(0, 0, 0, 0.12)',\n            '--sendbird-light-shadow-03': '0 6px 10px -5px rgba(0, 0, 0, 0.04), 0 6px 30px 5px rgba(0, 0, 0, 0.08), 0 16px 24px 2px rgba(0, 0, 0, 0.12)',\n            '--sendbird-light-shadow-04': '0 9px 15px -7px rgba(0, 0, 0, 0.04), 0 9px 46px 8px rgba(0, 0, 0, 0.08), 0 24px 38px 3px rgba(0, 0, 0, 0.12)',\n\n            '--sendbird-light-shadow-message-input': '0 1px 5px 0 rgba(33, 34, 66, 0.12), 0 0 1px 0 rgba(33, 34, 66, 0.16), 0 2px 1px 0 rgba(33, 34, 66, 0.08), 0 1px 5px 0 rgba(0, 0, 0, 0.12)',\n          },\n          ...overrides,\n        },\n      });\n    }\n  }, [overrides]);\n};\n\nexport default useTheme;\n","import SendbirdChat from '@sendbird/chat';\nimport { CreateAction } from '../../../utils/typeHelpers/reducers/createAction';\n\nexport const SDK_ACTIONS = {\n  INIT_SDK: 'INIT_SDK',\n  SET_SDK_LOADING: 'SET_SDK_LOADING',\n  RESET_SDK: 'RESET_SDK',\n  SDK_ERROR: 'SDK_ERROR',\n} as const;\n\ntype SDK_PAYLOAD_TYPES = {\n  [SDK_ACTIONS.SET_SDK_LOADING]: boolean,\n  [SDK_ACTIONS.INIT_SDK]: SendbirdChat,\n  [SDK_ACTIONS.SDK_ERROR]: null,\n  [SDK_ACTIONS.RESET_SDK]: null,\n};\n\nexport type SdkActionTypes = CreateAction<SDK_PAYLOAD_TYPES>;\n","import SendbirdChat from '@sendbird/chat';\n\nexport interface SdkStoreStateType {\n  initialized: boolean;\n  loading: boolean;\n  sdk: SendbirdChat,\n  error: boolean;\n}\n\nconst initialState: SdkStoreStateType = {\n  initialized: false,\n  loading: false,\n  sdk: {} as SendbirdChat,\n  error: false,\n};\n\nexport default initialState;\n","import { match } from 'ts-pattern';\nimport { SdkActionTypes, SDK_ACTIONS } from './actionTypes';\nimport initialState, { SdkStoreStateType } from './initialState';\n\nexport default function reducer(state: SdkStoreStateType, action: SdkActionTypes): SdkStoreStateType {\n  return match(action)\n    .with({ type: SDK_ACTIONS.SET_SDK_LOADING }, ({ payload }) => {\n      return {\n        ...state,\n        initialized: false,\n        loading: payload,\n      };\n    })\n    .with({ type: SDK_ACTIONS.SDK_ERROR }, () => {\n      return {\n        ...state,\n        initialized: false,\n        loading: false,\n        error: true,\n      };\n    })\n    .with({ type: SDK_ACTIONS.INIT_SDK }, ({ payload }) => {\n      return {\n        sdk: payload,\n        initialized: true,\n        loading: false,\n        error: false,\n      };\n    })\n    .with({ type: SDK_ACTIONS.RESET_SDK }, () => {\n      return initialState;\n    })\n    .otherwise(() => {\n      return state;\n    });\n}\n","import { User } from '@sendbird/chat';\n\nexport interface UserStoreStateType {\n  initialized: boolean;\n  loading: boolean;\n  user: User;\n}\n\nconst initialState: UserStoreStateType = {\n  initialized: false,\n  loading: false,\n  user: {} as User,\n};\n\nexport default initialState;\n","import { match } from 'ts-pattern';\nimport { UserActionTypes, USER_ACTIONS } from './actionTypes';\nimport initialState, { UserStoreStateType } from './initialState';\n\nexport default function reducer(state: UserStoreStateType, action: UserActionTypes): UserStoreStateType {\n  return match(action)\n    .with({ type: USER_ACTIONS.INIT_USER }, ({ payload }) => {\n      return {\n        initialized: true,\n        loading: false,\n        user: payload,\n      };\n    })\n    .with({ type: USER_ACTIONS.RESET_USER }, () => {\n      return initialState;\n    })\n    .with({ type: USER_ACTIONS.UPDATE_USER_INFO }, ({ payload }) => {\n      return {\n        ...state,\n        user: payload,\n      };\n    })\n    .otherwise(() => {\n      return state;\n    });\n}\n","import { ConnectionHandler } from '@sendbird/chat';\nimport { useState, useEffect } from 'react';\n\nimport { uuidv4 } from '../../utils/uuid';\n\nfunction useConnectionStatus(sdk, logger) {\n  const [isOnline, setIsOnline] = useState(true);\n\n  useEffect(() => {\n    const uniqueHandlerId = uuidv4();\n    try {\n      logger.warning('sdk changed', uniqueHandlerId);\n      const handler = new ConnectionHandler();\n      handler.onDisconnected = () => {\n        logger.warning('onDisconnected', { isOnline });\n      };\n      handler.onReconnectStarted = () => {\n        setIsOnline(false);\n        logger.warning('onReconnectStarted', { isOnline });\n      };\n      handler.onReconnectSucceeded = () => {\n        setIsOnline(true);\n        logger.warning('onReconnectSucceeded', { isOnline });\n      };\n      handler.onReconnectFailed = () => {\n        sdk.reconnect();\n        logger.warning('onReconnectFailed');\n      };\n      logger.info('Added ConnectionHandler', uniqueHandlerId);\n      // workaround -> addConnectionHandler invalidates session handler\n      // provided through configureSession\n      if (sdk?.addConnectionHandler) {\n        sdk.addConnectionHandler(uniqueHandlerId, handler);\n      }\n    } catch {\n      //\n    }\n    return () => {\n      try {\n        sdk.removeConnectionHandler(uniqueHandlerId);\n        logger.info('Removed ConnectionHandler', uniqueHandlerId);\n      } catch {\n        //\n      }\n    };\n  }, [sdk]);\n\n  useEffect(() => {\n    const tryReconnect = () => {\n      try {\n        logger.warning('Try reconnecting SDK');\n        if (sdk.connectionState !== 'OPEN') { // connection is not broken yet\n          sdk.reconnect();\n        }\n      } catch {\n        //\n      }\n    };\n    // addEventListener version\n    window.addEventListener('online', tryReconnect);\n    return () => {\n      window.removeEventListener('online', tryReconnect);\n    };\n  }, [sdk]);\n\n  // add offline-class to body\n  useEffect(() => {\n    const body = document.querySelector('body');\n    if (!isOnline) {\n      try {\n        body.classList.add('sendbird__offline');\n        logger.info('Added class sendbird__offline to body');\n      } catch (e) {\n        //\n      }\n    } else {\n      try {\n        body.classList.remove('sendbird__offline');\n        logger.info('Removed class sendbird__offline from body');\n      } catch (e) {\n        //\n      }\n    }\n  }, [isOnline]);\n\n  return isOnline;\n}\n\nexport default useConnectionStatus;\n","import { SDK_ACTIONS } from '../../dux/sdk/actionTypes';\nimport { USER_ACTIONS } from '../../dux/user/actionTypes';\nimport { DisconnectSdkTypes } from './types';\n\nexport async function disconnectSdk({\n  sdkDispatcher,\n  userDispatcher,\n  sdk,\n}: DisconnectSdkTypes): Promise<boolean> {\n  return new Promise((resolve) => {\n    sdkDispatcher({ type: SDK_ACTIONS.SET_SDK_LOADING, payload: true });\n    if (sdk?.disconnect) {\n      sdk.disconnect()\n        .then(() => {\n          sdkDispatcher({ type: SDK_ACTIONS.RESET_SDK });\n          userDispatcher({ type: USER_ACTIONS.RESET_USER });\n        })\n        .finally(() => {\n          resolve(true);\n        });\n    } else {\n      resolve(true);\n    }\n  });\n}\n","import SendbirdChat, { SendbirdError, User } from '@sendbird/chat';\nimport { OpenChannelModule } from '@sendbird/chat/openChannel';\nimport { GroupChannelModule } from '@sendbird/chat/groupChannel';\n\nimport { SDK_ACTIONS } from '../../dux/sdk/actionTypes';\nimport { USER_ACTIONS } from '../../dux/user/actionTypes';\n\nimport { isTextuallyNull } from '../../../utils';\n\nimport { SetupConnectionTypes } from './types';\n\nconst APP_VERSION_STRING = '__react_dev_mode__';\n\nconst { INIT_SDK, SET_SDK_LOADING, RESET_SDK, SDK_ERROR } = SDK_ACTIONS;\nconst { INIT_USER, UPDATE_USER_INFO, RESET_USER } = USER_ACTIONS;\n\nexport function getMissingParamError({ userId, appId }: { userId?: string, appId?: string }): string {\n  return `SendbirdProvider | useConnect/setupConnection/Connection failed UserId: ${userId} or appId: ${appId} missing`;\n}\nexport function getConnectSbError(error?: SendbirdError): string {\n  return `SendbirdProvider | useConnect/setupConnection/Connection failed. ${error?.code || ''} ${error?.message || ''}`;\n}\n\nexport function setUpParams({\n  appId,\n  customApiHost,\n  customWebSocketHost,\n}: {\n  appId: string;\n  customApiHost?: string;\n  customWebSocketHost?: string;\n}): SendbirdChat {\n  const params = {\n    appId,\n    modules: [\n      new GroupChannelModule(),\n      new OpenChannelModule(),\n    ],\n  };\n  if (customApiHost) {\n    params['customApiHost'] = customApiHost;\n  }\n  if (customWebSocketHost) {\n    params['customWebSocketHost'] = customWebSocketHost;\n  }\n  const newSdk = SendbirdChat.init(params);\n  return newSdk;\n}\n\n// Steps\n// 1. Check if minimum userID/appID is provided\n//  1.a. If not, throw error > !reject\n//  1.b. If yes, continue\n// 2. Set up params with custom host if provided\n// 3. Set up session handler if provided\n// 4. Set up version\n// 5. Connect to Sendbird -> either using user ID or (user ID + access token)\n// 6. If connected, connectCbSucess\n//  6.a check if nickname is to be updated -> no > !resolve immediately\n//  6.b check if nickname is to be updated -> yes > update nickname > !resolve\n// 7. If not connected, connectCbError > !reject\nexport async function setUpConnection({\n  logger,\n  sdkDispatcher,\n  userDispatcher,\n  initDashboardConfigs,\n  userId,\n  appId,\n  customApiHost,\n  customWebSocketHost,\n  configureSession,\n  nickname,\n  profileUrl,\n  accessToken,\n}: SetupConnectionTypes): Promise<void> {\n  return new Promise((resolve, reject) => {\n    logger?.info?.('SendbirdProvider | useConnect/setupConnection/init', { userId, appId });\n    sdkDispatcher({ type: SET_SDK_LOADING, payload: true });\n\n    if (userId && appId) {\n      const newSdk = setUpParams({\n        appId,\n        customApiHost,\n        customWebSocketHost,\n      });\n\n      if (configureSession && typeof configureSession === 'function') {\n        const sessionHandler = configureSession(newSdk);\n        logger?.info?.('SendbirdProvider | useConnect/setupConnection/configureSession', sessionHandler);\n        newSdk.setSessionHandler(sessionHandler);\n      }\n\n      logger?.info?.('SendbirdProvider | useConnect/setupConnection/setVersion', { version: APP_VERSION_STRING });\n      newSdk.addExtension('sb_uikit', APP_VERSION_STRING);\n\n      const connectCbSucess = async (user: User) => {\n        logger?.info?.('SendbirdProvider | useConnect/setupConnection/connectCbSucess', user);\n        sdkDispatcher({ type: INIT_SDK, payload: newSdk });\n        userDispatcher({ type: INIT_USER, payload: user });\n\n        initDashboardConfigs(newSdk)\n          .then(config => {\n            logger?.info?.('SendbirdProvider | useConnect/setupConnection/getUIKitConfiguration success', {\n              config,\n            });\n          })\n          .catch(error => {\n            logger?.error?.('SendbirdProvider | useConnect/setupConnection/getUIKitConfiguration failed', {\n              error,\n            });\n          });\n\n        // use nickname/profileUrl if provided\n        // or set userID as nickname\n        if ((nickname !== user.nickname || profileUrl !== user.profileUrl)\n          && !(isTextuallyNull(nickname) && isTextuallyNull(profileUrl))\n        ) {\n          logger?.info?.('SendbirdProvider | useConnect/setupConnection/updateCurrentUserInfo', {\n            nickname,\n            profileUrl,\n          });\n          newSdk.updateCurrentUserInfo({\n            nickname: nickname || user.nickname,\n            profileUrl: profileUrl || user.profileUrl,\n          }).then((namedUser) => {\n            logger?.info?.('SendbirdProvider | useConnect/setupConnection/updateCurrentUserInfo success', {\n              nickname,\n              profileUrl,\n            });\n            userDispatcher({ type: UPDATE_USER_INFO, payload: namedUser });\n          }).finally(() => {\n            resolve();\n          });\n        } else {\n          resolve();\n        }\n      };\n\n      const connectCbError = (e: SendbirdError) => {\n        const errorMessage = getConnectSbError(e);\n        logger?.error?.(errorMessage, {\n          e,\n          appId,\n          userId,\n        });\n        sdkDispatcher({ type: RESET_SDK });\n        userDispatcher({ type: RESET_USER });\n\n        sdkDispatcher({ type: SDK_ERROR });\n        // exit promise with error\n        reject(errorMessage);\n      };\n\n      logger?.info?.(`SendbirdProvider | useConnect/setupConnection/connect connecting using ${accessToken ?? userId}`);\n      newSdk.connect(userId, accessToken)\n        .then((res) => connectCbSucess(res))\n        .catch((err) => connectCbError(err));\n    } else {\n      const errorMessage = getMissingParamError({ userId, appId });\n      sdkDispatcher({ type: SDK_ERROR });\n      logger?.error?.(errorMessage);\n      // exit promise with error\n      reject(errorMessage);\n    }\n  });\n}\n","import { disconnectSdk } from './disconnectSdk';\nimport { setUpConnection } from './setupConnection';\nimport { ConnectTypes } from './types';\n\nexport async function connect({\n  logger,\n  sdkDispatcher,\n  userDispatcher,\n  initDashboardConfigs,\n  userId,\n  appId,\n  customApiHost,\n  customWebSocketHost,\n  configureSession,\n  nickname,\n  profileUrl,\n  accessToken,\n  sdk,\n}: ConnectTypes): Promise<void> {\n  await disconnectSdk({\n    logger,\n    sdkDispatcher,\n    userDispatcher,\n    sdk,\n  });\n  await setUpConnection({\n    logger,\n    sdkDispatcher,\n    userDispatcher,\n    initDashboardConfigs,\n    userId,\n    appId,\n    customApiHost,\n    customWebSocketHost,\n    configureSession,\n    nickname,\n    profileUrl,\n    accessToken,\n  });\n}\n","import { useCallback, useEffect } from 'react';\n\nimport { ReconnectType, StaticTypes, TriggerTypes } from './types';\nimport { connect } from './connect';\n\nexport default function useConnect(triggerTypes: TriggerTypes, staticTypes: StaticTypes): ReconnectType {\n  const { userId, appId, accessToken } = triggerTypes;\n  const {\n    logger,\n    nickname,\n    profileUrl,\n    configureSession,\n    customApiHost,\n    customWebSocketHost,\n    sdk,\n    sdkDispatcher,\n    userDispatcher,\n    initDashboardConfigs,\n  } = staticTypes;\n  logger?.info?.('SendbirdProvider | useConnect', { ...triggerTypes, ...staticTypes });\n\n  useEffect(() => {\n    logger?.info?.('SendbirdProvider | useConnect/useEffect', { userId, appId, accessToken });\n    try {\n      connect({\n        userId,\n        appId,\n        accessToken,\n        logger,\n        nickname,\n        profileUrl,\n        configureSession,\n        customApiHost,\n        customWebSocketHost,\n        sdk,\n        sdkDispatcher,\n        userDispatcher,\n        initDashboardConfigs,\n      });\n    } catch (error) {\n      logger?.error?.('SendbirdProvider | useConnect/useEffect', error);\n    }\n  }, [userId, appId, accessToken]);\n  const reconnect = useCallback(() => {\n    logger?.info?.('SendbirdProvider | useConnect/reconnect/useCallback', { sdk });\n\n    try {\n      connect({\n        userId,\n        appId,\n        accessToken,\n        logger,\n        nickname,\n        profileUrl,\n        configureSession,\n        customApiHost,\n        customWebSocketHost,\n        sdk,\n        sdkDispatcher,\n        userDispatcher,\n        initDashboardConfigs,\n      });\n    } catch (error) {\n      logger?.error?.('SendbirdProvider | useConnect/reconnect/useCallback', error);\n    }\n  }, [sdk]);\n  return reconnect;\n}\n","// Logger, pretty much explains it\n// in SendbirdProvider\n\nimport { ObjectValues } from '../../utils/typeHelpers/objectValues';\n\n// const [logger, setLogger] = useState(LoggerFactory(logLevel));\nexport const LOG_LEVELS = {\n  DEBUG: 'debug',\n  WARNING: 'warning',\n  ERROR: 'error',\n  INFO: 'info',\n  ALL: 'all',\n} as const;\nexport type LogLevel = ObjectValues<typeof LOG_LEVELS>;\n\nconst colorLog = (level: LogLevel): string => {\n  switch (level) {\n    case LOG_LEVELS.WARNING:\n      return ('color: Orange');\n    case LOG_LEVELS.ERROR:\n      return ('color: Red');\n    default:\n      return ('color: Gray');\n  }\n};\n\ninterface PrintLogProps {\n  level: LogLevel;\n  title: string;\n  description?: string;\n}\nexport const printLog = ({\n  level,\n  title,\n  description = '',\n}: PrintLogProps): void => {\n  // eslint-disable-next-line no-console\n  console.log(\n    `%c SendbirdUIKit | ${level} | ${new Date().toISOString()} | ${title} ${description && '|'}`, colorLog(level), description,\n  );\n};\n\ntype LoggerLogType = (title?: string, description?: string) => void;\ninterface LoggerInterface {\n  info: LoggerLogType;\n  error: LoggerLogType;\n  warning: LoggerLogType;\n}\n\nconst noop = () => { /* noop */ };\nexport const getDefaultLogger = (): LoggerInterface => ({\n  info: noop,\n  error: noop,\n  warning: noop,\n});\n\nexport const LoggerFactory = (\n  lvl: LogLevel,\n  customInterface?: () => void,\n): LoggerInterface => {\n  const logInterface = customInterface || printLog;\n  const lvlArray: Array<LogLevel> = Array.isArray(lvl) ? lvl : [lvl];\n\n  const applyLog = (lgLvl: LogLevel) => (title?: string, description?: string) => logInterface({\n    level: lgLvl,\n    title,\n    description,\n  });\n\n  const logger = lvlArray.reduce((accumulator, currentLvl) => {\n    if (currentLvl === LOG_LEVELS.DEBUG || currentLvl === LOG_LEVELS.ALL) {\n      return ({\n        ...accumulator,\n        info: applyLog(LOG_LEVELS.INFO),\n        error: applyLog(LOG_LEVELS.ERROR),\n        warning: applyLog(LOG_LEVELS.WARNING),\n      });\n    }\n\n    if (currentLvl === LOG_LEVELS.INFO) {\n      return ({\n        ...accumulator,\n        info: applyLog(LOG_LEVELS.INFO),\n      });\n    }\n\n    if (currentLvl === LOG_LEVELS.ERROR) {\n      return ({\n        ...accumulator,\n        error: applyLog(LOG_LEVELS.ERROR),\n      });\n    }\n\n    if (currentLvl === LOG_LEVELS.WARNING) {\n      return ({\n        ...accumulator,\n        warning: applyLog(LOG_LEVELS.WARNING),\n      });\n    }\n\n    return { ...accumulator };\n  }, getDefaultLogger());\n  return logger;\n};\n\n// TODO: Make this to hook, useLogger\n","// https://davidwalsh.name/pubsub-javascript\n// we use pubsub to sync events between multiple components(example - ChannelList, Channel)\n// for example, if customer sends a message from their custom component\n// without pubsub,we would not be able to listen to it\n// in our ChannelList or Conversation\n\ninterface PubSubTypes {\n  __getTopics: () => Record<string, string>;\n  subscribe: (topic: string, listener: unknown) => { remove: () => void };\n  publish: (topic: string, info: unknown) => void;\n}\n\nconst pubSubFactory = (): PubSubTypes => {\n  const topics = {};\n  const hOP = topics.hasOwnProperty;\n\n  return {\n    __getTopics: () => topics,\n    subscribe: (topic, listener) => {\n      // Create the topic's object if not yet created\n      if (!hOP.call(topics, topic)) { topics[topic] = []; }\n\n      // Add the listener to queue\n      const index = topics[topic].push(listener) - 1;\n\n      // Provide handle back for removal of topic\n      return {\n        remove: () => {\n          delete topics[topic][index];\n        },\n      };\n    },\n    publish: (topic, info) => {\n      // If the topic doesn't exist, or there's no listeners in queue, just leave\n      if (!hOP.call(topics, topic)) { return; }\n\n      // Cycle through topics queue, fire!\n      topics[topic].forEach((item) => {\n        item(info !== undefined ? info : {});\n      });\n    },\n  };\n};\n\nexport default pubSubFactory;\n","import { useEffect } from 'react';\n\n/* eslint-disable default-param-last */\nfunction useAppendDomNode(ids = [], rootSelector) {\n  useEffect(() => {\n    const root = document.querySelector(rootSelector);\n    ids.forEach((id) => {\n      const elem = document.createElement('div');\n      elem.setAttribute('id', id);\n      root.appendChild(elem);\n    });\n    return () => {\n      ids.forEach((id) => {\n        const target = document.getElementById(id);\n        if (target) {\n          root.removeChild(target);\n        }\n      });\n    };\n  }, []);\n}\n\nexport default useAppendDomNode;\n","type CamelCase<T> = T extends object\n  ? {\n      [K in keyof T as Uncapitalize<CamelCaseKey<K & string>>]: CamelCase<T[K]>;\n    }\n  : T;\n\ntype CamelCaseKey<K extends string> = K extends `${infer A}_${infer B}`\n  ? `${Lowercase<A>}${Capitalize<CamelCaseKey<B & string>>}`\n  : K;\n\nexport function snakeToCamel<T>(obj: T): CamelCase<T> {\n  if (typeof obj !== 'object' || obj === null) {\n    return obj as CamelCase<T>;\n  }\n\n  if (Array.isArray(obj)) {\n    return obj.map((item) => snakeToCamel(item)) as CamelCase<T>;\n  }\n\n  const result = {} as CamelCase<T>;\n  Object.keys(obj).forEach((key) => {\n    const camelKey = key.replace(/_\\w/g, (m) => m[1].toUpperCase());\n    result[camelKey] = snakeToCamel(obj[key]);\n  });\n\n  return result;\n}\n","// @link https://gist.github.com/navix/6c25c15e0a2d3cd0e5bce999e0086fc9\n/* eslint-disable @typescript-eslint/ban-types */\nexport type DeepPartial<T> = T extends Function\n  ? T\n  : (T extends object ? { [P in keyof T]?: DeepPartial<T[P]>; } : T);\n\nexport function isSameType<T, U>(a: T, b: U): boolean {\n  // we do this cause typeof can't differenciate object/ array/ null\n  return Object.prototype.toString.call(a) === Object.prototype.toString.call(b);\n}\n","import { DeepPartial, isSameType } from './types';\nimport { UIKitConfigInfo } from '../types';\n\n/**\n * @param localConfigs Set directly in code level. It has higher priority than remote ones\n * @param remoteConfigs Set by Feature Config setting in Dashboard\n * @returns\n */\nexport default function getConfigsByPriority(localConfigs: DeepPartial<UIKitConfigInfo>, remoteConfigs: UIKitConfigInfo): UIKitConfigInfo {\n  const prioritizedConfigs = { ...remoteConfigs }; // copy remoteConfigs to prevent mutation\n\n  Object.keys(localConfigs).forEach(key => {\n    if (prioritizedConfigs.hasOwnProperty(key) && isSameType(localConfigs[key], prioritizedConfigs[key])) {\n      prioritizedConfigs[key] = typeof localConfigs[key] === 'object'\n        // Recursively call getConfigsByPriority only when the value of the key is Object\n        ? getConfigsByPriority(localConfigs[key], prioritizedConfigs[key])\n        : localConfigs[key];\n    }\n  });\n\n  return prioritizedConfigs;\n}\n","import { UIKitConfigInfo } from '../types';\n\n// @link: https://docs.google.com/spreadsheets/d/1-AozBMHRYOXS74vZ-7x2ptQcBL6nnM-orJWRvUgmkd4/edit#gid=0\nconst initialConfig: UIKitConfigInfo = {\n  common: {\n    enableUsingDefaultUserProfile: false,\n  },\n  groupChannel: {\n    channel: {\n      enableMention: false,\n      enableOgtag: true,\n      enableReactions: true,\n      enableTypingIndicator: true,\n      enableVoiceMessage: false,\n      input: {\n        camera: {\n          enablePhoto: true,\n          enableVideo: true,\n        },\n        enableDocument: true,\n        gallery: {\n          enablePhoto: true,\n          enableVideo: true,\n        },\n      },\n      replyType: 'quote_reply',\n      threadReplySelectType: 'thread',\n    },\n    channelList: {\n      enableMessageReceiptStatus: false,\n      enableTypingIndicator: false,\n    },\n    setting: {\n      enableMessageSearch: false,\n    },\n  },\n  openChannel: {\n    channel: {\n      enableOgtag: true,\n      input: {\n        camera: {\n          enablePhoto: true,\n          enableVideo: true,\n        },\n        enableDocument: true,\n        gallery: {\n          enablePhoto: true,\n          enableVideo: true,\n        },\n      },\n    },\n  },\n};\n\nexport default initialConfig;\n","import { UIKitConfigPayload } from '../types';\nimport mergeConfigs from '../utils/getConfigsByPriority';\nimport initialConfig from '../const/initialConfig';\n\nexport interface StorageInterface {\n  getItem(key: string): Promise<null|string>;\n  setItem(key: string, value: string): Promise<void>;\n}\n\nexport class UIKitConfigStorageManager {\n  key: string;\n\n  storage: StorageInterface;\n\n  constructor(storage: StorageInterface) {\n    this.storage = storage;\n  }\n\n  init(appId: string) {\n    this.key = `sbu@${appId}.uikitConfiguration`;\n    return this.get();\n  }\n\n  async update(payload: UIKitConfigPayload) {\n    const storedConfig = await this.get();\n    const mergedConfig = {\n      lastUpdatedAt: payload.lastUpdatedAt,\n      uikitConfigurations: mergeConfigs(payload?.uikitConfigurations, storedConfig?.uikitConfigurations),\n    };\n    await this.storage.setItem(this.key, JSON.stringify(mergedConfig));\n    return mergedConfig;\n  }\n\n  async get(): Promise<UIKitConfigPayload> {\n    const initialPayload = {\n      lastUpdatedAt: 0,\n      uikitConfigurations: initialConfig,\n    };\n    try {\n      const storedConfig = await this.storage.getItem(this.key);\n      if (storedConfig) {\n        // TODO: Validation\n        return JSON.parse(storedConfig);\n      } else {\n        return initialPayload;\n      }\n    } catch {\n      return initialPayload;\n    }\n  }\n}\n","import SendbirdChat from '@sendbird/chat';\nimport React, { useCallback, useState, createContext, useContext } from 'react';\n\nimport { snakeToCamel } from './utils/snakeToCamel';\nimport { DeepPartial } from './utils/types';\n\nimport getConfigsByPriority from './utils/getConfigsByPriority';\n\nimport { UIKitConfigInfo } from './types';\nimport initialConfig from './const/initialConfig';\nimport { UIKitConfigStorageManager, type StorageInterface } from './UIKitConfigStorageManager';\n\ninterface UIKitConfigContextInterface {\n  initDashboardConfigs: (sdk: SendbirdChat) => Promise<void>;\n  configs: UIKitConfigInfo;\n}\nconst UIKitConfigContext = createContext<UIKitConfigContextInterface>({\n  initDashboardConfigs: () => Promise.resolve(),\n  configs: initialConfig,\n});\n\ninterface UIKitConfigProviderProps {\n  // Configurations set by code level\n  localConfigs: DeepPartial<UIKitConfigInfo>;\n  children: React.ReactElement;\n  // If the storage value is not provided,\n  // it'll fetch the new configs set by dashboard everytime\n  storage?: StorageInterface;\n}\n\nconst UIKitConfigProvider = ({ storage, children, localConfigs }: UIKitConfigProviderProps) => {\n  // Set by Feature Config setting in Dashboard\n  const [remoteConfigs, setRemoteConfigs] = useState<UIKitConfigInfo>(initialConfig);\n\n  const initDashboardConfigs = useCallback(async (sdk: SendbirdChat) => {\n    try {\n      if (storage == null) {\n        const payload = await sdk.getUIKitConfiguration();\n        setRemoteConfigs(snakeToCamel(payload.json.uikit_configurations));\n        return;\n      }\n\n      // Compare the sdk uikitConfig's lastUpdatedAt <-> stored one\n      const manager = new UIKitConfigStorageManager(storage);\n      const storedConfigs = await manager.init(sdk.appId);\n\n      if (sdk.appInfo.uikitConfigInfo.lastUpdatedAt === storedConfigs.lastUpdatedAt) {\n        setRemoteConfigs(storedConfigs.uikitConfigurations);\n      } else {\n        const payload = await sdk.getUIKitConfiguration();\n        const updatedPayloed = await manager.update(snakeToCamel(payload.json));\n        setRemoteConfigs(updatedPayloed.uikitConfigurations);\n      }\n    } catch (error) {\n      //\n    }\n  }, []);\n\n  const configs = getConfigsByPriority(localConfigs, remoteConfigs);\n\n  return <UIKitConfigContext.Provider value={{\n    initDashboardConfigs,\n    configs,\n  }}>{children}</UIKitConfigContext.Provider>;\n};\n\nconst useUIKitConfig = () => useContext(UIKitConfigContext);\n\nexport { UIKitConfigProvider, useUIKitConfig };\n","import React from 'react';\nimport { VoicePlayerProvider } from '../hooks/VoicePlayer';\nimport { VoiceRecorderProvider } from '../hooks/VoiceRecorder';\n\nexport interface VoiceMessageProviderProps {\n  children: React.ReactElement;\n  isVoiceMessageEnabled?: boolean;\n}\n\nexport const VoiceMessageProvider = ({\n  children,\n  isVoiceMessageEnabled = true,\n}: VoiceMessageProviderProps): React.ReactElement => {\n  if (!isVoiceMessageEnabled) {\n    return (\n      <VoicePlayerProvider>\n        {children}\n      </VoicePlayerProvider>\n    );\n  }\n  return (\n    <VoiceRecorderProvider>\n      <VoicePlayerProvider>\n        {children}\n      </VoicePlayerProvider>\n    </VoiceRecorderProvider>\n  );\n};\n\nexport default VoiceMessageProvider;\n","import { GroupChannel } from '@sendbird/chat/groupChannel';\nimport { Logger } from '../SendbirdState';\n\nconst TIMEOUT = 2000;\n\n/*\n  * This is a factory function that returns a scheduler.\n  * The scheduler is a queue that calls the callback function on intervals.\n  * If interval is empty, the callback function is called immediately.\n  * If interval is not empty, the callback function is called after the interval.\n*/\nexport function schedulerFactory<T>({\n  logger,\n  timeout,\n  cb,\n}: {\n  logger: Logger;\n  timeout?: number;\n  cb: (item: T) => void;\n}) {\n  let queue: GroupChannel[] = [];\n  let interval: ReturnType<typeof setTimeout> | null = null;\n  const push = (channel: GroupChannel) => {\n    const channelPresent = queue.find((c) => c.url === channel.url);\n    if (!channelPresent) {\n      queue.push(channel);\n    } else {\n      logger.info('Channel: Mark as read already in queue', { channel });\n    }\n    // start the interval if it's not already running\n    if (interval) {\n      return;\n    }\n    const item = queue.shift();\n    if (item) {\n      cb(item as T);\n    }\n    interval = setInterval(() => {\n      if (queue.length === 0 && interval) {\n        clearInterval(interval);\n        interval = null;\n        return;\n      }\n      const item = queue.shift();\n      if (item) {\n        cb(item as T);\n      }\n    }, (timeout || TIMEOUT));\n  };\n  const clear = () => {\n    queue = [];\n    if (interval) {\n      clearInterval(interval);\n      interval = null;\n    }\n  };\n  return {\n    push,\n    clear,\n    getQueue: () => queue,\n  };\n}\n","import { useLayoutEffect } from 'react';\n\n// this hook accepts a callback to run component is unmounted\nexport function useUnmount(callback: () => void) {\n  useLayoutEffect(() => {\n    return () => {\n      callback();\n    };\n  }, []);\n}\n","import { useEffect, useMemo } from 'react';\nimport { GroupChannel } from '@sendbird/chat/groupChannel';\n\nimport { schedulerFactory } from './schedulerFactory';\nimport { Logger } from '../SendbirdState';\nimport { useUnmount } from '../../hooks/useUnmount';\n\nexport type MarkAsReadSchedulerType = {\n  push: (channel: GroupChannel) => void;\n  clear: () => void;\n  getQueue: () => GroupChannel[];\n};\n\ninterface DynamicParams {\n  isConnected: boolean;\n}\n\ninterface StaticParams {\n  logger: Logger;\n}\n\nexport function useMarkAsReadScheduler({\n  isConnected,\n}: DynamicParams, {\n  logger,\n}: StaticParams): MarkAsReadSchedulerType {\n  const markAsReadScheduler = useMemo(() => schedulerFactory<GroupChannel>({\n    logger,\n    cb: (channel) => {\n      try {\n        channel.markAsRead();\n      } catch (error) {\n        logger.warning('Channel: Mark as delivered failed', { channel, error });\n      }\n    },\n  }), []);\n\n  useEffect(() => {\n    // for simplicity, we clear the queue when the connection is lost\n    if (!isConnected) {\n      markAsReadScheduler.clear();\n    }\n  }, [isConnected]);\n\n  useUnmount(() => { markAsReadScheduler.clear(); });\n\n  return markAsReadScheduler;\n}\n","import { useEffect, useMemo } from 'react';\nimport { GroupChannel } from '@sendbird/chat/groupChannel';\n\nimport { schedulerFactory } from './schedulerFactory';\nimport { Logger } from '../SendbirdState';\nimport { useUnmount } from '../../hooks/useUnmount';\n\nexport type MarkAsDeliveredSchedulerType = {\n  push: (channel: GroupChannel) => void;\n  clear: () => void;\n  getQueue: () => GroupChannel[];\n};\n\ninterface DynamicParams {\n  isConnected: boolean;\n}\n\ninterface StaticParams {\n  logger: Logger;\n}\n\nexport function useMarkAsDeliveredScheduler({\n  isConnected,\n}: DynamicParams, {\n  logger,\n}: StaticParams): MarkAsDeliveredSchedulerType {\n  const markAsDeliveredScheduler = useMemo(() => schedulerFactory<GroupChannel>({\n    logger,\n    cb: (channel) => {\n      try {\n        channel.markAsDelivered();\n      } catch (error) {\n        logger.warning('Channel: Mark as delivered failed', { channel, error });\n      }\n    },\n  }), []);\n\n  useEffect(() => {\n    // for simplicity, we clear the queue when the connection is lost\n    if (!isConnected) {\n      markAsDeliveredScheduler.clear();\n    }\n  }, [isConnected]);\n\n  useUnmount(() => { markAsDeliveredScheduler.clear(); });\n\n  return markAsDeliveredScheduler;\n}\n","import './index.scss';\nimport './__experimental__typography.scss';\n\nimport React, { useEffect, useReducer, useState } from 'react';\nimport { User } from '@sendbird/chat';\n\nimport { SendbirdSdkContext } from './SendbirdSdkContext';\n\nimport useTheme from './hooks/useTheme';\n\nimport sdkReducers from './dux/sdk/reducers';\nimport userReducers from './dux/user/reducers';\n\nimport sdkInitialState from './dux/sdk/initialState';\nimport userInitialState from './dux/user/initialState';\n\nimport useOnlineStatus from './hooks/useOnlineStatus';\nimport useConnect from './hooks/useConnect';\nimport { LoggerFactory, LogLevel } from './Logger';\nimport pubSubFactory from './pubSub/index';\nimport useAppendDomNode from '../hooks/useAppendDomNode';\n\nimport { UIKitConfigProvider, useUIKitConfig } from './UIKitConfigProvider';\nimport { VoiceMessageProvider } from './VoiceMessageProvider';\nimport { LocalizationProvider } from './LocalizationContext';\nimport { MediaQueryProvider } from './MediaQueryContext';\nimport getStringSet from '../ui/Label/stringSet';\nimport { VOICE_RECORDER_DEFAULT_MAX, VOICE_RECORDER_DEFAULT_MIN } from '../utils/consts';\nimport { useMarkAsReadScheduler } from './hooks/useMarkAsReadScheduler';\nimport { ConfigureSessionTypes } from './hooks/useConnect/types';\nimport { useMarkAsDeliveredScheduler } from './hooks/useMarkAsDeliveredScheduler';\n\nexport type UserListQueryType = {\n  hasNext?: boolean;\n  next: () => Promise<Array<User>>;\n};\n\ninterface VoiceRecordOptions {\n  maxRecordingTime?: number;\n  minRecordingTime?: number;\n}\n\nexport interface ImageCompressionOptions {\n  compressionRate?: number;\n  resizingWidth?: number | string;\n  resizingHeight?: number | string;\n}\n\nexport interface SendbirdConfig {\n  logLevel?: string | Array<string>;\n  pubSub?: () => void;// TODO: Define pubSub type and apply it here\n  userMention?: {\n    maxMentionCount?: number;\n    maxSuggestionCount?: number;\n  };\n  isREMUnitEnabled?: boolean;\n}\n\ninterface CommonUIKitConfigProps {\n  replyType?: 'NONE' | 'QUOTE_REPLY' | 'THREAD';\n  isMentionEnabled?: boolean;\n  isReactionEnabled?: boolean;\n  disableUserProfile?: boolean;\n  isVoiceMessageEnabled?: boolean;\n  isTypingIndicatorEnabledOnChannelList?: boolean;\n  isMessageReceiptStatusEnabledOnChannelList?: boolean;\n}\nexport interface SendbirdProviderProps extends CommonUIKitConfigProps {\n  appId: string;\n  userId: string;\n  children: React.ReactElement;\n  accessToken?: string;\n  customApiHost?: string;\n  customWebSocketHost?: string;\n  configureSession?: ConfigureSessionTypes;\n  theme?: 'light' | 'dark';\n  config?: SendbirdConfig;\n  nickname?: string;\n  colorSet?: Record<string, string>;\n  stringSet?: Record<string, string>;\n  dateLocale?: Locale;\n  profileUrl?: string;\n  voiceRecord?: VoiceRecordOptions;\n  userListQuery?: UserListQueryType;\n  imageCompression?: ImageCompressionOptions;\n  allowProfileEdit?: boolean;\n  disableMarkAsDelivered?: boolean;\n  renderUserProfile?: () => React.ReactElement;\n  onUserProfileMessage?: () => void;\n}\n\nfunction Sendbird(props: SendbirdProviderProps) {\n  const {\n    replyType = 'NONE',\n    isMentionEnabled = false,\n    isReactionEnabled = true,\n    disableUserProfile = false,\n    isVoiceMessageEnabled = true,\n    isTypingIndicatorEnabledOnChannelList = false,\n    isMessageReceiptStatusEnabledOnChannelList = false,\n  } = props;\n\n  return (\n    <UIKitConfigProvider\n      localConfigs={{\n        common: {\n          enableUsingDefaultUserProfile: !disableUserProfile,\n        },\n        groupChannel: {\n          channel: {\n            enableReactions: isReactionEnabled,\n            enableMention: isMentionEnabled,\n            enableVoiceMessage: isVoiceMessageEnabled,\n            /**\n             * Since dashbord UIKit Configuration's replyType is consisted of all lowercase letters,\n             * we convert it from here.\n             * i.e. 'THREAD' -> 'thread'\n             */\n            replyType: replyType.toLowerCase(),\n          },\n          channelList: {\n            enableTypingIndicator: isTypingIndicatorEnabledOnChannelList,\n            enableMessageReceiptStatus: isMessageReceiptStatusEnabledOnChannelList,\n          },\n        },\n      }}\n    >\n      <SendbirdSDK {...props} />\n    </UIKitConfigProvider>\n  );\n}\nconst SendbirdSDK = ({\n  appId,\n  userId,\n  children,\n  accessToken = '',\n  customApiHost = '',\n  customWebSocketHost = '',\n  configureSession = null,\n  theme = 'light',\n  config = {},\n  nickname = '',\n  colorSet = null,\n  stringSet = null,\n  dateLocale = null,\n  profileUrl = '',\n  voiceRecord = { maxRecordingTime: VOICE_RECORDER_DEFAULT_MAX, minRecordingTime: VOICE_RECORDER_DEFAULT_MIN },\n  userListQuery = null,\n  imageCompression = {},\n  allowProfileEdit = false,\n  disableMarkAsDelivered = false,\n  renderUserProfile = null,\n  onUserProfileMessage = null,\n}: SendbirdProviderProps): React.ReactElement => {\n  const breakpoint = false;\n\n  const {\n    logLevel = '',\n    userMention = {},\n    isREMUnitEnabled = false,\n  } = config;\n  const [logger, setLogger] = useState(LoggerFactory(logLevel as LogLevel));\n  const [pubSub] = useState(pubSubFactory());\n  const [sdkStore, sdkDispatcher] = useReducer(sdkReducers, sdkInitialState);\n  const [userStore, userDispatcher] = useReducer(userReducers, userInitialState);\n\n  const { configs, initDashboardConfigs } = useUIKitConfig();\n\n  useTheme(colorSet);\n\n  const reconnect = useConnect({\n    appId,\n    userId,\n    accessToken,\n  }, {\n    logger,\n    nickname,\n    profileUrl,\n    configureSession,\n    customApiHost,\n    customWebSocketHost,\n    sdk: sdkStore?.sdk,\n    sdkDispatcher,\n    userDispatcher,\n    initDashboardConfigs,\n  });\n\n  // to create a pubsub to communicate between parent and child\n  useEffect(() => {\n    setLogger(LoggerFactory(logLevel as LogLevel));\n  }, [logLevel]);\n\n  useAppendDomNode([\n    'sendbird-modal-root',\n    'sendbird-dropdown-portal',\n    'sendbird-emoji-list-portal',\n  ], 'body');\n\n  // should move to reducer\n  const [currenttheme, setCurrenttheme] = useState(theme);\n  useEffect(() => {\n    setCurrenttheme(theme);\n  }, [theme]);\n\n  useEffect(() => {\n    const body = document.querySelector('body');\n    body.classList.remove('sendbird-experimental__rem__units');\n    if (isREMUnitEnabled) {\n      body.classList.add('sendbird-experimental__rem__units');\n    }\n  }, [isREMUnitEnabled]);\n  // add-remove theme from body\n  useEffect(() => {\n    logger.info('Setup theme', `Theme: ${currenttheme}`);\n    try {\n      const body = document.querySelector('body');\n      body.classList.remove('sendbird-theme--light');\n      body.classList.remove('sendbird-theme--dark');\n      body.classList.add(`sendbird-theme--${currenttheme || 'light'}`);\n      logger.info('Finish setup theme');\n      // eslint-disable-next-line no-empty\n    } catch (e) {\n      logger.warning('Setup theme failed', `${e}`);\n    }\n    return () => {\n      try {\n        const body = document.querySelector('body');\n        body.classList.remove('sendbird-theme--light');\n        body.classList.remove('sendbird-theme--dark');\n        // eslint-disable-next-line no-empty\n      } catch { }\n    };\n  }, [currenttheme]);\n\n  const isOnline = useOnlineStatus(sdkStore.sdk, logger);\n\n  const markAsReadScheduler = useMarkAsReadScheduler({ isConnected: isOnline }, { logger });\n  const markAsDeliveredScheduler = useMarkAsDeliveredScheduler({ isConnected: isOnline }, { logger });\n\n  const localeStringSet = React.useMemo(() => {\n    if (!stringSet) {\n      return getStringSet('en');\n    }\n    return {\n      ...getStringSet('en'),\n      ...stringSet,\n    };\n  }, [stringSet]);\n\n  return (\n    <SendbirdSdkContext.Provider\n      value={{\n        stores: {\n          sdkStore,\n          userStore,\n        },\n        dispatchers: {\n          sdkDispatcher,\n          userDispatcher,\n          reconnect,\n        },\n        config: {\n          disableMarkAsDelivered,\n          renderUserProfile,\n          onUserProfileMessage,\n          allowProfileEdit,\n          isOnline,\n          userId,\n          appId,\n          accessToken,\n          theme: currenttheme,\n          setCurrenttheme,\n          userListQuery,\n          logger,\n          pubSub,\n          imageCompression: {\n            compressionRate: 0.7,\n            ...imageCompression,\n          },\n          voiceRecord,\n          userMention: {\n            maxMentionCount: userMention?.maxMentionCount || 10,\n            maxSuggestionCount: userMention?.maxSuggestionCount || 15,\n          },\n          markAsReadScheduler,\n          markAsDeliveredScheduler,\n          // From UIKitConfigProvider.localConfigs\n          disableUserProfile:\n            !configs.common.enableUsingDefaultUserProfile,\n          isReactionEnabled:\n            configs.groupChannel.channel.enableReactions,\n          isMentionEnabled:\n            configs.groupChannel.channel.enableMention,\n          isVoiceMessageEnabled:\n            configs.groupChannel.channel.enableVoiceMessage,\n          replyType:\n            /**\n             * Since UIKitConfigContext's replyType is consisted of all lowercase letters,\n             * we need to convert it into all uppercase ones like\n             *  - 'thread' -> 'THREAD'\n             *  - 'quote_reply' -> 'QUOTE_REPLY'\n             */\n            configs.groupChannel.channel.replyType.toUpperCase(),\n          isTypingIndicatorEnabledOnChannelList:\n            configs.groupChannel.channelList.enableTypingIndicator,\n          isMessageReceiptStatusEnabledOnChannelList:\n            configs.groupChannel.channelList.enableMessageReceiptStatus,\n          // TODO(Ahyoung): add more configs from UIKitConfigProvider.remoteConfigs\n        },\n      }}\n    >\n      <MediaQueryProvider logger={logger} breakpoint={breakpoint}>\n        <LocalizationProvider stringSet={localeStringSet} dateLocale={dateLocale}>\n          <VoiceMessageProvider isVoiceMessageEnabled={configs.groupChannel.channel.enableVoiceMessage}>\n            {children}\n          </VoiceMessageProvider>\n        </LocalizationProvider>\n      </MediaQueryProvider>\n    </SendbirdSdkContext.Provider>\n  );\n};\n\nexport default Sendbird;\n"]},"metadata":{},"sourceType":"module"}