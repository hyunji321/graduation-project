{"ast":null,"code":"import React__default, { useMemo } from 'react';\nimport Avatar from './Avatar.js';\nimport Icon, { IconTypes, IconColors } from './Icon.js';\nimport { g as generateDefaultAvatar, a as getChannelAvatarSource } from '../utils-d86ad6ab.js';\nimport './ImageRenderer.js';\nimport '../uuid-1adedf62.js';\nimport 'prop-types';\nfunction ChannelAvatar(_ref) {\n  let {\n    channel,\n    userId,\n    theme,\n    width = 56,\n    height = 56\n  } = _ref;\n  const isBroadcast = channel === null || channel === void 0 ? void 0 : channel.isBroadcast;\n  const memoizedAvatar = useMemo(() => isBroadcast ? generateDefaultAvatar(channel) ? /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-chat-header--default-avatar\",\n    style: {\n      width,\n      height,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    type: IconTypes.BROADCAST,\n    fillColor: IconColors.CONTENT,\n    width: width * 0.575,\n    height: height * 0.575\n  })) : /*#__PURE__*/React__default.createElement(Avatar, {\n    className: \"sendbird-chat-header--avatar--broadcast-channel\",\n    src: getChannelAvatarSource(channel, userId),\n    width: width,\n    height: height,\n    alt: channel === null || channel === void 0 ? void 0 : channel.name\n  }) : /*#__PURE__*/React__default.createElement(Avatar, {\n    className: \"sendbird-chat-header--avatar--group-channel\",\n    src: getChannelAvatarSource(channel, userId),\n    width: `${width}px`,\n    height: `${height}px`,\n    alt: channel === null || channel === void 0 ? void 0 : channel.name\n  }), [channel === null || channel === void 0 ? void 0 : channel.members, channel === null || channel === void 0 ? void 0 : channel.coverUrl, theme]);\n  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, memoizedAvatar);\n}\nexport { ChannelAvatar as default };","map":{"version":3,"mappings":";;;;;;;AAkBA,SAASA,aAAaA,OAMC;EAAA,IANA;IACrBC,OAAO;IACPC,MAAM;IACNC,KAAK;IACLC,KAAK,GAAG,EAAE;IACVC,MAAM,GAAG;EACJ,CAAC;EACN,MAAMC,WAAW,GAAGL,OAAO,aAAPA,OAAO,KAAPA,yBAAO,CAAEK,WAAW;EACxC,MAAMC,cAAc,GAAGC,OAAO,CAAC,MAC7BF,WAAW,GAEPG,qBAA2B,CAACR,OAAO,CAAC,gBAEhCS;IACEC,SAAS,EAAC,sCAAsC;IAChDC,KAAK,EAAE;MACLR,KAAK;MACLC,MAAM;MACNQ,OAAO,EAAE,MAAM;MACfC,cAAc,EAAE,QAAQ;MACxBC,UAAU,EAAE;IACd;EAAE,gBAEFL,6BAACM,IAAI;IACHC,IAAI,EAAEC,SAAS,CAACC,SAAU;IAC1BC,SAAS,EAAEC,UAAU,CAACC,OAAQ;IAC9BlB,KAAK,EAAEA,KAAK,GAAG,KAAM;IACrBC,MAAM,EAAEA,MAAM,GAAG;EAAM,EACvB,CACE,gBAGNK,6BAACa,MAAM;IACLZ,SAAS,EAAC,iDAAiD;IAC3Da,GAAG,EAAEf,sBAA4B,CAACR,OAAO,EAAEC,MAAM,CAAE;IACnDE,KAAK,EAAEA,KAAM;IACbC,MAAM,EAAEA,MAAO;IACfoB,GAAG,EAAExB,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEyB;EAAK,EAEtB,gBAGHhB,6BAACa,MAAM;IACLZ,SAAS,EAAC,6CAA6C;IACvDa,GAAG,EAAEf,sBAA4B,CAACR,OAAO,EAAEC,MAAM,CAAE;IACnDE,KAAK,EAAKA,QAAU;IACpBC,MAAM,EAAKA,SAAW;IACtBoB,GAAG,EAAExB,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEyB;GAGrB,GAAE,CAACzB,OAAO,aAAPA,OAAO,KAAPA,yBAAO,CAAE0B,OAAO,EAAE1B,OAAO,KAAPA,eAAO,uBAAPA,OAAO,CAAE2B,QAAQ,EAAEzB,KAAK,CAAC,CAAC;EAChD,oBACEO,sDAAIH,oBAAc,CAAK;AAE3B","names":["ChannelAvatar","channel","userId","theme","width","height","isBroadcast","memoizedAvatar","useMemo","utils","React","className","style","display","justifyContent","alignItems","Icon","type","IconTypes","BROADCAST","fillColor","IconColors","CONTENT","Avatar","src","alt","name","members","coverUrl"],"sources":["C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\ui\\ChannelAvatar\\index.tsx"],"sourcesContent":["import './index.scss';\nimport React, { useMemo } from 'react';\n\nimport type { GroupChannel } from '@sendbird/chat/groupChannel';\n\nimport Avatar from '../Avatar/index';\nimport Icon, { IconTypes, IconColors } from '../Icon';\n\nimport * as utils from './utils';\n\ninterface Props {\n  channel: GroupChannel;\n  userId: string;\n  theme: string;\n  width?: number,\n  height?: number,\n}\n\nfunction ChannelAvatar({\n  channel,\n  userId,\n  theme,\n  width = 56,\n  height = 56,\n}: Props): JSX.Element {\n  const isBroadcast = channel?.isBroadcast;\n  const memoizedAvatar = useMemo(() => (\n    isBroadcast\n      ? (\n        utils.generateDefaultAvatar(channel)\n          ? (\n            <div\n              className=\"sendbird-chat-header--default-avatar\"\n              style={{\n                width,\n                height,\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}\n            >\n              <Icon\n                type={IconTypes.BROADCAST}\n                fillColor={IconColors.CONTENT}\n                width={width * 0.575}\n                height={height * 0.575}\n              />\n            </div>\n          )\n          : (\n            <Avatar\n              className=\"sendbird-chat-header--avatar--broadcast-channel\"\n              src={utils.getChannelAvatarSource(channel, userId)}\n              width={width}\n              height={height}\n              alt={channel?.name}\n            />\n          )\n      )\n      : (\n        <Avatar\n          className=\"sendbird-chat-header--avatar--group-channel\"\n          src={utils.getChannelAvatarSource(channel, userId)}\n          width={`${width}px`}\n          height={`${height}px`}\n          alt={channel?.name}\n        />\n      )\n  ), [channel?.members, channel?.coverUrl, theme]);\n  return (\n    <>{ memoizedAvatar }</>\n  );\n}\n\nexport default ChannelAvatar;\n"]},"metadata":{},"sourceType":"module"}