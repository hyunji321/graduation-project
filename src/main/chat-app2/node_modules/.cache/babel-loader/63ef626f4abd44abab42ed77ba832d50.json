{"ast":null,"code":"import React__default from 'react';\n\n// todo@v4.0.0: combine with the provider in core-ts, see:\nconst defaultValue = {\n  message: {},\n  isByMe: false\n};\nconst MessageContext = /*#__PURE__*/React__default.createContext(defaultValue);\nconst MessageProvider = props => {\n  const {\n    children,\n    message,\n    isByMe = false\n  } = props;\n  return /*#__PURE__*/React__default.createElement(MessageContext.Provider, {\n    value: {\n      message,\n      isByMe\n    }\n  }, children);\n};\nconst useMessageContext = () => {\n  const value = React__default.useContext(MessageContext);\n  if (value === undefined) {\n    throw new Error('useMessageContext must be used within a MessageProvider');\n  }\n  return value;\n};\nexport { MessageProvider, useMessageContext };","map":{"version":3,"mappings":";;AAAA;AAcA,MAAMA,YAAY,GAAG;EACnBC,OAAO,EAAE,EAAiB;EAC1BC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,cAAc,gBAAGC,cAAK,CAACC,aAAa,CAA2BL,YAAY,CAAC;AAE5EM,qBAA+C,GAAIC,KAAK,IAAK;EACjE,MAAM;IACJC,QAAQ;IACRP,OAAO;IACPC,MAAM,GAAG;EACX,CAAC,GAAGK,KAAK;EAET,oBACEH,6BAACD,cAAc,CAACM,QAAQ;IAACC,KAAK,EAAE;MAC9BT,OAAO;MACPC;IACF;EAAE,GACCM,QAAQ,CACe;AAE9B;AAEMG,uBAAiB,GAAGA,MAAgC;EACxD,MAAMD,KAAK,GAAGN,cAAK,CAACQ,UAAU,CAACT,cAAc,CAAC;EAC9C,IAAIO,KAAK,KAAKG,SAAS,EAAE;IACvB,MAAM,IAAIC,KAAK,CAAC,yDAAyD,CAAC;EAC5E;EACA,OAAOJ,KAAK;AACd","names":["defaultValue","message","isByMe","MessageContext","React","createContext","MessageProvider","props","children","Provider","value","useMessageContext","useContext","undefined","Error"],"sources":["C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\modules\\Message\\context\\MessageProvider.tsx"],"sourcesContent":["// todo@v4.0.0: combine with the provider in core-ts, see:\n// https://github.com/sendbird/sendbird-uikit-core-ts\n// packages/react-uikit-message-template-view/src/context/MessageContextProvider.tsx\nimport React from 'react';\nimport { BaseMessage } from '@sendbird/chat/message';\n\nexport type MessageProviderProps = {\n  children: React.ReactNode;\n  message: BaseMessage;\n  isByMe?: boolean;\n};\n\nexport type MessageProviderInterface = Omit<MessageProviderProps, 'children'>;\n\nconst defaultValue = {\n  message: {} as BaseMessage,\n  isByMe: false,\n};\n\nconst MessageContext = React.createContext<MessageProviderInterface>(defaultValue);\n\nconst MessageProvider: React.FC<MessageProviderProps> = (props) => {\n  const {\n    children,\n    message,\n    isByMe = false,\n  } = props;\n\n  return (\n    <MessageContext.Provider value={{\n      message,\n      isByMe,\n    }}>\n      {children}\n    </MessageContext.Provider>\n  );\n};\n\nconst useMessageContext = (): MessageProviderInterface => {\n  const value = React.useContext(MessageContext);\n  if (value === undefined) {\n    throw new Error('useMessageContext must be used within a MessageProvider');\n  }\n  return value;\n};\n\nexport {\n  MessageProvider,\n  useMessageContext,\n};\n"]},"metadata":{},"sourceType":"module"}