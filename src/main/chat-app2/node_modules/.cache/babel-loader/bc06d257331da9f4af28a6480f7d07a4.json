{"ast":null,"code":"import _slicedToArray from \"C:/Users/\\uC774\\uACBD\\uBBFC/IdeaProjects/sendbird-uikit-whatsapp-sample/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport React__default, { useState, useEffect } from 'react';\nvar DEFAULT_MOBILE = false;\n// const DEFAULT_MOBILE = '768px';\nvar MOBILE_CLASSNAME = 'sendbird--mobile-mode';\nvar MediaQueryContext = /*#__PURE__*/React__default.createContext({\n  breakpoint: DEFAULT_MOBILE,\n  isMobile: false\n});\nvar addClassNameToBody = function addClassNameToBody() {\n  try {\n    var body = document.querySelector('body');\n    body === null || body === void 0 ? void 0 : body.classList.add(MOBILE_CLASSNAME);\n  } catch (_unused) {\n    // noop\n  }\n};\nvar removeClassNameFromBody = function removeClassNameFromBody() {\n  try {\n    var body = document.querySelector('body');\n    body === null || body === void 0 ? void 0 : body.classList.remove(MOBILE_CLASSNAME);\n  } catch (_unused2) {\n    // noop\n  }\n};\nvar MediaQueryProvider = function MediaQueryProvider(props) {\n  var children = props.children,\n    logger = props.logger;\n  var breakpoint = (props === null || props === void 0 ? void 0 : props.breakpoint) || DEFAULT_MOBILE;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isMobile = _useState2[0],\n    setIsMobile = _useState2[1];\n  useEffect(function () {\n    var _logger$info6;\n    var updateSize = function updateSize() {\n      if (typeof breakpoint === 'boolean') {\n        setIsMobile(breakpoint);\n        if (breakpoint) {\n          var _logger$info;\n          logger === null || logger === void 0 ? void 0 : (_logger$info = logger.info) === null || _logger$info === void 0 ? void 0 : _logger$info.call(logger, 'MediaQueryProvider: isMobile: true');\n          addClassNameToBody();\n        } else {\n          var _logger$info2;\n          logger === null || logger === void 0 ? void 0 : (_logger$info2 = logger.info) === null || _logger$info2 === void 0 ? void 0 : _logger$info2.call(logger, 'MediaQueryProvider: isMobile: false');\n          removeClassNameFromBody();\n        }\n      } else {\n        var _logger$info3;\n        var mq = window.matchMedia(\"(max-width: \".concat(breakpoint, \")\"));\n        logger === null || logger === void 0 ? void 0 : (_logger$info3 = logger.info) === null || _logger$info3 === void 0 ? void 0 : _logger$info3.call(logger, \"MediaQueryProvider: Screensize updated to \".concat(breakpoint));\n        if (mq.matches) {\n          var _logger$info4;\n          setIsMobile(true);\n          addClassNameToBody();\n          logger === null || logger === void 0 ? void 0 : (_logger$info4 = logger.info) === null || _logger$info4 === void 0 ? void 0 : _logger$info4.call(logger, 'MediaQueryProvider: isMobile: true');\n        } else {\n          var _logger$info5;\n          setIsMobile(false);\n          removeClassNameFromBody();\n          logger === null || logger === void 0 ? void 0 : (_logger$info5 = logger.info) === null || _logger$info5 === void 0 ? void 0 : _logger$info5.call(logger, 'MediaQueryProvider: isMobile: false');\n        }\n      }\n    };\n    updateSize();\n    window.addEventListener('resize', updateSize);\n    logger === null || logger === void 0 ? void 0 : (_logger$info6 = logger.info) === null || _logger$info6 === void 0 ? void 0 : _logger$info6.call(logger, 'MediaQueryProvider: addEventListener', {\n      updateSize: updateSize\n    });\n    return function () {\n      var _logger$info7;\n      window.removeEventListener('resize', updateSize);\n      logger === null || logger === void 0 ? void 0 : (_logger$info7 = logger.info) === null || _logger$info7 === void 0 ? void 0 : _logger$info7.call(logger, 'MediaQueryProvider: removeEventListener', {\n        updateSize: updateSize\n      });\n    };\n  }, [breakpoint]);\n  return /*#__PURE__*/React__default.createElement(MediaQueryContext.Provider, {\n    value: {\n      breakpoint: breakpoint,\n      isMobile: isMobile\n    }\n  }, children);\n};\nvar useMediaQueryContext = function useMediaQueryContext() {\n  return React__default.useContext(MediaQueryContext);\n};\nexport { MediaQueryProvider as M, useMediaQueryContext as u };","map":{"version":3,"mappings":"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","names":["DEFAULT_MOBILE","MOBILE_CLASSNAME","MediaQueryContext","React","createContext","breakpoint","isMobile","addClassNameToBody","body","document","querySelector","classList","add","removeClassNameFromBody","remove","MediaQueryProvider","props","children","logger","useState","setIsMobile","useEffect","updateSize","info","_logger$info","_logger$info2","mq","window","matchMedia","_logger$info3","matches","_logger$info4","_logger$info5","addEventListener","_logger$info6","removeEventListener","_logger$info7","Provider","value","useMediaQueryContext","useContext"],"sources":["C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\lib\\MediaQueryContext.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport type { Logger } from './SendbirdState';\n\nconst DEFAULT_MOBILE = false;\n// const DEFAULT_MOBILE = '768px';\nconst MOBILE_CLASSNAME = 'sendbird--mobile-mode';\n\nconst MediaQueryContext = React.createContext({\n  breakpoint: DEFAULT_MOBILE,\n  isMobile: false,\n});\n\nexport interface MediaQueryProviderProps {\n  children: React.ReactElement;\n  breakpoint?: string | boolean;\n  logger?: Logger;\n}\n\nconst addClassNameToBody = () => {\n  try {\n    const body = document.querySelector('body');\n    body?.classList.add(MOBILE_CLASSNAME);\n  } catch {\n    // noop\n  }\n};\n\nconst removeClassNameFromBody = () => {\n  try {\n    const body = document.querySelector('body');\n    body?.classList.remove(MOBILE_CLASSNAME);\n  } catch {\n    // noop\n  }\n};\n\nconst MediaQueryProvider = (props: MediaQueryProviderProps): React.ReactElement => {\n  const {\n    children,\n    logger,\n  } = props;\n  const breakpoint = props?.breakpoint || DEFAULT_MOBILE;\n  const [isMobile, setIsMobile] = useState(false);\n  useEffect(() => {\n    const updateSize = () => {\n      if (typeof breakpoint === 'boolean') {\n        setIsMobile(breakpoint);\n        if (breakpoint) {\n          logger?.info?.('MediaQueryProvider: isMobile: true');\n          addClassNameToBody();\n        } else {\n          logger?.info?.('MediaQueryProvider: isMobile: false');\n          removeClassNameFromBody();\n        }\n      } else {\n        const mq = window.matchMedia(`(max-width: ${breakpoint})`);\n        logger?.info?.(`MediaQueryProvider: Screensize updated to ${breakpoint}`);\n        if (mq.matches) {\n          setIsMobile(true);\n          addClassNameToBody();\n          logger?.info?.('MediaQueryProvider: isMobile: true');\n        } else {\n          setIsMobile(false);\n          removeClassNameFromBody();\n          logger?.info?.('MediaQueryProvider: isMobile: false');\n        }\n      }\n    };\n    updateSize();\n    window.addEventListener('resize', updateSize);\n    logger?.info?.('MediaQueryProvider: addEventListener', { updateSize });\n    return () => {\n      window.removeEventListener('resize', updateSize);\n      logger?.info?.('MediaQueryProvider: removeEventListener', { updateSize });\n    };\n  }, [breakpoint]);\n  return (\n    <MediaQueryContext.Provider value={{ breakpoint, isMobile }}>\n      {children}\n    </MediaQueryContext.Provider>\n  );\n};\n\nexport type useMediaQueryContextType = () => ({\n  breakpoint: string | boolean;\n  isMobile: boolean;\n});\n\nconst useMediaQueryContext: useMediaQueryContextType = () => React.useContext(MediaQueryContext);\n\nexport { MediaQueryProvider, useMediaQueryContext };\n"]},"metadata":{},"sourceType":"module"}