{"ast":null,"code":"import _slicedToArray from \"C:/Users/\\uC774\\uACBD\\uBBFC/IdeaProjects/sendbird-uikit-whatsapp-sample/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useState, useEffect, useCallback } from 'react';\nimport { useVoiceRecorderContext } from './context.js';\nimport useSendbirdStateContext from '../useSendbirdStateContext.js';\nimport '../consts-95d8566e.js';\nimport '../withSendbird.js';\nimport '../_rollupPluginBabelHelpers-6bb0305c.js';\n\n// export interface UseVoiceRecorderProps extends VoiceRecorderEventHandler {\n//   /**\n//    * onRecordingStarted\n//    * onRecordingEnded\n//    */\n// }\n/* eslint-disable no-redeclare */\nvar VoiceRecorderStatus = {\n  PREPARING: 'PREPARING',\n  READY_TO_RECORD: 'READY_TO_RECORD',\n  RECORDING: 'RECORDING',\n  COMPLETED: 'COMPLETED'\n};\nvar noop = function noop() {/* noop */};\nvar useVoiceRecorder = function useVoiceRecorder(_ref) {\n  var _ref$onRecordingStart = _ref.onRecordingStarted,\n    _onRecordingStarted = _ref$onRecordingStart === void 0 ? noop : _ref$onRecordingStart,\n    _ref$onRecordingEnded = _ref.onRecordingEnded,\n    _onRecordingEnded = _ref$onRecordingEnded === void 0 ? noop : _ref$onRecordingEnded;\n  var _useSendbirdStateCont = useSendbirdStateContext(),\n    config = _useSendbirdStateCont.config;\n  var voiceRecord = config.voiceRecord;\n  var maxRecordingTime = voiceRecord.maxRecordingTime;\n  var voiceRecorder = useVoiceRecorderContext();\n  var isRecordable = voiceRecorder.isRecordable;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    recordedFile = _useState2[0],\n    setRecordedFile = _useState2[1];\n  var _useState3 = useState(VoiceRecorderStatus.PREPARING),\n    _useState4 = _slicedToArray(_useState3, 2),\n    recordingStatus = _useState4[0],\n    setRecordingStatus = _useState4[1];\n  useEffect(function () {\n    if (isRecordable && recordingStatus === VoiceRecorderStatus.PREPARING) {\n      setRecordingStatus(VoiceRecorderStatus.READY_TO_RECORD);\n    }\n  }, [isRecordable]);\n  var start = useCallback(function () {\n    voiceRecorder === null || voiceRecorder === void 0 ? void 0 : voiceRecorder.start({\n      onRecordingStarted: function onRecordingStarted() {\n        setRecordingStatus(VoiceRecorderStatus.RECORDING);\n        _onRecordingStarted();\n        startTimer();\n      },\n      onRecordingEnded: function onRecordingEnded(audioFile) {\n        setRecordingStatus(VoiceRecorderStatus.COMPLETED);\n        _onRecordingEnded(audioFile);\n        setRecordedFile(audioFile);\n        stopTimer();\n      }\n    });\n  }, [_onRecordingStarted, _onRecordingEnded]);\n  var stop = useCallback(function () {\n    voiceRecorder === null || voiceRecorder === void 0 ? void 0 : voiceRecorder.stop();\n    stopTimer();\n  }, [voiceRecorder]);\n  var cancel = useCallback(function () {\n    stop();\n    setRecordedFile(null);\n  }, [voiceRecorder]);\n\n  // Timer\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    recordingTime = _useState6[0],\n    setRecordingTime = _useState6[1];\n  var timer = null;\n  function startTimer() {\n    stopTimer();\n    setRecordingTime(0);\n    var interval = setInterval(function () {\n      setRecordingTime(function (prevTime) {\n        var newTime = prevTime + 100;\n        if (newTime > maxRecordingTime) {\n          stopTimer();\n        }\n        return newTime;\n      });\n    }, 100);\n    timer = interval;\n  }\n  function stopTimer() {\n    clearInterval(timer);\n    timer = null;\n  }\n  useEffect(function () {\n    if (recordingTime > maxRecordingTime) {\n      stop();\n    }\n  }, [recordingTime, maxRecordingTime, stop]);\n  return {\n    start: start,\n    stop: stop,\n    cancel: cancel,\n    recordingStatus: recordingStatus,\n    recordingTime: recordingTime,\n    recordedFile: recordedFile,\n    recordingLimit: maxRecordingTime\n  };\n};\nexport { VoiceRecorderStatus, useVoiceRecorder };","map":{"version":3,"mappings":"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","names":["VoiceRecorderStatus","PREPARING","READY_TO_RECORD","RECORDING","COMPLETED","noop","useVoiceRecorder","_ref","onRecordingStarted","onRecordingEnded","useSendbirdStateContext","config","voiceRecord","maxRecordingTime","voiceRecorder","useVoiceRecorderContext","isRecordable","useState","recordedFile","setRecordedFile","recordingStatus","setRecordingStatus","useEffect","start","useCallback","startTimer","audioFile","stopTimer","stop","cancel","recordingTime","setRecordingTime","timer","interval","setInterval","prevTime","newTime","clearInterval","recordingLimit"],"sources":["C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\hooks\\VoiceRecorder\\useVoiceRecorder.tsx"],"sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport { VoiceRecorderEventHandler, useVoiceRecorderContext } from '.';\nimport useSendbirdStateContext from '../useSendbirdStateContext';\n\n// export interface UseVoiceRecorderProps extends VoiceRecorderEventHandler {\n//   /**\n//    * onRecordingStarted\n//    * onRecordingEnded\n//    */\n// }\n/* eslint-disable no-redeclare */\nexport const VoiceRecorderStatus = {\n  PREPARING: 'PREPARING',\n  READY_TO_RECORD: 'READY_TO_RECORD',\n  RECORDING: 'RECORDING',\n  COMPLETED: 'COMPLETED',\n} as const;\nexport type VoiceRecorderStatus = typeof VoiceRecorderStatus[keyof typeof VoiceRecorderStatus];\nexport interface UseVoiceRecorderContext {\n  start: () => void;\n  stop: () => void;\n  cancel: () => void;\n  recordingLimit: number;\n  recordingTime: number;\n  recordedFile: File;\n  recordingStatus: VoiceRecorderStatus;\n}\n\nconst noop = () => { /* noop */ };\n\nexport const useVoiceRecorder = ({\n  onRecordingStarted = noop,\n  onRecordingEnded = noop,\n}: VoiceRecorderEventHandler): UseVoiceRecorderContext => {\n  const { config } = useSendbirdStateContext();\n  const { voiceRecord } = config;\n  const { maxRecordingTime } = voiceRecord;\n  const voiceRecorder = useVoiceRecorderContext();\n  const { isRecordable } = voiceRecorder;\n\n  const [recordedFile, setRecordedFile] = useState<File>(null);\n  const [recordingStatus, setRecordingStatus] = useState<VoiceRecorderStatus>(VoiceRecorderStatus.PREPARING);\n  useEffect(() => {\n    if (isRecordable && recordingStatus === VoiceRecorderStatus.PREPARING) {\n      setRecordingStatus(VoiceRecorderStatus.READY_TO_RECORD);\n    }\n  }, [isRecordable]);\n\n  const start = useCallback(() => {\n    voiceRecorder?.start({\n      onRecordingStarted: () => {\n        setRecordingStatus(VoiceRecorderStatus.RECORDING);\n        onRecordingStarted();\n        startTimer();\n      },\n      onRecordingEnded: (audioFile) => {\n        setRecordingStatus(VoiceRecorderStatus.COMPLETED);\n        onRecordingEnded(audioFile);\n        setRecordedFile(audioFile);\n        stopTimer();\n      },\n    });\n  }, [onRecordingStarted, onRecordingEnded]);\n  const stop = useCallback(() => {\n    voiceRecorder?.stop();\n    stopTimer();\n  }, [voiceRecorder]);\n  const cancel = useCallback(() => {\n    stop();\n    setRecordedFile(null);\n  }, [voiceRecorder]);\n\n  // Timer\n  const [recordingTime, setRecordingTime] = useState<number>(0);\n  let timer: ReturnType<typeof setInterval> = null;\n  function startTimer() {\n    stopTimer();\n    setRecordingTime(0);\n    const interval = setInterval(() => {\n      setRecordingTime(prevTime => {\n        const newTime = prevTime + 100;\n        if (newTime > maxRecordingTime) {\n          stopTimer();\n        }\n        return newTime;\n      });\n    }, 100);\n    timer = interval;\n  }\n  function stopTimer() {\n    clearInterval(timer);\n    timer = null;\n  }\n  useEffect(() => {\n    if (recordingTime > maxRecordingTime) {\n      stop();\n    }\n  }, [recordingTime, maxRecordingTime, stop]);\n\n  return ({\n    start,\n    stop,\n    cancel,\n    recordingStatus,\n    recordingTime,\n    recordedFile,\n    recordingLimit: maxRecordingTime,\n  });\n};\n"]},"metadata":{},"sourceType":"module"}