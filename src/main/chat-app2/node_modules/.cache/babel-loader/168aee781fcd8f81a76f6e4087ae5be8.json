{"ast":null,"code":"import React__default, { useContext, useState } from 'react';\nimport Icon, { IconTypes, IconColors } from './Icon.js';\nimport { L as Label, a as LabelTypography, b as LabelColors } from '../index-63949de5.js';\nimport ImageRenderer from './ImageRenderer.js';\nimport { a as LocalizationContext } from '../LocalizationContext-076d6d2e.js';\nimport { M as getUIKitFileTypes, h as getClassName, q as isUserMessage, d as isVoiceMessage, m as isThumbnailMessage, y as isVideo, N as isGif, r as getUIKitMessageType, U as UIKitMessageTypes, L as getUIKitFileType, t as truncateString } from '../index-7eb65acf.js';\nimport 'prop-types';\nimport '../stringSet-13bbd4a2.js';\nimport '../index-99aabd9e.js';\nimport '../_rollupPluginBabelHelpers-6bb0305c.js';\nimport '../utils/message/getOutgoingMessageState.js';\nfunction QuoteMessage(_ref) {\n  var _message$sender, _message$sender2, _message, _thumbnails;\n  let {\n    message,\n    userId = '',\n    isByMe = false,\n    className,\n    isUnavailable = false,\n    onClick\n  } = _ref;\n  const {\n    stringSet\n  } = useContext(LocalizationContext);\n  const {\n    parentMessage\n  } = message;\n  const parentMessageSender = parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.sender;\n  const parentMessageSenderNickname = userId === (parentMessageSender === null || parentMessageSender === void 0 ? void 0 : parentMessageSender.userId) ? stringSet.QUOTED_MESSAGE__CURRENT_USER : parentMessageSender === null || parentMessageSender === void 0 ? void 0 : parentMessageSender.nickname;\n  const parentMessageUrl = (parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.url) || '';\n  const parentMessageType = parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.type;\n  const currentMessageSenderNickname = userId === (message === null || message === void 0 ? void 0 : (_message$sender = message.sender) === null || _message$sender === void 0 ? void 0 : _message$sender.userId) ? stringSet.QUOTED_MESSAGE__CURRENT_USER : message === null || message === void 0 ? void 0 : (_message$sender2 = message.sender) === null || _message$sender2 === void 0 ? void 0 : _message$sender2.nickname;\n  const [isThumbnailLoaded, setThumbnailLoaded] = useState(false);\n  const uikitFileTypes = getUIKitFileTypes();\n  const splitFileName = parentMessage !== null && parentMessage !== void 0 && parentMessage.name ? parentMessage.name.split('/') : parentMessageUrl.split('/');\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: getClassName([className, 'sendbird-quote-message', isByMe ? 'outgoing' : 'incoming', isUnavailable ? 'unavailable' : '']),\n    key: parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.messageId,\n    onClick: () => {\n      if (!isUnavailable && onClick) {\n        onClick();\n      }\n    },\n    onTouchEnd: () => {\n      if (!isUnavailable && onClick) {\n        onClick();\n      }\n    }\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-quote-message__replied-to\"\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    className: \"sendbird-quote-message__replied-to__icon\",\n    type: IconTypes.REPLY,\n    fillColor: IconColors.ON_BACKGROUND_3,\n    width: \"12px\",\n    height: \"12px\"\n  }), /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-quote-message__replied-to__text\",\n    type: LabelTypography.CAPTION_2,\n    color: LabelColors.ONBACKGROUND_3\n  }, /*#__PURE__*/React__default.createElement(\"span\", {\n    className: \"sendbird-quote-message__replied-to__text__nickname\"\n  }, currentMessageSenderNickname), /*#__PURE__*/React__default.createElement(\"span\", {\n    className: \"sendbird-quote-message__replied-to__text__text\"\n  }, stringSet.QUOTED_MESSAGE__REPLIED_TO), /*#__PURE__*/React__default.createElement(\"span\", {\n    className: \"sendbird-quote-message__replied-to__text__nickname\"\n  }, parentMessageSenderNickname))), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-quote-message__replied-message\"\n  }, isUnavailable && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-quote-message__replied-message__text-message\"\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-quote-message__replied-message__text-message__word\",\n    type: LabelTypography.BODY_2,\n    color: LabelColors.ONBACKGROUND_1\n  }, stringSet.QUOTED_MESSAGE__UNAVAILABLE)), isUserMessage(parentMessage) && (parentMessage === null || parentMessage === void 0 ? void 0 : (_message = parentMessage.message) === null || _message === void 0 ? void 0 : _message.length) > 0 && !isUnavailable && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-quote-message__replied-message__text-message\"\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-quote-message__replied-message__text-message__word\",\n    type: LabelTypography.BODY_2,\n    color: LabelColors.ONBACKGROUND_1\n  }, parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.message)), isVoiceMessage(parentMessage) && parentMessageUrl && !isUnavailable && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-quote-message__replied-message__text-message\"\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-quote-message__replied-message__text-message__word\",\n    type: LabelTypography.BODY_2,\n    color: LabelColors.ONBACKGROUND_1\n  }, stringSet.VOICE_MESSAGE)), isThumbnailMessage(parentMessage) && parentMessageUrl && !isUnavailable && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-quote-message__replied-message__thumbnail-message\"\n  }, /*#__PURE__*/React__default.createElement(ImageRenderer, {\n    className: \"sendbird-quote-message__replied-message__thumbnail-message__image\",\n    url: parentMessageUrl,\n    alt: parentMessageType,\n    width: \"144px\",\n    height: \"108px\",\n    onLoad: () => setThumbnailLoaded(true),\n    defaultComponent: /*#__PURE__*/React__default.createElement(\"div\", {\n      className: \"sendbird-quote-message__replied-message__thumbnail-message__placeholder\"\n    }, /*#__PURE__*/React__default.createElement(\"div\", {\n      className: \"sendbird-quote-message__replied-message__thumbnail-message__placeholder__icon\"\n    }, /*#__PURE__*/React__default.createElement(Icon, {\n      type: isVideo(parentMessageType) ? IconTypes.PLAY : IconTypes.PHOTO,\n      fillColor: IconColors.ON_BACKGROUND_2,\n      width: \"22px\",\n      height: \"22px\"\n    })))\n  }), isVideo(parentMessageType) && !((parentMessage === null || parentMessage === void 0 ? void 0 : (_thumbnails = parentMessage.thumbnails) === null || _thumbnails === void 0 ? void 0 : _thumbnails.length) > 0) && /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(\"video\", {\n    className: \"sendbird-quote-message__replied-message__thumbnail-message__video\"\n  }, /*#__PURE__*/React__default.createElement(\"source\", {\n    src: parentMessageUrl,\n    type: parentMessageType\n  })), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-quote-message__replied-message__thumbnail-message__cover\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-quote-message__replied-message__thumbnail-message__cover__icon\"\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    type: IconTypes.PLAY,\n    fillColor: IconColors.GRAY,\n    width: \"14px\",\n    height: \"14px\"\n  })))), isThumbnailLoaded && isGif(parentMessageType) && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-quote-message__replied-message__thumbnail-message__cover\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-quote-message__replied-message__thumbnail-message__cover__icon\"\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    type: IconTypes.GIF,\n    fillColor: IconColors.GRAY,\n    width: \"14px\",\n    height: \"14px\"\n  })))), getUIKitMessageType(parentMessage) === UIKitMessageTypes.FILE && parentMessageUrl && !isUnavailable && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-quote-message__replied-message__file-message\"\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    className: \"sendbird-quote-message__replied-message__file-message__type-icon\",\n    type: {\n      [uikitFileTypes.IMAGE]: IconTypes.PHOTO,\n      [uikitFileTypes.VIDEO]: IconTypes.PLAY,\n      [uikitFileTypes.AUDIO]: IconTypes.FILE_AUDIO,\n      [uikitFileTypes.GIF]: IconTypes.GIF,\n      [uikitFileTypes.OTHERS]: IconTypes.FILE_DOCUMENT\n    }[getUIKitFileType(parentMessageType)],\n    fillColor: IconColors.ON_BACKGROUND_3,\n    width: \"16px\",\n    height: \"16px\"\n  }), /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-quote-message__replied-message__file-message__file-name\",\n    type: LabelTypography.BODY_2,\n    color: LabelColors.ONBACKGROUND_3\n  }, truncateString(splitFileName[splitFileName.length - 1])))));\n}\nexport { QuoteMessage as default };","map":{"version":3,"mappings":"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","names":["QuoteMessage","message","userId","isByMe","className","isUnavailable","onClick","stringSet","useContext","LocalizationContext","parentMessage","parentMessageSender","sender","parentMessageSenderNickname","QUOTED_MESSAGE__CURRENT_USER","nickname","parentMessageUrl","url","parentMessageType","type","currentMessageSenderNickname","_message$sender","_message$sender2","isThumbnailLoaded","setThumbnailLoaded","useState","uikitFileTypes","getUIKitFileTypes","splitFileName","name","split","React","getClassName","key","messageId","onTouchEnd","Icon","IconTypes","REPLY","fillColor","IconColors","ON_BACKGROUND_3","width","height","Label","LabelTypography","CAPTION_2","color","LabelColors","ONBACKGROUND_3","QUOTED_MESSAGE__REPLIED_TO","BODY_2","ONBACKGROUND_1","QUOTED_MESSAGE__UNAVAILABLE","isUserMessage","_message","length","isVoiceMessage","VOICE_MESSAGE","isThumbnailMessage","ImageRenderer","alt","onLoad","defaultComponent","isVideo","PLAY","PHOTO","ON_BACKGROUND_2","thumbnails","_thumbnails","src","GRAY","isGif","GIF","getUIKitMessageType","UIKitMessageTypes","FILE","IMAGE","VIDEO","AUDIO","FILE_AUDIO","OTHERS","FILE_DOCUMENT","getUIKitFileType","truncateString"],"sources":["C:\\Users\\이경민\\IdeaProjects\\sendbird-uikit-whatsapp-sample\\node_modules\\@sendbird\\src\\ui\\QuoteMessage\\index.tsx"],"sourcesContent":["import './index.scss';\nimport React, { ReactElement, useContext, useState } from 'react';\nimport type { FileMessage, UserMessage } from '@sendbird/chat/message';\n\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport ImageRenderer from '../ImageRenderer';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport {\n  getClassName,\n  getUIKitFileType,\n  getUIKitFileTypes,\n  getUIKitMessageType,\n  isGif,\n  isThumbnailMessage,\n  isUserMessage,\n  isVideo,\n  isVoiceMessage,\n  truncateString,\n  UIKitMessageTypes,\n} from '../../utils';\n\ninterface Props {\n  className?: string | Array<string>;\n  message?: UserMessage | FileMessage;\n  userId?: string;\n  isByMe?: boolean;\n  isUnavailable?: boolean;\n  onClick?: () => void;\n}\n\nexport default function QuoteMessage({\n  message,\n  userId = '',\n  isByMe = false,\n  className,\n  isUnavailable = false,\n  onClick,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n\n  const { parentMessage } = message;\n  const parentMessageSender = (parentMessage as UserMessage | FileMessage)?.sender;\n  const parentMessageSenderNickname = (userId === parentMessageSender?.userId) ? stringSet.QUOTED_MESSAGE__CURRENT_USER : parentMessageSender?.nickname;\n  const parentMessageUrl = (parentMessage as FileMessage)?.url || '';\n  const parentMessageType = (parentMessage as FileMessage)?.type;\n  const currentMessageSenderNickname = (userId === message?.sender?.userId) ? stringSet.QUOTED_MESSAGE__CURRENT_USER : message?.sender?.nickname;\n\n  const [isThumbnailLoaded, setThumbnailLoaded] = useState(false);\n  const uikitFileTypes = getUIKitFileTypes();\n  const splitFileName = (parentMessage as FileMessage)?.name ? (parentMessage as FileMessage).name.split('/') : parentMessageUrl.split('/');\n\n  return (\n    <div\n      className={getClassName([className, 'sendbird-quote-message', isByMe ? 'outgoing' : 'incoming', isUnavailable ? 'unavailable' : ''])}\n      key={parentMessage?.messageId}\n      onClick={() => {\n        if (!isUnavailable && onClick) {\n          onClick();\n        }\n      }}\n      onTouchEnd={() => {\n        if (!isUnavailable && onClick) {\n          onClick();\n        }\n      }}\n    >\n      <div className=\"sendbird-quote-message__replied-to\">\n        <Icon\n          className=\"sendbird-quote-message__replied-to__icon\"\n          type={IconTypes.REPLY}\n          fillColor={IconColors.ON_BACKGROUND_3}\n          width=\"12px\"\n          height=\"12px\"\n        />\n        <Label\n          className=\"sendbird-quote-message__replied-to__text\"\n          type={LabelTypography.CAPTION_2}\n          color={LabelColors.ONBACKGROUND_3}\n        >\n          <span className=\"sendbird-quote-message__replied-to__text__nickname\">{currentMessageSenderNickname}</span>\n          <span className=\"sendbird-quote-message__replied-to__text__text\">{stringSet.QUOTED_MESSAGE__REPLIED_TO}</span>\n          <span className=\"sendbird-quote-message__replied-to__text__nickname\">{parentMessageSenderNickname}</span>\n        </Label>\n      </div>\n      <div className=\"sendbird-quote-message__replied-message\">\n        {isUnavailable && (\n          <div className=\"sendbird-quote-message__replied-message__text-message\">\n            <Label\n              className=\"sendbird-quote-message__replied-message__text-message__word\"\n              type={LabelTypography.BODY_2}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.QUOTED_MESSAGE__UNAVAILABLE}\n            </Label>\n          </div>\n        )}\n        {/* text message */}\n        {((isUserMessage(parentMessage as UserMessage) && (parentMessage as UserMessage)?.message?.length > 0) && !isUnavailable) && (\n          <div className=\"sendbird-quote-message__replied-message__text-message\">\n            <Label\n              className=\"sendbird-quote-message__replied-message__text-message__word\"\n              type={LabelTypography.BODY_2}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {(parentMessage as UserMessage)?.message}\n            </Label>\n          </div>\n        )}\n        {/* voice message */}\n        {(isVoiceMessage(parentMessage as FileMessage) && parentMessageUrl && !isUnavailable) && (\n          <div className=\"sendbird-quote-message__replied-message__text-message\">\n            <Label\n              className=\"sendbird-quote-message__replied-message__text-message__word\"\n              type={LabelTypography.BODY_2}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.VOICE_MESSAGE}\n            </Label>\n          </div>\n        )}\n        {/* thumbnail message */}\n        {(isThumbnailMessage(parentMessage as FileMessage) && parentMessageUrl && !isUnavailable) && (\n          <div className=\"sendbird-quote-message__replied-message__thumbnail-message\">\n            <ImageRenderer\n              className=\"sendbird-quote-message__replied-message__thumbnail-message__image\"\n              url={parentMessageUrl}\n              alt={parentMessageType}\n              width=\"144px\"\n              height=\"108px\"\n              onLoad={() => setThumbnailLoaded(true)}\n              defaultComponent={(\n                <div className=\"sendbird-quote-message__replied-message__thumbnail-message__placeholder\">\n                  <div className=\"sendbird-quote-message__replied-message__thumbnail-message__placeholder__icon\">\n                    <Icon\n                      type={isVideo(parentMessageType) ? IconTypes.PLAY : IconTypes.PHOTO}\n                      fillColor={IconColors.ON_BACKGROUND_2}\n                      width=\"22px\"\n                      height=\"22px\"\n                    />\n                  </div>\n                </div>\n              )}\n            />\n            {(isVideo(parentMessageType) && !((parentMessage as FileMessage)?.thumbnails?.length > 0)) && (\n              <>\n                <video className=\"sendbird-quote-message__replied-message__thumbnail-message__video\">\n                  <source src={parentMessageUrl} type={parentMessageType} />\n                </video>\n                <div className=\"sendbird-quote-message__replied-message__thumbnail-message__cover\">\n                  <div className=\"sendbird-quote-message__replied-message__thumbnail-message__cover__icon\">\n                    <Icon\n                      type={IconTypes.PLAY}\n                      fillColor={IconColors.GRAY}\n                      width=\"14px\"\n                      height=\"14px\"\n                    />\n                  </div>\n                </div>\n              </>\n            )}\n            {(isThumbnailLoaded && isGif(parentMessageType)) && (\n              <div className=\"sendbird-quote-message__replied-message__thumbnail-message__cover\">\n                <div className=\"sendbird-quote-message__replied-message__thumbnail-message__cover__icon\">\n                  <Icon\n                    type={IconTypes.GIF}\n                    fillColor={IconColors.GRAY}\n                    width=\"14px\"\n                    height=\"14px\"\n                  />\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n        {/* file message */}\n        {(getUIKitMessageType(parentMessage as FileMessage) === UIKitMessageTypes.FILE && parentMessageUrl && !isUnavailable) && (\n          <div className=\"sendbird-quote-message__replied-message__file-message\">\n            <Icon\n              className=\"sendbird-quote-message__replied-message__file-message__type-icon\"\n              type={{\n                [uikitFileTypes.IMAGE]: IconTypes.PHOTO,\n                [uikitFileTypes.VIDEO]: IconTypes.PLAY,\n                [uikitFileTypes.AUDIO]: IconTypes.FILE_AUDIO,\n                [uikitFileTypes.GIF]: IconTypes.GIF,\n                [uikitFileTypes.OTHERS]: IconTypes.FILE_DOCUMENT,\n              }[getUIKitFileType(parentMessageType)]}\n              fillColor={IconColors.ON_BACKGROUND_3}\n              width=\"16px\"\n              height=\"16px\"\n            />\n            <Label\n              className=\"sendbird-quote-message__replied-message__file-message__file-name\"\n              type={LabelTypography.BODY_2}\n              color={LabelColors.ONBACKGROUND_3}\n            >\n              {truncateString(splitFileName[splitFileName.length - 1])}\n            </Label>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}