{"version":3,"file":"UserProfile.js","sources":["../../src/ui/UserProfile/index.tsx"],"sourcesContent":["import './index.scss';\nimport React, { ReactElement, useContext } from 'react';\nimport type { GroupChannel, GroupChannelCreateParams } from '@sendbird/chat/groupChannel';\nimport type { User } from '@sendbird/chat';\n\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport { UserProfileContext } from '../../lib/UserProfileContext';\nimport { getCreateGroupChannel } from '../../lib/selectors';\nimport Avatar from '../Avatar/index';\nimport Label, { LabelColors, LabelTypography } from '../Label';\nimport Button, { ButtonTypes } from '../Button';\nimport useSendbirdStateContext from '../../hooks/useSendbirdStateContext';\n\ninterface Logger {\n  info?(message: string, channel: GroupChannel): void;\n}\n\ninterface Props {\n  user: User;\n  currentUserId?: string;\n  logger?: Logger;\n  disableMessaging?: boolean;\n  createChannel?(params: GroupChannelCreateParams): Promise<GroupChannel>;\n  onSuccess?: () => void;\n}\n\nfunction UserProfile({\n  user,\n  currentUserId,\n  disableMessaging = false,\n  onSuccess,\n}: Props): ReactElement {\n  const store = useSendbirdStateContext();\n  const createChannel = getCreateGroupChannel(store);\n  const logger = store?.config?.logger;\n  const { stringSet } = useContext(LocalizationContext);\n  const currentUserId_ = currentUserId || store?.config?.userId;\n  // @ts-ignore\n  const { onUserProfileMessage } = useContext(UserProfileContext);\n  return (\n    <div className=\"sendbird__user-profile\">\n      <section className=\"sendbird__user-profile-avatar\">\n        <Avatar\n          height=\"80px\"\n          width=\"80px\"\n          src={user?.profileUrl}\n        />\n      </section>\n      <section className=\"sendbird__user-profile-name\">\n        <Label\n          type={LabelTypography.H_2}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {user?.nickname || stringSet.NO_NAME}\n        </Label>\n      </section>\n      {\n        (user?.userId !== currentUserId_) && !disableMessaging && (\n          <section className=\"sendbird__user-profile-message\">\n            <Button\n              type={ButtonTypes.SECONDARY}\n              onClick={() => {\n                // Create 1:1 channel\n                const params: GroupChannelCreateParams = {\n                  isDistinct: false,\n                  invitedUserIds: [user?.userId],\n                  operatorUserIds: [currentUserId_],\n                };\n                onSuccess();\n                createChannel(params)\n                  .then((groupChannel) => {\n                    logger.info('UserProfile, channel create', groupChannel);\n                    if (typeof onUserProfileMessage === 'function') {\n                      onUserProfileMessage?.(groupChannel);\n                    }\n                  });\n              }}\n            >\n              {stringSet.USER_PROFILE__MESSAGE}\n            </Button>\n          </section>\n        )\n      }\n      <div className=\"sendbird__user-profile-separator\" />\n      <section className=\"sendbird__user-profile-userId\">\n        <Label\n          className=\"sendbird__user-profile-userId--label\"\n          type={LabelTypography.CAPTION_2}\n          color={LabelColors.ONBACKGROUND_2}\n        >\n          {stringSet.USER_PROFILE__USER_ID}\n        </Label>\n        <Label\n          className=\"sendbird__user-profile-userId--value\"\n          type={LabelTypography.BODY_1}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {user?.userId}\n        </Label>\n      </section>\n    </div>\n  );\n}\n\nexport default UserProfile;\n"],"names":["UserProfile","_ref","_store$config","_store$config2","user","currentUserId","disableMessaging","onSuccess","store","useSendbirdStateContext","createChannel","getCreateGroupChannel","logger","config","stringSet","useContext","LocalizationContext","currentUserId_","userId","onUserProfileMessage","UserProfileContext","React","createElement","className","Avatar","height","width","src","profileUrl","Label","type","LabelTypography","H_2","color","LabelColors","ONBACKGROUND_1","nickname","NO_NAME","Button","ButtonTypes","SECONDARY","onClick","params","isDistinct","invitedUserIds","operatorUserIds","then","groupChannel","info","USER_PROFILE__MESSAGE","CAPTION_2","ONBACKGROUND_2","USER_PROFILE__USER_ID","BODY_1"],"mappings":"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"}