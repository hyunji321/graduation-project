{"version":3,"file":"useDirtyGetMentions-aa730e2c.js","sources":["../src/modules/Message/utils/getMentionNodes.ts","../src/modules/Message/hooks/useDirtyGetMentions.ts"],"sourcesContent":["export function getMentionNodes(root: HTMLElement): Element[] {\n  if (root) {\n    const mentions = root.querySelectorAll(\"[data-sb-mention='true']\");\n    const mentionsArray = Array.from(mentions);\n    return mentionsArray;\n  }\n  return [];\n}\n","import { useEffect, useLayoutEffect, useState } from 'react';\n\nimport { Logger } from '../../../lib/SendbirdState';\nimport { getMentionNodes } from '../utils/getMentionNodes';\n\ninterface DynamicParams {\n  ref: React.RefObject<HTMLElement>;\n}\n\ninterface StaticParams {\n  logger: Logger;\n}\n\n/**\n * This is a dirty way to get the mentions given DOM node\n */\nexport function useDirtyGetMentions({\n  ref,\n}: DynamicParams, {\n  logger,\n}: StaticParams) {\n  // Select the node that will be observed for mutations\n  const targetNode = ref.current as HTMLElement;\n  const [mentionNodes, setMentionNodes] = useState<Element[]>([]);\n\n  // to get the initial mentions\n  useLayoutEffect(() => {\n    if (targetNode) {\n      const mentions = getMentionNodes(targetNode);\n      setMentionNodes(mentions);\n    }\n  }, [targetNode]);\n\n  useEffect(() => {\n    // Options for the observer (which mutations to observe)\n    const config = { childList: true, subtree: true };\n\n    // Callback function to execute when mutations are observed\n    const callback = (mutationList: MutationRecord[]): void => {\n      const hasMutation = mutationList.length > 0;\n      if (hasMutation) {\n        setMentionNodes(getMentionNodes(targetNode));\n      }\n    };\n\n    // Create an observer instance linked to the callback function\n    const observer = new MutationObserver(callback);\n\n    if (targetNode) {\n      // Start observing the target node for configured mutations\n      observer.observe(targetNode, config);\n      logger.info('useDirtyGetMentions: observer started', { observer, config });\n    }\n\n    return () => {\n      try {\n        observer.disconnect();\n        logger.info('useDirtyGetMentions: observer disconnected', { observer });\n      } catch (error) {\n        logger.error('useDirtyGetMentions: observer disconnect failed', { observer });\n      }\n    };\n  }, [targetNode]);\n  return mentionNodes;\n}\n"],"names":["getMentionNodes","root","mentions","querySelectorAll","mentionsArray","Array","from","useDirtyGetMentions","_ref","_ref2","ref","logger","targetNode","current","mentionNodes","setMentionNodes","useState","useLayoutEffect","useEffect","config","childList","subtree","callback","mutationList","hasMutation","length","observer","MutationObserver","observe","info","disconnect","error"],"mappings":";;AAAO,SAASA,eAAeA,CAACC,IAAiB,EAAa;AAC5D,EAAA,IAAIA,IAAI,EAAE;AACR,IAAA,MAAMC,QAAQ,GAAGD,IAAI,CAACE,gBAAgB,CAAC,0BAA0B,CAAC,CAAA;AAClE,IAAA,MAAMC,aAAa,GAAGC,KAAK,CAACC,IAAI,CAACJ,QAAQ,CAAC,CAAA;AAC1C,IAAA,OAAOE,aAAa,CAAA;AACtB,GAAA;AACA,EAAA,OAAO,EAAE,CAAA;AACX;;ACMA;AACA;AACA;AACO,SAASG,mBAAmBA,CAAAC,IAAA,EAAAC,KAAA,EAIlB;EAAA,IAJmB;AAClCC,IAAAA,GAAAA;AACa,GAAC,GAAAF,IAAA,CAAA;EAAA,IAAE;AAChBG,IAAAA,MAAAA;AACY,GAAC,GAAAF,KAAA,CAAA;AACb;AACA,EAAA,MAAMG,UAAU,GAAGF,GAAG,CAACG,OAAsB,CAAA;EAC7C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGC,QAAQ,CAAY,EAAE,CAAC,CAAA;;AAE/D;AACAC,EAAAA,eAAe,CAAC,MAAM;AACpB,IAAA,IAAIL,UAAU,EAAE;AACd,MAAA,MAAMV,QAAQ,GAAGF,eAAe,CAACY,UAAU,CAAC,CAAA;MAC5CG,eAAe,CAACb,QAAQ,CAAC,CAAA;AAC3B,KAAA;AACF,GAAC,EAAE,CAACU,UAAU,CAAC,CAAC,CAAA;AAEhBM,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,IAAA,MAAMC,MAAM,GAAG;AAAEC,MAAAA,SAAS,EAAE,IAAI;AAAEC,MAAAA,OAAO,EAAE,IAAA;KAAM,CAAA;;AAEjD;IACA,MAAMC,QAAQ,GAAIC,YAA8B,IAAW;AACzD,MAAA,MAAMC,WAAW,GAAGD,YAAY,CAACE,MAAM,GAAG,CAAC,CAAA;AAC3C,MAAA,IAAID,WAAW,EAAE;AACfT,QAAAA,eAAe,CAACf,eAAe,CAACY,UAAU,CAAC,CAAC,CAAA;AAC9C,OAAA;KACD,CAAA;;AAED;AACA,IAAA,MAAMc,QAAQ,GAAG,IAAIC,gBAAgB,CAACL,QAAQ,CAAC,CAAA;AAE/C,IAAA,IAAIV,UAAU,EAAE;AACd;AACAc,MAAAA,QAAQ,CAACE,OAAO,CAAChB,UAAU,EAAEO,MAAM,CAAC,CAAA;AACpCR,MAAAA,MAAM,CAACkB,IAAI,CAAC,uCAAuC,EAAE;QAAEH,QAAQ;AAAEP,QAAAA,MAAAA;AAAO,OAAC,CAAC,CAAA;AAC5E,KAAA;AAEA,IAAA,OAAO,MAAM;MACX,IAAI;QACFO,QAAQ,CAACI,UAAU,EAAE,CAAA;AACrBnB,QAAAA,MAAM,CAACkB,IAAI,CAAC,4CAA4C,EAAE;AAAEH,UAAAA,QAAAA;AAAS,SAAC,CAAC,CAAA;OACxE,CAAC,OAAOK,KAAK,EAAE;AACdpB,QAAAA,MAAM,CAACoB,KAAK,CAAC,iDAAiD,EAAE;AAAEL,UAAAA,QAAAA;AAAS,SAAC,CAAC,CAAA;AAC/E,OAAA;KACD,CAAA;AACH,GAAC,EAAE,CAACd,UAAU,CAAC,CAAC,CAAA;AAChB,EAAA,OAAOE,YAAY,CAAA;AACrB;;;;"}