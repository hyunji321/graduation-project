import React__default, { useContext } from 'react';
import { a as LocalizationContext } from '../../LocalizationContext-076d6d2e.js';
import MessageInput from '../../ui/MessageInput.js';
import { u as useOpenChannelContext } from '../../OpenChannelProvider-d3a850e3.js';
import '../../stringSet-13bbd4a2.js';
import '../../index-99aabd9e.js';
import '../../_rollupPluginBabelHelpers-6bb0305c.js';
import 'prop-types';
import '../../const-221c6a89.js';
import '../../const-b3f02313.js';
import '../../ui/IconButton.js';
import '../../ui/Button.js';
import '../../index-63949de5.js';
import 'dompurify';
import '../../consts-ff014656.js';
import '../../ui/Icon.js';
import '../../index-7eb65acf.js';
import '../../utils/message/getOutgoingMessageState.js';
import '../../consts-c41580ae.js';
import '../../consts-81544e52.js';
import '../../tokenize-c40f2b57.js';
import '../../index-7cdd58b8.js';
import '../../UserProfileContext-9cfbab4d.js';
import '../../compareIds-defe2bb3.js';
import '../../topics-b2b77fb9.js';
import '@sendbird/chat';
import '@sendbird/chat/openChannel';
import '../../uuid-1adedf62.js';
import '../../useSendbirdStateContext.js';
import '../../withSendbird.js';

const MessageInputWrapper = (props, ref) => {
  const {
    currentOpenChannel,
    disabled,
    handleSendMessage,
    handleFileUpload,
    amIMuted
  } = useOpenChannelContext();
  const channel = currentOpenChannel;
  const {
    stringSet
  } = useContext(LocalizationContext);
  const {
    value
  } = props;
  function getPlaceHolderString() {
    if (amIMuted) {
      return stringSet.MESSAGE_INPUT__PLACE_HOLDER__MUTED;
    }
    if (disabled) {
      return stringSet.MESSAGE_INPUT__PLACE_HOLDER__DISABLED;
    }
    return '';
  }
  if (!channel) {
    return null;
  }
  return /*#__PURE__*/React__default.createElement("div", {
    className: "sendbird-openchannel-footer"
  }, /*#__PURE__*/React__default.createElement(MessageInput, {
    ref: ref,
    value: value,
    disabled: disabled,
    isVoiceMessageEnabled: false,
    onSendMessage: handleSendMessage,
    onFileUpload: handleFileUpload,
    placeholder: getPlaceHolderString()
  }));
};
var OpenChannelInput = /*#__PURE__*/React__default.forwardRef(MessageInputWrapper);

export { OpenChannelInput as default };
//# sourceMappingURL=OpenChannelInput.js.map
