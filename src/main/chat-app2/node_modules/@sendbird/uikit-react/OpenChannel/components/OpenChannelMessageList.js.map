{"version":3,"file":"OpenChannelMessageList.js","sources":["../../../src/modules/OpenChannel/components/OpenChannelMessageList/index.tsx"],"sourcesContent":["import './openchannel-message-list.scss';\n\nimport React, { ReactElement, useRef, useState, useMemo } from 'react';\nimport { UserMessage } from '@sendbird/chat/message';\nimport isSameDay from 'date-fns/isSameDay';\n\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\n\nimport PlaceHolder, { PlaceHolderTypes } from '../../../../ui/PlaceHolder';\nimport { compareMessagesForGrouping } from '../../context/utils';\nimport { useOpenChannelContext } from '../../context/OpenChannelProvider';\nimport OpenChannelMessage from '../OpenChannelMessage';\nimport { RenderMessageProps } from '../../../../types';\nimport { MessageProvider } from '../../../Message/context/MessageProvider';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { useHandleOnScrollCallback } from '../../../../hooks/useHandleOnScrollCallback';\n\nexport type OpenchannelMessageListProps = {\n  renderMessage?: (props: RenderMessageProps) => React.ElementType<RenderMessageProps>;\n  renderPlaceHolderEmptyList?: () => React.ReactElement;\n};\n\nfunction OpenchannelMessageList(\n  props: OpenchannelMessageListProps,\n  ref: React.RefObject<HTMLDivElement>,\n): ReactElement {\n  const {\n    isMessageGroupingEnabled = true,\n    allMessages,\n    hasMore,\n    onScroll,\n  } = useOpenChannelContext();\n  const store = useSendbirdStateContext();\n  const userId = store.config.userId;\n  const scrollRef = ref || useRef(null);\n  const [showScrollDownButton, setShowScrollDownButton] = useState(false);\n\n  const scrollToBottom = () => {\n    if (scrollRef && scrollRef.current) {\n      scrollRef.current.scrollTo(0, scrollRef.current.scrollHeight);\n      setShowScrollDownButton(false);\n    }\n  };\n\n  const handleOnScroll = useHandleOnScrollCallback({\n    setShowScrollDownButton,\n    hasMore,\n    onScroll,\n    scrollRef,\n  });\n\n  const memoizedMessageList = useMemo(() => {\n    if (allMessages.length > 0) {\n      return (\n        allMessages.map((message, index) => {\n          const previousMessage = allMessages[index - 1];\n          const nextMessage = allMessages[index - 1];\n\n          const previousMessageCreatedAt = previousMessage && previousMessage.createdAt;\n          const currentCreatedAt = message?.createdAt;\n          // https://stackoverflow.com/a/41855608\n          const hasSeparator = !(previousMessageCreatedAt && (\n            isSameDay(currentCreatedAt, previousMessageCreatedAt)\n          ));\n\n          const [chainTop, chainBottom] = isMessageGroupingEnabled\n            ? compareMessagesForGrouping(previousMessage, message, nextMessage)\n            : [false, false];\n          const isByMe = (message as UserMessage)?.sender?.userId === userId;\n          const key = message?.messageId || (message as UserMessage)?.reqId;\n          return (\n            <MessageProvider message={message} isByMe={isByMe} key={key}>\n              <OpenChannelMessage\n                message={message}\n                chainTop={chainTop}\n                chainBottom={chainBottom}\n                hasSeparator={hasSeparator}\n                renderMessage={props?.renderMessage}\n              />\n            </MessageProvider>\n          );\n        })\n      );\n    }\n    return (\n      props?.renderPlaceHolderEmptyList?.() || (\n        <PlaceHolder\n          className=\"sendbird-openchannel-conversation-scroll__container__place-holder\"\n          type={PlaceHolderTypes.NO_MESSAGES}\n        />\n      )\n    );\n  }, [allMessages]);\n\n  return (\n    <div className=\"sendbird-openchannel-conversation-scroll\">\n      <div className=\"sendbird-openchannel-conversation-scroll__container\">\n        <div className=\"sendbird-openchannel-conversation-scroll__container__padding\" />\n        <div\n          className={[\n            'sendbird-openchannel-conversation-scroll__container__item-container',\n            (allMessages.length > 0) ? '' : 'no-messages',\n          ].join(' ')}\n          onScroll={handleOnScroll}\n          ref={scrollRef}\n        >\n          {memoizedMessageList}\n        </div>\n      </div>\n      {\n        showScrollDownButton && (\n          <div\n            className=\"sendbird-openchannel-conversation-scroll__container__scroll-bottom-button\"\n            onClick={scrollToBottom}\n            onKeyDown={scrollToBottom}\n            tabIndex={0}\n            role=\"button\"\n          >\n            <Icon\n              width=\"24px\"\n              height=\"24px\"\n              type={IconTypes.CHEVRON_DOWN}\n              fillColor={IconColors.CONTENT}\n            />\n          </div>\n        )\n      }\n    </div>\n  );\n}\n\nexport default React.forwardRef(OpenchannelMessageList);\n"],"names":["OpenchannelMessageList","props","ref","isMessageGroupingEnabled","allMessages","hasMore","onScroll","useOpenChannelContext","store","useSendbirdStateContext","userId","config","scrollRef","useRef","showScrollDownButton","setShowScrollDownButton","useState","scrollToBottom","current","scrollTo","scrollHeight","handleOnScroll","useHandleOnScrollCallback","memoizedMessageList","useMemo","_props$renderPlaceHol","length","map","message","index","_sender","previousMessage","nextMessage","previousMessageCreatedAt","createdAt","currentCreatedAt","hasSeparator","isSameDay","chainTop","chainBottom","compareMessagesForGrouping","isByMe","sender","key","messageId","reqId","React","createElement","MessageProvider","OpenChannelMessage","renderMessage","renderPlaceHolderEmptyList","call","PlaceHolder","className","type","PlaceHolderTypes","NO_MESSAGES","join","onClick","onKeyDown","tabIndex","role","Icon","width","height","IconTypes","CHEVRON_DOWN","fillColor","IconColors","CONTENT","forwardRef"],"mappings":"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"}