{"version":3,"file":"CreateOpenChannelUI.js","sources":["../../../src/modules/CreateOpenChannel/components/CreateOpenChannelUI/index.tsx"],"sourcesContent":["import React, { useState, useRef, useContext } from 'react';\nimport './index.scss';\n\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport Avatar from '../../../../ui/Avatar';\nimport { ButtonTypes } from '../../../../ui/Button';\nimport Modal from '../../../../ui/Modal';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport Input, { InputLabel } from '../../../../ui/Input';\nimport Label, { LabelColors, LabelTypography } from '../../../../ui/Label';\nimport TextButton from '../../../../ui/TextButton';\nimport { useCreateOpenChannelContext } from '../../context/CreateOpenChannelProvider';\n\nexport interface CreateOpenChannelUIProps {\n  closeModal?: () => void;\n  renderHeader?: () => React.ReactElement;\n  renderProfileInput?: () => React.ReactElement;\n}\n\nfunction CreateOpenChannelUI({\n  closeModal,\n  renderHeader,\n  renderProfileInput,\n}: CreateOpenChannelUIProps): React.ReactElement {\n  const [newFile, setNewFile] = useState(null);\n  const [currentImage, setCurrentImg] = useState(null);\n  const inputFormRef = useRef(null);\n  const inputFileRef = useRef(null);\n  const inputTextRef = useRef(null);\n  const { stringSet } = useContext(LocalizationContext);\n  const {\n    logger,\n    createNewOpenChannel,\n  } = useCreateOpenChannelContext();\n  return (\n    <div className=\"sendbird-create-open-channel-ui\">\n      <Modal\n        isFullScreenOnMobile\n        titleText={stringSet.CREATE_OPEN_CHANNEL_LIST__TITLE}\n        submitText={stringSet.CREATE_OPEN_CHANNEL_LIST__SUBMIT}\n        type={ButtonTypes.PRIMARY}\n        onCancel={closeModal}\n        renderHeader={renderHeader}\n        onSubmit={() => {\n          const channelName = inputTextRef?.current?.value;\n          if (!channelName) {\n            logger.warning('CreateOpenChannelUI: You should fill the channel name');\n            return;\n          }\n          createNewOpenChannel({\n            name: channelName,\n            coverUrlOrImage: newFile,\n          });\n          closeModal();\n        }}\n      >\n        <>\n          {renderProfileInput?.() || (\n            <form\n              className=\"sendbird-create-open-channel-ui__profile-input\"\n              ref={inputFormRef}\n              onSubmit={(e) => { e.preventDefault(); }}\n            >\n              <InputLabel>\n                {stringSet.CREATE_OPEN_CHANNEL_LIST__SUBTITLE__IMG_SECTION}\n              </InputLabel>\n              <div className=\"sendbird-create-open-channel-ui__profile-input__img-section\">\n                <div className=\"sendbird-create-open-channel-ui__profile-input__img-section__avatar\">\n                  {currentImage\n                    ? (\n                      <Avatar\n                        width=\"80px\"\n                        height=\"80px\"\n                        src={currentImage}\n                      />\n                    ) : (\n                      <div className=\"sendbird-create-open-channel-ui__profile-input__img-section__avatar--default\">\n                        <Icon\n                          type={IconTypes.CHANNELS}\n                          fillColor={IconColors.CONTENT}\n                          width=\"46px\"\n                          height=\"46px\"\n                        />\n                      </div>\n                    )}\n                </div>\n                <input\n                  className=\"sendbird-create-open-channel-ui__profile-input__img-section__input\"\n                  ref={inputFileRef}\n                  type=\"file\"\n                  accept=\"image/gif, image/jpeg, image/png\"\n                  style={{ display: 'none' }}\n                  onChange={(e) => {\n                    setCurrentImg(URL.createObjectURL(e.target.files[0]));\n                    setNewFile(e.target.files[0]);\n                    inputFileRef.current.value = '';\n                  }}\n                />\n                <TextButton\n                  className=\"sendbird-create-open-channel-ui__profile-input__img-section__button\"\n                  onClick={() => inputFileRef.current.click()}\n                  disableUnderline\n                >\n                  <Label\n                    type={LabelTypography.BUTTON_1}\n                    color={LabelColors.PRIMARY}\n                  >\n                    {stringSet.CREATE_OPEN_CHANNEL_LIST__SUBTITLE__IMG_UPLOAD}\n                  </Label>\n                </TextButton>\n              </div>\n              <div style={{ marginTop: '20px' }}>\n                <InputLabel>\n                  {stringSet.CREATE_OPEN_CHANNEL_LIST__SUBTITLE__TEXT_SECTION}\n                </InputLabel>\n              </div>\n              <div className=\"sendbird-create-open-channel-ui__profile-input__name-section\">\n                <Input\n                  name=\"sendbird-create-open-channel-ui__profile-input__name-section__input\"\n                  ref={inputTextRef}\n                  placeHolder={stringSet.CREATE_OPEN_CHANNEL_LIST__SUBTITLE__TEXT_PLACE_HOLDER}\n                />\n              </div>\n            </form>\n          )}\n        </>\n      </Modal>\n    </div>\n  );\n}\n\nexport default CreateOpenChannelUI;\n"],"names":["CreateOpenChannelUI","_ref","closeModal","renderHeader","renderProfileInput","newFile","setNewFile","useState","currentImage","setCurrentImg","inputFormRef","useRef","inputFileRef","inputTextRef","stringSet","useContext","LocalizationContext","logger","createNewOpenChannel","useCreateOpenChannelContext","React","createElement","className","Modal","isFullScreenOnMobile","titleText","CREATE_OPEN_CHANNEL_LIST__TITLE","submitText","CREATE_OPEN_CHANNEL_LIST__SUBMIT","type","ButtonTypes","PRIMARY","onCancel","onSubmit","_inputTextRef$current","channelName","current","value","warning","name","coverUrlOrImage","Fragment","ref","e","preventDefault","InputLabel","CREATE_OPEN_CHANNEL_LIST__SUBTITLE__IMG_SECTION","Avatar","width","height","src","Icon","IconTypes","CHANNELS","fillColor","IconColors","CONTENT","accept","style","display","onChange","URL","createObjectURL","target","files","TextButton","onClick","click","disableUnderline","Label","LabelTypography","BUTTON_1","color","LabelColors","CREATE_OPEN_CHANNEL_LIST__SUBTITLE__IMG_UPLOAD","marginTop","CREATE_OPEN_CHANNEL_LIST__SUBTITLE__TEXT_SECTION","Input","placeHolder","CREATE_OPEN_CHANNEL_LIST__SUBTITLE__TEXT_PLACE_HOLDER"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAmBA,SAASA,mBAAmBA,CAAAC,IAAA,EAIqB;EAAA,IAJpB;IAC3BC,UAAU;IACVC,YAAY;AACZC,IAAAA,kBAAAA;AACwB,GAAC,GAAAH,IAAA,CAAA;EACzB,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC,CAAA;EAC5C,MAAM,CAACC,YAAY,EAAEC,aAAa,CAAC,GAAGF,QAAQ,CAAC,IAAI,CAAC,CAAA;AACpD,EAAA,MAAMG,YAAY,GAAGC,MAAM,CAAC,IAAI,CAAC,CAAA;AACjC,EAAA,MAAMC,YAAY,GAAGD,MAAM,CAAC,IAAI,CAAC,CAAA;AACjC,EAAA,MAAME,YAAY,GAAGF,MAAM,CAAC,IAAI,CAAC,CAAA;EACjC,MAAM;AAAEG,IAAAA,SAAAA;AAAU,GAAC,GAAGC,UAAU,CAACC,mBAAmB,CAAC,CAAA;EACrD,MAAM;IACJC,MAAM;AACNC,IAAAA,oBAAAA;GACD,GAAGC,2BAA2B,EAAE,CAAA;EACjC,oBACEC,cAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;AAAKC,IAAAA,SAAS,EAAC,iCAAA;AAAiC,GAAA,eAC9CF,cAAA,CAAAC,aAAA,CAACE,KAAK,EAAA;IACJC,oBAAoB,EAAA,IAAA;IACpBC,SAAS,EAAEX,SAAS,CAACY,+BAAgC;IACrDC,UAAU,EAAEb,SAAS,CAACc,gCAAiC;IACvDC,IAAI,EAAEC,WAAW,CAACC,OAAQ;AAC1BC,IAAAA,QAAQ,EAAE9B,UAAW;AACrBC,IAAAA,YAAY,EAAEA,YAAa;IAC3B8B,QAAQ,EAAEA,MAAM;AAAA,MAAA,IAAAC,qBAAA,CAAA;AACd,MAAA,MAAMC,WAAW,GAAGtB,YAAY,KAAZA,IAAAA,IAAAA,YAAY,wBAAAqB,qBAAA,GAAZrB,YAAY,CAAEuB,OAAO,MAAAF,IAAAA,IAAAA,qBAAA,KAArBA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,qBAAA,CAAuBG,KAAK,CAAA;MAChD,IAAI,CAACF,WAAW,EAAE;AAChBlB,QAAAA,MAAM,CAACqB,OAAO,CAAC,uDAAuD,CAAC,CAAA;AACvE,QAAA,OAAA;AACF,OAAA;AACApB,MAAAA,oBAAoB,CAAC;AACnBqB,QAAAA,IAAI,EAAEJ,WAAW;AACjBK,QAAAA,eAAe,EAAEnC,OAAAA;AACnB,OAAC,CAAC,CAAA;AACFH,MAAAA,UAAU,EAAE,CAAA;AACd,KAAA;AAAE,GAAA,eAEFkB,cAAA,CAAAC,aAAA,CAAAD,cAAA,CAAAqB,QAAA,EACG,IAAA,EAAA,CAAArC,kBAAkB,KAAA,IAAA,IAAlBA,kBAAkB,KAAlBA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,kBAAkB,EAAI,kBACrBgB,cAAA,CAAAC,aAAA,CAAA,MAAA,EAAA;AACEC,IAAAA,SAAS,EAAC,gDAAgD;AAC1DoB,IAAAA,GAAG,EAAEhC,YAAa;IAClBuB,QAAQ,EAAGU,CAAC,IAAK;MAAEA,CAAC,CAACC,cAAc,EAAE,CAAA;AAAE,KAAA;AAAE,GAAA,eAEzCxB,cAAA,CAAAC,aAAA,CAACwB,UAAU,EAAA,IAAA,EACR/B,SAAS,CAACgC,+CAA+C,CAC/C,eACb1B,cAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;AAAKC,IAAAA,SAAS,EAAC,6DAAA;GACbF,eAAAA,cAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;AAAKC,IAAAA,SAAS,EAAC,qEAAA;AAAqE,GAAA,EACjFd,YAAY,gBAETY,cAAA,CAAAC,aAAA,CAAC0B,MAAM,EAAA;AACLC,IAAAA,KAAK,EAAC,MAAM;AACZC,IAAAA,MAAM,EAAC,MAAM;AACbC,IAAAA,GAAG,EAAE1C,YAAAA;GACL,CAAA,gBAEFY,cAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;AAAKC,IAAAA,SAAS,EAAC,8EAAA;AAA8E,GAAA,eAC3FF,cAAA,CAAAC,aAAA,CAAC8B,IAAI,EAAA;IACHtB,IAAI,EAAEuB,SAAS,CAACC,QAAS;IACzBC,SAAS,EAAEC,UAAU,CAACC,OAAQ;AAC9BR,IAAAA,KAAK,EAAC,MAAM;AACZC,IAAAA,MAAM,EAAC,MAAA;AAAM,GAAA,CACb,CAEL,CACC,eACN7B,cAAA,CAAAC,aAAA,CAAA,OAAA,EAAA;AACEC,IAAAA,SAAS,EAAC,oEAAoE;AAC9EoB,IAAAA,GAAG,EAAE9B,YAAa;AAClBiB,IAAAA,IAAI,EAAC,MAAM;AACX4B,IAAAA,MAAM,EAAC,kCAAkC;AACzCC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,MAAA;KAAS;IAC3BC,QAAQ,EAAGjB,CAAC,IAAK;AACflC,MAAAA,aAAa,CAACoD,GAAG,CAACC,eAAe,CAACnB,CAAC,CAACoB,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;MACrD1D,UAAU,CAACqC,CAAC,CAACoB,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA;AAC7BpD,MAAAA,YAAY,CAACwB,OAAO,CAACC,KAAK,GAAG,EAAE,CAAA;AACjC,KAAA;AAAE,GAAA,CACF,eACFjB,cAAA,CAAAC,aAAA,CAAC4C,UAAU,EAAA;AACT3C,IAAAA,SAAS,EAAC,qEAAqE;IAC/E4C,OAAO,EAAEA,MAAMtD,YAAY,CAACwB,OAAO,CAAC+B,KAAK,EAAG;IAC5CC,gBAAgB,EAAA,IAAA;AAAA,GAAA,eAEhBhD,cAAA,CAAAC,aAAA,CAACgD,KAAK,EAAA;IACJxC,IAAI,EAAEyC,eAAe,CAACC,QAAS;IAC/BC,KAAK,EAAEC,WAAW,CAAC1C,OAAAA;GAElBjB,EAAAA,SAAS,CAAC4D,8CAA8C,CACnD,CACG,CACT,eACNtD,cAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;AAAKqC,IAAAA,KAAK,EAAE;AAAEiB,MAAAA,SAAS,EAAE,MAAA;AAAO,KAAA;AAAE,GAAA,eAChCvD,cAAA,CAAAC,aAAA,CAACwB,UAAU,EACR/B,IAAAA,EAAAA,SAAS,CAAC8D,gDAAgD,CAChD,CACT,eACNxD,cAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;AAAKC,IAAAA,SAAS,EAAC,8DAAA;AAA8D,GAAA,eAC3EF,cAAA,CAAAC,aAAA,CAACwD,KAAK,EAAA;AACJtC,IAAAA,IAAI,EAAC,qEAAqE;AAC1EG,IAAAA,GAAG,EAAE7B,YAAa;IAClBiE,WAAW,EAAEhE,SAAS,CAACiE,qDAAAA;AAAsD,GAAA,CAC7E,CACE,CAET,CACA,CACG,CACJ,CAAA;AAEV;;;;"}