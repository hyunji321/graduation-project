{"version":3,"file":"context.js","sources":["../../src/modules/CreateOpenChannel/context/CreateOpenChannelProvider.tsx"],"sourcesContent":["import React, { useCallback } from 'react';\nimport { OpenChannel, OpenChannelCreateParams, SendbirdOpenChat } from '@sendbird/chat/openChannel';\nimport useSendbirdStateContext from '../../../hooks/useSendbirdStateContext';\nimport { Logger } from '../../../lib/SendbirdState';\n\nexport interface CreateNewOpenChannelCallbackProps {\n  name: string;\n  coverUrlOrImage?: string;\n}\nexport interface CreateOpenChannelContextInterface extends CreateOpenChannelProviderProps {\n  sdk: SendbirdOpenChat;\n  sdkInitialized: boolean;\n  logger: Logger;\n  createNewOpenChannel: (props: CreateNewOpenChannelCallbackProps) => void;\n}\n\nconst CreateOpenChannelContext = React.createContext<CreateOpenChannelContextInterface>({\n  sdk: null,\n  sdkInitialized: false,\n  logger: null,\n  createNewOpenChannel: null,\n});\n\nexport interface CreateOpenChannelProviderProps {\n  className?: string;\n  children?: React.ReactElement;\n  onCreateChannel?: (channel: OpenChannel) => void;\n  onBeforeCreateChannel?: (params: OpenChannelCreateParams) => OpenChannelCreateParams;\n}\n\nexport const CreateOpenChannelProvider: React.FC<CreateOpenChannelProviderProps> = ({\n  className,\n  children,\n  onCreateChannel,\n  onBeforeCreateChannel,\n}: CreateOpenChannelProviderProps): React.ReactElement => {\n  const { stores, config } = useSendbirdStateContext();\n  const { logger } = config;\n  const sdk = stores?.sdkStore?.sdk || null;\n  const sdkInitialized = stores?.sdkStore?.initialized || false;\n\n  const createNewOpenChannel = useCallback((params: CreateNewOpenChannelCallbackProps): void => {\n    const { name, coverUrlOrImage } = params;\n    if (sdkInitialized) {\n      const params = {} as OpenChannelCreateParams;\n      params.operatorUserIds = [sdk?.currentUser?.userId];\n      params.name = name;\n      params.coverUrlOrImage = coverUrlOrImage;\n      sdk.openChannel.createChannel(onBeforeCreateChannel?.(params) || params)\n        .then((openChannel) => {\n          logger.info('CreateOpenChannel: Succeeded creating openChannel', openChannel);\n          onCreateChannel(openChannel);\n        })\n        .catch((err) => {\n          logger.warning('CreateOpenChannel: Failed creating openChannel', err);\n        });\n    }\n  }, [sdkInitialized, onBeforeCreateChannel, onCreateChannel]);\n\n  return (\n    <CreateOpenChannelContext.Provider\n      value={{\n        // interface\n        sdk: sdk,\n        sdkInitialized: sdkInitialized,\n        logger: logger,\n        createNewOpenChannel: createNewOpenChannel,\n      }}\n    >\n      <div className={`sendbird-create-open-channel ${className}`}>\n        {children}\n      </div>\n    </CreateOpenChannelContext.Provider>\n  );\n};\n\nexport const useCreateOpenChannelContext = (): CreateOpenChannelContextInterface => (\n  React.useContext(CreateOpenChannelContext)\n);\n"],"names":["CreateOpenChannelContext","React","createContext","sdk","sdkInitialized","logger","createNewOpenChannel","CreateOpenChannelProvider","_ref","_stores$sdkStore","_stores$sdkStore2","className","children","onCreateChannel","onBeforeCreateChannel","stores","config","useSendbirdStateContext","sdkStore","initialized","useCallback","params","name","coverUrlOrImage","_sdk$currentUser","operatorUserIds","currentUser","userId","openChannel","createChannel","then","info","catch","err","warning","createElement","Provider","value","useCreateOpenChannelContext","useContext"],"mappings":"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"}