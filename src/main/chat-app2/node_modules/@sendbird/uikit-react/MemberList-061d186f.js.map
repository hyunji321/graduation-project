{"version":3,"file":"MemberList-061d186f.js","sources":["../src/modules/ChannelSettings/components/ModerationPanel/MembersModal.tsx","../src/modules/ChannelSettings/components/ModerationPanel/InviteUsersModal.tsx","../src/modules/ChannelSettings/components/ModerationPanel/MemberList.tsx"],"sourcesContent":["import React, {\n  ReactElement,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport { noop } from '../../../../utils/utils';\n\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport { Member } from '@sendbird/chat/groupChannel';\n\ninterface Props {\n  onCancel(): void;\n}\n\nexport default function MembersModal({ onCancel }: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [memberQuery, setMemberQuery] = useState(null);\n\n  const { channel } = useChannelSettingsContext();\n  const state = useSendbirdStateContext();\n  const currentUser = state?.config?.userId;\n  const { stringSet } = useContext(LocalizationContext);\n\n  useEffect(() => {\n    const memberListQuery = channel?.createMemberListQuery({\n      limit: 20,\n    });\n    memberListQuery.next().then((members) => {\n      setMembers(members);\n    });\n    setMemberQuery(memberListQuery);\n  }, []);\n  return (\n    <div>\n      <Modal\n        isFullScreenOnMobile\n        hideFooter\n        onCancel={() => onCancel()}\n        onSubmit={noop}\n        titleText={stringSet.CHANNEL_SETTING__MEMBERS__SEE_ALL_MEMBERS}\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              memberQuery.next().then((o) => {\n                setMembers([\n                  ...members,\n                  ...o,\n                ]);\n              });\n            }\n          }}\n        >\n          {\n            members.map((member: Member) => (\n              <UserListItem\n                user={member}\n                key={member.userId}\n                currentUser={currentUser}\n                action={({ parentRef, actionRef }) => (\n                  <>\n                    {channel?.myRole === 'operator' && (\n                      <ContextMenu\n                        menuTrigger={(toggleDropdown) => (\n                          <IconButton\n                            className=\"sendbird-user-message__more__menu\"\n                            width=\"32px\"\n                            height=\"32px\"\n                            onClick={toggleDropdown}\n                          >\n                            <Icon\n                              width=\"24px\"\n                              height=\"24px\"\n                              type={IconTypes.MORE}\n                              fillColor={IconColors.CONTENT_INVERSE}\n                            />\n                          </IconButton>\n                        )}\n                        menuItems={(closeDropdown) => (\n                          <MenuItems\n                            parentContainRef={parentRef}\n                            parentRef={actionRef} // for catching location(x, y) of MenuItems\n                            closeDropdown={closeDropdown}\n                            openLeft\n                          >\n                            <MenuItem\n                              disable={currentUser === member.userId}\n                              onClick={() => {\n                                if ((member.role !== 'operator')) {\n                                  channel?.addOperators([member.userId]).then(() => {\n                                    setMembers(members.map(m => {\n                                      if (m.userId === member.userId) {\n                                        return {\n                                          ...member,\n                                          role: 'operator',\n                                        };\n                                      }\n                                      return m;\n                                    }));\n                                    closeDropdown();\n                                  });\n                                } else {\n                                  channel?.removeOperators([member.userId]).then(() => {\n                                    setMembers(members.map(m => {\n                                      if (m.userId === member.userId) {\n                                        return {\n                                          ...member,\n                                          role: '',\n                                        };\n                                      }\n                                      return m;\n                                    }));\n                                    closeDropdown();\n                                  });\n                                }\n                              }}\n                              dataSbId={`channel_setting_member_context_menu_${(\n                                member.role !== 'operator'\n                              ) ? 'register_as_operator' : 'unregister_operator'}`}\n                            >\n                              {\n                                member.role !== 'operator'\n                                  ? stringSet.CHANNEL_SETTING__MODERATION__REGISTER_AS_OPERATOR\n                                  : stringSet.CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR\n                              }\n                            </MenuItem>\n                            {\n                              // No muted members in broadcast channel\n                              !channel?.isBroadcast && (\n                                <MenuItem\n                                  onClick={() => {\n                                    if (member.isMuted) {\n                                      channel?.unmuteUser(member).then(() => {\n                                        setMembers(members.map(m => {\n                                          if (m.userId === member.userId) {\n                                            return {\n                                              ...member,\n                                              isMuted: false,\n                                            };\n                                          }\n                                          return m;\n                                        }));\n                                        closeDropdown();\n                                      });\n                                    } else {\n                                      channel?.muteUser(member).then(() => {\n                                        setMembers(members.map(m => {\n                                          if (m.userId === member.userId) {\n                                            return {\n                                              ...member,\n                                              isMuted: true,\n                                            };\n                                          }\n                                          return m;\n                                        }));\n                                        closeDropdown();\n                                      });\n                                    }\n                                  }}\n                                  dataSbId={`channel_setting_member_context_menu_${(\n                                    member.isMuted) ? 'unmute' : 'mute'}`\n                                  }\n                                >\n                                  {\n                                    member.isMuted\n                                      ? stringSet.CHANNEL_SETTING__MODERATION__UNMUTE\n                                      : stringSet.CHANNEL_SETTING__MODERATION__MUTE\n                                  }\n                                </MenuItem>\n                              )\n                            }\n                            <MenuItem\n                              onClick={() => {\n                                channel?.banUser(member, -1, '').then(() => {\n                                  setMembers(members.filter(({ userId }) => {\n                                    return userId !== member.userId;\n                                  }));\n                                });\n                              }}\n                              dataSbId=\"channel_setting_member_context_menu_ban\"\n                            >\n                              {stringSet.CHANNEL_SETTING__MODERATION__BAN}\n                            </MenuItem>\n                          </MenuItems>\n                        )}\n                      />\n                    )}\n                  </>\n                )}\n              />\n            ))\n          }\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, { ReactElement, useEffect, useState } from 'react';\n\nimport Modal from '../../../../ui/Modal';\nimport { ButtonTypes } from '../../../../ui/Button';\nimport UserListItem from '../../../../ui/UserListItem';\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { useLocalization } from '../../../../lib/LocalizationContext';\n\ninterface Props {\n  onCancel(): void;\n  onSubmit(members: Array<string>): void;\n}\n\nconst isAboutSame = (a, b, px) => (Math.abs(a - b) <= px);\n\nexport default function InviteUsers({\n  onCancel,\n  onSubmit,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [selectedMembers, setSelectedMembers] = useState({});\n  const [userQuery, setUserQuery] = useState(null);\n\n  const state = useSendbirdStateContext();\n  const sdk = state?.stores?.sdkStore?.sdk;\n  const globalUserListQuery = state?.config?.userListQuery;\n\n  const { channel, overrideInviteUser, queries } = useChannelSettingsContext();\n  const userFilledQuery = {\n    ...queries?.applicationUserListQuery,\n  };\n  const { stringSet } = useLocalization();\n\n  useEffect(() => {\n    const userListQuery = globalUserListQuery\n      ? globalUserListQuery()\n      : sdk?.createApplicationUserListQuery(userFilledQuery);\n    if (userListQuery?.next) {\n      userListQuery.next().then((members) => {\n        setMembers(members);\n      });\n      setUserQuery(userListQuery);\n    }\n  }, [sdk]);\n  return (\n    <div>\n      <Modal\n        isFullScreenOnMobile\n        disabled={Object.keys(selectedMembers).length === 0}\n        submitText={stringSet.BUTTON__INVITE}\n        type={ButtonTypes.PRIMARY}\n        onCancel={() => onCancel()}\n        onSubmit={() => {\n          const members = Object.keys(selectedMembers).filter((m) => selectedMembers[m]);\n          if (typeof overrideInviteUser === 'function') {\n            overrideInviteUser({\n              users: members,\n              onClose: onCancel,\n              channel,\n            });\n            return;\n          }\n          channel?.inviteWithUserIds(members).then(() => {\n            onSubmit(members);\n          });\n        }}\n        titleText={stringSet.CHANNEL_SETTING__MEMBERS__SELECT_TITLE}\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = userQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = isAboutSame(target.clientHeight + target.scrollTop, target.scrollHeight, 20);\n            if (hasNext && fetchMore) {\n              userQuery.next().then((users) => {\n                setMembers([\n                  ...members,\n                  ...users,\n                ]);\n              });\n            }\n          }}\n        >\n          <div className=\"sendbird-more-members__popup-scroll__inner\">\n            {members.map((member) => {\n              const isJoinedMember = channel?.members?.some(({ userId }) => userId === member?.userId);\n              return (\n                <UserListItem\n                  checkBox\n                  checked={isJoinedMember || selectedMembers[member.userId]}\n                  disabled={isJoinedMember}\n                  onChange={\n                    (event) => {\n                      const modifiedSelectedMembers = {\n                        ...selectedMembers,\n                        [event.target.id]: event.target.checked,\n                      };\n                      if (!event.target.checked) {\n                        delete modifiedSelectedMembers[event.target.id];\n                      }\n                      setSelectedMembers(modifiedSelectedMembers);\n                    }\n                  }\n                  user={member}\n                  key={member.userId}\n                />\n              );\n            })}\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n  useContext,\n} from 'react';\nimport type { Member } from '@sendbird/chat/groupChannel';\n\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport UserListItem from '../UserListItem';\nimport MembersModal from './MembersModal';\nimport InviteUsers from './InviteUsersModal';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport uuidv4 from '../../../../utils/uuid';\n\nexport const MemberList = (): ReactElement => {\n  const [members, setMembers] = useState<Array<Member>>([]);\n  const [hasNext, setHasNext] = useState(false);\n  const [showAllMembers, setShowAllMembers] = useState(false);\n  const [showInviteUsers, setShowInviteUsers] = useState(false);\n\n  const state = useSendbirdStateContext();\n  const {\n    channel,\n    setChannelUpdateId,\n  } = useChannelSettingsContext();\n  const { stringSet } = useContext(LocalizationContext);\n\n  const sdk = state?.stores?.sdkStore?.sdk;\n  const userId = state?.config?.userId;\n\n  useEffect(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const memberUserListQuery = channel?.createMemberListQuery({ limit: 10 });\n    memberUserListQuery.next().then((members) => {\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refreshList = useCallback(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n    const memberUserListQuery = channel?.createMemberListQuery({ limit: 10 });\n    memberUserListQuery.next().then((members) => {\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n      setChannelUpdateId(uuidv4());\n    });\n  }, [channel]);\n\n  return (\n    <div className=\"sendbird-channel-settings-member-list sendbird-accordion\">\n      {\n        members.map((member) => (\n          <UserListItem\n            key={member.userId}\n            user={member}\n            currentUser={sdk.currentUser.userId}\n            action={\n              (channel?.myRole === 'operator' && userId !== member.userId)\n                ? ({ actionRef, parentRef }) => (\n                  <ContextMenu\n                    menuTrigger={(toggleDropdown) => (\n                      <IconButton\n                        className=\"sendbird-user-message__more__menu\"\n                        width=\"32px\"\n                        height=\"32px\"\n                        onClick={toggleDropdown}\n                      >\n                        <Icon\n                          width=\"24px\"\n                          height=\"24px\"\n                          type={IconTypes.MORE}\n                          fillColor={IconColors.CONTENT_INVERSE}\n                        />\n                      </IconButton>\n                    )}\n                    menuItems={(closeDropdown) => (\n                      <MenuItems\n                        parentContainRef={parentRef}\n                        parentRef={actionRef} // for catching location(x, y) of MenuItems\n                        closeDropdown={closeDropdown}\n                        openLeft\n                      >\n                        <MenuItem\n                          onClick={() => {\n                            if ((member.role !== 'operator')) {\n                              channel?.addOperators([member.userId]).then(() => {\n                                refreshList();\n                                closeDropdown();\n                              });\n                            } else {\n                              channel?.removeOperators([member.userId]).then(() => {\n                                refreshList();\n                                closeDropdown();\n                              });\n                            }\n                          }}\n                          dataSbId={`channel_setting_member_context_menu_${(\n                            member.role !== 'operator'\n                          ) ? 'register_as_operator' : 'unregister_operator'}`}\n                        >\n                          {\n                            member.role !== 'operator'\n                              ? stringSet.CHANNEL_SETTING__MODERATION__REGISTER_AS_OPERATOR\n                              : stringSet.CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR\n                          }\n                        </MenuItem>\n                        {\n                          // No muted members in broadcast channel\n                          !channel?.isBroadcast && (\n                            <MenuItem\n                              onClick={() => {\n                                if (member.isMuted) {\n                                  channel?.unmuteUser(member).then(() => {\n                                    refreshList();\n                                    closeDropdown();\n                                  });\n                                } else {\n                                  channel?.muteUser(member).then(() => {\n                                    refreshList();\n                                    closeDropdown();\n                                  });\n                                }\n                              }}\n                              dataSbId={`channel_setting_member_context_menu_${(\n                                member.isMuted) ? 'unmute' : 'mute'}`\n                              }\n                            >\n                              {\n                                member.isMuted\n                                  ? stringSet.CHANNEL_SETTING__MODERATION__UNMUTE\n                                  : stringSet.CHANNEL_SETTING__MODERATION__MUTE\n                              }\n                            </MenuItem>\n                          )\n                        }\n                        <MenuItem\n                          onClick={() => {\n                            channel?.banUser(member, -1, '').then(() => {\n                              refreshList();\n                              closeDropdown();\n                            });\n                          }}\n                          dataSbId=\"channel_setting_member_context_menu_ban\"\n                        >\n                          {stringSet.CHANNEL_SETTING__MODERATION__BAN}\n                        </MenuItem>\n                      </MenuItems>\n                    )}\n                  />\n                )\n                : null\n            }\n          />\n        ))\n      }\n      <div\n        className=\"sendbird-channel-settings-accordion__footer\"\n      >\n        {\n          hasNext && (\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => setShowAllMembers(true)}\n            >\n              {stringSet.CHANNEL_SETTING__MEMBERS__SEE_ALL_MEMBERS}\n            </Button>\n          )\n        }\n        <Button\n          type={ButtonTypes.SECONDARY}\n          size={ButtonSizes.SMALL}\n          onClick={() => setShowInviteUsers(true)}\n        >\n          {stringSet.CHANNEL_SETTING__MEMBERS__INVITE_MEMBER}\n        </Button>\n      </div>\n      {\n        showAllMembers && (\n          <MembersModal\n            onCancel={() => {\n              setShowAllMembers(false);\n              refreshList();\n            }}\n          />\n        )\n      }\n      {\n        showInviteUsers && (\n          <InviteUsers\n            onSubmit={() => {\n              setShowInviteUsers(false);\n              refreshList();\n            }}\n            onCancel={() => setShowInviteUsers(false)}\n          />\n        )\n      }\n    </div>\n  );\n};\n\nexport default MemberList;\n"],"names":["MembersModal","_ref","_state$config","onCancel","members","setMembers","useState","memberQuery","setMemberQuery","channel","useChannelSettingsContext","state","useSendbirdStateContext","currentUser","config","userId","stringSet","useContext","LocalizationContext","useEffect","memberListQuery","createMemberListQuery","limit","next","then","React","createElement","Modal","isFullScreenOnMobile","hideFooter","onSubmit","noop","titleText","CHANNEL_SETTING__MEMBERS__SEE_ALL_MEMBERS","className","onScroll","e","hasNext","target","fetchMore","clientHeight","scrollTop","scrollHeight","o","map","member","UserListItem","user","key","action","_ref2","parentRef","actionRef","Fragment","myRole","ContextMenu","menuTrigger","toggleDropdown","IconButton","width","height","onClick","Icon","type","IconTypes","MORE","fillColor","IconColors","CONTENT_INVERSE","menuItems","closeDropdown","MenuItems","parentContainRef","openLeft","MenuItem","disable","role","addOperators","m","_objectSpread","removeOperators","dataSbId","CHANNEL_SETTING__MODERATION__REGISTER_AS_OPERATOR","CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR","isBroadcast","isMuted","unmuteUser","muteUser","CHANNEL_SETTING__MODERATION__UNMUTE","CHANNEL_SETTING__MODERATION__MUTE","banUser","filter","_ref3","CHANNEL_SETTING__MODERATION__BAN","isAboutSame","a","b","px","Math","abs","InviteUsers","_state$stores","_state$stores$sdkStor","selectedMembers","setSelectedMembers","userQuery","setUserQuery","sdk","stores","sdkStore","globalUserListQuery","userListQuery","overrideInviteUser","queries","userFilledQuery","applicationUserListQuery","useLocalization","createApplicationUserListQuery","disabled","Object","keys","length","submitText","BUTTON__INVITE","ButtonTypes","PRIMARY","users","onClose","inviteWithUserIds","CHANNEL_SETTING__MEMBERS__SELECT_TITLE","_channel$members","isJoinedMember","some","checkBox","checked","onChange","event","modifiedSelectedMembers","id","MemberList","setHasNext","showAllMembers","setShowAllMembers","showInviteUsers","setShowInviteUsers","setChannelUpdateId","memberUserListQuery","refreshList","useCallback","uuidv4","Button","SECONDARY","size","ButtonSizes","SMALL","CHANNEL_SETTING__MEMBERS__INVITE_MEMBER"],"mappings":";;;;;;;;;;;;;;;AAuBe,SAASA,YAAYA,CAAAC,IAAA,EAAoC;AAAA,EAAA,IAAAC,aAAA,CAAA;EAAA,IAAnC;AAAEC,IAAAA,QAAAA;AAAgB,GAAC,GAAAF,IAAA,CAAA;EACtD,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC,CAAA;EAC1C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGF,QAAQ,CAAC,IAAI,CAAC,CAAA;EAEpD,MAAM;AAAEG,IAAAA,OAAAA;GAAS,GAAGC,yBAAyB,EAAE,CAAA;EAC/C,MAAMC,KAAK,GAAGC,uBAAuB,EAAE,CAAA;AACvC,EAAA,MAAMC,WAAW,GAAGF,KAAK,KAALA,IAAAA,IAAAA,KAAK,wBAAAT,aAAA,GAALS,KAAK,CAAEG,MAAM,MAAAZ,IAAAA,IAAAA,aAAA,KAAbA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,aAAA,CAAea,MAAM,CAAA;EACzC,MAAM;AAAEC,IAAAA,SAAAA;AAAU,GAAC,GAAGC,UAAU,CAACC,mBAAmB,CAAC,CAAA;AAErDC,EAAAA,SAAS,CAAC,MAAM;IACd,MAAMC,eAAe,GAAGX,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAPA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,OAAO,CAAEY,qBAAqB,CAAC;AACrDC,MAAAA,KAAK,EAAE,EAAA;AACT,KAAC,CAAC,CAAA;AACFF,IAAAA,eAAe,CAACG,IAAI,EAAE,CAACC,IAAI,CAAEpB,OAAO,IAAK;MACvCC,UAAU,CAACD,OAAO,CAAC,CAAA;AACrB,KAAC,CAAC,CAAA;IACFI,cAAc,CAACY,eAAe,CAAC,CAAA;GAChC,EAAE,EAAE,CAAC,CAAA;EACN,oBACEK,cAAA,CAAAC,aAAA,CAAA,KAAA,EAAA,IAAA,eACED,cAAA,CAAAC,aAAA,CAACC,KAAK,EAAA;IACJC,oBAAoB,EAAA,IAAA;IACpBC,UAAU,EAAA,IAAA;AACV1B,IAAAA,QAAQ,EAAEA,MAAMA,QAAQ,EAAG;AAC3B2B,IAAAA,QAAQ,EAAEC,IAAK;IACfC,SAAS,EAAEhB,SAAS,CAACiB,yCAAAA;GAErBR,eAAAA,cAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;AACEQ,IAAAA,SAAS,EAAC,qCAAqC;IAC/CC,QAAQ,EAAGC,CAAC,IAAK;MACf,MAAM;AAAEC,QAAAA,OAAAA;AAAQ,OAAC,GAAG9B,WAAW,CAAA;AAC/B,MAAA,MAAM+B,MAAM,GAAGF,CAAC,CAACE,MAA6B,CAAA;AAC9C,MAAA,MAAMC,SAAS,GACbD,MAAM,CAACE,YAAY,GAAGF,MAAM,CAACG,SAAS,KAAKH,MAAM,CAACI,YACnD,CAAA;MAED,IAAIL,OAAO,IAAIE,SAAS,EAAE;AACxBhC,QAAAA,WAAW,CAACgB,IAAI,EAAE,CAACC,IAAI,CAAEmB,CAAC,IAAK;UAC7BtC,UAAU,CAAC,CACT,GAAGD,OAAO,EACV,GAAGuC,CAAC,CACL,CAAC,CAAA;AACJ,SAAC,CAAC,CAAA;AACJ,OAAA;AACF,KAAA;GAGEvC,EAAAA,OAAO,CAACwC,GAAG,CAAEC,MAAc,iBACzBpB,cAAA,CAAAC,aAAA,CAACoB,YAAY,EAAA;AACXC,IAAAA,IAAI,EAAEF,MAAO;IACbG,GAAG,EAAEH,MAAM,CAAC9B,MAAO;AACnBF,IAAAA,WAAW,EAAEA,WAAY;AACzBoC,IAAAA,MAAM,EAAEC,KAAA,IAAA;MAAA,IAAC;QAAEC,SAAS;AAAEC,QAAAA,SAAAA;AAAU,OAAC,GAAAF,KAAA,CAAA;MAAA,oBAC/BzB,cAAA,CAAAC,aAAA,CAAAD,cAAA,CAAA4B,QAAA,EACG,IAAA,EAAA,CAAA5C,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAPA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,OAAO,CAAE6C,MAAM,MAAK,UAAU,iBAC7B7B,cAAA,CAAAC,aAAA,CAAC6B,WAAW,EAAA;AACVC,QAAAA,WAAW,EAAGC,cAAc,iBAC1BhC,cAAA,CAAAC,aAAA,CAACgC,UAAU,EAAA;AACTxB,UAAAA,SAAS,EAAC,mCAAmC;AAC7CyB,UAAAA,KAAK,EAAC,MAAM;AACZC,UAAAA,MAAM,EAAC,MAAM;AACbC,UAAAA,OAAO,EAAEJ,cAAAA;AAAe,SAAA,eAExBhC,cAAA,CAAAC,aAAA,CAACoC,IAAI,EAAA;AACHH,UAAAA,KAAK,EAAC,MAAM;AACZC,UAAAA,MAAM,EAAC,MAAM;UACbG,IAAI,EAAEC,SAAS,CAACC,IAAK;UACrBC,SAAS,EAAEC,UAAU,CAACC,eAAAA;AAAgB,SAAA,CACtC,CAEJ;AACFC,QAAAA,SAAS,EAAGC,aAAa,iBACvB7C,cAAA,CAAAC,aAAA,CAAC6C,SAAS,EAAA;AACRC,UAAAA,gBAAgB,EAAErB,SAAU;UAC5BA,SAAS,EAAEC,SAAU;AAAC;AACtBkB,UAAAA,aAAa,EAAEA,aAAc;UAC7BG,QAAQ,EAAA,IAAA;AAAA,SAAA,eAERhD,cAAA,CAAAC,aAAA,CAACgD,QAAQ,EAAA;AACPC,UAAAA,OAAO,EAAE9D,WAAW,KAAKgC,MAAM,CAAC9B,MAAO;UACvC8C,OAAO,EAAEA,MAAM;AACb,YAAA,IAAKhB,MAAM,CAAC+B,IAAI,KAAK,UAAU,EAAG;AAChCnE,cAAAA,OAAO,aAAPA,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAPA,OAAO,CAAEoE,YAAY,CAAC,CAAChC,MAAM,CAAC9B,MAAM,CAAC,CAAC,CAACS,IAAI,CAAC,MAAM;AAChDnB,gBAAAA,UAAU,CAACD,OAAO,CAACwC,GAAG,CAACkC,CAAC,IAAI;AAC1B,kBAAA,IAAIA,CAAC,CAAC/D,MAAM,KAAK8B,MAAM,CAAC9B,MAAM,EAAE;AAC9B,oBAAA,OAAAgE,cAAA,CAAAA,cAAA,CAAA,EAAA,EACKlC,MAAM,CAAA,EAAA,EAAA,EAAA;AACT+B,sBAAAA,IAAI,EAAE,UAAA;AAAU,qBAAA,CAAA,CAAA;AAEpB,mBAAA;AACA,kBAAA,OAAOE,CAAC,CAAA;AACV,iBAAC,CAAC,CAAC,CAAA;AACHR,gBAAAA,aAAa,EAAE,CAAA;AACjB,eAAC,CAAC,CAAA;AACJ,aAAC,MAAM;AACL7D,cAAAA,OAAO,aAAPA,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAPA,OAAO,CAAEuE,eAAe,CAAC,CAACnC,MAAM,CAAC9B,MAAM,CAAC,CAAC,CAACS,IAAI,CAAC,MAAM;AACnDnB,gBAAAA,UAAU,CAACD,OAAO,CAACwC,GAAG,CAACkC,CAAC,IAAI;AAC1B,kBAAA,IAAIA,CAAC,CAAC/D,MAAM,KAAK8B,MAAM,CAAC9B,MAAM,EAAE;AAC9B,oBAAA,OAAAgE,cAAA,CAAAA,cAAA,CAAA,EAAA,EACKlC,MAAM,CAAA,EAAA,EAAA,EAAA;AACT+B,sBAAAA,IAAI,EAAE,EAAA;AAAE,qBAAA,CAAA,CAAA;AAEZ,mBAAA;AACA,kBAAA,OAAOE,CAAC,CAAA;AACV,iBAAC,CAAC,CAAC,CAAA;AACHR,gBAAAA,aAAa,EAAE,CAAA;AACjB,eAAC,CAAC,CAAA;AACJ,aAAA;WACA;UACFW,QAAQ,EAAG,CACTpC,oCAAAA,EAAAA,MAAM,CAAC+B,IAAI,KAAK,UAAU,GACxB,sBAAsB,GAAG,qBAAsB,CAAA,CAAA;AAAE,SAAA,EAGnD/B,MAAM,CAAC+B,IAAI,KAAK,UAAU,GACtB5D,SAAS,CAACkE,iDAAiD,GAC3DlE,SAAS,CAACmE,gDAAgD,CAEvD;AAET;AACA,QAAA,EAAC1E,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAA,KAAA,CAAA,IAAPA,OAAO,CAAE2E,WAAW,CAAA,iBACnB3D,cAAA,CAAAC,aAAA,CAACgD,QAAQ,EAAA;UACPb,OAAO,EAAEA,MAAM;YACb,IAAIhB,MAAM,CAACwC,OAAO,EAAE;AAClB5E,cAAAA,OAAO,KAAPA,IAAAA,IAAAA,OAAO,KAAPA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,OAAO,CAAE6E,UAAU,CAACzC,MAAM,CAAC,CAACrB,IAAI,CAAC,MAAM;AACrCnB,gBAAAA,UAAU,CAACD,OAAO,CAACwC,GAAG,CAACkC,CAAC,IAAI;AAC1B,kBAAA,IAAIA,CAAC,CAAC/D,MAAM,KAAK8B,MAAM,CAAC9B,MAAM,EAAE;AAC9B,oBAAA,OAAAgE,cAAA,CAAAA,cAAA,CAAA,EAAA,EACKlC,MAAM,CAAA,EAAA,EAAA,EAAA;AACTwC,sBAAAA,OAAO,EAAE,KAAA;AAAK,qBAAA,CAAA,CAAA;AAElB,mBAAA;AACA,kBAAA,OAAOP,CAAC,CAAA;AACV,iBAAC,CAAC,CAAC,CAAA;AACHR,gBAAAA,aAAa,EAAE,CAAA;AACjB,eAAC,CAAC,CAAA;AACJ,aAAC,MAAM;AACL7D,cAAAA,OAAO,KAAPA,IAAAA,IAAAA,OAAO,KAAPA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,OAAO,CAAE8E,QAAQ,CAAC1C,MAAM,CAAC,CAACrB,IAAI,CAAC,MAAM;AACnCnB,gBAAAA,UAAU,CAACD,OAAO,CAACwC,GAAG,CAACkC,CAAC,IAAI;AAC1B,kBAAA,IAAIA,CAAC,CAAC/D,MAAM,KAAK8B,MAAM,CAAC9B,MAAM,EAAE;AAC9B,oBAAA,OAAAgE,cAAA,CAAAA,cAAA,CAAA,EAAA,EACKlC,MAAM,CAAA,EAAA,EAAA,EAAA;AACTwC,sBAAAA,OAAO,EAAE,IAAA;AAAI,qBAAA,CAAA,CAAA;AAEjB,mBAAA;AACA,kBAAA,OAAOP,CAAC,CAAA;AACV,iBAAC,CAAC,CAAC,CAAA;AACHR,gBAAAA,aAAa,EAAE,CAAA;AACjB,eAAC,CAAC,CAAA;AACJ,aAAA;WACA;UACFW,QAAQ,EAAG,uCACTpC,MAAM,CAACwC,OAAO,GAAI,QAAQ,GAAG,MAAO,CAAA,CAAA;AACrC,SAAA,EAGCxC,MAAM,CAACwC,OAAO,GACVrE,SAAS,CAACwE,mCAAmC,GAC7CxE,SAAS,CAACyE,iCAAiC,CAGpD,eAEHhE,cAAA,CAAAC,aAAA,CAACgD,QAAQ,EAAA;UACPb,OAAO,EAAEA,MAAM;AACbpD,YAAAA,OAAO,aAAPA,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAPA,OAAO,CAAEiF,OAAO,CAAC7C,MAAM,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAACrB,IAAI,CAAC,MAAM;AAC1CnB,cAAAA,UAAU,CAACD,OAAO,CAACuF,MAAM,CAACC,KAAA,IAAgB;gBAAA,IAAf;AAAE7E,kBAAAA,MAAAA;AAAO,iBAAC,GAAA6E,KAAA,CAAA;AACnC,gBAAA,OAAO7E,MAAM,KAAK8B,MAAM,CAAC9B,MAAM,CAAA;AACjC,eAAC,CAAC,CAAC,CAAA;AACL,aAAC,CAAC,CAAA;WACF;AACFkE,UAAAA,QAAQ,EAAC,yCAAA;SAERjE,EAAAA,SAAS,CAAC6E,gCAAgC,CAClC,CAAA;AAEb,OAAA,CAEL,CACA,CAAA;AAAA,KAAA;GAGR,CAAA,CAAC,CAEA,CACA,CACJ,CAAA;AAEV;;ACtMA,MAAMC,WAAW,GAAGA,CAACC,CAAC,EAAEC,CAAC,EAAEC,EAAE,KAAMC,IAAI,CAACC,GAAG,CAACJ,CAAC,GAAGC,CAAC,CAAC,IAAIC,EAAG,CAAA;AAE1C,SAASG,WAAWA,CAAAnG,IAAA,EAGX;AAAA,EAAA,IAAAoG,aAAA,EAAAC,qBAAA,EAAApG,aAAA,CAAA;EAAA,IAHY;IAClCC,QAAQ;AACR2B,IAAAA,QAAAA;AACK,GAAC,GAAA7B,IAAA,CAAA;EACN,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC,CAAA;EAC1C,MAAM,CAACiG,eAAe,EAAEC,kBAAkB,CAAC,GAAGlG,QAAQ,CAAC,EAAE,CAAC,CAAA;EAC1D,MAAM,CAACmG,SAAS,EAAEC,YAAY,CAAC,GAAGpG,QAAQ,CAAC,IAAI,CAAC,CAAA;EAEhD,MAAMK,KAAK,GAAGC,uBAAuB,EAAE,CAAA;EACvC,MAAM+F,GAAG,GAAGhG,KAAK,KAALA,IAAAA,IAAAA,KAAK,wBAAA0F,aAAA,GAAL1F,KAAK,CAAEiG,MAAM,MAAA,IAAA,IAAAP,aAAA,KAAAC,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,CAAAA,qBAAA,GAAbD,aAAA,CAAeQ,QAAQ,cAAAP,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAvBA,qBAAA,CAAyBK,GAAG,CAAA;AACxC,EAAA,MAAMG,mBAAmB,GAAGnG,KAAK,KAALA,IAAAA,IAAAA,KAAK,wBAAAT,aAAA,GAALS,KAAK,CAAEG,MAAM,MAAAZ,IAAAA,IAAAA,aAAA,KAAbA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,aAAA,CAAe6G,aAAa,CAAA;EAExD,MAAM;IAAEtG,OAAO;IAAEuG,kBAAkB;AAAEC,IAAAA,OAAAA;GAAS,GAAGvG,yBAAyB,EAAE,CAAA;EAC5E,MAAMwG,eAAe,GAAAnC,cAAA,CAChBkC,EAAAA,EAAAA,OAAO,KAAPA,IAAAA,IAAAA,OAAO,KAAPA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,OAAO,CAAEE,wBAAwB,CACrC,CAAA;EACD,MAAM;AAAEnG,IAAAA,SAAAA;GAAW,GAAGoG,eAAe,EAAE,CAAA;AAEvCjG,EAAAA,SAAS,CAAC,MAAM;AACd,IAAA,MAAM4F,aAAa,GAAGD,mBAAmB,GACrCA,mBAAmB,EAAE,GACrBH,GAAG,KAAHA,IAAAA,IAAAA,GAAG,uBAAHA,GAAG,CAAEU,8BAA8B,CAACH,eAAe,CAAC,CAAA;AACxD,IAAA,IAAIH,aAAa,KAAbA,IAAAA,IAAAA,aAAa,eAAbA,aAAa,CAAExF,IAAI,EAAE;AACvBwF,MAAAA,aAAa,CAACxF,IAAI,EAAE,CAACC,IAAI,CAAEpB,OAAO,IAAK;QACrCC,UAAU,CAACD,OAAO,CAAC,CAAA;AACrB,OAAC,CAAC,CAAA;MACFsG,YAAY,CAACK,aAAa,CAAC,CAAA;AAC7B,KAAA;AACF,GAAC,EAAE,CAACJ,GAAG,CAAC,CAAC,CAAA;EACT,oBACElF,cAAA,CAAAC,aAAA,CAAA,KAAA,EAAA,IAAA,eACED,cAAA,CAAAC,aAAA,CAACC,KAAK,EAAA;IACJC,oBAAoB,EAAA,IAAA;IACpB0F,QAAQ,EAAEC,MAAM,CAACC,IAAI,CAACjB,eAAe,CAAC,CAACkB,MAAM,KAAK,CAAE;IACpDC,UAAU,EAAE1G,SAAS,CAAC2G,cAAe;IACrC5D,IAAI,EAAE6D,WAAW,CAACC,OAAQ;AAC1B1H,IAAAA,QAAQ,EAAEA,MAAMA,QAAQ,EAAG;IAC3B2B,QAAQ,EAAEA,MAAM;AACd,MAAA,MAAM1B,OAAO,GAAGmH,MAAM,CAACC,IAAI,CAACjB,eAAe,CAAC,CAACZ,MAAM,CAAEb,CAAC,IAAKyB,eAAe,CAACzB,CAAC,CAAC,CAAC,CAAA;AAC9E,MAAA,IAAI,OAAOkC,kBAAkB,KAAK,UAAU,EAAE;AAC5CA,QAAAA,kBAAkB,CAAC;AACjBc,UAAAA,KAAK,EAAE1H,OAAO;AACd2H,UAAAA,OAAO,EAAE5H,QAAQ;AACjBM,UAAAA,OAAAA;AACF,SAAC,CAAC,CAAA;AACF,QAAA,OAAA;AACF,OAAA;AACAA,MAAAA,OAAO,KAAPA,IAAAA,IAAAA,OAAO,KAAPA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,OAAO,CAAEuH,iBAAiB,CAAC5H,OAAO,CAAC,CAACoB,IAAI,CAAC,MAAM;QAC7CM,QAAQ,CAAC1B,OAAO,CAAC,CAAA;AACnB,OAAC,CAAC,CAAA;KACF;IACF4B,SAAS,EAAEhB,SAAS,CAACiH,sCAAAA;GAErBxG,eAAAA,cAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;AACEQ,IAAAA,SAAS,EAAC,qCAAqC;IAC/CC,QAAQ,EAAGC,CAAC,IAAK;MACf,MAAM;AAAEC,QAAAA,OAAAA;AAAQ,OAAC,GAAGoE,SAAS,CAAA;AAC7B,MAAA,MAAMnE,MAAM,GAAGF,CAAC,CAACE,MAA6B,CAAA;AAC9C,MAAA,MAAMC,SAAS,GAAGuD,WAAW,CAACxD,MAAM,CAACE,YAAY,GAAGF,MAAM,CAACG,SAAS,EAAEH,MAAM,CAACI,YAAY,EAAE,EAAE,CAAC,CAAA;MAC9F,IAAIL,OAAO,IAAIE,SAAS,EAAE;AACxBkE,QAAAA,SAAS,CAAClF,IAAI,EAAE,CAACC,IAAI,CAAEsG,KAAK,IAAK;UAC/BzH,UAAU,CAAC,CACT,GAAGD,OAAO,EACV,GAAG0H,KAAK,CACT,CAAC,CAAA;AACJ,SAAC,CAAC,CAAA;AACJ,OAAA;AACF,KAAA;GAEArG,eAAAA,cAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;AAAKQ,IAAAA,SAAS,EAAC,4CAAA;AAA4C,GAAA,EACxD9B,OAAO,CAACwC,GAAG,CAAEC,MAAM,IAAK;AAAA,IAAA,IAAAqF,gBAAA,CAAA;AACvB,IAAA,MAAMC,cAAc,GAAG1H,OAAO,aAAPA,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAAyH,gBAAA,GAAPzH,OAAO,CAAEL,OAAO,cAAA8H,gBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAhBA,gBAAA,CAAkBE,IAAI,CAAClF,KAAA,IAAA;MAAA,IAAC;AAAEnC,QAAAA,MAAAA;AAAO,OAAC,GAAAmC,KAAA,CAAA;MAAA,OAAKnC,MAAM,MAAK8B,MAAM,KAAA,IAAA,IAANA,MAAM,KAANA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,MAAM,CAAE9B,MAAM,CAAA,CAAA;KAAC,CAAA,CAAA;AACxF,IAAA,oBACEU,cAAA,CAAAC,aAAA,CAACoB,YAAY,EAAA;MACXuF,QAAQ,EAAA,IAAA;MACRC,OAAO,EAAEH,cAAc,IAAI5B,eAAe,CAAC1D,MAAM,CAAC9B,MAAM,CAAE;AAC1DuG,MAAAA,QAAQ,EAAEa,cAAe;MACzBI,QAAQ,EACLC,KAAK,IAAK;AACT,QAAA,MAAMC,uBAAuB,GAAA1D,cAAA,CAAAA,cAAA,KACxBwB,eAAe,CAAA,EAAA,EAAA,EAAA;UAClB,CAACiC,KAAK,CAAClG,MAAM,CAACoG,EAAE,GAAGF,KAAK,CAAClG,MAAM,CAACgG,OAAAA;SACjC,CAAA,CAAA;AACD,QAAA,IAAI,CAACE,KAAK,CAAClG,MAAM,CAACgG,OAAO,EAAE;AACzB,UAAA,OAAOG,uBAAuB,CAACD,KAAK,CAAClG,MAAM,CAACoG,EAAE,CAAC,CAAA;AACjD,SAAA;QACAlC,kBAAkB,CAACiC,uBAAuB,CAAC,CAAA;OAE9C;AACD1F,MAAAA,IAAI,EAAEF,MAAO;MACbG,GAAG,EAAEH,MAAM,CAAC9B,MAAAA;KACZ,CAAA,CAAA;AAEN,GAAC,CAAC,CACE,CACF,CACA,CACJ,CAAA;AAEV;;AC7Fa4H,MAAAA,UAAU,GAAGA,MAAoB;AAAA,EAAA,IAAAtC,aAAA,EAAAC,qBAAA,EAAApG,aAAA,CAAA;EAC5C,MAAM,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAGC,QAAQ,CAAgB,EAAE,CAAC,CAAA;EACzD,MAAM,CAAC+B,OAAO,EAAEuG,UAAU,CAAC,GAAGtI,QAAQ,CAAC,KAAK,CAAC,CAAA;EAC7C,MAAM,CAACuI,cAAc,EAAEC,iBAAiB,CAAC,GAAGxI,QAAQ,CAAC,KAAK,CAAC,CAAA;EAC3D,MAAM,CAACyI,eAAe,EAAEC,kBAAkB,CAAC,GAAG1I,QAAQ,CAAC,KAAK,CAAC,CAAA;EAE7D,MAAMK,KAAK,GAAGC,uBAAuB,EAAE,CAAA;EACvC,MAAM;IACJH,OAAO;AACPwI,IAAAA,kBAAAA;GACD,GAAGvI,yBAAyB,EAAE,CAAA;EAC/B,MAAM;AAAEM,IAAAA,SAAAA;AAAU,GAAC,GAAGC,UAAU,CAACC,mBAAmB,CAAC,CAAA;EAErD,MAAMyF,GAAG,GAAGhG,KAAK,KAALA,IAAAA,IAAAA,KAAK,wBAAA0F,aAAA,GAAL1F,KAAK,CAAEiG,MAAM,MAAA,IAAA,IAAAP,aAAA,KAAAC,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,CAAAA,qBAAA,GAAbD,aAAA,CAAeQ,QAAQ,cAAAP,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAvBA,qBAAA,CAAyBK,GAAG,CAAA;AACxC,EAAA,MAAM5F,MAAM,GAAGJ,KAAK,KAALA,IAAAA,IAAAA,KAAK,wBAAAT,aAAA,GAALS,KAAK,CAAEG,MAAM,MAAAZ,IAAAA,IAAAA,aAAA,KAAbA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,aAAA,CAAea,MAAM,CAAA;AAEpCI,EAAAA,SAAS,CAAC,MAAM;IACd,IAAI,CAACV,OAAO,EAAE;MACZJ,UAAU,CAAC,EAAE,CAAC,CAAA;AACd,MAAA,OAAA;AACF,KAAA;IAEA,MAAM6I,mBAAmB,GAAGzI,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAPA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,OAAO,CAAEY,qBAAqB,CAAC;AAAEC,MAAAA,KAAK,EAAE,EAAA;AAAG,KAAC,CAAC,CAAA;AACzE4H,IAAAA,mBAAmB,CAAC3H,IAAI,EAAE,CAACC,IAAI,CAAEpB,OAAO,IAAK;MAC3CC,UAAU,CAACD,OAAO,CAAC,CAAA;AACnBwI,MAAAA,UAAU,CAACM,mBAAmB,CAAC7G,OAAO,CAAC,CAAA;AACzC,KAAC,CAAC,CAAA;AACJ,GAAC,EAAE,CAAC5B,OAAO,CAAC,CAAC,CAAA;AAEb,EAAA,MAAM0I,WAAW,GAAGC,WAAW,CAAC,MAAM;IACpC,IAAI,CAAC3I,OAAO,EAAE;MACZJ,UAAU,CAAC,EAAE,CAAC,CAAA;AACd,MAAA,OAAA;AACF,KAAA;IACA,MAAM6I,mBAAmB,GAAGzI,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAPA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,OAAO,CAAEY,qBAAqB,CAAC;AAAEC,MAAAA,KAAK,EAAE,EAAA;AAAG,KAAC,CAAC,CAAA;AACzE4H,IAAAA,mBAAmB,CAAC3H,IAAI,EAAE,CAACC,IAAI,CAAEpB,OAAO,IAAK;MAC3CC,UAAU,CAACD,OAAO,CAAC,CAAA;AACnBwI,MAAAA,UAAU,CAACM,mBAAmB,CAAC7G,OAAO,CAAC,CAAA;MACvC4G,kBAAkB,CAACI,MAAM,EAAE,CAAC,CAAA;AAC9B,KAAC,CAAC,CAAA;AACJ,GAAC,EAAE,CAAC5I,OAAO,CAAC,CAAC,CAAA;EAEb,oBACEgB,cAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;AAAKQ,IAAAA,SAAS,EAAC,0DAAA;GAEX9B,EAAAA,OAAO,CAACwC,GAAG,CAAEC,MAAM,iBACjBpB,cAAA,CAAAC,aAAA,CAACoB,cAAY,EAAA;IACXE,GAAG,EAAEH,MAAM,CAAC9B,MAAO;AACnBgC,IAAAA,IAAI,EAAEF,MAAO;AACbhC,IAAAA,WAAW,EAAE8F,GAAG,CAAC9F,WAAW,CAACE,MAAO;AACpCkC,IAAAA,MAAM,EACH,CAAAxC,OAAO,aAAPA,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAPA,OAAO,CAAE6C,MAAM,MAAK,UAAU,IAAIvC,MAAM,KAAK8B,MAAM,CAAC9B,MAAM,GACvDd,IAAA,IAAA;MAAA,IAAC;QAAEmD,SAAS;AAAED,QAAAA,SAAAA;AAAU,OAAC,GAAAlD,IAAA,CAAA;AAAA,MAAA,oBACzBwB,cAAA,CAAAC,aAAA,CAAC6B,WAAW,EAAA;AACVC,QAAAA,WAAW,EAAGC,cAAc,iBAC1BhC,cAAA,CAAAC,aAAA,CAACgC,UAAU,EAAA;AACTxB,UAAAA,SAAS,EAAC,mCAAmC;AAC7CyB,UAAAA,KAAK,EAAC,MAAM;AACZC,UAAAA,MAAM,EAAC,MAAM;AACbC,UAAAA,OAAO,EAAEJ,cAAAA;AAAe,SAAA,eAExBhC,cAAA,CAAAC,aAAA,CAACoC,IAAI,EAAA;AACHH,UAAAA,KAAK,EAAC,MAAM;AACZC,UAAAA,MAAM,EAAC,MAAM;UACbG,IAAI,EAAEC,SAAS,CAACC,IAAK;UACrBC,SAAS,EAAEC,UAAU,CAACC,eAAAA;AAAgB,SAAA,CACtC,CAEJ;AACFC,QAAAA,SAAS,EAAGC,aAAa,iBACvB7C,cAAA,CAAAC,aAAA,CAAC6C,SAAS,EAAA;AACRC,UAAAA,gBAAgB,EAAErB,SAAU;UAC5BA,SAAS,EAAEC,SAAU;AAAC;AACtBkB,UAAAA,aAAa,EAAEA,aAAc;UAC7BG,QAAQ,EAAA,IAAA;AAAA,SAAA,eAERhD,cAAA,CAAAC,aAAA,CAACgD,QAAQ,EAAA;UACPb,OAAO,EAAEA,MAAM;AACb,YAAA,IAAKhB,MAAM,CAAC+B,IAAI,KAAK,UAAU,EAAG;AAChCnE,cAAAA,OAAO,aAAPA,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAPA,OAAO,CAAEoE,YAAY,CAAC,CAAChC,MAAM,CAAC9B,MAAM,CAAC,CAAC,CAACS,IAAI,CAAC,MAAM;AAChD2H,gBAAAA,WAAW,EAAE,CAAA;AACb7E,gBAAAA,aAAa,EAAE,CAAA;AACjB,eAAC,CAAC,CAAA;AACJ,aAAC,MAAM;AACL7D,cAAAA,OAAO,aAAPA,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAPA,OAAO,CAAEuE,eAAe,CAAC,CAACnC,MAAM,CAAC9B,MAAM,CAAC,CAAC,CAACS,IAAI,CAAC,MAAM;AACnD2H,gBAAAA,WAAW,EAAE,CAAA;AACb7E,gBAAAA,aAAa,EAAE,CAAA;AACjB,eAAC,CAAC,CAAA;AACJ,aAAA;WACA;UACFW,QAAQ,EAAG,CACTpC,oCAAAA,EAAAA,MAAM,CAAC+B,IAAI,KAAK,UAAU,GACxB,sBAAsB,GAAG,qBAAsB,CAAA,CAAA;AAAE,SAAA,EAGnD/B,MAAM,CAAC+B,IAAI,KAAK,UAAU,GACtB5D,SAAS,CAACkE,iDAAiD,GAC3DlE,SAAS,CAACmE,gDAAgD,CAEvD;AAET;AACA,QAAA,EAAC1E,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAA,KAAA,CAAA,IAAPA,OAAO,CAAE2E,WAAW,CAAA,iBACnB3D,cAAA,CAAAC,aAAA,CAACgD,QAAQ,EAAA;UACPb,OAAO,EAAEA,MAAM;YACb,IAAIhB,MAAM,CAACwC,OAAO,EAAE;AAClB5E,cAAAA,OAAO,KAAPA,IAAAA,IAAAA,OAAO,KAAPA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,OAAO,CAAE6E,UAAU,CAACzC,MAAM,CAAC,CAACrB,IAAI,CAAC,MAAM;AACrC2H,gBAAAA,WAAW,EAAE,CAAA;AACb7E,gBAAAA,aAAa,EAAE,CAAA;AACjB,eAAC,CAAC,CAAA;AACJ,aAAC,MAAM;AACL7D,cAAAA,OAAO,KAAPA,IAAAA,IAAAA,OAAO,KAAPA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,OAAO,CAAE8E,QAAQ,CAAC1C,MAAM,CAAC,CAACrB,IAAI,CAAC,MAAM;AACnC2H,gBAAAA,WAAW,EAAE,CAAA;AACb7E,gBAAAA,aAAa,EAAE,CAAA;AACjB,eAAC,CAAC,CAAA;AACJ,aAAA;WACA;UACFW,QAAQ,EAAG,uCACTpC,MAAM,CAACwC,OAAO,GAAI,QAAQ,GAAG,MAAO,CAAA,CAAA;AACrC,SAAA,EAGCxC,MAAM,CAACwC,OAAO,GACVrE,SAAS,CAACwE,mCAAmC,GAC7CxE,SAAS,CAACyE,iCAAiC,CAGpD,eAEHhE,cAAA,CAAAC,aAAA,CAACgD,QAAQ,EAAA;UACPb,OAAO,EAAEA,MAAM;AACbpD,YAAAA,OAAO,aAAPA,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAPA,OAAO,CAAEiF,OAAO,CAAC7C,MAAM,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAACrB,IAAI,CAAC,MAAM;AAC1C2H,cAAAA,WAAW,EAAE,CAAA;AACb7E,cAAAA,aAAa,EAAE,CAAA;AACjB,aAAC,CAAC,CAAA;WACF;AACFW,UAAAA,QAAQ,EAAC,yCAAA;SAERjE,EAAAA,SAAS,CAAC6E,gCAAgC,CAClC,CAAA;OAGf,CAAA,CAAA;AAAA,KACH,GACC,IAAA;AACL,GAAA,CAEJ,CAAC,eAEJpE,cAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;AACEQ,IAAAA,SAAS,EAAC,6CAAA;AAA6C,GAAA,EAGrDG,OAAO,iBACLZ,cAAA,CAAAC,aAAA,CAAC4H,MAAM,EAAA;IACLvF,IAAI,EAAE6D,WAAW,CAAC2B,SAAU;IAC5BC,IAAI,EAAEC,WAAW,CAACC,KAAM;AACxB7F,IAAAA,OAAO,EAAEA,MAAMiF,iBAAiB,CAAC,IAAI,CAAA;GAEpC9H,EAAAA,SAAS,CAACiB,yCAAyC,CAEvD,eAEHR,cAAA,CAAAC,aAAA,CAAC4H,MAAM,EAAA;IACLvF,IAAI,EAAE6D,WAAW,CAAC2B,SAAU;IAC5BC,IAAI,EAAEC,WAAW,CAACC,KAAM;AACxB7F,IAAAA,OAAO,EAAEA,MAAMmF,kBAAkB,CAAC,IAAI,CAAA;AAAE,GAAA,EAEvChI,SAAS,CAAC2I,uCAAuC,CAC3C,CACL,EAEJd,cAAc,iBACZpH,cAAA,CAAAC,aAAA,CAAC1B,YAAY,EAAA;IACXG,QAAQ,EAAEA,MAAM;MACd2I,iBAAiB,CAAC,KAAK,CAAC,CAAA;AACxBK,MAAAA,WAAW,EAAE,CAAA;AACf,KAAA;AAAE,GAAA,CAEL,EAGDJ,eAAe,iBACbtH,cAAA,CAAAC,aAAA,CAAC0E,WAAW,EAAA;IACVtE,QAAQ,EAAEA,MAAM;MACdkH,kBAAkB,CAAC,KAAK,CAAC,CAAA;AACzBG,MAAAA,WAAW,EAAE,CAAA;KACb;AACFhJ,IAAAA,QAAQ,EAAEA,MAAM6I,kBAAkB,CAAC,KAAK,CAAA;AAAE,GAAA,CAE7C,CAEC,CAAA;AAEV;;;;"}