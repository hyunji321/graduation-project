{"version":3,"file":"context.js","sources":["../../src/modules/OpenChannelSettings/context/OpenChannelSettingsProvider.tsx"],"sourcesContent":["import React, {\n  useEffect,\n  useState,\n} from 'react';\nimport { OpenChannel, OpenChannelHandler, OpenChannelUpdateParams, SendbirdOpenChat } from '@sendbird/chat/openChannel';\n\nimport useSendbirdStateContext from '../../../hooks/useSendbirdStateContext';\nimport { UserProfileProvider } from '../../../lib/UserProfileContext';\nimport { RenderUserProfileProps } from '../../../types';\nimport uuidv4 from '../../../utils/uuid';\n\nexport interface OpenChannelSettingsContextProps {\n  channelUrl: string;\n  children?: React.ReactElement;\n  onCloseClick?(): void;\n  onBeforeUpdateChannel?(currentTitle: string, currentImg: File, data: string): OpenChannelUpdateParams;\n  onChannelModified?(channel: OpenChannel): void;\n  onDeleteChannel?(channel: OpenChannel): void;\n  disableUserProfile?: boolean;\n  renderUserProfile?: (props: RenderUserProfileProps) => React.ReactElement;\n}\n\ninterface OpenChannelSettingsContextType {\n  channelUrl: string;\n  channel?: OpenChannel;\n  isChannelInitialized: boolean;\n  setChannel?: React.Dispatch<React.SetStateAction<OpenChannel>>;\n  onCloseClick?(): void;\n  onBeforeUpdateChannel?(currentTitle: string, currentImg: File, data: string): OpenChannelUpdateParams;\n  onChannelModified?(channel: OpenChannel): void;\n  onDeleteChannel?(channel: OpenChannel): void;\n}\n\nconst OpenChannelSettingsContext = React.createContext<OpenChannelSettingsContextType | null>(undefined);\n\nconst OpenChannelSettingsProvider: React.FC<OpenChannelSettingsContextProps> = (props: OpenChannelSettingsContextProps) => {\n  const {\n    children,\n    channelUrl,\n    onCloseClick,\n    onChannelModified,\n    onBeforeUpdateChannel,\n    onDeleteChannel,\n  } = props;\n\n  // fetch store from <SendbirdProvider />\n  const globalStore = useSendbirdStateContext();\n  const sdk = globalStore?.stores?.sdkStore?.sdk as SendbirdOpenChat;\n  const isSDKInitialized = globalStore?.stores?.sdkStore?.initialized;\n\n  const logger = globalStore?.config?.logger;\n  const currentUserId = sdk?.currentUser?.userId;\n\n  const [currentChannel, setChannel] = useState<OpenChannel | null>(null);\n  const [isChannelInitialized, setChannelInitialized] = useState(false);\n  useEffect(() => {\n    if (!channelUrl || !sdk.openChannel) {\n      setChannel(null);\n      return;\n    }\n\n    sdk.openChannel.getChannel(channelUrl)\n      .then((channel) => {\n        logger.info('open channel setting: fetched', channel);\n        // TODO: Add pending status\n        channel.enter()\n          .then(() => {\n            setChannel(channel);\n            logger.info('OpenChannelSettings | Succeeded to enter channel', channel?.url);\n            setChannelInitialized(true);\n          })\n          .catch((error) => {\n            setChannel(null);\n            logger.warning('OpenChannelSettings | Failed to enter channel', error);\n          });\n      })\n      .catch((error) => {\n        logger.error('open channel setting: error fetching', error);\n        setChannel(null);\n      });\n    return () => {\n      if (currentChannel && currentChannel.exit) {\n        currentChannel.exit()\n          .then(() => {\n            logger.info('OpenChannelSettings | Succeeded to exit channel', currentChannel?.url);\n          })\n          .catch((error) => {\n            logger.warning('OpenChannelSettings | Failed to exit channel', error);\n          });\n      }\n    };\n  }, [channelUrl, isSDKInitialized]);\n\n  useEffect(() => {\n    const channelHandlerId = uuidv4();\n    if (currentChannel !== null && sdk?.openChannel?.addOpenChannelHandler) {\n      const channelHandlerParams = new OpenChannelHandler({\n        onOperatorUpdated(channel) {\n          if (channel?.url === currentChannel?.url) {\n            setChannel(channel as OpenChannel);\n          }\n        },\n        onUserMuted(channel, user) {\n          if (channel?.url === currentChannel?.url && user?.userId === currentUserId) {\n            setChannel(channel as OpenChannel);\n          }\n        },\n        onUserUnmuted(channel, user) {\n          if (channel?.url === currentChannel?.url && user?.userId === currentUserId) {\n            setChannel(channel as OpenChannel);\n          }\n        },\n        onUserBanned(channel, user) {\n          if (channel?.url === currentChannel?.url && user?.userId === currentUserId) {\n            setChannel(null);\n          }\n        },\n        onUserUnbanned(channel, user) {\n          if (user?.userId === currentUserId) {\n            setChannel(channel as OpenChannel);\n          }\n        },\n        onChannelChanged(channel) {\n          if (channel?.url === currentChannel?.url) {\n            setChannel(channel as OpenChannel);\n          }\n        },\n        onChannelDeleted(channelUrl) {\n          if (channelUrl === currentChannel?.url) {\n            setChannel(null);\n          }\n        },\n      });\n      sdk.openChannel.addOpenChannelHandler(channelHandlerId, channelHandlerParams);\n    }\n    return () => {\n      if (sdk?.openChannel?.removeOpenChannelHandler && channelHandlerId) {\n        logger.info('OpenChannelSettings | Removing channel handlers', channelHandlerId);\n        sdk.openChannel.removeOpenChannelHandler?.(channelHandlerId);\n      }\n    };\n  }, [channelUrl]);\n\n  return (\n    <OpenChannelSettingsContext.Provider value={{\n      channelUrl,\n      channel: currentChannel,\n      isChannelInitialized: isChannelInitialized,\n      setChannel,\n      onCloseClick,\n      onChannelModified,\n      onBeforeUpdateChannel,\n      onDeleteChannel,\n    }}>\n      <UserProfileProvider\n        isOpenChannel\n        renderUserProfile={props?.renderUserProfile}\n        disableUserProfile={props?.disableUserProfile}\n      >\n        {children}\n      </UserProfileProvider>\n    </OpenChannelSettingsContext.Provider>\n  );\n};\n\ntype useOpenChannelSettingsType = () => OpenChannelSettingsContextType;\nconst useOpenChannelSettingsContext: useOpenChannelSettingsType = () => React.useContext(OpenChannelSettingsContext);\n\nexport {\n  OpenChannelSettingsProvider,\n  useOpenChannelSettingsContext,\n};\n"],"names":["OpenChannelSettingsContext","React","createContext","undefined","OpenChannelSettingsProvider","props","_globalStore$stores","_globalStore$stores$s","_globalStore$stores2","_globalStore$stores2$","_globalStore$config","_sdk$currentUser","children","channelUrl","onCloseClick","onChannelModified","onBeforeUpdateChannel","onDeleteChannel","globalStore","useSendbirdStateContext","sdk","stores","sdkStore","isSDKInitialized","initialized","logger","config","currentUserId","currentUser","userId","currentChannel","setChannel","useState","isChannelInitialized","setChannelInitialized","useEffect","openChannel","getChannel","then","channel","info","enter","url","catch","error","warning","exit","_sdk$openChannel","channelHandlerId","uuidv4","addOpenChannelHandler","channelHandlerParams","OpenChannelHandler","onOperatorUpdated","onUserMuted","user","onUserUnmuted","onUserBanned","onUserUnbanned","onChannelChanged","onChannelDeleted","_sdk$openChannel2","removeOpenChannelHandler","_sdk$openChannel$remo","_sdk$openChannel3","call","createElement","Provider","value","UserProfileProvider","isOpenChannel","renderUserProfile","disableUserProfile","useOpenChannelSettingsContext","useContext"],"mappings":"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"}