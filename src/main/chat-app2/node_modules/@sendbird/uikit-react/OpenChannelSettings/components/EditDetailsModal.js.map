{"version":3,"file":"EditDetailsModal.js","sources":["../../../src/modules/OpenChannelSettings/components/EditDetailsModal.tsx"],"sourcesContent":["import React, {\n  useState,\n  useRef,\n  useContext,\n  ReactElement,\n} from 'react';\nimport { OpenChannelUpdateParams } from '@sendbird/chat/openChannel';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport pubSubTopics from '../../../lib/pubSub/topics';\nimport Modal from '../../../ui/Modal';\nimport Input, { InputLabel } from '../../../ui/Input';\nimport Avatar from '../../../ui/Avatar/index';\nimport { ButtonTypes } from '../../../ui/Button';\nimport Label, { LabelColors, LabelTypography } from '../../../ui/Label';\nimport TextButton from '../../../ui/TextButton';\nimport OpenChannelAvatar from '../../../ui/ChannelAvatar/OpenChannelAvatar';\nimport { useOpenChannelSettingsContext } from '../context/OpenChannelSettingsProvider';\nimport useSendbirdStateContext from '../../../hooks/useSendbirdStateContext';\n\ninterface Props {\n  onCancel(): void;\n}\n\nconst EditDetails = (props: Props): ReactElement => {\n  const {\n    onCancel,\n  } = props;\n  const globalState = useSendbirdStateContext();\n  const { logger, theme, pubSub } = globalState.config;\n  const {\n    channel,\n    onBeforeUpdateChannel,\n    onChannelModified,\n    setChannel,\n  } = useOpenChannelSettingsContext();\n\n  const inputRef = useRef(null);\n  const formRef = useRef(null);\n  const hiddenInputRef = useRef(null);\n  const [currentImg, setCurrentImg] = useState(null);\n  const [newFile, setNewFile] = useState(null);\n  const { stringSet } = useContext(LocalizationContext);\n  const title = channel?.name;\n  return (\n    <Modal\n      isFullScreenOnMobile\n      titleText={stringSet.MODAL__CHANNEL_INFORMATION__TITLE}\n      submitText={stringSet.BUTTON__SAVE}\n      onCancel={onCancel}\n      onSubmit={() => {\n        if (title !== '' && !inputRef.current.value) {\n          if (formRef.current.reportValidity) { // might not work in explorer\n            formRef.current.reportValidity();\n          }\n          return;\n        }\n        const currentTitle = inputRef.current.value;\n        const currentImg = newFile;\n        logger.info('ChannelSettings: Channel information being updated');\n        const params: OpenChannelUpdateParams = onBeforeUpdateChannel\n          ? onBeforeUpdateChannel(currentTitle, currentImg, channel?.data)\n          : {\n            name: currentTitle,\n            coverUrlOrImage: currentImg,\n            data: channel?.data,\n          };\n        logger.info('ChannelSettings: Updating channel information', params);\n        channel?.updateChannel(params)\n          .then((updatedChannel) => {\n            logger.info('ChannelSettings: Channel information update succeeded', updatedChannel);\n            onChannelModified?.(updatedChannel);\n            setChannel(updatedChannel);\n            pubSub?.publish(pubSubTopics.UPDATE_OPEN_CHANNEL, updatedChannel);\n          })\n          .catch((error) => {\n            logger.error('ChannelSettings: Channel infomation update failed', error);\n            setChannel(null);\n          });\n        onCancel();\n      }}\n      type={ButtonTypes.PRIMARY}\n    >\n      <form\n        className=\"channel-profile-form\"\n        ref={formRef}\n        onSubmit={(e) => { e.preventDefault(); }}\n      >\n        <div className=\"channel-profile-form__img-section\">\n          <InputLabel>\n            {stringSet.MODAL__CHANNEL_INFORMATION__CHANNEL_IMAGE}\n          </InputLabel>\n          <div className=\"channel-profile-form__avatar\">\n            {\n              currentImg\n                ? (\n                  <Avatar\n                    height=\"80px\"\n                    width=\"80px\"\n                    src={currentImg}\n                  />\n                ) : (\n                  <OpenChannelAvatar\n                    height={80}\n                    width={80}\n                    channel={channel}\n                    theme={theme}\n                  />\n                )\n            }\n          </div>\n          <input\n            ref={hiddenInputRef}\n            type=\"file\"\n            accept=\"image/gif, image/jpeg, image/png\"\n            style={{ display: 'none' }}\n            onChange={(e) => {\n              setCurrentImg(URL.createObjectURL(e.target.files[0]));\n              setNewFile(e.target.files[0]);\n              hiddenInputRef.current.value = '';\n            }}\n          />\n          <TextButton\n            className=\"channel-profile-form__avatar-button\"\n            onClick={() => hiddenInputRef.current.click()}\n            disableUnderline\n          >\n            <Label type={LabelTypography.BUTTON_1} color={LabelColors.PRIMARY}>\n              {stringSet.MODAL__CHANNEL_INFORMATION__UPLOAD}\n            </Label>\n          </TextButton>\n        </div>\n        <div className=\"channel-profile-form__name-section\">\n          <InputLabel>\n            {stringSet.MODAL__CHANNEL_INFORMATION__CHANNEL_NAME}\n          </InputLabel>\n          <Input\n            required={title !== ''}\n            name=\"channel-profile-form__name\"\n            ref={inputRef}\n            value={title}\n            placeHolder={stringSet.MODAL__CHANNEL_INFORMATION__INPUT__PLACE_HOLDER}\n          />\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\nexport default EditDetails;\n"],"names":["EditDetails","props","onCancel","globalState","useSendbirdStateContext","logger","theme","pubSub","config","channel","onBeforeUpdateChannel","onChannelModified","setChannel","useOpenChannelSettingsContext","inputRef","useRef","formRef","hiddenInputRef","currentImg","setCurrentImg","useState","newFile","setNewFile","stringSet","useContext","LocalizationContext","title","name","React","createElement","Modal","isFullScreenOnMobile","titleText","MODAL__CHANNEL_INFORMATION__TITLE","submitText","BUTTON__SAVE","onSubmit","current","value","reportValidity","currentTitle","info","params","data","coverUrlOrImage","updateChannel","then","updatedChannel","publish","pubSubTopics","UPDATE_OPEN_CHANNEL","catch","error","type","ButtonTypes","PRIMARY","className","ref","e","preventDefault","InputLabel","MODAL__CHANNEL_INFORMATION__CHANNEL_IMAGE","Avatar","height","width","src","OpenChannelAvatar","accept","style","display","onChange","URL","createObjectURL","target","files","TextButton","onClick","click","disableUnderline","Label","LabelTypography","BUTTON_1","color","LabelColors","MODAL__CHANNEL_INFORMATION__UPLOAD","MODAL__CHANNEL_INFORMATION__CHANNEL_NAME","Input","required","placeHolder","MODAL__CHANNEL_INFORMATION__INPUT__PLACE_HOLDER"],"mappings":"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"}