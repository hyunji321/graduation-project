{"version":3,"file":"ChannelListUI.js","sources":["../../../src/modules/ChannelList/components/utils.js","../../../src/modules/ChannelList/components/ChannelListUI/index.tsx"],"sourcesContent":["export const createDefaultUserListQuery = ({ sdk, userFilledApplicationUserListQuery = {} }) => {\n  if (sdk?.createApplicationUserListQuery) {\n    const params = sdk?.createApplicationUserListQuery();\n    if (userFilledApplicationUserListQuery) {\n      Object.keys(userFilledApplicationUserListQuery).forEach((key) => {\n        params[key] = userFilledApplicationUserListQuery[key];\n      });\n    }\n    return params;\n  }\n  return null;\n};\n\nconst getApplicationAttributes = (sdk = {}) => {\n  const { appInfo = {} } = sdk;\n  const { applicationAttributes = [] } = appInfo;\n  return applicationAttributes;\n};\n\nexport const isBroadcastChannelEnabled = (sdk = {}) => {\n  const ALLOW_BROADCAST_CHANNEL = 'allow_broadcast_channel';\n  const applicationAttributes = getApplicationAttributes(sdk);\n\n  if (Array.isArray(applicationAttributes)) {\n    return applicationAttributes.includes(ALLOW_BROADCAST_CHANNEL);\n  }\n\n  return false;\n};\nexport const isSuperGroupChannelEnabled = (sdk = {}) => {\n  const ALLOW_SUPER_GROUP_CHANNEL = 'allow_super_group_channel';\n  const applicationAttributes = getApplicationAttributes(sdk);\n\n  if (Array.isArray(applicationAttributes)) {\n    return applicationAttributes.includes(ALLOW_SUPER_GROUP_CHANNEL);\n  }\n\n  return false;\n};\n\nexport const isAboutSame = (a, b, px) => (Math.abs(a - b) <= px);\n\nexport const setChannelType = (params, type) => {\n  if (type === 'broadcast') {\n    // eslint-disable-next-line no-param-reassign\n    params.isBroadcast = true;\n  }\n  if (type === 'supergroup') {\n    // eslint-disable-next-line no-param-reassign\n    params.isSuper = true;\n  }\n  return params;\n};\n\nexport const createChannel = (\n  sdk,\n  selectedUsers,\n  onBeforeCreateChannel,\n  userId,\n  type = 'group',\n) => new Promise((resolve, reject) => {\n  // have custom params\n  if (onBeforeCreateChannel) {\n    const params = onBeforeCreateChannel(selectedUsers);\n    setChannelType(params, type);\n    sdk.groupChannel.createChannel(params).then((groupChannel) => {\n      resolve(groupChannel);\n    }).catch((err) => { reject(err); });\n    return;\n  }\n\n  const params = new sdk.GroupChannelParams();\n  params.addUserIds(selectedUsers);\n  params.isDistinct = false;\n\n  if (userId) {\n    params.operatorUserIds = [userId];\n  }\n  setChannelType(params, type);\n  // do not have custom params\n  sdk.groupChannel.createChannel(params).then((groupChannel) => {\n    resolve(groupChannel);\n  }).catch((err) => { resolve(err); });\n});\n\nexport default createChannel;\n","import './channel-list-ui.scss';\n\nimport React, { useState } from 'react';\nimport type { GroupChannel, Member, SendbirdGroupChat } from '@sendbird/chat/groupChannel';\nimport type { User } from '@sendbird/chat';\n\nimport ChannelListHeader from '../ChannelListHeader';\nimport AddChannel from '../AddChannel';\nimport ChannelPreview from '../ChannelPreview';\nimport ChannelPreviewAction from '../ChannelPreviewAction';\nimport { useChannelListContext } from '../../context/ChannelListProvider';\nimport * as channelListActions from '../../dux/actionTypes';\n\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport EditUserProfile from '../../../EditUserProfile';\nimport PlaceHolder, { PlaceHolderTypes } from '../../../../ui/PlaceHolder';\nimport { isAboutSame } from '../utils';\n\nconst DELIVERY_RECIPT = 'delivery_receipt';\n\ninterface RenderChannelPreviewProps {\n  channel: GroupChannel;\n  onLeaveChannel(\n    channel: GroupChannel,\n    onLeaveChannelCb?: (c: GroupChannel) => void,\n  );\n}\n\ninterface RenderUserProfileProps {\n  user: Member | User;\n  currentUserId: string;\n  close(): void;\n}\n\nexport interface ChannelListUIProps {\n  renderChannelPreview?: (props: RenderChannelPreviewProps) => React.ReactElement;\n  renderUserProfile?: (props: RenderUserProfileProps) => React.ReactElement;\n  renderHeader?: (props: void) => React.ReactElement;\n  renderPlaceHolderError?: (props: void) => React.ReactElement;\n  renderPlaceHolderLoading?: (props: void) => React.ReactElement;\n  renderPlaceHolderEmptyList?: (props: void) => React.ReactElement;\n}\n\nconst ChannelListUI: React.FC<ChannelListUIProps> = (props: ChannelListUIProps) => {\n  const {\n    renderHeader,\n    renderChannelPreview,\n    renderPlaceHolderError,\n    renderPlaceHolderLoading,\n    renderPlaceHolderEmptyList,\n  } = props;\n\n  const [showProfileEdit, setShowProfileEdit] = useState(false);\n\n  const {\n    onThemeChange,\n    allowProfileEdit,\n    allChannels,\n    loading,\n    currentChannel,\n    channelListDispatcher,\n    channelSource,\n    typingChannels,\n    initialized,\n  } = useChannelListContext();\n\n  const state = useSendbirdStateContext();\n\n  const sdkStore = state?.stores?.sdkStore;\n  const config = state?.config;\n  const {\n    logger,\n    isOnline = false,\n    markAsDeliveredScheduler,\n    disableMarkAsDelivered,\n  } = config;\n\n  const sdk = sdkStore?.sdk as SendbirdGroupChat;\n  const sdkError = sdkStore?.error;\n\n  return (\n    <>\n      <div className=\"sendbird-channel-list__header\">\n        {\n          renderHeader?.() || (\n            <ChannelListHeader\n              onEdit={() => {\n                if (allowProfileEdit) {\n                  setShowProfileEdit(true);\n                }\n              }}\n              allowProfileEdit={allowProfileEdit}\n              renderIconButton={() => (\n                <AddChannel />\n              )}\n            />\n          )\n        }\n      </div>\n      {\n        showProfileEdit && (\n          <EditUserProfile\n            onThemeChange={onThemeChange}\n            onCancel={() => { setShowProfileEdit(false); }}\n            onEditProfile={() => {\n              setShowProfileEdit(false);\n            }}\n          />\n        )\n      }\n      <div\n        className=\"sendbird-channel-list__body\"\n        onScroll={(e) => {\n          const target = e?.target as HTMLDivElement;\n          const fetchMore = isAboutSame(target.clientHeight + target.scrollTop, target.scrollHeight, 10);\n          if (fetchMore && channelSource?.hasNext) {\n            logger.info('ChannelList: Fetching more channels');\n            channelListDispatcher({\n              type: channelListActions.FETCH_CHANNELS_START,\n              payload: null,\n            });\n            channelSource.next().then((channelList) => {\n              logger.info('ChannelList: Fetching channels successful', channelList);\n              channelListDispatcher({\n                type: channelListActions.FETCH_CHANNELS_SUCCESS,\n                payload: channelList,\n              });\n              const canSetMarkAsDelivered = sdk?.appInfo?.premiumFeatureList\n                ?.find((feature) => (feature === DELIVERY_RECIPT));\n\n              if (canSetMarkAsDelivered && !disableMarkAsDelivered) {\n                logger.info('ChannelList: Marking all channels as read');\n                // eslint-disable-next-line no-unused-expressions\n                channelList?.forEach((channel) => {\n                  if (channel?.unreadMessageCount > 0) {\n                    markAsDeliveredScheduler.push(channel);\n                  }\n                });\n              }\n            }).catch((err) => {\n              logger.info('ChannelList: Fetching channels failed', err);\n              channelListDispatcher({\n                type: channelListActions.FETCH_CHANNELS_FAILURE,\n                payload: err,\n              });\n            });\n          }\n        }}\n      >\n        {\n          (sdkError && !loading) && (\n            (renderPlaceHolderError && typeof renderPlaceHolderError === 'function') ? (\n              renderPlaceHolderError?.()\n            ) : (\n              <PlaceHolder type={PlaceHolderTypes.WRONG} />\n            )\n          )\n        }\n        {/*\n          To do: Implement windowing\n          Implement windowing if you are dealing with large number of messages/channels\n          https://github.com/bvaughn/react-window -> recommendation\n          We hesitate to bring one more dependency to our library,\n          we are planning to implement it inside the library\n        */}\n        <div>\n          {\n            allChannels && allChannels.map((channel, idx) => {\n              // todo: Refactor and move this inside channel - preview\n              const onLeaveChannel = (c, cb) => {\n                logger.info('ChannelList: Leaving channel', c);\n                c.leave()\n                  .then((res) => {\n                    logger.info('ChannelList: Leaving channel success', res);\n                    if (cb && typeof cb === 'function') {\n                      cb(res, null);\n                    }\n                    channelListDispatcher({\n                      type: channelListActions.LEAVE_CHANNEL_SUCCESS,\n                      payload: channel?.url,\n                    });\n                  })\n                  .catch((err) => {\n                    logger.error('ChannelList: Leaving channel failed', err);\n                    if (cb && typeof cb === 'function') {\n                      cb(null, err);\n                    }\n                  });\n              };\n\n              const onClick = () => {\n                if (!isOnline) { return; }\n                logger.info('ChannelList: Clicked on channel:', channel);\n                channelListDispatcher({\n                  type: channelListActions.SET_CURRENT_CHANNEL,\n                  payload: channel,\n                });\n              };\n\n              return (\n                (renderChannelPreview)\n                  ? (\n                    // eslint-disable-next-line\n                    <div key={channel?.url} onClick={onClick}>\n                      {renderChannelPreview({ channel, onLeaveChannel })}\n                    </div>\n                  )\n                  : (\n                    <ChannelPreview\n                      key={channel?.url}\n                      tabIndex={idx}\n                      onClick={onClick}\n                      channel={channel}\n                      onLeaveChannel={() => onLeaveChannel(channel, null)}\n                      isActive={channel?.url === currentChannel?.url}\n                      isTyping={typingChannels?.some(({ url }) => url === channel?.url)}\n                      renderChannelAction={(() => (\n                        <ChannelPreviewAction\n                          channel={channel}\n                          disabled={!isOnline}\n                          onLeaveChannel={() => onLeaveChannel(channel, null)}\n                        />\n                      ))}\n                    />\n                  )\n              );\n            })\n          }\n        </div>\n        {\n          (!initialized && loading) && (\n            (renderPlaceHolderLoading && typeof renderPlaceHolderLoading === 'function') ? (\n              renderPlaceHolderLoading?.()\n            ) : (\n              <PlaceHolder type={PlaceHolderTypes.LOADING} />\n            )\n          )\n        }\n        {\n          (initialized && allChannels?.length === 0) && (\n            (renderPlaceHolderEmptyList && typeof renderPlaceHolderEmptyList === 'function') ? (\n              renderPlaceHolderEmptyList?.()\n            ) : (\n              <PlaceHolder type={PlaceHolderTypes.NO_CHANNELS} />\n            )\n          )\n        }\n      </div>\n    </>\n  );\n};\n\nexport default ChannelListUI;\n"],"names":["isAboutSame","a","b","px","Math","abs","DELIVERY_RECIPT","ChannelListUI","props","_state$stores","renderHeader","renderChannelPreview","renderPlaceHolderError","renderPlaceHolderLoading","renderPlaceHolderEmptyList","showProfileEdit","setShowProfileEdit","useState","onThemeChange","allowProfileEdit","allChannels","loading","currentChannel","channelListDispatcher","channelSource","typingChannels","initialized","useChannelListContext","state","useSendbirdStateContext","sdkStore","stores","config","logger","isOnline","markAsDeliveredScheduler","disableMarkAsDelivered","sdk","sdkError","error","React","createElement","Fragment","className","ChannelListHeader","onEdit","renderIconButton","AddChannel","EditUserProfile","onCancel","onEditProfile","onScroll","e","target","fetchMore","clientHeight","scrollTop","scrollHeight","hasNext","info","type","channelListActions","payload","next","then","channelList","_sdk$appInfo","_sdk$appInfo$premiumF","canSetMarkAsDelivered","appInfo","premiumFeatureList","find","feature","forEach","channel","unreadMessageCount","push","catch","err","PlaceHolder","PlaceHolderTypes","WRONG","map","idx","onLeaveChannel","c","cb","leave","res","url","onClick","key","ChannelPreview","tabIndex","isActive","isTyping","some","_ref","renderChannelAction","ChannelPreviewAction","disabled","LOADING","length","NO_CHANNELS"],"mappings":"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"}