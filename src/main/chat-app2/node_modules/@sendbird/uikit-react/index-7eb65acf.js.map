{"version":3,"file":"index-7eb65acf.js","sources":["../src/utils/index.ts"],"sourcesContent":["import SendbirdChat, { Emoji, EmojiCategory, EmojiContainer, User } from '@sendbird/chat';\nimport { GroupChannel, Member, SendbirdGroupChat, GroupChannelListQuery } from '@sendbird/chat/groupChannel';\nimport { AdminMessage, FileMessage, MessageListParams, Reaction, UserMessage } from '@sendbird/chat/message';\nimport { OpenChannel, SendbirdOpenChat } from '@sendbird/chat/openChannel';\n\nimport { getOutgoingMessageState, OutgoingMessageStates } from './exports/getOutgoingMessageState';\nimport { EveryMessage, Nullable } from '../types';\n\n// https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Complete_list_of_MIME_types\nconst SUPPORTED_MIMES = {\n  IMAGE: [\n    'image/jpeg',\n    'image/jpg',\n    'image/png',\n    'image/gif',\n    'image/svg+xml',\n    'image/webp', // not supported in IE\n  ],\n  VIDEO: [\n    'video/mpeg',\n    'video/ogg',\n    'video/webm',\n    'video/mp4',\n  ],\n  AUDIO: [\n    'audio/aac',\n    'audio/midi',\n    'audio/x-midi',\n    'audio/mpeg',\n    'audio/ogg',\n    'audio/opus',\n    'audio/wav',\n    'audio/webm',\n    'audio/3gpp',\n    'audio/3gpp2',\n    'audio/mp3',\n  ],\n};\n\n/* eslint-disable no-redeclare */\nexport interface UIKitMessageTypes {\n  ADMIN: 'ADMIN',\n  TEXT: 'TEXT',\n  FILE: 'FILE',\n  THUMBNAIL: 'THUMBNAIL',\n  OG: 'OG',\n  UNKNOWN: 'UNKNOWN',\n}\nexport const UIKitMessageTypes: UIKitMessageTypes = {\n  ADMIN: 'ADMIN',\n  TEXT: 'TEXT',\n  FILE: 'FILE',\n  THUMBNAIL: 'THUMBNAIL',\n  OG: 'OG',\n  UNKNOWN: 'UNKNOWN',\n};\n/* eslint-disable no-redeclare */\nexport interface UIKitFileTypes {\n  IMAGE: 'IMAGE',\n  AUDIO: 'AUDIO',\n  VIDEO: 'VIDEO',\n  GIF: 'GIF',\n  VOICE: 'VOICE',\n  OTHERS: 'OTHERS',\n}\nexport const UIKitFileTypes: UIKitFileTypes = {\n  IMAGE: 'IMAGE',\n  AUDIO: 'AUDIO',\n  VIDEO: 'VIDEO',\n  GIF: 'GIF',\n  VOICE: 'VOICE',\n  OTHERS: 'OTHERS',\n};\n\n/* eslint-disable no-redeclare */\nexport interface SendingMessageStatus {\n  NONE: 'none',\n  SUCCEEDED: 'succeeded',\n  FAILED: 'failed',\n  PENDING: 'pending',\n}\nconst SendingMessageStatus: SendingMessageStatus = {\n  NONE: 'none',\n  SUCCEEDED: 'succeeded',\n  FAILED: 'failed',\n  PENDING: 'pending',\n};\n\nexport type CoreMessageType = EveryMessage;\n\nexport const isTextuallyNull = (text: string): boolean => {\n  if (text === '' || text === null) {\n    return true;\n  }\n  return false;\n};\n\nexport const isImage = (type: string): boolean => SUPPORTED_MIMES.IMAGE.indexOf(type) >= 0;\nexport const isVideo = (type: string): boolean => SUPPORTED_MIMES.VIDEO.indexOf(type) >= 0;\nexport const isGif = (type: string): boolean => type === 'image/gif';\nexport const isSupportedFileView = (type: string): boolean => isImage(type) || isVideo(type);\nexport const isAudio = (type: string): boolean => SUPPORTED_MIMES.AUDIO.indexOf(type) >= 0;\n\nexport const getUIKitFileTypes = (): UIKitFileTypes => ({ ...UIKitFileTypes });\nexport const getUIKitFileType = (type: string): string => {\n  if (isGif(type)) return UIKitFileTypes.GIF;\n  if (isImage(type)) return UIKitFileTypes.IMAGE;\n  if (isVideo(type)) return UIKitFileTypes.VIDEO;\n  if (isAudio(type)) return UIKitFileTypes.AUDIO;\n  return UIKitFileTypes.OTHERS;\n};\n\nexport const isSentMessage = (message: UserMessage | FileMessage): boolean => (message.sendingStatus === 'succeeded');\nexport const isDeliveredMessage = (channel: GroupChannel, message: UserMessage | FileMessage): boolean => (\n  getOutgoingMessageState(channel, message) === OutgoingMessageStates.DELIVERED\n  || getOutgoingMessageState(channel, message) === OutgoingMessageStates.READ\n);\nexport const isReadMessage = (channel: GroupChannel, message: UserMessage | FileMessage): boolean => (\n  getOutgoingMessageState(channel, message) === OutgoingMessageStates.READ\n);\n// TODO: Remove channel from the params, it seems unnecessary\nexport const isFailedMessage = (message: UserMessage | FileMessage): boolean => (message?.sendingStatus === 'failed');\nexport const isPendingMessage = (message: UserMessage | FileMessage): boolean => (message?.sendingStatus === 'pending');\nexport const isSentStatus = (state: string): boolean => (\n  state === OutgoingMessageStates.SENT\n  || state === OutgoingMessageStates.DELIVERED\n  || state === OutgoingMessageStates.READ\n);\n\nexport const isAdminMessage = (message: AdminMessage | UserMessage | FileMessage): boolean => (\n  message && (message?.isAdminMessage?.() || (message?.messageType === 'admin'))\n);\nexport const isUserMessage = (message: AdminMessage | UserMessage | FileMessage): boolean => (\n  message && (message?.isUserMessage?.() || (message?.messageType === 'user'))\n);\nexport const isFileMessage = (message: AdminMessage | UserMessage | FileMessage): boolean => (\n  message && (message?.isFileMessage?.() || (message?.messageType === 'file'))\n);\nexport const isParentMessage = (message: AdminMessage | UserMessage | FileMessage): boolean => (\n  !message.parentMessageId && !message.parentMessage && message.threadInfo !== null\n);\nexport const isThreadMessage = (message: AdminMessage | UserMessage | FileMessage): boolean => (\n  !!message.parentMessageId && !!message.parentMessage\n);\nexport const isOGMessage = (message: UserMessage | FileMessage): boolean => !!(\n  message && isUserMessage(message) && message?.ogMetaData && (\n    message.ogMetaData?.url\n    || message.ogMetaData?.title\n    || message.ogMetaData?.description\n    || message.ogMetaData?.defaultImage\n  )\n);\nexport const isTextMessage = (message: UserMessage | FileMessage): boolean => isUserMessage(message) && !isOGMessage(message);\nexport const isThumbnailMessage = (message: UserMessage | FileMessage): boolean => (\n  message && isFileMessage(message) && isSupportedFileView((message as FileMessage).type)\n);\nexport const isImageMessage = (message: FileMessage): boolean => message && isThumbnailMessage(message) && isImage(message.type);\nexport const isVideoMessage = (message: UserMessage | FileMessage): boolean => (\n  message && isThumbnailMessage(message) && isVideo((message as FileMessage).type)\n);\nexport const isGifMessage = (message: UserMessage | FileMessage): boolean => (\n  message && isThumbnailMessage(message) && isGif((message as FileMessage).type)\n);\nexport const isAudioMessage = (message: FileMessage): boolean => message && isFileMessage(message) && isAudio(message.type);\nexport const isAudioMessageMimeType = (type: string): boolean => (/^audio\\//.test(type));\nexport const isVoiceMessage = (message: Nullable<FileMessage | UserMessage>): boolean => {\n  // ex) audio/m4a OR audio/m4a;sbu_type=voice\n  if (!(message && isFileMessage(message))) {\n    return false;\n  }\n  const [mimeType, typeParameter] = message.type.split(';');\n  if (!isAudioMessageMimeType(mimeType) || !typeParameter) {\n    return false;\n  }\n  const [key, value] = typeParameter.split('=');\n  if (key === 'sbu_type' && value === 'voice') {\n    return true;\n  }\n  // ex) message.metaArrays = [{ key: 'KEY_INTERNAL_MESSAGE_TYPE', value: ['voice/m4a'] }]\n  return isVoiceMessageMimeType(message?.metaArrays?.find((metaArray) => metaArray.key === 'KEY_INTERNAL_MESSAGE_TYPE')?.value?.[0] ?? '');\n};\nexport const isVoiceMessageMimeType = (type: string): boolean => (/^voice\\//.test(type));\n\nexport const isEditedMessage = (message: AdminMessage | UserMessage | FileMessage): boolean => isUserMessage(message) && (message?.updatedAt > 0);\nexport const isEnabledOGMessage = (message: UserMessage): boolean => (\n  (!message || !message.ogMetaData || !message.ogMetaData.url) ? false : true\n);\n\nexport const getUIKitMessageTypes = (): UIKitMessageTypes => ({ ...UIKitMessageTypes });\nexport const getUIKitMessageType = (message: UserMessage | FileMessage | AdminMessage): string => {\n  if (isAdminMessage(message as AdminMessage)) return UIKitMessageTypes.ADMIN;\n  if (isUserMessage(message as UserMessage)) {\n    return isOGMessage(message as UserMessage) ? UIKitMessageTypes.OG : UIKitMessageTypes.TEXT;\n  }\n  if (isFileMessage(message as FileMessage)) {\n    if (isThumbnailMessage(message as FileMessage)) {\n      return UIKitMessageTypes.THUMBNAIL;\n    }\n    if (isVoiceMessage(message as FileMessage)) {\n      return UIKitFileTypes.VOICE;\n    }\n    return UIKitMessageTypes.FILE;\n  }\n  return UIKitMessageTypes.UNKNOWN;\n};\nexport const getSendingMessageStatus = (): SendingMessageStatus => ({ ...SendingMessageStatus });\n\nconst reducer = (accumulator: Array<string>, currentValue: string | Array<string>): Array<any> => {\n  if (Array.isArray(currentValue)) {\n    return [...accumulator, ...currentValue];\n  } else {\n    accumulator.push(currentValue);\n    return accumulator;\n  }\n};\nexport const getClassName = (classNames: string | Array<string | Array<string>>): string => (\n  Array.isArray(classNames)\n    ? classNames.reduce(reducer, []).join(' ')\n    : classNames\n);\nexport const isReactedBy = (userId: string, reaction: Reaction): boolean => (\n  reaction.userIds.some((reactorUserId: string): boolean => reactorUserId === userId)\n);\ninterface StringSet {\n  TOOLTIP__YOU: string;\n  TOOLTIP__AND_YOU: string;\n  TOOLTIP__UNKNOWN_USER: string;\n}\nexport const getEmojiTooltipString = (reaction: Reaction, userId: string, memberNicknamesMap: Map<string, string>, stringSet: StringSet): string => {\n  let you = '';\n  if (isReactedBy(userId, reaction)) {\n    you = reaction.userIds.length === 1 ? stringSet.TOOLTIP__YOU : stringSet.TOOLTIP__AND_YOU;\n  }\n  return (`${reaction.userIds\n    .filter((reactorUserId: string) => reactorUserId !== userId)\n    .map((reactorUserId: string) => (memberNicknamesMap.get(reactorUserId) || stringSet.TOOLTIP__UNKNOWN_USER))\n    .join(', ')}${you}`);\n};\n\n// TODO: Use the interface after language tranlsatation of Sendbird.js\ninterface UIKitStore {\n  stores: {\n    sdkStore: {\n      sdk: SendbirdChat | SendbirdOpenChat | SendbirdGroupChat,\n    },\n    userStore: {\n      user: User,\n    },\n  },\n  config: {\n    isReactionEnabled: boolean,\n  }\n}\nexport const getCurrentUserId = (store: UIKitStore): string => (store?.stores?.userStore?.user?.userId);\nexport const getUseReaction = (store: UIKitStore, channel: GroupChannel | OpenChannel): boolean => {\n  if (!store?.config?.isReactionEnabled)\n    return false;\n  if (!store?.stores?.sdkStore?.sdk?.appInfo?.useReaction)\n    return false;\n  if (channel?.isGroupChannel())\n    return !((channel as GroupChannel).isBroadcast || (channel as GroupChannel).isSuper);\n  return store?.config?.isReactionEnabled;\n};\n\nexport const isMessageSentByMe = (userId: string, message: UserMessage | FileMessage): boolean => (\n  (userId && message?.sender?.userId) && userId === message.sender.userId\n);\n\nconst URL_REG = /^((http|https):\\/\\/)?([a-z\\d]+\\.)+[a-z]{2,6}(\\:[0-9]{1,5})?(\\/[-a-zA-Z\\d%_.~+&=]*)*(\\?[;&a-zA-Z\\d%_.~+=-]*)?(\\#[-a-zA-Z\\d_]*)?$/;\nexport const isUrl = (text: string): boolean => URL_REG.test(text);\n\nconst MENTION_TAG_REG = /\\@\\{.*?\\}/i;\nexport const isMentionedText = (text: string): boolean => MENTION_TAG_REG.test(text);\n\nexport const truncateString = (fullStr: string, strLen?: number): string => {\n  if (!strLen) strLen = 40;\n  if (fullStr === null || fullStr === undefined) return '';\n  if (fullStr.length <= strLen) return fullStr;\n  const separator = '...';\n  const sepLen = separator.length;\n  const charsToShow = strLen - sepLen;\n  const frontChars = Math.ceil(charsToShow / 2);\n  const backChars = Math.floor(charsToShow / 2);\n  return fullStr.substr(0, frontChars) + separator + fullStr.substr(fullStr.length - backChars);\n};\n\nexport const copyToClipboard = (text: string): boolean => {\n  // @ts-ignore: Unreachable code error\n  if (window.clipboardData && window.clipboardData.setData) {\n    // Internet Explorer-specific code path to prevent textarea being shown while dialog is visible.\n    // @ts-ignore: Unreachable code error\n    return window.clipboardData.setData('Text', text);\n  }\n  if (document.queryCommandSupported && document.queryCommandSupported('copy')) {\n    const textarea = document.createElement('textarea');\n    textarea.textContent = text;\n    textarea.style.position = 'fixed'; // Prevent scrolling to bottom of page in Microsoft Edge.\n    document.body.appendChild(textarea);\n    textarea.select();\n    try {\n      return document.execCommand('copy'); // Security exception may be thrown by some browsers.\n    } catch (ex) {\n      return false;\n    } finally {\n      document.body.removeChild(textarea);\n    }\n  }\n  return false;\n};\n\nexport const getEmojiListAll = (emojiContainer: EmojiContainer): Array<Emoji> => (\n  emojiContainer?.emojiCategories?.map((emojiCategory: EmojiCategory) => emojiCategory.emojis)\n    .reduce((prevArr: Array<Emoji>, currArr: Array<Emoji>) => prevArr.concat(currArr), [])\n);\nexport const getEmojiMapAll = (emojiContainer: EmojiContainer): Map<string, Emoji> => {\n  const emojiMap = new Map();\n  emojiContainer?.emojiCategories?.forEach((category: EmojiCategory) => {\n    category?.emojis?.forEach((emoji: Emoji): void => {\n      if (emoji && emoji.key) {\n        emojiMap.set(emoji.key, emoji);\n      }\n    });\n  });\n  return emojiMap;\n};\nconst findEmojiUrl = (targetKey: string) => ({ key }) => key === targetKey;\nexport const getEmojiUrl = (emojiContainer?: EmojiContainer, emojiKey?: string): string => {\n  const isFindingKey = findEmojiUrl(emojiKey ?? '');\n  return emojiContainer?.emojiCategories\n    .find((category) => category.emojis.some(isFindingKey))?.emojis\n    .find(isFindingKey)\n    ?.url || '';\n};\n\nexport const getUserName = (user: User): string => (user?.friendName || user?.nickname || user?.userId);\nexport const getSenderName = (message: UserMessage | FileMessage): string => (message?.sender && getUserName(message?.sender));\n\nexport const hasSameMembers = <T>(a: T[], b: T[]): boolean => {\n  if (a === b) {\n    return true;\n  }\n  if (a == null || b == null) {\n    return false;\n  }\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  const sortedA = [...a].sort();\n  const sortedB = [...b].sort();\n\n  for (let i = 0; i < sortedA.length; ++i) {\n    if (sortedA[i] !== sortedB[i]) {\n      return false;\n    }\n  }\n  return true;\n};\nexport const isFriend = (user: User): boolean => !!(user.friendDiscoveryKey || user.friendName);\n\nexport const filterMessageListParams = (params: MessageListParams, message: UserMessage | FileMessage): boolean => {\n  // @ts-ignore\n  if (params?.messageTypeFilter && params.messageTypeFilter !== message.messageType) {\n    return false;\n  }\n  if (params?.customTypesFilter?.length > 0) {\n    const customTypes = params.customTypesFilter.filter((item) => item !== '*');\n    // Because Chat SDK inserts '*' when customTypes is empty\n    if (customTypes.length > 0 && !customTypes.includes(message.customType)) {\n      return false;\n    }\n  }\n  if (params?.senderUserIdsFilter && params?.senderUserIdsFilter?.length > 0) {\n    if (message?.isUserMessage?.() || message?.isFileMessage?.()) {\n      const messageSender = (message as UserMessage | FileMessage).sender || message['_sender'];\n      if (!params?.senderUserIdsFilter?.includes(messageSender?.userId)) {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n  if (!params?.includeParentMessageInfo && (message?.parentMessageId || message?.parentMessage)) {\n    return false;\n  }\n  return true;\n};\n\nexport const filterChannelListParams = (params: GroupChannelListQuery, channel: GroupChannel, currentUserId: string): boolean => {\n  if (!params?.includeEmpty && channel?.lastMessage === null) {\n    return false;\n  }\n  const searchFilter = params?.searchFilter;\n  if (searchFilter?.query && (searchFilter?.fields?.length ?? 0) > 0) {\n    const searchQuery = searchFilter.query;\n    const searchFields = searchFilter.fields;\n    if (searchQuery && searchFields && searchFields.length > 0) {\n      if (!searchFields.some((searchField) => {\n        switch (searchField) {\n          case 'channel_name': {\n            return channel?.name?.toLowerCase().includes(searchQuery.toLowerCase());\n          }\n          case 'member_nickname': {\n            return channel?.members?.some((member: Member) => member.nickname.toLowerCase().includes(searchQuery.toLowerCase()));\n          }\n          default: {\n            return true;\n          }\n        }\n      })) {\n        return false;\n      }\n    }\n  }\n  const userIdsFilter = params?.userIdsFilter;\n  if (userIdsFilter?.userIds?.length > 0) {\n    const { includeMode, queryType } = userIdsFilter;\n    const userIds: string[] = userIdsFilter.userIds;\n    const memberIds = channel?.members?.map((member: Member) => member.userId);\n    if (!includeMode) { // exact match\n      if (!userIds.includes(currentUserId)) {\n        userIds.push(currentUserId); // add the caller's userId if not added already.\n      }\n      if (channel?.members?.length > userIds.length) {\n        return false; // userIds may contain one or more non-member(s).\n      }\n      if (!hasSameMembers(userIds, memberIds)) {\n        return false;\n      }\n    } else if (userIds.length > 0) { // inclusive\n      switch (queryType) {\n        case 'AND': {\n          if (userIds.some((userId: string) => !memberIds.includes(userId))) {\n            return false;\n          }\n          break;\n        }\n        case 'OR': {\n          if (userIds.every((userId: string) => !memberIds.includes(userId))) {\n            return false;\n          }\n          break;\n        }\n        default: {\n          break;\n        }\n      }\n    }\n  }\n  if (params?.includeEmpty === false && channel?.lastMessage === null) {\n    return false;\n  }\n  if (params?.includeFrozen === false && channel?.isFrozen === true) {\n    return false;\n  }\n  if (params?.customTypesFilter?.length > 0 && !params.customTypesFilter.includes(channel?.customType)) {\n    return false;\n  }\n  if (params?.customTypeStartsWithFilter && !new RegExp(`^${params.customTypeStartsWithFilter}`).test(channel?.customType)) {\n    return false;\n  }\n  if (params?.channelNameContainsFilter && !channel?.name?.toLowerCase().includes(params.channelNameContainsFilter.toLowerCase())) {\n    return false;\n  }\n  if (params?.nicknameContainsFilter) {\n    const lowerCasedSubString = params.nicknameContainsFilter.toLowerCase();\n    if (channel?.members?.every((member: Member) => !member.nickname.toLowerCase().includes(lowerCasedSubString))) {\n      return false;\n    }\n  }\n  if (params?.channelUrlsFilter?.length > 0 && !params.channelUrlsFilter.includes(channel?.url)) {\n    return false;\n  }\n  if (params?.myMemberStateFilter) {\n    switch (params.myMemberStateFilter) {\n      case 'joined_only':\n        if (channel?.myMemberState !== 'joined') {\n          return false;\n        }\n        break;\n      case 'invited_only':\n        if (channel?.myMemberState !== 'invited') {\n          return false;\n        }\n        break;\n      case 'invited_by_friend':\n        if (channel?.myMemberState !== 'invited' || !isFriend(channel?.inviter)) {\n          return false;\n        }\n        break;\n      case 'invited_by_non_friend':\n        if (channel?.myMemberState !== 'invited' || isFriend(channel?.inviter)) {\n          return false;\n        }\n        break;\n    }\n  }\n  if (params?.hiddenChannelFilter) {\n    switch (params.hiddenChannelFilter) {\n      case 'unhidden_only':\n        if (channel?.isHidden || channel?.hiddenState !== 'unhidden') {\n          return false;\n        }\n        break;\n      case 'hidden_only':\n        if (!channel?.isHidden) {\n          return false;\n        }\n        break;\n      case 'hidden_allow_auto_unhide':\n        if (!channel?.isHidden || channel?.hiddenState !== 'hidden_allow_auto_unhide') {\n          return false;\n        }\n        break;\n      case 'hidden_prevent_auto_unhide':\n        if (!channel?.isHidden || channel?.hiddenState !== 'hidden_prevent_auto_unhide') {\n          return false;\n        }\n        break;\n    }\n  }\n  if (params?.unreadChannelFilter) {\n    switch (params.unreadChannelFilter) {\n      case 'unread_message':\n        if (channel?.unreadMessageCount === 0) {\n          return false;\n        }\n        break;\n    }\n  }\n  if (params?.publicChannelFilter) {\n    switch (params.publicChannelFilter) {\n      case 'public':\n        if (!channel?.isPublic) {\n          return false;\n        }\n        break;\n      case 'private':\n        if (channel?.isPublic) {\n          return false;\n        }\n        break;\n    }\n  }\n  if (params?.superChannelFilter) {\n    switch (params.superChannelFilter) {\n      case 'super':\n        if (!channel?.isSuper) {\n          return false;\n        }\n        break;\n      case 'nonsuper':\n        if (channel?.isSuper) {\n          return false;\n        }\n        break;\n    }\n  }\n  return true;\n};\n\nexport const binarySearch = (list: Array<number>, number: number): number => { // [100, 99, 98, 97, ...]\n  const pivot = Math.floor(list.length / 2);\n  if (list[pivot] === number) {\n    return pivot;\n  }\n  const leftList = list.slice(0, pivot);\n  const rightList = list.slice(pivot + 1, list.length);\n  if (list[pivot] > number) {\n    return pivot + 1 + (rightList.length === 0 ? 0 : binarySearch(rightList, number));\n  } else {\n    return (leftList.length === 0) ? pivot : binarySearch(leftList, number);\n  }\n};\n// This is required when channel is displayed on channel list by filter\nexport const getChannelsWithUpsertedChannel = (channels: Array<GroupChannel>, channel: GroupChannel): Array<GroupChannel> => {\n  if (channels.some((ch: GroupChannel) => ch.url === channel?.url)) {\n    return channels.map((ch: GroupChannel) => (ch.url === channel?.url ? channel : ch));\n  }\n  const targetIndex = binarySearch(\n    channels.map((channel: GroupChannel) => channel?.lastMessage?.createdAt || channel?.createdAt),\n    channel?.lastMessage?.createdAt || channel?.createdAt,\n  );\n  return [...channels.slice(0, targetIndex), channel, ...channels.slice(targetIndex, channels.length)];\n};\n\nexport const getMatchedUserIds = (word: string, users: Array<User>, _template?: string): boolean => {\n  const template = _template || '@'; // Use global variable\n  // const matchedUserIds = [];\n  // users.map((user) => user?.userId).forEach((userId) => {\n  //   if (word.indexOf(`${template}{${userId}}`) > -1) {\n  //     matchedUserIds.push(userId);\n  //   }\n  // });\n  // return matchedUserIds;\n  return users.map((user) => user?.userId).some((userId) => word.indexOf(`${template}{${userId}}`) > -1);\n};\n\nexport enum StringObjType {\n  normal = 'normal',\n  mention = 'mention',\n  url = 'url',\n}\nexport interface StringObj {\n  type: StringObjType;\n  value: string;\n  userId?: string;\n}\n\n/**\n * @deprecated\n * use modules/message/utils/tokenize instead\n */\nexport const convertWordToStringObj = (word: string, _users: Array<User>, _template?: string): Array<StringObj> => {\n  const users = _users || [];\n  const template = _template || '@'; // Use global variable\n  const resultArray = [];\n  const regex = RegExp(`${template}{(${users.map((user) => user?.userId).join('|')})}`, 'g');\n  let excutionResult;\n  let lastIndex = 0;\n  while ((excutionResult = regex.exec(word)) !== null) {\n    const [template, userId] = excutionResult;\n    const endIndex = regex.lastIndex;\n    const startIndex = endIndex - template.length;\n    // Normal text\n    const normalText = word.slice(lastIndex, startIndex);\n    resultArray.push({\n      type: isUrl(normalText) ? StringObjType.url : StringObjType.normal,\n      value: normalText,\n    });\n    // Mention template\n    const mentionedUser = users.find((user) => user?.userId === userId);\n    if (!mentionedUser) {\n      resultArray.push({\n        type: StringObjType.normal,\n        value: template, // because template is the origin text\n      });\n    } else {\n      resultArray.push({\n        type: StringObjType.mention,\n        value: mentionedUser?.nickname || '(No name)',\n        userId: userId,\n      });\n    }\n    lastIndex = endIndex;\n  }\n  if (lastIndex < word.length) {\n    // Normal text\n    const normalText = word.slice(lastIndex);\n    resultArray.push({\n      type: isUrl(normalText) ? StringObjType.url : StringObjType.normal,\n      value: normalText,\n    });\n  }\n  return resultArray;\n};\n\nexport const arrayEqual = (array1: Array<unknown>, array2: Array<unknown>): boolean => {\n  if (Array.isArray(array1) && Array.isArray(array2) && array1.length === array2.length) {\n    for (let i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n};\n"],"names":["SUPPORTED_MIMES","IMAGE","VIDEO","AUDIO","UIKitMessageTypes","ADMIN","TEXT","FILE","THUMBNAIL","OG","UNKNOWN","UIKitFileTypes","GIF","VOICE","OTHERS","SendingMessageStatus","NONE","SUCCEEDED","FAILED","PENDING","isTextuallyNull","text","isImage","type","indexOf","isVideo","isGif","isSupportedFileView","isAudio","getUIKitFileTypes","_objectSpread","getUIKitFileType","isSentMessage","message","sendingStatus","isReadMessage","channel","getOutgoingMessageState","OutgoingMessageStates","READ","isFailedMessage","isPendingMessage","isSentStatus","state","SENT","DELIVERED","isAdminMessage","_message$isAdminMessa","call","messageType","isUserMessage","_message$isUserMessag","isFileMessage","_message$isFileMessag","isParentMessage","parentMessageId","parentMessage","threadInfo","isThreadMessage","isOGMessage","_message$ogMetaData","_message$ogMetaData2","_message$ogMetaData3","_message$ogMetaData4","ogMetaData","url","title","description","defaultImage","isTextMessage","isThumbnailMessage","isImageMessage","isVideoMessage","isGifMessage","isAudioMessage","isAudioMessageMimeType","test","isVoiceMessage","_message$metaArrays$f","_message$metaArrays","_message$metaArrays$f2","_message$metaArrays$f3","mimeType","typeParameter","split","key","value","isVoiceMessageMimeType","metaArrays","find","metaArray","isEditedMessage","updatedAt","getUIKitMessageTypes","getUIKitMessageType","getSendingMessageStatus","reducer","accumulator","currentValue","Array","isArray","push","getClassName","classNames","reduce","join","isReactedBy","userId","reaction","userIds","some","reactorUserId","getEmojiTooltipString","memberNicknamesMap","stringSet","you","length","TOOLTIP__YOU","TOOLTIP__AND_YOU","filter","map","get","TOOLTIP__UNKNOWN_USER","URL_REG","isUrl","truncateString","fullStr","strLen","undefined","separator","sepLen","charsToShow","frontChars","Math","ceil","backChars","floor","substr","copyToClipboard","window","clipboardData","setData","document","queryCommandSupported","textarea","createElement","textContent","style","position","body","appendChild","select","execCommand","ex","removeChild","getEmojiListAll","emojiContainer","_emojiContainer$emoji","emojiCategories","emojiCategory","emojis","prevArr","currArr","concat","getEmojiMapAll","_emojiContainer$emoji2","emojiMap","Map","forEach","category","_category$emojis","emoji","set","findEmojiUrl","targetKey","_ref","getEmojiUrl","emojiKey","_emojiContainer$emoji3","_emojiContainer$emoji4","isFindingKey","getUserName","user","friendName","nickname","getSenderName","sender","hasSameMembers","a","b","sortedA","sort","sortedB","i","isFriend","friendDiscoveryKey","filterMessageListParams","params","_params$customTypesFi","_params$senderUserIds","messageTypeFilter","customTypesFilter","customTypes","item","includes","customType","senderUserIdsFilter","_message$isUserMessag2","_message$isFileMessag2","_params$senderUserIds2","messageSender","includeParentMessageInfo","filterChannelListParams","currentUserId","_searchFilter$fields$","_searchFilter$fields","_userIdsFilter$userId","_params$customTypesFi2","_channel$name2","_params$channelUrlsFi","includeEmpty","lastMessage","searchFilter","query","fields","searchQuery","searchFields","searchField","_channel$name","name","toLowerCase","_channel$members","members","member","userIdsFilter","_channel$members2","includeMode","queryType","memberIds","_channel$members3","every","includeFrozen","isFrozen","customTypeStartsWithFilter","RegExp","channelNameContainsFilter","nicknameContainsFilter","_channel$members4","lowerCasedSubString","channelUrlsFilter","myMemberStateFilter","myMemberState","inviter","hiddenChannelFilter","isHidden","hiddenState","unreadChannelFilter","unreadMessageCount","publicChannelFilter","isPublic","superChannelFilter","isSuper","binarySearch","list","number","pivot","leftList","slice","rightList","getChannelsWithUpsertedChannel","channels","_channel$lastMessage2","ch","targetIndex","_channel$lastMessage","createdAt","StringObjType","convertWordToStringObj","word","_users","_template","users","template","resultArray","regex","excutionResult","lastIndex","exec","endIndex","startIndex","normalText","normal","mentionedUser","mention","arrayEqual","array1","array2"],"mappings":"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"}