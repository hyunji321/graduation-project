{"version":3,"file":"context.js","sources":["../../src/hooks/VoiceRecorder/index.tsx"],"sourcesContent":["import React, { createContext, useCallback, useContext, useEffect, useState } from 'react';\nimport {\n  BROWSER_SUPPORT_MIME_TYPE_LIST,\n  VOICE_MESSAGE_FILE_NAME,\n  VOICE_MESSAGE_MIME_TYPE,\n  VOICE_RECORDER_AUDIO_BITS,\n} from '../../utils/consts';\nimport useSendbirdStateContext from '../useSendbirdStateContext';\n\n// Input props of VoiceRecorder\nexport interface VoiceRecorderProps {\n  children: React.ReactElement;\n}\n\nexport interface VoiceRecorderEventHandler {\n  onRecordingStarted?: () => void;\n  onRecordingEnded?: (props: null | File) => void;\n}\n\n// Output of VoiceRecorder\nexport interface VoiceRecorderContext {\n  start: (eventHandler?: VoiceRecorderEventHandler) => void,\n  stop: () => void,\n  isRecordable: boolean;\n}\nconst noop = () => { /* noop */ };\nconst Context = createContext<VoiceRecorderContext>({\n  start: noop,\n  stop: noop,\n  isRecordable: false,\n});\n\nexport const VoiceRecorderProvider = (props: VoiceRecorderProps): React.ReactElement => {\n  const { children } = props;\n  const { config } = useSendbirdStateContext();\n  const { logger, isVoiceMessageEnabled } = config;\n  const [mediaRecorder, setMediaRecorder] = useState<MediaRecorder>(null);\n  const [isRecordable, setIsRecordable] = useState<boolean>(false);\n\n  const browserSupportMimeType = BROWSER_SUPPORT_MIME_TYPE_LIST.find((mimeType) => MediaRecorder.isTypeSupported(mimeType)) ?? '';\n  if (!browserSupportMimeType) {\n    logger.error('VoiceRecorder: Browser does not support mimeType', { mimmeTypes: BROWSER_SUPPORT_MIME_TYPE_LIST });\n  }\n\n  const [webAudioUtils, setWebAudioUtils] = useState(null);\n  useEffect(() => {\n    if (isVoiceMessageEnabled && !webAudioUtils) {\n      import('./WebAudioUtils').then((data) => {\n        setWebAudioUtils(data);\n      });\n    }\n  }, []);\n\n  const start = useCallback((eventHandler: VoiceRecorderEventHandler): void => {\n    if (isVoiceMessageEnabled && !webAudioUtils) {\n      logger.error('VoiceRecorder: Recording audio processor is being loaded.');\n      return;\n    }\n\n    logger.info('VoiceRecorder: Start recording.');\n    if (mediaRecorder) {\n      stop();\n      logger.info('VoiceRecorder: Previous mediaRecorder is stopped.');\n    }\n    navigator?.mediaDevices?.getUserMedia?.({ audio: true })\n      .then((stream) => {\n        logger.info('VoiceRecorder: Succeeded getting media stream.', stream);\n        setIsRecordable(true);\n        const mediaRecorder = new MediaRecorder(stream, {\n          mimeType: browserSupportMimeType,\n          audioBitsPerSecond: VOICE_RECORDER_AUDIO_BITS,\n        });\n        mediaRecorder.ondataavailable = (e) => { // when recording stops\n          logger.info('VoiceRecorder: Succeeded getting an available data.', e.data);\n          const audioFile = new File([e.data], VOICE_MESSAGE_FILE_NAME, {\n            lastModified: new Date().getTime(),\n            type: VOICE_MESSAGE_MIME_TYPE,\n          });\n          webAudioUtils?.downsampleToWav(audioFile, (buffer) => {\n            const mp3Buffer = webAudioUtils?.encodeMp3(buffer);\n            const mp3blob = new Blob(mp3Buffer, { type: VOICE_MESSAGE_MIME_TYPE });\n            const convertedAudioFile = new File([mp3blob], VOICE_MESSAGE_FILE_NAME, {\n              lastModified: new Date().getTime(),\n              type: VOICE_MESSAGE_MIME_TYPE,\n            });\n            eventHandler?.onRecordingEnded(convertedAudioFile);\n            logger.info('VoiceRecorder: Succeeded converting audio file.', convertedAudioFile);\n          });\n          stream?.getAudioTracks?.().forEach?.(track => track?.stop());\n          setIsRecordable(false);\n        };\n        mediaRecorder?.start();\n        setMediaRecorder(mediaRecorder);\n        eventHandler?.onRecordingStarted();\n      })\n      .catch((err) => {\n        logger.error('VoiceRecorder: Failed getting media stream.', err);\n        setMediaRecorder(null);\n      });\n  }, [mediaRecorder, webAudioUtils]);\n\n  const stop = useCallback((): void => {\n    // Stop recording\n    mediaRecorder?.stop();\n    setMediaRecorder(null);\n    setIsRecordable(false);\n    logger.info('VoiceRecorder: Stop recording.');\n  }, [mediaRecorder]);\n\n  return (\n    <Context.Provider value={{\n      start,\n      stop,\n      isRecordable,\n    }}>\n      {children}\n    </Context.Provider>\n  );\n};\n\nexport const useVoiceRecorderContext = (): VoiceRecorderContext => useContext(Context);\n\nexport default {\n  VoiceRecorderProvider,\n  useVoiceRecorderContext,\n};\n"],"names":["noop","Context","createContext","start","stop","isRecordable","VoiceRecorderProvider","props","_BROWSER_SUPPORT_MIME","children","config","useSendbirdStateContext","logger","isVoiceMessageEnabled","mediaRecorder","setMediaRecorder","useState","setIsRecordable","browserSupportMimeType","BROWSER_SUPPORT_MIME_TYPE_LIST","find","mimeType","MediaRecorder","isTypeSupported","error","mimmeTypes","webAudioUtils","setWebAudioUtils","useEffect","then","data","useCallback","eventHandler","_navigator","_navigator$mediaDevic","_navigator$mediaDevic2","info","navigator","mediaDevices","getUserMedia","call","audio","stream","audioBitsPerSecond","VOICE_RECORDER_AUDIO_BITS","ondataavailable","e","_stream$getAudioTrack","_stream$getAudioTrack2","_stream$getAudioTrack3","audioFile","File","VOICE_MESSAGE_FILE_NAME","lastModified","Date","getTime","type","VOICE_MESSAGE_MIME_TYPE","downsampleToWav","buffer","mp3Buffer","encodeMp3","mp3blob","Blob","convertedAudioFile","onRecordingEnded","getAudioTracks","forEach","track","onRecordingStarted","catch","err","React","createElement","Provider","value","useVoiceRecorderContext","useContext"],"mappings":";;;;;;AASA;;AAUA;;AAMA,MAAMA,IAAI,GAAGA,MAAM,YAAc,CAAA;AACjC,MAAMC,OAAO,gBAAGC,aAAa,CAAuB;AAClDC,EAAAA,KAAK,EAAEH,IAAI;AACXI,EAAAA,IAAI,EAAEJ,IAAI;AACVK,EAAAA,YAAY,EAAE,KAAA;AAChB,CAAC,CAAC,CAAA;AAEWC,MAAAA,qBAAqB,GAAIC,KAAyB,IAAyB;AAAA,EAAA,IAAAC,qBAAA,CAAA;EACtF,MAAM;AAAEC,IAAAA,QAAAA;AAAS,GAAC,GAAGF,KAAK,CAAA;EAC1B,MAAM;AAAEG,IAAAA,MAAAA;GAAQ,GAAGC,uBAAuB,EAAE,CAAA;EAC5C,MAAM;IAAEC,MAAM;AAAEC,IAAAA,qBAAAA;AAAsB,GAAC,GAAGH,MAAM,CAAA;EAChD,MAAM,CAACI,aAAa,EAAEC,gBAAgB,CAAC,GAAGC,QAAQ,CAAgB,IAAI,CAAC,CAAA;EACvE,MAAM,CAACX,YAAY,EAAEY,eAAe,CAAC,GAAGD,QAAQ,CAAU,KAAK,CAAC,CAAA;EAEhE,MAAME,sBAAsB,IAAAV,qBAAA,GAAGW,8BAA8B,CAACC,IAAI,CAAEC,QAAQ,IAAKC,aAAa,CAACC,eAAe,CAACF,QAAQ,CAAC,CAAC,cAAAb,qBAAA,KAAA,KAAA,CAAA,GAAAA,qBAAA,GAAI,EAAE,CAAA;EAC/H,IAAI,CAACU,sBAAsB,EAAE;AAC3BN,IAAAA,MAAM,CAACY,KAAK,CAAC,kDAAkD,EAAE;AAAEC,MAAAA,UAAU,EAAEN,8BAAAA;AAA+B,KAAC,CAAC,CAAA;AAClH,GAAA;EAEA,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAA;AACxDY,EAAAA,SAAS,CAAC,MAAM;AACd,IAAA,IAAIf,qBAAqB,IAAI,CAACa,aAAa,EAAE;AAC3C,MAAA,OAAO,8BAAiB,CAAC,CAACG,IAAI,CAAEC,IAAI,IAAK;QACvCH,gBAAgB,CAACG,IAAI,CAAC,CAAA;AACxB,OAAC,CAAC,CAAA;AACJ,KAAA;GACD,EAAE,EAAE,CAAC,CAAA;AAEN,EAAA,MAAM3B,KAAK,GAAG4B,WAAW,CAAEC,YAAuC,IAAW;AAAA,IAAA,IAAAC,UAAA,EAAAC,qBAAA,EAAAC,sBAAA,CAAA;AAC3E,IAAA,IAAItB,qBAAqB,IAAI,CAACa,aAAa,EAAE;AAC3Cd,MAAAA,MAAM,CAACY,KAAK,CAAC,2DAA2D,CAAC,CAAA;AACzE,MAAA,OAAA;AACF,KAAA;AAEAZ,IAAAA,MAAM,CAACwB,IAAI,CAAC,iCAAiC,CAAC,CAAA;AAC9C,IAAA,IAAItB,aAAa,EAAE;AACjBV,MAAAA,IAAI,EAAE,CAAA;AACNQ,MAAAA,MAAM,CAACwB,IAAI,CAAC,mDAAmD,CAAC,CAAA;AAClE,KAAA;IACA,CAAAH,UAAA,GAAAI,SAAS,MAAAJ,IAAAA,IAAAA,UAAA,KAAAC,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,CAAAA,qBAAA,GAATD,UAAA,CAAWK,YAAY,MAAAJ,IAAAA,IAAAA,qBAAA,KAAAC,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,CAAAA,sBAAA,GAAvBD,qBAAA,CAAyBK,YAAY,MAAAJ,IAAAA,IAAAA,sBAAA,KAArCA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,sBAAA,CAAAK,IAAA,CAAAN,qBAAA,EAAwC;AAAEO,MAAAA,KAAK,EAAE,IAAA;AAAK,KAAC,CAAC,CACrDZ,IAAI,CAAEa,MAAM,IAAK;AAChB9B,MAAAA,MAAM,CAACwB,IAAI,CAAC,gDAAgD,EAAEM,MAAM,CAAC,CAAA;MACrEzB,eAAe,CAAC,IAAI,CAAC,CAAA;AACrB,MAAA,MAAMH,aAAa,GAAG,IAAIQ,aAAa,CAACoB,MAAM,EAAE;AAC9CrB,QAAAA,QAAQ,EAAEH,sBAAsB;AAChCyB,QAAAA,kBAAkB,EAAEC,yBAAAA;AACtB,OAAC,CAAC,CAAA;AACF9B,MAAAA,aAAa,CAAC+B,eAAe,GAAIC,CAAC,IAAK;AAAA,QAAA,IAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA,CAAA;AAAE;QACvCrC,MAAM,CAACwB,IAAI,CAAC,qDAAqD,EAAEU,CAAC,CAAChB,IAAI,CAAC,CAAA;AAC1E,QAAA,MAAMoB,SAAS,GAAG,IAAIC,IAAI,CAAC,CAACL,CAAC,CAAChB,IAAI,CAAC,EAAEsB,uBAAuB,EAAE;AAC5DC,UAAAA,YAAY,EAAE,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE;AAClCC,UAAAA,IAAI,EAAEC,uBAAAA;AACR,SAAC,CAAC,CAAA;QACF/B,aAAa,KAAA,IAAA,IAAbA,aAAa,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAbA,aAAa,CAAEgC,eAAe,CAACR,SAAS,EAAGS,MAAM,IAAK;UACpD,MAAMC,SAAS,GAAGlC,aAAa,KAAbA,IAAAA,IAAAA,aAAa,KAAbA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,aAAa,CAAEmC,SAAS,CAACF,MAAM,CAAC,CAAA;AAClD,UAAA,MAAMG,OAAO,GAAG,IAAIC,IAAI,CAACH,SAAS,EAAE;AAAEJ,YAAAA,IAAI,EAAEC,uBAAAA;AAAwB,WAAC,CAAC,CAAA;UACtE,MAAMO,kBAAkB,GAAG,IAAIb,IAAI,CAAC,CAACW,OAAO,CAAC,EAAEV,uBAAuB,EAAE;AACtEC,YAAAA,YAAY,EAAE,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE;AAClCC,YAAAA,IAAI,EAAEC,uBAAAA;AACR,WAAC,CAAC,CAAA;UACFzB,YAAY,KAAA,IAAA,IAAZA,YAAY,KAAZA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,YAAY,CAAEiC,gBAAgB,CAACD,kBAAkB,CAAC,CAAA;AAClDpD,UAAAA,MAAM,CAACwB,IAAI,CAAC,iDAAiD,EAAE4B,kBAAkB,CAAC,CAAA;AACpF,SAAC,CAAC,CAAA;AACFtB,QAAAA,MAAM,aAANA,MAAM,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAAK,qBAAA,GAANL,MAAM,CAAEwB,cAAc,MAAA,IAAA,IAAAnB,qBAAA,KAAAC,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,CAAAA,sBAAA,GAAtB,CAAAC,sBAAA,GAAAF,qBAAA,CAAAP,IAAA,CAAAE,MAAM,CAAoB,EAACyB,OAAO,cAAAnB,sBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAlCA,sBAAA,CAAAR,IAAA,CAAAS,sBAAA,EAAqCmB,KAAK,IAAIA,KAAK,aAALA,KAAK,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAALA,KAAK,CAAEhE,IAAI,EAAE,CAAC,CAAA;QAC5Da,eAAe,CAAC,KAAK,CAAC,CAAA;OACvB,CAAA;AACDH,MAAAA,aAAa,aAAbA,aAAa,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAbA,aAAa,CAAEX,KAAK,EAAE,CAAA;MACtBY,gBAAgB,CAACD,aAAa,CAAC,CAAA;AAC/BkB,MAAAA,YAAY,aAAZA,YAAY,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAZA,YAAY,CAAEqC,kBAAkB,EAAE,CAAA;AACpC,KAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;AACd3D,MAAAA,MAAM,CAACY,KAAK,CAAC,6CAA6C,EAAE+C,GAAG,CAAC,CAAA;MAChExD,gBAAgB,CAAC,IAAI,CAAC,CAAA;AACxB,KAAC,CAAC,CAAA;AACN,GAAC,EAAE,CAACD,aAAa,EAAEY,aAAa,CAAC,CAAC,CAAA;AAElC,EAAA,MAAMtB,IAAI,GAAG2B,WAAW,CAAC,MAAY;AACnC;AACAjB,IAAAA,aAAa,aAAbA,aAAa,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAbA,aAAa,CAAEV,IAAI,EAAE,CAAA;IACrBW,gBAAgB,CAAC,IAAI,CAAC,CAAA;IACtBE,eAAe,CAAC,KAAK,CAAC,CAAA;AACtBL,IAAAA,MAAM,CAACwB,IAAI,CAAC,gCAAgC,CAAC,CAAA;AAC/C,GAAC,EAAE,CAACtB,aAAa,CAAC,CAAC,CAAA;AAEnB,EAAA,oBACE0D,cAAA,CAAAC,aAAA,CAACxE,OAAO,CAACyE,QAAQ,EAAA;AAACC,IAAAA,KAAK,EAAE;MACvBxE,KAAK;MACLC,IAAI;AACJC,MAAAA,YAAAA;AACF,KAAA;AAAE,GAAA,EACCI,QAAQ,CACQ,CAAA;AAEvB,EAAC;AAEM,MAAMmE,uBAAuB,GAAGA,MAA4BC,UAAU,CAAC5E,OAAO,EAAC;AAEtF,YAAe;EACbK,qBAAqB;AACrBsE,EAAAA,uBAAAA;AACF,CAAC;;;;"}