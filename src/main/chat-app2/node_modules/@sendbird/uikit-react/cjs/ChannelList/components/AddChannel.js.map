{"version":3,"file":"AddChannel.js","sources":["../../../../src/modules/ChannelList/components/AddChannel/index.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\n\nimport CreateChannel from '../../../CreateChannel';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { useChannelListContext } from '../../context/ChannelListProvider';\n\nexport const AddChannel: React.VoidFunctionComponent = () => {\n  const [showModal, setShowModal] = useState(false);\n  const state = useSendbirdStateContext();\n  const isOnline = state?.config?.isOnline;\n  const disabled = !isOnline;\n  const {\n    overrideInviteUser,\n    onBeforeCreateChannel,\n  } = useChannelListContext();\n\n  return (\n    <>\n      <IconButton\n        height=\"32px\"\n        width=\"32px\"\n        onClick={() => {\n          setShowModal(true);\n        }}\n        disabled={disabled}\n      >\n        <Icon\n          type={IconTypes.CREATE}\n          fillColor={IconColors.PRIMARY}\n          width=\"24px\"\n          height=\"24px\"\n        />\n      </IconButton>\n      {\n        showModal && (\n          <CreateChannel\n            onCancel={() => {\n              setShowModal(false);\n            }}\n            overrideInviteUser={overrideInviteUser}\n            onCreateChannel={() => {\n              setShowModal(false);\n            }}\n            onBeforeCreateChannel={onBeforeCreateChannel}\n          />\n        )\n      }\n    </>\n  );\n};\n\nexport default AddChannel;\n"],"names":["AddChannel","_state$config","showModal","setShowModal","useState","state","useSendbirdStateContext","isOnline","config","disabled","overrideInviteUser","onBeforeCreateChannel","useChannelListContext","React","createElement","Fragment","IconButton","height","width","onClick","Icon","type","IconTypes","CREATE","fillColor","IconColors","PRIMARY","CreateChannel","onCancel","onCreateChannel"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASaA,MAAAA,UAAuC,GAAGA,MAAM;AAAA,EAAA,IAAAC,aAAA,CAAA;EAC3D,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGC,cAAQ,CAAC,KAAK,CAAC,CAAA;EACjD,MAAMC,KAAK,GAAGC,uBAAuB,EAAE,CAAA;AACvC,EAAA,MAAMC,QAAQ,GAAGF,KAAK,KAALA,IAAAA,IAAAA,KAAK,wBAAAJ,aAAA,GAALI,KAAK,CAAEG,MAAM,MAAAP,IAAAA,IAAAA,aAAA,KAAbA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,aAAA,CAAeM,QAAQ,CAAA;EACxC,MAAME,QAAQ,GAAG,CAACF,QAAQ,CAAA;EAC1B,MAAM;IACJG,kBAAkB;AAClBC,IAAAA,qBAAAA;GACD,GAAGC,yCAAqB,EAAE,CAAA;AAE3B,EAAA,oBACEC,yBAAA,CAAAC,aAAA,CAAAD,yBAAA,CAAAE,QAAA,EAAA,IAAA,eACEF,yBAAA,CAAAC,aAAA,CAACE,aAAU,EAAA;AACTC,IAAAA,MAAM,EAAC,MAAM;AACbC,IAAAA,KAAK,EAAC,MAAM;IACZC,OAAO,EAAEA,MAAM;MACbhB,YAAY,CAAC,IAAI,CAAC,CAAA;KAClB;AACFM,IAAAA,QAAQ,EAAEA,QAAAA;AAAS,GAAA,eAEnBI,yBAAA,CAAAC,aAAA,CAACM,kBAAI,EAAA;IACHC,IAAI,EAAEC,iBAAS,CAACC,MAAO;IACvBC,SAAS,EAAEC,kBAAU,CAACC,OAAQ;AAC9BR,IAAAA,KAAK,EAAC,MAAM;AACZD,IAAAA,MAAM,EAAC,MAAA;GACP,CAAA,CACS,EAEXf,SAAS,iBACPW,yBAAA,CAAAC,aAAA,CAACa,aAAa,EAAA;IACZC,QAAQ,EAAEA,MAAM;MACdzB,YAAY,CAAC,KAAK,CAAC,CAAA;KACnB;AACFO,IAAAA,kBAAkB,EAAEA,kBAAmB;IACvCmB,eAAe,EAAEA,MAAM;MACrB1B,YAAY,CAAC,KAAK,CAAC,CAAA;KACnB;AACFQ,IAAAA,qBAAqB,EAAEA,qBAAAA;AAAsB,GAAA,CAEhD,CAEF,CAAA;AAEP;;;;;"}