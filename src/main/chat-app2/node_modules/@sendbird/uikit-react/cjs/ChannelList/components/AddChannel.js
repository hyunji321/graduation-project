'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var ui_IconButton = require('../../ui/IconButton.js');
var ui_Icon = require('../../ui/Icon.js');
var CreateChannel = require('../../CreateChannel.js');
var useSendbirdStateContext = require('../../useSendbirdStateContext.js');
var ChannelList_context = require('../../ChannelListProvider-6f1b6689.js');
require('../../_rollupPluginBabelHelpers-5fad415d.js');
require('prop-types');
require('../../CreateChannel/components/CreateChannelUI.js');
require('../../CreateChannelProvider-2f105a5c.js');
require('../../sendbirdSelectors.js');
require('../../topics-2431bb78.js');
require('../../utils-279e7553.js');
require('../../CreateChannel/components/InviteUsers.js');
require('../../LocalizationContext-df436a16.js');
require('../../stringSet-d7f78de0.js');
require('../../index-0f42efcf.js');
require('../../ui/Modal.js');
require('react-dom');
require('../../index-dd9bc361.js');
require('../../ui/Button.js');
require('../../index-c89616c9.js');
require('../../MediaQueryContext-f1e8fdbc.js');
require('../../ui/UserListItem.js');
require('../../UserProfileContext-0c255fa6.js');
require('../../ui/Avatar.js');
require('../../ui/ImageRenderer.js');
require('../../uuid-2953f4dd.js');
require('../../ui/MutedAvatarOverlay.js');
require('../../ui/Checkbox.js');
require('../../ui/UserProfile.js');
require('../../ui/ContextMenu.js');
require('../../ui/SortByRow.js');
require('../../index-33b67e46.js');
require('../../utils/message/getOutgoingMessageState.js');
require('../../CreateChannel/components/SelectChannelType.js');
require('../../withSendbird.js');
require('@sendbird/chat/groupChannel');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

const AddChannel = () => {
  var _state$config;
  const [showModal, setShowModal] = React.useState(false);
  const state = useSendbirdStateContext();
  const isOnline = state === null || state === void 0 ? void 0 : (_state$config = state.config) === null || _state$config === void 0 ? void 0 : _state$config.isOnline;
  const disabled = !isOnline;
  const {
    overrideInviteUser,
    onBeforeCreateChannel
  } = ChannelList_context.useChannelListContext();
  return /*#__PURE__*/React__default["default"].createElement(React__default["default"].Fragment, null, /*#__PURE__*/React__default["default"].createElement(ui_IconButton, {
    height: "32px",
    width: "32px",
    onClick: () => {
      setShowModal(true);
    },
    disabled: disabled
  }, /*#__PURE__*/React__default["default"].createElement(ui_Icon["default"], {
    type: ui_Icon.IconTypes.CREATE,
    fillColor: ui_Icon.IconColors.PRIMARY,
    width: "24px",
    height: "24px"
  })), showModal && /*#__PURE__*/React__default["default"].createElement(CreateChannel, {
    onCancel: () => {
      setShowModal(false);
    },
    overrideInviteUser: overrideInviteUser,
    onCreateChannel: () => {
      setShowModal(false);
    },
    onBeforeCreateChannel: onBeforeCreateChannel
  }));
};

exports.AddChannel = AddChannel;
exports["default"] = AddChannel;
//# sourceMappingURL=AddChannel.js.map
