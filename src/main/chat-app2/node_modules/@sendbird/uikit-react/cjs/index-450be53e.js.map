{"version":3,"file":"index-450be53e.js","sources":["../../src/modules/Message/utils/tokens/keyGenerator.ts","../../src/modules/Message/components/TextFragment/index.tsx"],"sourcesContent":["// this function is used to generate a unique key for token in message\n// it changes with updated time and index\n// messageUpdatedAt is the key part of this key generator\nexport function keyGenerator(\n  createdAt: number,\n  messageUpdatedAt: number,\n  index: number,\n): string {\n  return `sb-msg_${createdAt}_${messageUpdatedAt}_${index}`;\n}\n","import React from 'react';\nimport { UserMessage } from '@sendbird/chat/message';\nimport { match } from 'ts-pattern';\n\nimport { TOKEN_TYPES, Token } from '../../utils/tokens/types';\nimport { useMessageContext } from '../../context/MessageProvider';\nimport { keyGenerator } from '../../utils/tokens/keyGenerator';\nimport MentionLabel from '../../../../ui/MentionLabel';\nimport { USER_MENTION_PREFIX } from '../../consts';\nimport LinkLabel from '../../../../ui/LinkLabel';\nimport { LabelTypography } from '../../../../ui/Label';\nimport { getWhiteSpacePreservedText } from '../../utils/tokens/tokenize';\n\nexport type TextFragmentProps = {\n  tokens: Token[];\n};\n\nexport default function TextFragment({\n  tokens,\n}: TextFragmentProps): React.ReactElement {\n  const messageStore = useMessageContext();\n\n  const message = messageStore?.message as UserMessage;\n  const isByMe = messageStore?.isByMe;\n  const { updatedAt, createdAt } = message;\n\n  return (\n    <>\n      {tokens?.map((token, idx) => {\n        const key = keyGenerator(createdAt, updatedAt, idx);\n        return match(token.type)\n          .with(TOKEN_TYPES.mention, () => (\n            <span className=\"sendbird-word\" key={key}>\n              <MentionLabel\n                mentionTemplate={USER_MENTION_PREFIX}\n                mentionedUserId={token.userId}\n                mentionedUserNickname={token.value}\n                isByMe={isByMe}\n              />\n            </span>\n          ))\n          .with(TOKEN_TYPES.url, () => (\n            <span className=\"sendbird-word\" key={key}>\n              <LinkLabel\n                className=\"sendbird-word__url\"\n                src={token.value}\n                type={LabelTypography.BODY_1}\n              >\n                {token.value}\n              </LinkLabel>\n            </span>\n          ))\n          .otherwise(() => <React.Fragment key={key}>{getWhiteSpacePreservedText(token.value)}</React.Fragment>);\n      })}\n    </>\n  );\n}\n"],"names":["keyGenerator","createdAt","messageUpdatedAt","index","TextFragment","_ref","tokens","messageStore","useMessageContext","message","isByMe","updatedAt","React","createElement","Fragment","map","token","idx","key","match","type","with","TOKEN_TYPES","mention","className","MentionLabel","mentionTemplate","USER_MENTION_PREFIX","mentionedUserId","userId","mentionedUserNickname","value","url","LinkLabel","src","LabelTypography","BODY_1","otherwise","getWhiteSpacePreservedText"],"mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACO,SAASA,YAAYA,CAC1BC,SAAiB,EACjBC,gBAAwB,EACxBC,KAAa,EACL;AACR,EAAA,OAAQ,UAASF,SAAU,CAAA,CAAA,EAAGC,gBAAiB,CAAA,CAAA,EAAGC,KAAM,CAAC,CAAA,CAAA;AAC3D;;ACQe,SAASC,YAAYA,CAAAC,IAAA,EAEM;EAAA,IAFL;AACnCC,IAAAA,MAAAA;AACiB,GAAC,GAAAD,IAAA,CAAA;EAClB,MAAME,YAAY,GAAGC,iCAAiB,EAAE,CAAA;EAExC,MAAMC,OAAO,GAAGF,YAAY,KAAA,IAAA,IAAZA,YAAY,KAAZA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,YAAY,CAAEE,OAAsB,CAAA;EACpD,MAAMC,MAAM,GAAGH,YAAY,KAAA,IAAA,IAAZA,YAAY,KAAZA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,YAAY,CAAEG,MAAM,CAAA;EACnC,MAAM;IAAEC,SAAS;AAAEV,IAAAA,SAAAA;AAAU,GAAC,GAAGQ,OAAO,CAAA;EAExC,oBACEG,yBAAA,CAAAC,aAAA,CAAAD,yBAAA,CAAAE,QAAA,QACGR,MAAM,KAAA,IAAA,IAANA,MAAM,KAANA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,MAAM,CAAES,GAAG,CAAC,CAACC,KAAK,EAAEC,GAAG,KAAK;IAC3B,MAAMC,GAAG,GAAGlB,YAAY,CAACC,SAAS,EAAEU,SAAS,EAAEM,GAAG,CAAC,CAAA;AACnD,IAAA,OAAOE,cAAK,CAACH,KAAK,CAACI,IAAI,CAAC,CACrBC,IAAI,CAACC,oBAAW,CAACC,OAAO,EAAE,mBACzBX,yBAAA,CAAAC,aAAA,CAAA,MAAA,EAAA;AAAMW,MAAAA,SAAS,EAAC,eAAe;AAACN,MAAAA,GAAG,EAAEA,GAAAA;AAAI,KAAA,eACvCN,yBAAA,CAAAC,aAAA,CAACY,eAAY,EAAA;AACXC,MAAAA,eAAe,EAAEC,4BAAoB;MACrCC,eAAe,EAAEZ,KAAK,CAACa,MAAO;MAC9BC,qBAAqB,EAAEd,KAAK,CAACe,KAAM;AACnCrB,MAAAA,MAAM,EAAEA,MAAAA;AAAO,KAAA,CACf,CAEL,CAAC,CACDW,IAAI,CAACC,oBAAW,CAACU,GAAG,EAAE,mBACrBpB,yBAAA,CAAAC,aAAA,CAAA,MAAA,EAAA;AAAMW,MAAAA,SAAS,EAAC,eAAe;AAACN,MAAAA,GAAG,EAAEA,GAAAA;AAAI,KAAA,eACvCN,yBAAA,CAAAC,aAAA,CAACoB,uBAAS,EAAA;AACRT,MAAAA,SAAS,EAAC,oBAAoB;MAC9BU,GAAG,EAAElB,KAAK,CAACe,KAAM;MACjBX,IAAI,EAAEe,wBAAe,CAACC,MAAAA;AAAO,KAAA,EAE5BpB,KAAK,CAACe,KAAK,CACF,CAEf,CAAC,CACDM,SAAS,CAAC,mBAAMzB,yBAAA,CAAAC,aAAA,CAACD,yBAAK,CAACE,QAAQ,EAAA;AAACI,MAAAA,GAAG,EAAEA,GAAAA;AAAI,KAAA,EAAEoB,mCAA0B,CAACtB,KAAK,CAACe,KAAK,CAAC,CAAkB,CAAC,CAAA;AAC1G,GAAC,CAAC,CACD,CAAA;AAEP;;;;"}