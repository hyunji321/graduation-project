'use strict';

var React = require('react');
var OpenChannelList_components_OpenChannelListUI = require('./OpenChannelList/components/OpenChannelListUI.js');
var OpenChannelList_context = require('./OpenChannelListProvider-b7914f1a.js');
require('./OpenChannelList/components/OpenChannelPreview.js');
require('./ui/Avatar.js');
require('./ui/ImageRenderer.js');
require('./ui/Icon.js');
require('prop-types');
require('./uuid-2953f4dd.js');
require('./index-c89616c9.js');
require('./stringSet-d7f78de0.js');
require('./index-162396f5.js');
require('./LocalizationContext-df436a16.js');
require('./index-0f42efcf.js');
require('./ui/Loader.js');
require('./ui/IconButton.js');
require('./_rollupPluginBabelHelpers-5fad415d.js');
require('./CreateOpenChannel.js');
require('./CreateOpenChannel/components/CreateOpenChannelUI.js');
require('./ui/Button.js');
require('./ui/Modal.js');
require('react-dom');
require('./index-dd9bc361.js');
require('./MediaQueryContext-f1e8fdbc.js');
require('./ui/Input.js');
require('./ui/TextButton.js');
require('./color-026d07a6.js');
require('./CreateOpenChannel/context.js');
require('./useSendbirdStateContext.js');
require('./withSendbird.js');
require('./consts-297fdae1.js');
require('./topics-2431bb78.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

function OpenChannelList(_ref) {
  let {
    // provider
    className,
    queries,
    onChannelSelected,
    // ui
    renderHeader,
    renderChannelPreview,
    renderPlaceHolderEmpty,
    renderPlaceHolderError,
    renderPlaceHolderLoading
  } = _ref;
  return /*#__PURE__*/React__default["default"].createElement(OpenChannelList_context.OpenChannelListProvider, {
    className: className,
    queries: queries,
    onChannelSelected: onChannelSelected
  }, /*#__PURE__*/React__default["default"].createElement(OpenChannelList_components_OpenChannelListUI, {
    renderHeader: renderHeader,
    renderChannelPreview: renderChannelPreview,
    renderPlaceHolderEmpty: renderPlaceHolderEmpty,
    renderPlaceHolderError: renderPlaceHolderError,
    renderPlaceHolderLoading: renderPlaceHolderLoading
  }));
}

module.exports = OpenChannelList;
//# sourceMappingURL=OpenChannelList.js.map
