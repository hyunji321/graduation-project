{"version":3,"file":"getOutgoingMessageState.js","sources":["../../../../src/utils/exports/getOutgoingMessageState.ts"],"sourcesContent":["import { GroupChannel } from '@sendbird/chat/groupChannel';\nimport { OpenChannel } from '@sendbird/chat/openChannel';\nimport { UserMessage, FileMessage } from '@sendbird/chat/message';\nimport { Nullable } from '../../types';\n\nexport enum OutgoingMessageStates {\n  NONE = 'NONE',\n  PENDING = 'PENDING',\n  SENT = 'SENT',\n  FAILED = 'FAILED',\n  DELIVERED = 'DELIVERED',\n  READ = 'READ',\n}\n\nexport const getOutgoingMessageState = (channel: Nullable<GroupChannel | OpenChannel>, message: UserMessage | FileMessage): string => {\n  if (message.sendingStatus === 'pending') {\n    return OutgoingMessageStates.PENDING;\n  }\n  if (message.sendingStatus === 'failed') {\n    return OutgoingMessageStates.FAILED;\n  }\n  if (channel?.isGroupChannel?.()) {\n    /* GroupChannel only */\n    if ((channel as GroupChannel).getUnreadMemberCount?.(message) === 0) {\n      return OutgoingMessageStates.READ;\n    } else if ((channel as GroupChannel).getUndeliveredMemberCount?.(message) === 0) {\n      return OutgoingMessageStates.DELIVERED;\n    }\n  }\n  if (message.sendingStatus === 'succeeded') {\n    return OutgoingMessageStates.SENT;\n  }\n  return OutgoingMessageStates.NONE;\n};\n"],"names":["OutgoingMessageStates","getOutgoingMessageState","channel","message","_channel$isGroupChann","sendingStatus","PENDING","FAILED","isGroupChannel","call","_getUnreadMemberCount","_ref","_getUndeliveredMember","_ref2","getUnreadMemberCount","READ","getUndeliveredMemberCount","DELIVERED","SENT","NONE"],"mappings":";;;;AAKYA,IAAAA,qBAAqB,0BAArBA,qBAAqB,EAAA;EAArBA,qBAAqB,CAAA,MAAA,CAAA,GAAA,MAAA,CAAA;EAArBA,qBAAqB,CAAA,SAAA,CAAA,GAAA,SAAA,CAAA;EAArBA,qBAAqB,CAAA,MAAA,CAAA,GAAA,MAAA,CAAA;EAArBA,qBAAqB,CAAA,QAAA,CAAA,GAAA,QAAA,CAAA;EAArBA,qBAAqB,CAAA,WAAA,CAAA,GAAA,WAAA,CAAA;EAArBA,qBAAqB,CAAA,MAAA,CAAA,GAAA,MAAA,CAAA;AAAA,EAAA,OAArBA,qBAAqB,CAAA;AAAA,CAAA,CAAA,EAAA,EAAA;MASpBC,uBAAuB,GAAGA,CAACC,OAA6C,EAAEC,OAAkC,KAAa;AAAA,EAAA,IAAAC,qBAAA,CAAA;AACpI,EAAA,IAAID,OAAO,CAACE,aAAa,KAAK,SAAS,EAAE;IACvC,OAAOL,qBAAqB,CAACM,OAAO,CAAA;AACtC,GAAA;AACA,EAAA,IAAIH,OAAO,CAACE,aAAa,KAAK,QAAQ,EAAE;IACtC,OAAOL,qBAAqB,CAACO,MAAM,CAAA;AACrC,GAAA;AACA,EAAA,IAAIL,OAAO,KAAPA,IAAAA,IAAAA,OAAO,gBAAAE,qBAAA,GAAPF,OAAO,CAAEM,cAAc,MAAAJ,IAAAA,IAAAA,qBAAA,eAAvBA,qBAAA,CAAAK,IAAA,CAAAP,OAAO,CAAoB,EAAE;AAAA,IAAA,IAAAQ,qBAAA,EAAAC,IAAA,EAAAC,qBAAA,EAAAC,KAAA,CAAA;AAC/B;IACA,IAAI,CAAA,CAAAH,qBAAA,GAAAC,CAAAA,IAAA,GAACT,OAAO,EAAkBY,oBAAoB,MAAAJ,IAAAA,IAAAA,qBAAA,uBAA9CA,qBAAA,CAAAD,IAAA,CAAAE,IAAA,EAAiDR,OAAO,CAAC,MAAK,CAAC,EAAE;MACnE,OAAOH,qBAAqB,CAACe,IAAI,CAAA;KAClC,MAAM,IAAI,CAAAH,CAAAA,qBAAA,IAAAC,KAAA,GAACX,OAAO,EAAkBc,yBAAyB,MAAA,IAAA,IAAAJ,qBAAA,KAAnDA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,qBAAA,CAAAH,IAAA,CAAAI,KAAA,EAAsDV,OAAO,CAAC,MAAK,CAAC,EAAE;MAC/E,OAAOH,qBAAqB,CAACiB,SAAS,CAAA;AACxC,KAAA;AACF,GAAA;AACA,EAAA,IAAId,OAAO,CAACE,aAAa,KAAK,WAAW,EAAE;IACzC,OAAOL,qBAAqB,CAACkB,IAAI,CAAA;AACnC,GAAA;EACA,OAAOlB,qBAAqB,CAACmB,IAAI,CAAA;AACnC;;;;;"}