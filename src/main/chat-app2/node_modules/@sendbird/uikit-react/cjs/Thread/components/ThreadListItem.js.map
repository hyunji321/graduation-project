{"version":3,"file":"ThreadListItem.js","sources":["../../../../src/modules/Thread/components/ThreadList/ThreadListItemContent.tsx","../../../../src/modules/Thread/components/ThreadList/ThreadListItem.tsx"],"sourcesContent":["import React, { useContext, useRef, useState } from 'react';\nimport { EmojiContainer } from '@sendbird/chat';\nimport { FileMessage, UserMessage } from '@sendbird/chat/message';\nimport { GroupChannel } from '@sendbird/chat/groupChannel';\n\nimport './ThreadListItemContent.scss';\n\nimport { ReplyType } from '../../../../types';\nimport ContextMenu, { MenuItems } from '../../../../ui/ContextMenu';\nimport Avatar from '../../../../ui/Avatar';\nimport { UserProfileContext } from '../../../../lib/UserProfileContext';\nimport { UserProfileContextInterface } from '../../../../ui/MessageContent';\nimport UserProfile from '../../../../ui/UserProfile';\nimport MessageItemMenu from '../../../../ui/MessageItemMenu';\nimport MessageItemReactionMenu from '../../../../ui/MessageItemReactionMenu';\nimport Label, { LabelTypography, LabelColors } from '../../../../ui/Label';\nimport { getClassName, getSenderName, getUIKitMessageType, getUIKitMessageTypes, isOGMessage, isTextMessage, isThumbnailMessage, isVoiceMessage } from '../../../../utils';\nimport MessageStatus from '../../../../ui/MessageStatus';\nimport EmojiReactions from '../../../../ui/EmojiReactions';\nimport format from 'date-fns/format';\nimport { useLocalization } from '../../../../lib/LocalizationContext';\nimport TextMessageItemBody from '../../../../ui/TextMessageItemBody';\nimport OGMessageItemBody from '../../../../ui/OGMessageItemBody';\nimport FileMessageItemBody from '../../../../ui/FileMessageItemBody';\nimport ThumbnailMessageItemBody from '../../../../ui/ThumbnailMessageItemBody';\nimport UnknownMessageItemBody from '../../../../ui/UnknownMessageItemBody';\nimport VoiceMessageItemBody from '../../../../ui/VoiceMessageItemBody';\nimport { useMediaQueryContext } from '../../../../lib/MediaQueryContext';\nimport useLongPress from '../../../../hooks/useLongPress';\nimport MobileMenu from '../../../../ui/MobileMenu';\n\nexport interface ThreadListItemContentProps {\n  className?: string;\n  userId: string;\n  channel: GroupChannel;\n  message: UserMessage | FileMessage;\n  disabled?: boolean;\n  chainTop?: boolean;\n  chainBottom?: boolean;\n  isMentionEnabled?: boolean;\n  isReactionEnabled?: boolean;\n  disableQuoteMessage?: boolean;\n  replyType?: ReplyType;\n  nicknamesMap?: Map<string, string>;\n  emojiContainer?: EmojiContainer;\n  showEdit?: (bool: boolean) => void;\n  showRemove?: (bool: boolean) => void;\n  showFileViewer?: (bool: boolean) => void;\n  resendMessage?: (message: UserMessage | FileMessage) => void;\n  toggleReaction?: (message: UserMessage | FileMessage, reactionKey: string, isReacted: boolean) => void;\n  onReplyInThread?: (props: { message: UserMessage | FileMessage }) => void;\n}\n\nexport default function ThreadListItemContent({\n  className,\n  userId,\n  channel,\n  message,\n  disabled = false,\n  chainTop = false,\n  chainBottom = false,\n  isMentionEnabled = false,\n  isReactionEnabled = false,\n  disableQuoteMessage = false,\n  replyType,\n  nicknamesMap,\n  emojiContainer,\n  showEdit,\n  showRemove,\n  showFileViewer,\n  resendMessage,\n  toggleReaction,\n  onReplyInThread,\n}: ThreadListItemContentProps): React.ReactElement {\n  const messageTypes = getUIKitMessageTypes();\n  const { isMobile } = useMediaQueryContext();\n  const { dateLocale } = useLocalization();\n  const [supposedHover, setSupposedHover] = useState(false);\n  const {\n    disableUserProfile,\n    renderUserProfile,\n  } = useContext<UserProfileContextInterface>(UserProfileContext);\n  const avatarRef = useRef(null);\n\n  const isByMe = (userId === (message as UserMessage | FileMessage)?.sender?.userId)\n    || ((message as UserMessage | FileMessage)?.sendingStatus === 'pending')\n    || ((message as UserMessage | FileMessage)?.sendingStatus === 'failed');\n  const useReplying = !!((replyType === 'QUOTE_REPLY' || replyType === 'THREAD')\n    && message?.parentMessageId && message?.parentMessage\n    && !disableQuoteMessage\n  );\n  const supposedHoverClassName = supposedHover ? 'sendbird-mouse-hover' : '';\n  const isReactionEnabledInChannel = isReactionEnabled && !channel?.isEphemeral;\n\n  // Mobile\n  const mobileMenuRef = useRef(null);\n  const [showMobileMenu, setShowMobileMenu] = useState(false);\n  const longPress = useLongPress({\n    onLongPress: () => {\n      if (isMobile) {\n        setShowMobileMenu(true);\n      }\n    },\n  }, {\n    shouldPreventDefault: false,\n  });\n\n  return (\n    <div\n      className={`sendbird-thread-list-item-content ${className} ${isByMe ? 'outgoing' : 'incoming'}`}\n      ref={mobileMenuRef}\n    >\n      <div className={`sendbird-thread-list-item-content__left ${isReactionEnabledInChannel ? 'use-reaction' : ''} ${isByMe ? 'outgoing' : 'incoming'}`}>\n        {(!isByMe && !chainBottom) && (\n          <ContextMenu\n            menuTrigger={(toggleDropdown) => (\n              <Avatar\n                className=\"sendbird-thread-list-item-content__left__avatar\"\n                src={channel?.members?.find((member) => member?.userId === message?.sender?.userId)?.profileUrl || message?.sender?.profileUrl || ''}\n                ref={avatarRef}\n                width=\"28px\"\n                height=\"28px\"\n                onClick={() => {\n                  if (!disableUserProfile) {\n                    toggleDropdown?.();\n                  }\n                }}\n              />\n            )}\n            menuItems={(closeDropdown) => (\n              <MenuItems\n                parentRef={avatarRef}\n                parentContainRef={avatarRef}\n                closeDropdown={closeDropdown}\n                style={{ paddingTop: '0px', paddingBottom: '0px' }}\n              >\n                {renderUserProfile\n                  ? renderUserProfile({ user: message?.sender, close: closeDropdown })\n                  : <UserProfile user={message?.sender} onSuccess={closeDropdown} />\n                }\n              </MenuItems>\n            )}\n          />\n        )}\n        {(isByMe && !isMobile) && (\n          <div\n            className={`sendbird-thread-list-item-content-menu ${isReactionEnabledInChannel ? 'use-reaction' : ''\n            } ${isByMe ? 'outgoing' : 'incoming'\n            } ${supposedHoverClassName}`}\n          >\n            <MessageItemMenu\n              className=\"sendbird-thread-list-item-content-menu__normal-menu\"\n              channel={channel}\n              message={message as UserMessage | FileMessage}\n              isByMe={isByMe}\n              replyType={replyType}\n              disabled={disabled}\n              showEdit={showEdit}\n              showRemove={showRemove}\n              resendMessage={resendMessage}\n              setSupposedHover={setSupposedHover}\n              onReplyInThread={onReplyInThread}\n            />\n            {isReactionEnabledInChannel && (\n              <MessageItemReactionMenu\n                className=\"sendbird-thread-list-item-content-menu__reaction-menu\"\n                message={message as UserMessage | FileMessage}\n                userId={userId}\n                spaceFromTrigger={{}}\n                emojiContainer={emojiContainer}\n                toggleReaction={toggleReaction}\n                setSupposedHover={setSupposedHover}\n              />\n            )}\n          </div>\n        )}\n      </div>\n      <div\n        className=\"sendbird-thread-list-item-content__middle\"\n        {...(isMobile) ? { ...longPress } : {}}\n      >\n        {(!isByMe && !chainTop && !useReplying) && (\n          <Label\n            className=\"sendbird-thread-list-item-content__middle__sender-name\"\n            type={LabelTypography.CAPTION_2}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {\n              channel?.members?.find((member) => member?.userId === message?.sender?.userId)?.nickname\n              || getSenderName(message as UserMessage | FileMessage)\n              // TODO: Divide getting profileUrl logic to utils\n            }\n          </Label>\n        )}\n        <div className={getClassName(['sendbird-thread-list-item-content__middle__body-container'])} >\n          {/* message status component */}\n          {(isByMe && !chainBottom) && (\n            <div className={getClassName(['sendbird-thread-list-item-content__middle__body-container__created-at', 'left', supposedHoverClassName])}>\n              <div className=\"sendbird-thread-list-item-content__middle__body-container__created-at__component-container\">\n                <MessageStatus\n                  message={message as UserMessage | FileMessage}\n                  channel={channel}\n                />\n              </div>\n            </div>\n          )}\n          {/* message item body components */}\n          {isTextMessage(message as UserMessage) && (\n            <TextMessageItemBody\n              className=\"sendbird-thread-list-item-content__middle__message-item-body\"\n              message={message as UserMessage}\n              isByMe={isByMe}\n              isMentionEnabled={isMentionEnabled}\n              isReactionEnabled={isReactionEnabledInChannel}\n            />\n          )}\n          {(isOGMessage(message as UserMessage)) && (\n            <OGMessageItemBody\n              className=\"sendbird-thread-list-item-content__middle__message-item-body\"\n              message={message as UserMessage}\n              isByMe={isByMe}\n              isMentionEnabled={isMentionEnabled}\n              isReactionEnabled={isReactionEnabledInChannel}\n            />\n          )}\n          {isVoiceMessage(message as FileMessage) && (\n            <VoiceMessageItemBody\n              className=\"sendbird-thread-list-item-content__middle__message-item-body\"\n              message={message as FileMessage}\n              channelUrl={channel?.url}\n              isByMe={isByMe}\n              isReactionEnabled={isReactionEnabledInChannel}\n            />\n          )}\n          {(getUIKitMessageType((message as FileMessage)) === messageTypes.FILE) && (\n            <FileMessageItemBody\n              className=\"sendbird-thread-list-item-content__middle__message-item-body\"\n              message={message as FileMessage}\n              isByMe={isByMe}\n              isReactionEnabled={isReactionEnabledInChannel}\n              truncateLimit={isByMe ? 18 : 14}\n            />\n          )}\n          {(isThumbnailMessage(message as FileMessage)) && (\n            <ThumbnailMessageItemBody\n              className=\"sendbird-thread-list-item-content__middle__message-item-body\"\n              message={message as FileMessage}\n              isByMe={isByMe}\n              isReactionEnabled={isReactionEnabledInChannel}\n              showFileViewer={showFileViewer}\n              style={{\n                width: isMobile ? '100%' : '200px',\n                height: '148px',\n              }}\n            />\n          )}\n          {(getUIKitMessageType((message as FileMessage)) === messageTypes.UNKNOWN) && (\n            <UnknownMessageItemBody\n              className=\"sendbird-thread-list-item-content__middle__message-item-body\"\n              message={message}\n              isByMe={isByMe}\n              isReactionEnabled={isReactionEnabledInChannel}\n            />\n          )}\n          {/* reactions */}\n          {(isReactionEnabledInChannel && message?.reactions?.length > 0) && (\n            <div className={getClassName([\n              'sendbird-thread-list-item-content-reactions',\n              (!isByMe || isThumbnailMessage(message as FileMessage) || isOGMessage(message as UserMessage)) ? '' : 'primary',\n            ])}>\n              <EmojiReactions\n                userId={userId}\n                message={message as UserMessage | FileMessage}\n                channel={channel}\n                isByMe={isByMe}\n                emojiContainer={emojiContainer}\n                memberNicknamesMap={nicknamesMap}\n                toggleReaction={toggleReaction}\n              />\n            </div>\n          )}\n          {(!isByMe && !chainBottom) && (\n            <Label\n              className={getClassName(['sendbird-thread-list-item-content__middle__body-container__created-at', 'right', supposedHoverClassName])}\n              type={LabelTypography.CAPTION_3}\n              color={LabelColors.ONBACKGROUND_2}\n            >\n              {format(message?.createdAt || 0, 'p', {\n                locale: dateLocale,\n              })}\n            </Label>\n          )}\n        </div>\n      </div>\n      <div\n        className={`sendbird-thread-list-item-content__right ${chainTop ? 'chain-top' : ''\n        } ${isByMe ? 'outgoing' : 'incoming'}`}\n      >\n        {(!isByMe && !isMobile) && (\n          <div className={`sendbird-thread-list-item-content-menu ${supposedHoverClassName}`}>\n            {isReactionEnabledInChannel && (\n              <MessageItemReactionMenu\n                className=\"sendbird-thread-list-item-content-menu__reaction-menu\"\n                message={message as UserMessage | FileMessage}\n                userId={userId}\n                spaceFromTrigger={{}}\n                emojiContainer={emojiContainer}\n                toggleReaction={toggleReaction}\n                setSupposedHover={setSupposedHover}\n              />\n            )}\n            <MessageItemMenu\n              className=\"sendbird-thread-list-item-content-menu__normal-menu\"\n              channel={channel}\n              message={message as UserMessage | FileMessage}\n              isByMe={isByMe}\n              replyType={replyType}\n              disabled={disabled}\n              showRemove={showRemove}\n              resendMessage={resendMessage}\n              setSupposedHover={setSupposedHover}\n              onReplyInThread={onReplyInThread}\n            />\n          </div>\n        )}\n      </div>\n      {showMobileMenu && (\n        <MobileMenu\n          parentRef={mobileMenuRef}\n          channel={channel}\n          message={message}\n          userId={userId}\n          replyType={replyType}\n          hideMenu={() => {\n            setShowMobileMenu(false);\n          }}\n          isReactionEnabled={isReactionEnabled}\n          isByMe={isByMe}\n          emojiContainer={emojiContainer}\n          showEdit={showEdit}\n          showRemove={showRemove}\n          toggleReaction={toggleReaction}\n          isOpenedFromThread\n        />\n      )}\n    </div>\n  );\n}\n","import React, { useMemo, useState, useRef, useEffect, useLayoutEffect } from 'react';\nimport format from 'date-fns/format';\nimport { FileMessage, UserMessage } from '@sendbird/chat/message';\n\nimport { useLocalization } from '../../../../lib/LocalizationContext';\nimport DateSeparator from '../../../../ui/DateSeparator';\nimport Label, { LabelTypography, LabelColors } from '../../../../ui/Label';\nimport RemoveMessage from '../RemoveMessageModal';\nimport FileViewer from '../../../../ui/FileViewer';\nimport { useThreadContext } from '../../context/ThreadProvider';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport SuggestedMentionList from '../../../Channel/components/SuggestedMentionList';\nimport MessageInput from '../../../../ui/MessageInput';\nimport { ThreadListStateTypes } from '../../types';\nimport { MessageInputKeys } from '../../../../ui/MessageInput/const';\nimport ThreadListItemContent from './ThreadListItemContent';\nimport { Role } from '../../../../lib/types';\nimport { useDirtyGetMentions } from '../../../Message/hooks/useDirtyGetMentions';\nimport { getIsReactionEnabled } from '../../../../utils/getIsReactionEnabled';\n\nexport interface ThreadListItemProps {\n  className?: string;\n  message: UserMessage | FileMessage;\n  chainTop?: boolean;\n  chainBottom?: boolean;\n  hasSeparator?: boolean;\n  renderCustomSeparator?: (props: { message: UserMessage | FileMessage }) => React.ReactElement;\n  handleScroll?: () => void;\n}\n\nexport default function ThreadListItem({\n  className,\n  message,\n  chainTop,\n  chainBottom,\n  hasSeparator,\n  renderCustomSeparator,\n  handleScroll,\n}: ThreadListItemProps): React.ReactElement {\n  const { stores, config } = useSendbirdStateContext();\n  const {\n    isReactionEnabled,\n    isMentionEnabled,\n    isOnline,\n    replyType,\n    userMention,\n    logger,\n  } = config;\n  const userId = stores?.userStore?.user?.userId;\n  const { dateLocale } = useLocalization();\n  const threadContext = useThreadContext?.();\n  const {\n    currentChannel,\n    nicknamesMap,\n    emojiContainer,\n    toggleReaction,\n    threadListState,\n    updateMessage,\n    resendMessage,\n    deleteMessage,\n    isMuted,\n    isChannelFrozen,\n  } = threadContext;\n  const openingMessage = threadContext?.message;\n\n  const [showEdit, setShowEdit] = useState(false);\n  const [showRemove, setShowRemove] = useState(false);\n  const [showFileViewer, setShowFileViewer] = useState(false);\n  const usingReaction = getIsReactionEnabled({\n    globalLevel: isReactionEnabled,\n    isSuper: currentChannel.isSuper,\n    isBroadcast: currentChannel.isBroadcast,\n  });\n\n  // Move to message\n  const messageScrollRef = useRef(null);\n  useLayoutEffect(() => {\n    if (openingMessage?.messageId === message?.messageId && messageScrollRef?.current) {\n      messageScrollRef.current?.scrollIntoView({ block: 'center', inline: 'center' });\n    }\n  }, [openingMessage, messageScrollRef?.current]);\n\n  // reactions\n  useLayoutEffect(() => {\n    handleScroll?.();\n  }, [showEdit, message?.reactions?.length]);\n\n  // mention\n  const editMessageInputRef = useRef(null);\n  const [mentionNickname, setMentionNickname] = useState('');\n  const [mentionedUsers, setMentionedUsers] = useState([]);\n  const [mentionedUserIds, setMentionedUserIds] = useState([]);\n  const [messageInputEvent, setMessageInputEvent] = useState(null);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [mentionSuggestedUsers, setMentionSuggestedUsers] = useState([]);\n  const displaySuggestedMentionList = isOnline\n    && isMentionEnabled\n    && mentionNickname.length > 0\n    && !isMuted\n    && !(isChannelFrozen && !(currentChannel.myRole === Role.OPERATOR));\n\n  const mentionNodes = useDirtyGetMentions({ ref: editMessageInputRef }, { logger });\n  const ableMention = mentionNodes?.length < userMention?.maxMentionCount;\n\n  useEffect(() => {\n    setMentionedUsers(mentionedUsers.filter(({ userId }) => {\n      const i = mentionedUserIds.indexOf(userId);\n      if (i < 0) {\n        return false;\n      } else {\n        mentionedUserIds.splice(i, 1);\n        return true;\n      }\n    }));\n  }, [mentionedUserIds]);\n\n  // edit input\n  const disabled = !(threadListState === ThreadListStateTypes.INITIALIZED)\n    || !isOnline\n    || isMuted\n    || isChannelFrozen;\n\n  // memorize\n  const MemorizedSeparator = useMemo(() => {\n    if (typeof renderCustomSeparator === 'function') {\n      return renderCustomSeparator?.({ message });\n    }\n  }, [message, renderCustomSeparator]);\n\n  // Edit message\n  if (showEdit && message.isUserMessage()) {\n    return (\n      <>\n        {\n          displaySuggestedMentionList && (\n            <SuggestedMentionList\n              targetNickname={mentionNickname}\n              inputEvent={messageInputEvent}\n              // renderUserMentionItem={renderUserMentionItem}\n              onUserItemClick={(user) => {\n                if (user) {\n                  setMentionedUsers([...mentionedUsers, user]);\n                }\n                setMentionNickname('');\n                setSelectedUser(user);\n                setMessageInputEvent(null);\n              }}\n              onFocusItemChange={() => {\n                setMessageInputEvent(null);\n              }}\n              onFetchUsers={(users) => {\n                setMentionSuggestedUsers(users);\n              }}\n              ableAddMention={ableMention}\n              maxMentionCount={userMention?.maxMentionCount}\n              maxSuggestionCount={userMention?.maxSuggestionCount}\n            />\n          )\n        }\n        <MessageInput\n          isEdit\n          disabled={disabled}\n          ref={editMessageInputRef}\n          mentionSelectedUser={selectedUser}\n          isMentionEnabled={isMentionEnabled}\n          message={message}\n          onStartTyping={() => {\n            currentChannel?.startTyping?.();\n          }}\n          onUpdateMessage={({ messageId, message, mentionTemplate }) => {\n            updateMessage({\n              messageId,\n              message,\n              mentionedUsers,\n              mentionTemplate,\n            });\n            setShowEdit(false);\n            currentChannel?.endTyping?.();\n          }}\n          onCancelEdit={() => {\n            setMentionNickname('');\n            setMentionedUsers([]);\n            setMentionedUserIds([]);\n            setMentionSuggestedUsers([]);\n            setShowEdit(false);\n            currentChannel?.endTyping?.();\n          }}\n          onUserMentioned={(user) => {\n            if (selectedUser?.userId === user?.userId) {\n              setSelectedUser(null);\n              setMentionNickname('');\n            }\n          }}\n          onMentionStringChange={(mentionText) => {\n            setMentionNickname(mentionText);\n          }}\n          onMentionedUserIdsUpdated={(userIds) => {\n            setMentionedUserIds(userIds);\n          }}\n          onKeyDown={(e) => {\n            if (displaySuggestedMentionList && mentionSuggestedUsers?.length > 0\n              && ((e.key === MessageInputKeys.Enter && ableMention) || e.key === MessageInputKeys.ArrowUp || e.key === MessageInputKeys.ArrowDown)\n            ) {\n              setMessageInputEvent(e);\n              return true;\n            }\n            return false;\n          }}\n        />\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={messageScrollRef}\n      className={`sendbird-thread-list-item ${className}`}\n    >\n      {/* date separator */}\n      {\n        hasSeparator && message?.createdAt && (MemorizedSeparator || (\n          <DateSeparator>\n            <Label\n              type={LabelTypography.CAPTION_2}\n              color={LabelColors.ONBACKGROUND_2}\n            >\n              {format(message?.createdAt, 'MMM dd, yyyy', { locale: dateLocale })}\n            </Label>\n          </DateSeparator>\n        ))\n      }\n      <ThreadListItemContent\n        userId={userId}\n        channel={currentChannel}\n        message={message}\n        chainTop={chainTop}\n        chainBottom={chainBottom}\n        isReactionEnabled={usingReaction}\n        isMentionEnabled={isMentionEnabled}\n        disableQuoteMessage\n        replyType={replyType}\n        nicknamesMap={nicknamesMap}\n        emojiContainer={emojiContainer}\n        resendMessage={resendMessage}\n        showRemove={setShowRemove}\n        showFileViewer={setShowFileViewer}\n        toggleReaction={toggleReaction}\n        showEdit={setShowEdit}\n      />\n      {/* modal */}\n      {showRemove && (\n        <RemoveMessage\n          message={message}\n          onCancel={() => setShowRemove(false)}\n        />\n      )}\n      {showFileViewer && (\n        <FileViewer\n          message={message as FileMessage}\n          isByMe={message?.sender?.userId === userId}\n          onClose={() => setShowFileViewer(false)}\n          onDelete={() => {\n            deleteMessage(message);\n            setShowFileViewer(false);\n          }}\n        />\n      )}\n    </div>\n  );\n}\n"],"names":["ThreadListItemContent","_ref","_sender","_channel$members2","_channel$members2$fin","_message$reactions","className","userId","channel","message","disabled","chainTop","chainBottom","isMentionEnabled","isReactionEnabled","disableQuoteMessage","replyType","nicknamesMap","emojiContainer","showEdit","showRemove","showFileViewer","resendMessage","toggleReaction","onReplyInThread","messageTypes","getUIKitMessageTypes","isMobile","useMediaQueryContext","dateLocale","useLocalization","supposedHover","setSupposedHover","useState","disableUserProfile","renderUserProfile","useContext","UserProfileContext","avatarRef","useRef","isByMe","sender","sendingStatus","useReplying","parentMessageId","parentMessage","supposedHoverClassName","isReactionEnabledInChannel","isEphemeral","mobileMenuRef","showMobileMenu","setShowMobileMenu","longPress","useLongPress","onLongPress","shouldPreventDefault","React","createElement","ref","ContextMenu","menuTrigger","toggleDropdown","_channel$members","_channel$members$find","_message$sender2","Avatar","src","members","find","member","_message$sender","profileUrl","width","height","onClick","menuItems","closeDropdown","MenuItems","parentRef","parentContainRef","style","paddingTop","paddingBottom","user","close","UserProfile","onSuccess","MessageItemMenu","MessageItemReactionMenu","spaceFromTrigger","_extends","_objectSpread","Label","type","LabelTypography","CAPTION_2","color","LabelColors","ONBACKGROUND_2","_message$sender3","nickname","getSenderName","getClassName","MessageStatus","isTextMessage","TextMessageItemBody","isOGMessage","OGMessageItemBody","isVoiceMessage","VoiceMessageItemBody","channelUrl","url","getUIKitMessageType","FILE","FileMessageItemBody","truncateLimit","isThumbnailMessage","ThumbnailMessageItemBody","UNKNOWN","UnknownMessageItemBody","reactions","length","EmojiReactions","memberNicknamesMap","CAPTION_3","format","createdAt","locale","MobileMenu","hideMenu","isOpenedFromThread","ThreadListItem","_stores$userStore","_stores$userStore$use","hasSeparator","renderCustomSeparator","handleScroll","stores","config","useSendbirdStateContext","isOnline","userMention","logger","userStore","threadContext","useThreadContext","currentChannel","threadListState","updateMessage","deleteMessage","isMuted","isChannelFrozen","openingMessage","setShowEdit","setShowRemove","setShowFileViewer","usingReaction","getIsReactionEnabled","globalLevel","isSuper","isBroadcast","messageScrollRef","useLayoutEffect","messageId","current","_messageScrollRef$cur","scrollIntoView","block","inline","editMessageInputRef","mentionNickname","setMentionNickname","mentionedUsers","setMentionedUsers","mentionedUserIds","setMentionedUserIds","messageInputEvent","setMessageInputEvent","selectedUser","setSelectedUser","mentionSuggestedUsers","setMentionSuggestedUsers","displaySuggestedMentionList","myRole","Role","OPERATOR","mentionNodes","useDirtyGetMentions","ableMention","maxMentionCount","useEffect","filter","_ref2","i","indexOf","splice","ThreadListStateTypes","INITIALIZED","MemorizedSeparator","useMemo","isUserMessage","Fragment","SuggestedMentionList","targetNickname","inputEvent","onUserItemClick","onFocusItemChange","onFetchUsers","users","ableAddMention","maxSuggestionCount","MessageInput","isEdit","mentionSelectedUser","onStartTyping","_currentChannel$start","startTyping","call","onUpdateMessage","_ref3","_currentChannel$endTy","mentionTemplate","endTyping","onCancelEdit","_currentChannel$endTy2","onUserMentioned","onMentionStringChange","mentionText","onMentionedUserIdsUpdated","userIds","onKeyDown","e","key","MessageInputKeys","Enter","ArrowUp","ArrowDown","DateSeparator","RemoveMessage","onCancel","FileViewer","onClose","onDelete"],"mappings":"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"}