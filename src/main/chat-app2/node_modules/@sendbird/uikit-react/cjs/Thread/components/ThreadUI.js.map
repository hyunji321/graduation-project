{"version":3,"file":"ThreadUI.js","sources":["../../../../src/modules/Thread/components/ThreadUI/useMemorizedHeader.tsx","../../../../src/modules/Thread/components/ThreadUI/useMemorizedParentMessageInfo.tsx","../../../../src/modules/Thread/components/ThreadUI/useMemorizedThreadList.tsx","../../../../src/modules/Thread/components/ThreadUI/index.tsx"],"sourcesContent":["import React, { ReactElement, useMemo } from 'react';\n\nexport interface UseMemorizedHeaderProps {\n  renderHeader?: () => React.ReactElement;\n}\n\nconst useMemorizedHeader = ({ renderHeader }: UseMemorizedHeaderProps): ReactElement => useMemo(() => {\n  if (typeof renderHeader === 'function') {\n    return renderHeader();\n  }\n  return null;\n}, [renderHeader]);\n\nexport default useMemorizedHeader;\n","import React, { ReactElement, useMemo } from 'react';\n\nimport { ParentMessageStateTypes } from '../../types';\nimport PlaceHolder, { PlaceHolderTypes } from '../../../../ui/PlaceHolder';\nimport { FileMessage, UserMessage } from '@sendbird/chat/message';\n\nexport interface UseMemorizedParentMessageInfoProps {\n  parentMessage: UserMessage | FileMessage;\n  parentMessageState: ParentMessageStateTypes;\n  renderParentMessageInfo?: () => React.ReactElement;\n  renderParentMessageInfoPlaceholder?: (type: ParentMessageStateTypes) => React.ReactElement;\n}\n\nconst useMemorizedParentMessageInfo = ({\n  parentMessage,\n  parentMessageState,\n  renderParentMessageInfo,\n  renderParentMessageInfoPlaceholder,\n}: UseMemorizedParentMessageInfoProps): ReactElement => useMemo(() => {\n  if (parentMessageState === ParentMessageStateTypes.NIL\n    || parentMessageState === ParentMessageStateTypes.LOADING\n    || parentMessageState === ParentMessageStateTypes.INVALID\n  ) {\n    if (typeof renderParentMessageInfoPlaceholder === 'function') {\n      return renderParentMessageInfoPlaceholder(parentMessageState);\n    }\n    switch (parentMessageState) {\n      case ParentMessageStateTypes.NIL: {\n        return (\n          <PlaceHolder\n            className=\"sendbird-thread-ui__parent-message-info placeholder-nil\"\n            type={PlaceHolderTypes.NO_RESULTS}\n            iconSize=\"64px\"\n          />\n        );\n      }\n      case ParentMessageStateTypes.LOADING: {\n        return (\n          <PlaceHolder\n            className=\"sendbird-thread-ui__parent-message-info placeholder-loading\"\n            type={PlaceHolderTypes.LOADING}\n            iconSize=\"64px\"\n          />\n        );\n      }\n      case ParentMessageStateTypes.INVALID: {\n        return (\n          <PlaceHolder\n            className=\"sendbird-thread-ui__parent-message-info placeholder-invalid\"\n            type={PlaceHolderTypes.WRONG}\n            iconSize=\"64px\"\n          />\n        );\n      }\n      default: {\n        return null;\n      }\n    }\n  } else if (parentMessageState === ParentMessageStateTypes.INITIALIZED) {\n    if (typeof renderParentMessageInfo === 'function') {\n      return renderParentMessageInfo();\n    }\n  }\n  return null;\n}, [\n  parentMessage,\n  parentMessageState,\n  renderParentMessageInfo,\n  renderParentMessageInfoPlaceholder,\n]);\n\nexport default useMemorizedParentMessageInfo;\n","import React, { ReactElement, useMemo } from 'react';\nimport PlaceHolder, { PlaceHolderTypes } from '../../../../ui/PlaceHolder';\n\nimport { ThreadListStateTypes } from '../../types';\n\nexport interface UseMemorizedThreadListProps {\n  threadListState: ThreadListStateTypes;\n  renderThreadListPlaceHolder?: (tyep: ThreadListStateTypes) => React.ReactElement;\n}\n\nconst useMemorizedThreadList = ({\n  threadListState,\n  renderThreadListPlaceHolder,\n}: UseMemorizedThreadListProps): ReactElement => useMemo(() => {\n  if (threadListState === ThreadListStateTypes.NIL\n    || threadListState === ThreadListStateTypes.LOADING\n    || threadListState === ThreadListStateTypes.INVALID\n  ) {\n    if (typeof renderThreadListPlaceHolder === 'function') {\n      return renderThreadListPlaceHolder(threadListState);\n    }\n    switch (threadListState) {\n      case ThreadListStateTypes.LOADING: {\n        return (\n          <PlaceHolder\n            className=\"sendbird-thread-ui__thread-list placeholder-loading\"\n            type={PlaceHolderTypes.LOADING}\n            iconSize=\"64px\"\n          />\n        );\n      }\n      case ThreadListStateTypes.INVALID: {\n        return (\n          <PlaceHolder\n            className=\"sendbird-thread-ui__thread-list placeholder-invalid\"\n            type={PlaceHolderTypes.WRONG}\n            iconSize=\"64px\"\n          />\n        );\n      }\n      case ThreadListStateTypes.NIL: {\n        return <></>;\n      }\n      default: {\n        return null;\n      }\n    }\n  }\n  return null;\n}, [\n  threadListState,\n  renderThreadListPlaceHolder,\n]);\n\nexport default useMemorizedThreadList;\n","import React, { useRef, useState } from 'react';\nimport { FileMessage, UserMessage } from '@sendbird/chat/message';\n\nimport './index.scss';\n\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { useLocalization } from '../../../../lib/LocalizationContext';\nimport { getChannelTitle } from '../../../Channel/components/ChannelHeader/utils';\nimport { useThreadContext } from '../../context/ThreadProvider';\nimport { ParentMessageStateTypes, ThreadListStateTypes } from '../../types';\nimport ParentMessageInfo from '../ParentMessageInfo';\nimport ThreadHeader from '../ThreadHeader';\nimport ThreadList from '../ThreadList';\nimport ThreadMessageInput from '../ThreadMessageInput';\nimport useMemorizedHeader from './useMemorizedHeader';\nimport useMemorizedParentMessageInfo from './useMemorizedParentMessageInfo';\nimport useMemorizedThreadList from './useMemorizedThreadList';\nimport Label, { LabelTypography, LabelColors } from '../../../../ui/Label';\nimport { isAboutSame } from '../../context/utils';\nimport { MessageProvider } from '../../../Message/context/MessageProvider';\n\nexport interface ThreadUIProps {\n  renderHeader?: () => React.ReactElement;\n  renderParentMessageInfo?: () => React.ReactElement;\n  renderMessage?: (props: {\n    message: UserMessage | FileMessage,\n    chainTop: boolean,\n    chainBottom: boolean,\n    hasSeparator: boolean,\n  }) => React.ReactElement;\n  renderFileUploadIcon?: () => React.ReactElement;\n  renderVoiceMessageIcon?: () => React.ReactElement;\n  renderSendMessageIcon?: () => React.ReactElement;\n  renderMessageInput?: () => React.ReactElement;\n  renderCustomSeparator?: () => React.ReactElement;\n  renderParentMessageInfoPlaceholder?: (type: ParentMessageStateTypes) => React.ReactElement;\n  renderThreadListPlaceHolder?: (type: ThreadListStateTypes) => React.ReactElement;\n}\n\nconst ThreadUI: React.FC<ThreadUIProps> = ({\n  renderHeader,\n  renderParentMessageInfo,\n  renderMessage,\n  renderMessageInput,\n  renderCustomSeparator,\n  renderParentMessageInfoPlaceholder,\n  renderThreadListPlaceHolder,\n  renderFileUploadIcon,\n  renderVoiceMessageIcon,\n  renderSendMessageIcon,\n}: ThreadUIProps): React.ReactElement => {\n  const {\n    stores,\n  } = useSendbirdStateContext();\n  const currentUserId = stores?.sdkStore?.sdk?.currentUser?.userId;\n  const {\n    stringSet,\n  } = useLocalization();\n  const {\n    currentChannel,\n    allThreadMessages,\n    parentMessage,\n    parentMessageState,\n    threadListState,\n    hasMorePrev,\n    hasMoreNext,\n    fetchPrevThreads,\n    fetchNextThreads,\n    onHeaderActionClick,\n    onMoveToParentMessage,\n  } = useThreadContext();\n  const replyCount = allThreadMessages.length;\n  const isByMe = currentUserId === parentMessage?.sender?.userId;\n\n  // Memoized custom components\n  const MemorizedHeader = useMemorizedHeader({ renderHeader });\n  const MemorizedParentMessageInfo = useMemorizedParentMessageInfo({\n    parentMessage,\n    parentMessageState,\n    renderParentMessageInfo,\n    renderParentMessageInfoPlaceholder, // nil, loading, invalid\n  });\n  const MemorizedThreadList = useMemorizedThreadList({\n    threadListState,\n    renderThreadListPlaceHolder,\n  });\n\n  // scroll\n  const [scrollBottom, setScrollBottom] = useState(0);\n  const scrollRef = useRef<HTMLDivElement>(null);\n  const onScroll = (e) => {\n    const element = e.target;\n    const {\n      scrollTop,\n      clientHeight,\n      scrollHeight,\n    } = element;\n\n    const threadItemNodes = scrollRef.current?.querySelectorAll('.sendbird-thread-list-item');\n    const firstNode = threadItemNodes?.[0];\n    if (isAboutSame(scrollTop, 0, 10) && hasMorePrev) {\n      fetchPrevThreads((messages) => {\n        if (messages) {\n          try {\n            firstNode?.scrollIntoView?.({ block: 'start', inline: 'nearest' });\n          } catch (error) {\n            //\n          }\n        }\n      });\n    }\n\n    if (isAboutSame(clientHeight + scrollTop, scrollHeight, 10) && hasMoreNext) {\n      const scrollTop_ = scrollTop;\n      fetchNextThreads((messages) => {\n        if (messages) {\n          try {\n            element.scrollTop = scrollTop_;\n            scrollRef.current.scrollTop = scrollTop_;\n          } catch (error) {\n            //\n          }\n        }\n      });\n    }\n\n    // save the lastest scroll bottom value\n    if (scrollRef?.current) {\n      const current = scrollRef?.current;\n      setScrollBottom(current.scrollHeight - current.scrollTop - current.offsetHeight);\n    }\n  };\n\n  return (\n    <div className='sendbird-thread-ui'>\n      {\n        MemorizedHeader || (\n          <ThreadHeader\n            className=\"sendbird-thread-ui__header\"\n            channelName={getChannelTitle(currentChannel, currentUserId, stringSet)}\n            onActionIconClick={onHeaderActionClick}\n            onChannelNameClick={() => {\n              onMoveToParentMessage?.({ message: parentMessage, channel: currentChannel });\n            }}\n          />\n        )\n      }\n      <div\n        className=\"sendbird-thread-ui--scroll\"\n        ref={scrollRef}\n        onScroll={onScroll}\n      >\n        <MessageProvider message={parentMessage} isByMe={isByMe}>\n          {\n            MemorizedParentMessageInfo || (\n              <ParentMessageInfo\n                className=\"sendbird-thread-ui__parent-message-info\"\n              />\n            )\n          }\n        </MessageProvider>\n        {\n          replyCount > 0 && (\n            <div className=\"sendbird-thread-ui__reply-counts\">\n              <Label\n                type={LabelTypography.BODY_1}\n                color={LabelColors.ONBACKGROUND_3}\n              >\n                {`${replyCount} ${replyCount > 1 ? stringSet.THREAD__THREAD_REPLIES : stringSet.THREAD__THREAD_REPLY}`}\n              </Label>\n            </div>\n          )\n        }\n        {\n          MemorizedThreadList || (\n            <ThreadList\n              className=\"sendbird-thread-ui__thread-list\"\n              allThreadMessages={allThreadMessages}\n              renderMessage={renderMessage}\n              renderCustomSeparator={renderCustomSeparator}\n              scrollRef={scrollRef}\n              scrollBottom={scrollBottom}\n            />\n          )\n        }\n      </div>\n      {/* MessageInput */}\n      {\n        renderMessageInput?.() || (\n          <ThreadMessageInput\n            className=\"sendbird-thread-ui__message-input\"\n            renderFileUploadIcon={renderFileUploadIcon}\n            renderVoiceMessageIcon={renderVoiceMessageIcon}\n            renderSendMessageIcon={renderSendMessageIcon}\n          />\n        )\n      }\n    </div>\n  );\n};\n\nexport default ThreadUI;\n"],"names":["useMemorizedHeader","_ref","renderHeader","useMemo","useMemorizedParentMessageInfo","parentMessage","parentMessageState","renderParentMessageInfo","renderParentMessageInfoPlaceholder","ParentMessageStateTypes","NIL","LOADING","INVALID","React","createElement","PlaceHolder","className","type","PlaceHolderTypes","NO_RESULTS","iconSize","WRONG","INITIALIZED","useMemorizedThreadList","threadListState","renderThreadListPlaceHolder","ThreadListStateTypes","Fragment","ThreadUI","_stores$sdkStore","_stores$sdkStore$sdk","_stores$sdkStore$sdk$","_parentMessage$sender","renderMessage","renderMessageInput","renderCustomSeparator","renderFileUploadIcon","renderVoiceMessageIcon","renderSendMessageIcon","stores","useSendbirdStateContext","currentUserId","sdkStore","sdk","currentUser","userId","stringSet","useLocalization","currentChannel","allThreadMessages","hasMorePrev","hasMoreNext","fetchPrevThreads","fetchNextThreads","onHeaderActionClick","onMoveToParentMessage","useThreadContext","replyCount","length","isByMe","sender","MemorizedHeader","MemorizedParentMessageInfo","MemorizedThreadList","scrollBottom","setScrollBottom","useState","scrollRef","useRef","onScroll","e","_scrollRef$current","element","target","scrollTop","clientHeight","scrollHeight","threadItemNodes","current","querySelectorAll","firstNode","isAboutSame","messages","_firstNode$scrollInto","scrollIntoView","call","block","inline","error","scrollTop_","offsetHeight","ThreadHeader","channelName","getChannelTitle","onActionIconClick","onChannelNameClick","message","channel","ref","MessageProvider","ParentMessageInfo","Label","LabelTypography","BODY_1","color","LabelColors","ONBACKGROUND_3","THREAD__THREAD_REPLIES","THREAD__THREAD_REPLY","ThreadList","ThreadMessageInput"],"mappings":"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"}