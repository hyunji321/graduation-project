{"version":3,"file":"ThreadList.js","sources":["../../../../src/modules/Thread/components/ThreadList/index.tsx"],"sourcesContent":["import React, { RefObject, useMemo } from 'react';\nimport { BaseMessage, FileMessage, UserMessage } from '@sendbird/chat/message';\n\nimport './index.scss';\nimport ThreadListItem from './ThreadListItem';\nimport { useThreadContext } from '../../context/ThreadProvider';\nimport { compareMessagesForGrouping } from '../../context/utils';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { isSameDay } from 'date-fns';\nimport { MessageProvider } from '../../../Message/context/MessageProvider';\n\nexport interface ThreadListProps {\n  className?: string;\n  allThreadMessages: Array<UserMessage | FileMessage | BaseMessage>;\n  renderMessage?: (props: {\n    message: UserMessage | FileMessage,\n    chainTop: boolean,\n    chainBottom: boolean,\n    hasSeparator: boolean,\n  }) => React.ReactElement;\n  renderCustomSeparator?: (props: { message: UserMessage | FileMessage }) => React.ReactElement;\n  scrollRef?: RefObject<HTMLDivElement>;\n  scrollBottom?: number;\n}\n\nexport default function ThreadList({\n  className,\n  allThreadMessages,\n  renderMessage,\n  renderCustomSeparator,\n  scrollRef,\n  scrollBottom,\n}: ThreadListProps): React.ReactElement {\n  const { config } = useSendbirdStateContext();\n  const { replyType, userId } = config;\n  const {\n    currentChannel,\n  } = useThreadContext();\n\n  const MemorizedMessage = useMemo(() => ({\n    message,\n    chainTop,\n    chainBottom,\n    hasSeparator,\n  }) => {\n\n    if (typeof renderMessage === 'function') {\n      return renderMessage({\n        message: message as UserMessage | FileMessage,\n        chainTop,\n        chainBottom,\n        hasSeparator,\n      });\n    }\n    return null;\n  }, [renderMessage]);\n\n  return (\n    <div className={`sendbird-thread-list ${className}`}>\n      {allThreadMessages.map((message, idx) => {\n        const isByMe = (message as UserMessage)?.sender?.userId === userId;\n        const prevMessage = allThreadMessages[idx - 1];\n        const nextMessage = allThreadMessages[idx + 1];\n        // eslint-disable-next-line no-constant-condition\n        const [chainTop, chainBottom] = true// isMessageGroupingEnabled\n          ? compareMessagesForGrouping(\n            prevMessage as UserMessage | FileMessage,\n            message as UserMessage | FileMessage,\n            nextMessage as UserMessage | FileMessage,\n            currentChannel,\n            replyType,\n          )\n          : [false, false];\n        const hasSeparator = !(prevMessage?.createdAt > 0 && (\n          isSameDay(message?.createdAt, prevMessage?.createdAt)\n        ));\n\n        const handleScroll = () => {\n          const current = scrollRef?.current;\n          if (current) {\n            const bottom = current.scrollHeight - current.scrollTop - current.offsetHeight;\n            if (scrollBottom < bottom) {\n              current.scrollTop += bottom - scrollBottom;\n            }\n          }\n        };\n\n        return (\n          <MessageProvider message={message} isByMe={isByMe} key={message?.messageId}>\n            {\n              MemorizedMessage({\n                message,\n                chainTop,\n                chainBottom,\n                hasSeparator,\n              }) || (\n                <ThreadListItem\n                  message={message as UserMessage | FileMessage}\n                  chainTop={chainTop}\n                  chainBottom={chainBottom}\n                  hasSeparator={hasSeparator}\n                  renderCustomSeparator={renderCustomSeparator}\n                  handleScroll={handleScroll}\n                />\n              )\n            }\n          </MessageProvider>\n        );\n      })}\n    </div>\n  );\n}\n"],"names":["ThreadList","_ref","className","allThreadMessages","renderMessage","renderCustomSeparator","scrollRef","scrollBottom","config","useSendbirdStateContext","replyType","userId","currentChannel","useThreadContext","MemorizedMessage","useMemo","_ref2","message","chainTop","chainBottom","hasSeparator","React","createElement","map","idx","_sender","isByMe","sender","prevMessage","nextMessage","compareMessagesForGrouping","createdAt","isSameDay","handleScroll","current","bottom","scrollHeight","scrollTop","offsetHeight","MessageProvider","key","messageId","ThreadListItem"],"mappings":"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"}