{"version":3,"file":"OpenChannelMessage.js","sources":["../../../../src/modules/OpenChannel/components/OpenChannelMessage/RemoveMessageModal.tsx","../../../../src/ui/FileViewer/types.ts","../../../../src/modules/OpenChannel/components/OpenChannelMessage/utils.ts","../../../../src/modules/OpenChannel/components/OpenChannelMessage/index.tsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport { ClientFileMessage, ClientUserMessage } from '../../../../index';\nimport Modal from '../../../../ui/Modal';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\n\ninterface Props {\n  onCloseModal(): void;\n  onDeleteMessage(message: ClientUserMessage | ClientFileMessage, callback?: () => void): void;\n}\n\nexport default function RemoveMessageModal({\n  onCloseModal,\n  onDeleteMessage,\n}: Props): JSX.Element {\n  const { stringSet } = useContext(LocalizationContext);\n\n  return (\n    <Modal\n      onCancel={onCloseModal}\n      onSubmit={onDeleteMessage}\n      submitText={stringSet.MESSAGE_MENU__DELETE}\n      titleText={stringSet.MODAL__DELETE_MESSAGE__TITLE}\n    />\n  );\n}\n","// https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Complete_list_of_MIME_types\n\nexport type SupportedImageMimesType = 'image/jpeg' | 'image/jpg' | 'image/png' | 'image/gif' | 'image/svg+xml' | 'image/webp';\nexport type SupportedVideoMimesType = 'video/mpeg' | 'video/ogg' | 'video/webm' | 'video/mp4';\nexport type SupportedMimesType = SupportedImageMimesType | SupportedVideoMimesType;\n\nconst SUPPORTED_MIMES = {\n  IMAGE: [\n    'image/jpeg',\n    'image/jpg',\n    'image/png',\n    'image/gif',\n    'image/svg+xml',\n    'image/webp',\n  ],\n  VIDEO: [\n    'video/mpeg',\n    'video/ogg',\n    'video/webm',\n    'video/mp4',\n  ],\n};\n\nexport const isImage = (type: SupportedImageMimesType): boolean => SUPPORTED_MIMES.IMAGE.indexOf(type) >= 0;\nexport const isVideo = (type: SupportedVideoMimesType): boolean => SUPPORTED_MIMES.VIDEO.indexOf(type) >= 0;\nexport const isGif = (type: SupportedMimesType): boolean => type === 'image/gif';\nexport const unSupported = (type: SupportedMimesType): boolean => (\n  !(\n    isImage(type as SupportedImageMimesType)\n    || isVideo(type as SupportedVideoMimesType)\n  )\n);\n\nexport default { ...SUPPORTED_MIMES };\n","import { AdminMessage, FileMessage, UserMessage } from '@sendbird/chat/message';\nimport { isImage, isVideo } from '../../../../ui/FileViewer/types';\n\nexport const MessageTypes = {\n  ADMIN: 'ADMIN',\n  USER: 'USER',\n  FILE: 'FILE',\n  THUMBNAIL: 'THUMBNAIL',\n  OG: 'OG',\n  UNKNOWN: 'UNKNOWN',\n};\n\nexport const SendingMessageStatus = {\n  NONE: 'none',\n  SUCCEEDED: 'succeeded',\n  FAILED: 'failed',\n  PENDING: 'pending',\n};\n\nexport const getMessageType = (message: UserMessage | FileMessage | AdminMessage): string => {\n  if ((message?.isUserMessage?.()) || message?.messageType === 'user') {\n    return (message?.ogMetaData)\n      ? MessageTypes.OG\n      : MessageTypes.USER;\n  }\n  if (message?.isAdminMessage?.()) {\n    return MessageTypes.ADMIN;\n  }\n  if (message?.messageType === 'file') {\n    return (isImage((message as FileMessage).type) || isVideo((message as FileMessage).type))\n      ? MessageTypes.THUMBNAIL\n      : MessageTypes.FILE;\n  }\n  return MessageTypes.UNKNOWN;\n};\n\nexport default {\n  MessageTypes,\n  SendingMessageStatus,\n  getMessageType,\n};\n","import React, {\n  useState,\n  useRef,\n  ReactElement,\n  useMemo,\n} from 'react';\nimport { AdminMessage, FileMessage, UserMessage } from '@sendbird/chat/message';\nimport { User } from '@sendbird/chat';\nimport format from 'date-fns/format';\n\nimport OpenChannelUserMessage from '../../../../ui/OpenchannelUserMessage';\nimport OpenChannelAdminMessage from '../../../../ui/OpenChannelAdminMessage';\nimport OpenChannelOGMessage from '../../../../ui/OpenchannelOGMessage';\nimport OpenChannelThumbnailMessage from '../../../../ui/OpenchannelThumbnailMessage';\nimport OpenChannelFileMessage from '../../../../ui/OpenchannelFileMessage';\n// import UnknownMessage from '../../../../ui/UnknownMessage';\n\nimport DateSeparator from '../../../../ui/DateSeparator';\nimport Label, { LabelTypography, LabelColors } from '../../../../ui/Label';\nimport MessageInput from '../../../../ui/MessageInput';\nimport FileViewer from '../../../../ui/FileViewer';\n\nimport RemoveMessageModal from './RemoveMessageModal';\nimport {\n  MessageTypes,\n  SendingMessageStatus,\n  getMessageType,\n} from './utils';\nimport { useOpenChannelContext } from '../../context/OpenChannelProvider';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport type { RenderMessageProps } from '../../../../types';\nimport { useLocalization } from '../../../../lib/LocalizationContext';\n\nexport type OpenChannelMessageProps = {\n  renderMessage?: (props: RenderMessageProps) => React.ElementType<RenderMessageProps>;\n  message: UserMessage | FileMessage | AdminMessage;\n  chainTop?: boolean;\n  chainBottom?: boolean;\n  hasSeparator?: boolean;\n  editDisabled?: boolean;\n};\n\nexport default function MessagOpenChannelMessageeHoc(props: OpenChannelMessageProps): ReactElement {\n  const {\n    message,\n    chainTop,\n    chainBottom,\n    hasSeparator,\n    renderMessage,\n  } = props;\n\n  const {\n    currentOpenChannel,\n    deleteMessage,\n    updateMessage,\n    resendMessage,\n  } = useOpenChannelContext();\n  const { dateLocale } = useLocalization();\n  const editDisabled = currentOpenChannel?.isFrozen;\n\n  const globalState = useSendbirdStateContext();\n  const userId = globalState?.config?.userId;\n\n  let sender: User = null;\n  if (message?.messageType !== 'admin') {\n    sender = (message as UserMessage | FileMessage)?.sender;\n  }\n\n  const RenderedMessage = useMemo(() => (props: RenderMessageProps) => {\n    return (\n      <>\n        {\n          renderMessage\n            ? (renderMessage(props))\n            : null\n        }\n      </>\n    );\n  }, [message, renderMessage]);\n\n  const [showEdit, setShowEdit] = useState(false);\n  const [showRemove, setShowRemove] = useState(false);\n  const [showFileViewer, setShowFileViewer] = useState(false);\n  const editMessageInputRef = useRef(null);\n\n  let isByMe = false;\n\n  if (sender && message?.messageType !== 'admin') {\n    // pending and failed messages are by me\n    isByMe = (userId === sender.userId)\n      || ((message as UserMessage | FileMessage)?.sendingStatus === SendingMessageStatus.PENDING)\n      || ((message as UserMessage | FileMessage)?.sendingStatus === SendingMessageStatus.FAILED);\n  }\n\n  if (renderMessage && RenderedMessage) {\n    return (\n      <div className=\"sendbird-msg-hoc sendbird-msg--scroll-ref\">\n        <RenderedMessage message={message} chainTop={chainTop} chainBottom={chainBottom} />\n      </div>\n    );\n  }\n\n  if (message?.messageType === 'user' && showEdit) {\n    return (\n      <MessageInput\n        isEdit\n        disabled={editDisabled}\n        ref={editMessageInputRef}\n        message={message as UserMessage}\n        name={message?.messageId}\n        onUpdateMessage={({ messageId, message }) => {\n          updateMessage(messageId, message);\n          setShowEdit(false);\n        }}\n        onCancelEdit={() => { setShowEdit(false); }}\n      />\n    );\n  }\n\n  return (\n    <div className=\"sendbird-msg-hoc sendbird-msg--scroll-ref\">\n      {/* date-separator */}\n      {\n        (hasSeparator && message?.createdAt) && (\n          <DateSeparator>\n            <Label type={LabelTypography.CAPTION_2} color={LabelColors.ONBACKGROUND_2}>\n              {format(message?.createdAt, 'MMMM dd, yyyy', {\n                locale: dateLocale,\n              })}\n            </Label>\n          </DateSeparator>\n        )\n      }\n      {/* Message */}\n      {\n        {\n          [MessageTypes.ADMIN]: (() => {\n            if (message?.messageType === 'admin') {\n              return (\n                <OpenChannelAdminMessage message={message as AdminMessage} />\n              );\n            }\n          })(),\n          [MessageTypes.FILE]: (() => {\n            if (message?.messageType === 'file') {\n              return (\n                <OpenChannelFileMessage\n                  message={message as FileMessage}\n                  isOperator={currentOpenChannel?.isOperator((message as FileMessage)?.sender?.userId)}\n                  isEphemeral={currentOpenChannel?.isEphemeral}\n                  disabled={editDisabled}\n                  userId={userId}\n                  showRemove={setShowRemove}\n                  resendMessage={resendMessage}\n                  chainTop={chainTop}\n                  chainBottom={chainBottom}\n                />\n              );\n            }\n          })(),\n          [MessageTypes.OG]: (() => {\n            if (message?.messageType === 'user') {\n              return (\n                <OpenChannelOGMessage\n                  message={message as UserMessage}\n                  isOperator={currentOpenChannel?.isOperator((message as UserMessage)?.sender?.userId)}\n                  isEphemeral={currentOpenChannel?.isEphemeral}\n                  userId={userId}\n                  showEdit={setShowEdit}\n                  disabled={editDisabled}\n                  showRemove={setShowRemove}\n                  resendMessage={resendMessage}\n                  chainTop={chainTop}\n                  chainBottom={chainBottom}\n                />\n              );\n            }\n          })(),\n          [MessageTypes.THUMBNAIL]: (() => {\n            if (message?.messageType === 'file') {\n              return (\n                <OpenChannelThumbnailMessage\n                  message={message as FileMessage}\n                  isOperator={currentOpenChannel?.isOperator((message as FileMessage)?.sender?.userId)}\n                  isEphemeral={currentOpenChannel?.isEphemeral}\n                  disabled={editDisabled}\n                  userId={userId}\n                  showRemove={setShowRemove}\n                  resendMessage={resendMessage}\n                  onClick={setShowFileViewer}\n                  chainTop={chainTop}\n                  chainBottom={chainBottom}\n                />\n              );\n            }\n          })(),\n          [MessageTypes.USER]: (() => {\n            if (message?.messageType === 'user') {\n              return (\n                <OpenChannelUserMessage\n                  message={message as UserMessage}\n                  isOperator={currentOpenChannel?.isOperator((message as UserMessage)?.sender?.userId)}\n                  isEphemeral={currentOpenChannel?.isEphemeral}\n                  userId={userId}\n                  disabled={editDisabled}\n                  showEdit={setShowEdit}\n                  showRemove={setShowRemove}\n                  resendMessage={resendMessage}\n                  chainTop={chainTop}\n                  chainBottom={chainBottom}\n                />\n              );\n            }\n          })(),\n          [MessageTypes.UNKNOWN]: (() => {\n            // return (\n            //   <OpenChannelUnknownMessage message={message} />\n            // );\n          })(),\n        }[getMessageType(message)]\n      }\n      {/* Modal */}\n      {\n        showRemove && (\n          <RemoveMessageModal\n            onCloseModal={() => setShowRemove(false)}\n            onDeleteMessage={() => {\n              if (message?.messageType !== 'admin') {\n                deleteMessage(message);\n              }\n            }}\n          />\n        )\n      }\n      {\n        (showFileViewer && message?.messageType === 'file') && (\n          <FileViewer\n            onClose={() => setShowFileViewer(false)}\n            message={message as FileMessage}\n            onDelete={() => deleteMessage(message)}\n            isByMe={isByMe}\n          />\n        )\n      }\n      {/* {\n        !((message?.isFileMessage && message?.isFileMessage()) || message?.messageType === 'file')\n        && !(message?.isAdminMessage && message?.isAdminMessage())\n        && !(((message?.isUserMessage && message?.isUserMessage()) || message?.messageType === 'user'))\n        && !(showFileViewer)\n        && (\n          <UnknownMessage\n            message={message}\n            isByMe={isByMe}\n            showRemove={setShowRemove}\n            chainTop={chainTop}\n            chainBottom={chainBottom}\n          />\n        )\n      } */}\n    </div>\n  );\n}\n"],"names":["RemoveMessageModal","_ref","onCloseModal","onDeleteMessage","stringSet","useContext","LocalizationContext","React","createElement","Modal","onCancel","onSubmit","submitText","MESSAGE_MENU__DELETE","titleText","MODAL__DELETE_MESSAGE__TITLE","SUPPORTED_MIMES","IMAGE","VIDEO","isImage","type","indexOf","isVideo","_objectSpread","MessageTypes","ADMIN","USER","FILE","THUMBNAIL","OG","UNKNOWN","SendingMessageStatus","NONE","SUCCEEDED","FAILED","PENDING","getMessageType","message","_message$isUserMessag","_message$isAdminMessa","isUserMessage","call","messageType","ogMetaData","isAdminMessage","MessagOpenChannelMessageeHoc","props","_globalState$config","chainTop","chainBottom","hasSeparator","renderMessage","currentOpenChannel","deleteMessage","updateMessage","resendMessage","useOpenChannelContext","dateLocale","useLocalization","editDisabled","isFrozen","globalState","useSendbirdStateContext","userId","config","sender","RenderedMessage","useMemo","Fragment","showEdit","setShowEdit","useState","showRemove","setShowRemove","showFileViewer","setShowFileViewer","editMessageInputRef","useRef","isByMe","sendingStatus","className","MessageInput","isEdit","disabled","ref","name","messageId","onUpdateMessage","onCancelEdit","createdAt","DateSeparator","Label","LabelTypography","CAPTION_2","color","LabelColors","ONBACKGROUND_2","format","locale","OpenChannelAdminMessage","_sender","OpenChannelFileMessage","isOperator","isEphemeral","_sender2","OpenChannelOGMessage","_sender3","OpenChannelThumbnailMessage","onClick","_sender4","OpenChannelUserMessage","FileViewer","onClose","onDelete"],"mappings":"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"}