{"version":3,"file":"ModerationPanel.js","sources":["../../../../src/modules/ChannelSettings/components/ModerationPanel/OperatorsModal.tsx","../../../../src/modules/ChannelSettings/components/ModerationPanel/AddOperatorsModal.tsx","../../../../src/modules/ChannelSettings/components/ModerationPanel/OperatorList.tsx","../../../../src/modules/ChannelSettings/components/ModerationPanel/BannedUsersModal.tsx","../../../../src/modules/ChannelSettings/components/ModerationPanel/BannedUserList.tsx","../../../../src/modules/ChannelSettings/components/ModerationPanel/MutedMembersModal.tsx","../../../../src/modules/ChannelSettings/components/ModerationPanel/MutedMemberList.tsx","../../../../src/modules/ChannelSettings/components/ModerationPanel/index.tsx"],"sourcesContent":["import React, {\n  ReactElement,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\n\ninterface Props { onCancel?(): void }\n\nexport default function OperatorsModal({ onCancel }: Props): ReactElement {\n  const [operators, setOperators] = useState([]);\n  const [operatorQuery, setOperatorQuery] = useState(null);\n\n  const { channel } = useChannelSettingsContext();\n  const state = useSendbirdStateContext();\n  const currentUserId = state?.config?.userId;\n  const { stringSet } = useContext(LocalizationContext);\n\n  useEffect(() => {\n    const operatorListQuery = channel?.createOperatorListQuery({\n      limit: 20,\n    });\n    operatorListQuery.next().then((operators) => {\n      setOperators(operators);\n    });\n    setOperatorQuery(operatorListQuery);\n  }, []);\n  return (\n    <div>\n      <Modal\n        isFullScreenOnMobile\n        hideFooter\n        titleText={stringSet.CHANNEL_SETTING__OPERATORS__TITLE_ALL}\n        onCancel={onCancel}\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = operatorQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              operatorQuery.next().then((o) => {\n                setOperators([\n                  ...operators,\n                  ...o,\n                ]);\n              });\n            }\n          }}\n        >\n          {operators.map((member) => (\n            <UserListItem\n              currentUser={currentUserId}\n              user={member}\n              key={member.userId}\n              action={({ parentRef, actionRef }) => (\n                member?.userId !== currentUserId && (\n                  <ContextMenu\n                    menuTrigger={(toggleDropdown) => (\n                      <IconButton\n                        className=\"sendbird-user-message__more__menu\"\n                        width=\"32px\"\n                        height=\"32px\"\n                        onClick={toggleDropdown}\n                      >\n                        <Icon\n                          width=\"24px\"\n                          height=\"24px\"\n                          type={IconTypes.MORE}\n                          fillColor={IconColors.CONTENT_INVERSE}\n                        />\n                      </IconButton>\n                    )}\n                    menuItems={(closeDropdown) => (\n                      <MenuItems\n                        parentContainRef={parentRef}\n                        parentRef={actionRef} // for catching location(x, y) of MenuItems\n                        closeDropdown={closeDropdown}\n                        openLeft\n                      >\n                        <MenuItem\n                          onClick={() => {\n                            channel?.removeOperators([member.userId]).then(() => {\n                              setOperators(operators.filter(({ userId }) => {\n                                return userId !== member.userId;\n                              }));\n                            });\n                            closeDropdown();\n                          }}\n                          dataSbId=\"channel_setting_operator_context_menu_unregister_unregister_operator\"\n                        >\n                          {stringSet.CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR}\n                        </MenuItem>\n                      </MenuItems>\n                    )}\n                  />\n                )\n              )}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useContext,\n} from 'react';\n\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport Modal from '../../../../ui/Modal';\nimport Label, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport { ButtonTypes } from '../../../../ui/Button';\nimport UserListItem from '../../../../ui/UserListItem';\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\nimport { OperatorFilter } from '@sendbird/chat/groupChannel';\n\ninterface Props {\n  onCancel(): void;\n  onSubmit(members: Array<string>): void;\n}\n\nexport default function AddOperatorsModal({\n  onCancel,\n  onSubmit,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [selectedMembers, setSelectedMembers] = useState({});\n  const [memberQuery, setMemberQuery] = useState(null);\n  const { stringSet } = useContext(LocalizationContext);\n\n  const { channel } = useChannelSettingsContext();\n\n  useEffect(() => {\n    const memberListQuery = channel?.createMemberListQuery({\n      operatorFilter: OperatorFilter.NONOPERATOR,\n      limit: 20,\n    });\n    memberListQuery.next().then((members) => {\n      setMembers(members);\n    });\n    setMemberQuery(memberListQuery);\n  }, []);\n\n  const selectedCount = Object.keys(selectedMembers).filter((m) => selectedMembers[m]).length;\n  return (\n    <div>\n      <Modal\n        isFullScreenOnMobile\n        type={ButtonTypes.PRIMARY}\n        submitText={stringSet.CHANNEL_SETTING__OPERATORS__ADD_BUTTON}\n        onCancel={onCancel}\n        onSubmit={() => {\n          const members = Object.keys(selectedMembers).filter((m) => selectedMembers[m]);\n          channel?.addOperators(members).then(() => {\n            onSubmit(members);\n          });\n        }}\n        titleText={stringSet.CHANNEL_SETTING__MEMBERS__SELECT_TITLE}\n      >\n        <Label\n          color={(selectedCount > 0) ? LabelColors.PRIMARY : LabelColors.ONBACKGROUND_3}\n          type={LabelTypography.CAPTION_1}\n        >\n          {`${selectedCount} ${stringSet.MODAL__INVITE_MEMBER__SELECTED}`}\n        </Label>\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n            if (hasNext && fetchMore) {\n              memberQuery.next().then((o) => {\n                setMembers([\n                  ...members,\n                  ...o,\n                ]);\n              });\n            }\n          }}\n        >\n          {\n            members.map((member) => (\n              <UserListItem\n                checkBox\n                checked={selectedMembers[member.userId]}\n                isOperator={member?.role === 'operator'}\n                disabled={member?.role === 'operator'}\n                onChange={\n                  (event) => {\n                    const modifiedSelectedMembers = {\n                      ...selectedMembers,\n                      [event.target.id]: event.target.checked,\n                    };\n                    if (!event.target.checked) {\n                      delete modifiedSelectedMembers[event.target.id];\n                    }\n                    setSelectedMembers(modifiedSelectedMembers);\n                  }\n                }\n                user={member}\n                key={member.userId}\n              />\n            ))\n          }\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n  useContext,\n} from 'react';\n\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport UserListItem from '../UserListItem';\nimport OperatorsModal from './OperatorsModal';\nimport AddOperatorsModal from './AddOperatorsModal';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\n\nexport const OperatorList = (): ReactElement => {\n  const [operators, setOperators] = useState([]);\n  const [showMore, setShowMore] = useState(false);\n  const [showAdd, setShowAdd] = useState(false);\n  const [hasNext, setHasNext] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n\n  const state = useSendbirdStateContext();\n  const { channel } = useChannelSettingsContext();\n\n  const userId = state?.config?.userId;\n\n  useEffect(() => {\n    if (!channel) {\n      setOperators([]);\n      return;\n    }\n\n    const operatorListQuery = channel?.createOperatorListQuery({\n      limit: 10,\n    });\n    operatorListQuery.next().then((operators) => {\n      setOperators(operators);\n      setHasNext(operatorListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refreshList = useCallback(\n    () => {\n      if (!channel) {\n        setOperators([]);\n        return;\n      }\n      const operatorListQuery = channel?.createOperatorListQuery({\n        limit: 10,\n      });\n      operatorListQuery.next().then((operators) => {\n        setOperators(operators);\n        setHasNext(operatorListQuery.hasNext);\n      });\n    },\n    [channel],\n  );\n\n  return (\n    <>\n      {\n        operators.map((operator) => (\n          <UserListItem\n            key={operator.userId}\n            user={operator}\n            currentUser={userId}\n            action={({ actionRef }) => {\n              if (operator?.userId === userId) {\n                return null;\n              }\n              return (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentRef={actionRef}\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel?.removeOperators([operator.userId]).then(() => {\n                            setOperators(operators.filter(({ userId }) => (\n                              userId !== operator.userId\n                            )));\n                          });\n                          closeDropdown();\n                        }}\n                        dataSbId=\"channel_setting_operator_context_menu_unregister_operator\"\n                      >\n                        {stringSet.CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR}\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              );\n            }}\n          />\n        ))\n      }\n      <div\n        className=\"sendbird-channel-settings-accordion__footer\"\n      >\n        <Button\n          type={ButtonTypes.SECONDARY}\n          size={ButtonSizes.SMALL}\n          onClick={() => {\n            setShowAdd(true);\n          }}\n        >\n          {stringSet.CHANNEL_SETTING__OPERATORS__TITLE_ADD}\n        </Button>\n        {\n          hasNext && (\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowMore(true);\n              }}\n            >\n              {stringSet.CHANNEL_SETTING__OPERATORS__TITLE_ALL}\n            </Button>\n          )\n        }\n      </div>\n      {\n        showMore && (\n          <OperatorsModal onCancel={() => {\n            setShowMore(false);\n            refreshList();\n          }} />\n        )\n      }\n      {\n        showAdd && (\n          <AddOperatorsModal\n            onCancel={() => setShowAdd(false)}\n            onSubmit={() => {\n              refreshList();\n              setShowAdd(false);\n            }}\n          />\n        )\n      }\n    </>\n  );\n};\n\nexport default OperatorList;\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport { noop } from '../../../../utils/utils';\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\nimport { useLocalization } from '../../../../lib/LocalizationContext';\n\ninterface Props {\n  onCancel(): void;\n}\n\nexport default function BannedUsersModal({\n  onCancel,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [memberQuery, setMemberQuery] = useState(null);\n  const { channel } = useChannelSettingsContext();\n  const { stringSet } = useLocalization();\n\n  useEffect(() => {\n    const bannedUserListQuery = channel?.createBannedUserListQuery();\n    bannedUserListQuery.next().then((users) => {\n      setMembers(users);\n    });\n    setMemberQuery(bannedUserListQuery);\n  }, []);\n  return (\n    <div>\n      <Modal\n        isFullScreenOnMobile\n        hideFooter\n        onCancel={() => onCancel()}\n        onSubmit={noop}\n        titleText={stringSet.CHANNEL_SETTING__MUTED_MEMBERS__TITLE}\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              memberQuery.next().then((o) => {\n                setMembers([\n                  ...members,\n                  ...o,\n                ]);\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              user={member}\n              key={member.userId}\n              action={({ parentRef, actionRef }) => (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel?.unbanUser(member).then(() => {\n                            closeDropdown();\n                            setMembers(members.filter(m => {\n                              return (m.userId !== member.userId);\n                            }));\n                          });\n                        }}\n                        dataSbId=\"channel_setting_banned_user_context_menu_ban\"\n                      >\n                        {stringSet.CHANNEL_SETTING__MODERATION__BAN}\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              )\n              }\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n  useContext,\n} from 'react';\nimport { BannedUserListQueryParams } from '@sendbird/chat';\n\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport\nLabel, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport UserListItem from '../UserListItem';\nimport BannedUsersModal from './BannedUsersModal';\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\n\nexport const BannedMemberList = (): ReactElement => {\n  const [members, setMembers] = useState([]);\n  const [hasNext, setHasNext] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n  const { stringSet } = useContext(LocalizationContext);\n  const { channel } = useChannelSettingsContext();\n\n  const bannedUserListQueryParams: BannedUserListQueryParams = { limit: 10 };\n  useEffect(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n    const bannedUserListQuery = channel?.createBannedUserListQuery(bannedUserListQueryParams);\n    bannedUserListQuery.next().then((users) => {\n      setMembers(users);\n      setHasNext(bannedUserListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refreshList = useCallback(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n    const bannedUserListQuery = channel?.createBannedUserListQuery(bannedUserListQueryParams);\n    bannedUserListQuery.next().then((users) => {\n      setMembers(users);\n      setHasNext(bannedUserListQuery.hasNext);\n    });\n  }, [channel]);\n  return (\n    <>\n      {\n        members.map((member) => (\n          <UserListItem\n            key={member.userId}\n            user={member}\n            action={({ actionRef, parentRef }) => {\n              return (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel?.unbanUser(member).then(() => {\n                            closeDropdown();\n                            refreshList();\n                          });\n                        }}\n                        dataSbId=\"channel_setting_banned_user_context_menu_unban\"\n                      >\n                        {stringSet.CHANNEL_SETTING__MODERATION__UNBAN}\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              );\n            }}\n          />\n        ))\n      }\n      {\n        members && members.length === 0 && (\n          <Label\n            className=\"sendbird-channel-settings__empty-list\"\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_3}\n          >\n            {stringSet.CHANNEL_SETTING__MODERATION__EMPTY_BAN}\n          </Label>\n        )\n      }\n      {\n        hasNext && (\n          <div\n            className=\"sendbird-channel-settings-accordion__footer\"\n          >\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowModal(true);\n              }}\n            >\n              {stringSet.CHANNEL_SETTING__MODERATION__ALL_BAN}\n            </Button>\n          </div>\n        )\n      }\n      {\n        showModal && (\n          <BannedUsersModal\n            onCancel={() => {\n              setShowModal(false);\n              refreshList();\n            }}\n          />\n        )\n      }\n    </>\n  );\n};\n\nexport default BannedMemberList;\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport { noop } from '../../../../utils/utils';\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { useLocalization } from '../../../../lib/LocalizationContext';\n\ninterface Props {\n  onCancel(): void;\n}\n\nexport default function MutedMembersModal({\n  onCancel,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [memberQuery, setMemberQuery] = useState(null);\n\n  const { channel } = useChannelSettingsContext();\n  const state = useSendbirdStateContext();\n  const currentUser = state?.config?.userId;\n  const { stringSet } = useLocalization();\n\n  useEffect(() => {\n    const memberUserListQuery = channel?.createMemberListQuery({\n      limit: 10,\n      // @ts-ignore\n      mutedMemberFilter: 'muted',\n    });\n    memberUserListQuery.next().then((members) => {\n      setMembers(members);\n    });\n    setMemberQuery(memberUserListQuery);\n  }, []);\n  return (\n    <div>\n      <Modal\n        isFullScreenOnMobile\n        hideFooter\n        onCancel={() => onCancel()}\n        onSubmit={noop}\n        titleText={stringSet.CHANNEL_SETTING__MUTED_MEMBERS__TITLE}\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              memberQuery.next().then((o) => {\n                setMembers([\n                  ...members,\n                  ...o,\n                ]);\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              currentUser={currentUser}\n              user={member}\n              key={member.userId}\n              action={({ actionRef, parentRef }) => (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel?.unmuteUser(member).then(() => {\n                            closeDropdown();\n                            setMembers(members.filter(m => {\n                              return (m.userId !== member.userId);\n                            }));\n                          });\n                        }}\n                        dataSbId=\"channel_setting_muted_member_context_menu_unmute\"\n                      >\n                        {stringSet.CHANNEL_SETTING__MODERATION__UNMUTE}\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              )}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n} from 'react';\n\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport\nLabel, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport UserListItem from '../UserListItem';\nimport MutedMembersModal from './MutedMembersModal';\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { useLocalization } from '../../../../lib/LocalizationContext';\n\nexport const MutedMemberList = (): ReactElement => {\n  const [members, setMembers] = useState([]);\n  const [hasNext, setHasNext] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const { stringSet } = useLocalization();\n\n  const { channel } = useChannelSettingsContext();\n  const state = useSendbirdStateContext();\n  const currentUser = state?.config?.userId;\n\n  useEffect(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const memberUserListQuery = channel?.createMemberListQuery({\n      limit: 10,\n      // @ts-ignore\n      mutedMemberFilter: 'muted',\n    });\n    memberUserListQuery.next().then((members) => {\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refreshList = useCallback(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const memberUserListQuery = channel?.createMemberListQuery({\n      limit: 10,\n      // @ts-ignore\n      mutedMemberFilter: 'muted',\n    });\n    memberUserListQuery.next().then((members) => {\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n  return (\n    <>\n      {\n        members.map((member) => (\n          <UserListItem\n            key={member.userId}\n            user={member}\n            currentUser={currentUser}\n            action={({ actionRef, parentRef }) => {\n              return (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel?.unmuteUser(member).then(() => {\n                            refreshList();\n                            closeDropdown();\n                          });\n                        }}\n                        dataSbId=\"channel_setting_muted_member_context_menu_unmute\"\n                      >\n                        {stringSet?.CHANNEL_SETTING__UNMUTE || stringSet.CHANNEL_SETTING__MODERATION__UNMUTE}\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              );\n            }\n            }\n          />\n        ))\n      }\n      {\n        members && members.length === 0 && (\n          <Label\n            className=\"sendbird-channel-settings__empty-list\"\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_3}\n          >\n            {stringSet.CHANNEL_SETTING__NO_UNMUTED}\n          </Label>\n        )\n      }\n      {\n        hasNext && (\n          <div\n            className=\"sendbird-channel-settings-accordion__footer\"\n          >\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowModal(true);\n              }}\n            >\n              {stringSet.CHANNEL_SETTING__MUTED_MEMBERS__TITLE_ALL}\n            </Button>\n          </div>\n        )\n      }\n      {\n        showModal && (\n          <MutedMembersModal\n            onCancel={() => {\n              setShowModal(false);\n              refreshList();\n            }}\n          />\n        )\n      }\n    </>\n  );\n};\n\nexport default MutedMemberList;\n","import './admin-panel.scss';\nimport React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useContext,\n} from 'react';\n\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport Accordion, { AccordionGroup } from '../../../../ui/Accordion';\nimport\nLabel, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport Badge from '../../../../ui/Badge';\nimport { Toggle } from '../../../../ui/Toggle';\n\nimport OperatorList from './OperatorList';\nimport MemberList from './MemberList';\nimport BannedUserList from './BannedUserList';\nimport MutedMemberList from './MutedMemberList';\n\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\n\nconst kFormatter = (num: number): string|number => {\n  return Math.abs(num) > 999\n    ? `${(Math.abs(num) / 1000).toFixed(1)}K`\n    : num;\n};\n\nexport default function AdminPannel(): ReactElement {\n  const [frozen, setFrozen] = useState(false);\n\n  const { stringSet } = useContext(LocalizationContext);\n  const { channel } = useChannelSettingsContext();\n\n  // work around for\n  // https://sendbird.slack.com/archives/G01290GCDCN/p1595922832000900\n  // SDK bug - after frozen/unfrozen myRole becomes \"none\"\n  useEffect(() => {\n    setFrozen(channel?.isFrozen);\n  }, [channel]);\n\n  return (\n    <AccordionGroup className=\"sendbird-channel-settings__operator\">\n      <Accordion\n        className=\"sendbird-channel-settings__operators-list\"\n        id=\"operators\"\n        renderTitle={() => (\n          <>\n            <Icon\n              type={IconTypes.OPERATOR}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__OPERATORS__TITLE}\n            </Label>\n          </>\n        )}\n        renderContent={() => (\n          <>\n            <OperatorList />\n          </>\n        )}\n      />\n      <Accordion\n        className=\"sendbird-channel-settings__members-list\"\n        id=\"members\"\n        renderTitle={() => (\n          <>\n            <Icon\n              type={IconTypes.MEMBERS}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__MEMBERS__TITLE}\n            </Label>\n            <Badge count={kFormatter(channel?.memberCount)} />\n          </>\n        )}\n        renderContent={() => (\n          <>\n            <MemberList />\n          </>\n        )}\n      />\n      {\n        // No muted members in broadcast channel\n        !channel?.isBroadcast && (\n          <Accordion\n            id=\"mutedMembers\"\n            className=\"sendbird-channel-settings__muted-members-list\"\n            renderTitle={() => (\n              <>\n                <Icon\n                  type={IconTypes.MUTE}\n                  fillColor={IconColors.PRIMARY}\n                  width={24}\n                  height={24}\n                  className=\"sendbird-channel-settings__accordion-icon\"\n                />\n                <Label\n                  type={LabelTypography.SUBTITLE_1}\n                  color={LabelColors.ONBACKGROUND_1}\n                >\n                  {stringSet.CHANNEL_SETTING__MUTED_MEMBERS__TITLE}\n                </Label>\n              </>\n            )}\n            renderContent={() => (\n              <>\n                <MutedMemberList />\n              </>\n            )}\n          />\n        )\n      }\n      <Accordion\n        className=\"sendbird-channel-settings__banned-members-list\"\n        id=\"bannedUsers\"\n        renderTitle={() => (\n          <>\n            <Icon\n              type={IconTypes.BAN}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__BANNED_MEMBERS__TITLE}\n            </Label>\n          </>\n        )}\n        renderContent={() => (\n          <>\n            <BannedUserList />\n          </>\n        )}\n      />\n      {\n        // cannot freeze broadcast channel\n        !channel?.isBroadcast && (\n          <div className=\"sendbird-channel-settings__freeze\">\n            <Icon\n              type={IconTypes.FREEZE}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__FREEZE_CHANNEL}\n            </Label>\n            <Toggle\n              className=\"sendbird-channel-settings__frozen-icon\"\n              checked={frozen}\n              onChange={() => {\n                if (frozen) {\n                  channel?.unfreeze().then(() => {\n                    setFrozen((prev) => !prev);\n                  });\n                } else {\n                  channel?.freeze().then(() => {\n                    setFrozen((prev) => !prev);\n                  });\n                }\n              }}\n            />\n          </div>\n        )\n      }\n    </AccordionGroup>\n  );\n}\n"],"names":["OperatorsModal","_ref","_state$config","onCancel","operators","setOperators","useState","operatorQuery","setOperatorQuery","channel","useChannelSettingsContext","state","useSendbirdStateContext","currentUserId","config","userId","stringSet","useContext","LocalizationContext","useEffect","operatorListQuery","createOperatorListQuery","limit","next","then","React","createElement","Modal","isFullScreenOnMobile","hideFooter","titleText","CHANNEL_SETTING__OPERATORS__TITLE_ALL","className","onScroll","e","hasNext","target","fetchMore","clientHeight","scrollTop","scrollHeight","o","map","member","UserListItem","currentUser","user","key","action","_ref2","parentRef","actionRef","ContextMenu","menuTrigger","toggleDropdown","IconButton","width","height","onClick","Icon","type","IconTypes","MORE","fillColor","IconColors","CONTENT_INVERSE","menuItems","closeDropdown","MenuItems","parentContainRef","openLeft","MenuItem","removeOperators","filter","_ref3","dataSbId","CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR","AddOperatorsModal","onSubmit","members","setMembers","selectedMembers","setSelectedMembers","memberQuery","setMemberQuery","memberListQuery","createMemberListQuery","operatorFilter","OperatorFilter","NONOPERATOR","selectedCount","Object","keys","m","length","ButtonTypes","PRIMARY","submitText","CHANNEL_SETTING__OPERATORS__ADD_BUTTON","addOperators","CHANNEL_SETTING__MEMBERS__SELECT_TITLE","Label","color","LabelColors","ONBACKGROUND_3","LabelTypography","CAPTION_1","MODAL__INVITE_MEMBER__SELECTED","checkBox","checked","isOperator","role","disabled","onChange","event","modifiedSelectedMembers","_objectSpread","id","OperatorList","showMore","setShowMore","showAdd","setShowAdd","setHasNext","refreshList","useCallback","Fragment","operator","Button","SECONDARY","size","ButtonSizes","SMALL","CHANNEL_SETTING__OPERATORS__TITLE_ADD","BannedUsersModal","useLocalization","bannedUserListQuery","createBannedUserListQuery","users","noop","CHANNEL_SETTING__MUTED_MEMBERS__TITLE","unbanUser","CHANNEL_SETTING__MODERATION__BAN","BannedMemberList","showModal","setShowModal","bannedUserListQueryParams","CHANNEL_SETTING__MODERATION__UNBAN","SUBTITLE_2","CHANNEL_SETTING__MODERATION__EMPTY_BAN","CHANNEL_SETTING__MODERATION__ALL_BAN","MutedMembersModal","memberUserListQuery","mutedMemberFilter","unmuteUser","CHANNEL_SETTING__MODERATION__UNMUTE","MutedMemberList","CHANNEL_SETTING__UNMUTE","CHANNEL_SETTING__NO_UNMUTED","CHANNEL_SETTING__MUTED_MEMBERS__TITLE_ALL","kFormatter","num","Math","abs","toFixed","AdminPannel","frozen","setFrozen","isFrozen","AccordionGroup","Accordion","renderTitle","OPERATOR","SUBTITLE_1","ONBACKGROUND_1","CHANNEL_SETTING__OPERATORS__TITLE","renderContent","MEMBERS","CHANNEL_SETTING__MEMBERS__TITLE","Badge","count","memberCount","MemberList","isBroadcast","MUTE","BAN","CHANNEL_SETTING__BANNED_MEMBERS__TITLE","BannedUserList","FREEZE","CHANNEL_SETTING__FREEZE_CHANNEL","Toggle","unfreeze","prev","freeze"],"mappings":"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"}