{"version":3,"file":"index-12ce8274.js","sources":["../../src/hooks/VoicePlayer/dux/actionTypes.ts","../../src/hooks/VoicePlayer/dux/initialState.ts","../../src/hooks/VoicePlayer/dux/reducer.ts","../../src/hooks/VoicePlayer/index.tsx"],"sourcesContent":["import { ObjectValues } from '../../../utils/typeHelpers/objectValues';\n\nexport const actionTypes = {\n  INITIALIZE_AUDIO_UNIT: 'INITIALIZE_AUDIO_UNIT',\n  SET_CURRENT_PLAYER: 'SET_CURRENT_PLAYER',\n  ON_VOICE_PLAYER_PLAY: 'ON_VOICE_PLAYER_PLAY',\n  ON_VOICE_PLAYER_PAUSE: 'ON_VOICE_PLAYER_PAUSE',\n  ON_CURRENT_TIME_UPDATE: 'ON_CURRENT_TIME_UPDATE',\n} as const;\n\nexport type VoicePlayerActionType = ObjectValues<typeof actionTypes>;\n\nexport const INITIALIZE_AUDIO_UNIT: VoicePlayerActionType = 'INITIALIZE_AUDIO_UNIT';\nexport const SET_CURRENT_PLAYER: VoicePlayerActionType = 'SET_CURRENT_PLAYER';\nexport const ON_VOICE_PLAYER_PLAY: VoicePlayerActionType = 'ON_VOICE_PLAYER_PLAY';\nexport const ON_VOICE_PLAYER_PAUSE: VoicePlayerActionType = 'ON_VOICE_PLAYER_PAUSE';\nexport const ON_CURRENT_TIME_UPDATE: VoicePlayerActionType = 'ON_CURRENT_TIME_UPDATE';\n","import { ObjectValues } from '../../../utils/typeHelpers/objectValues';\nimport { GroupKey } from '../utils';\n\nexport const VOICE_PLAYER_STATUS = {\n  IDLE: 'IDLE',\n  PREPARING: 'PREPARING',\n  PLAYING: 'PLAYING',\n  PAUSED: 'PAUSED',\n  COMPLETED: 'COMPLETED',\n} as const;\n// VoicePlayerStatus should be deprecated / It's left for backward legacy\nexport const VoicePlayerStatus = VOICE_PLAYER_STATUS;\nexport type VoicePlayerStatusType = ObjectValues<typeof VOICE_PLAYER_STATUS>;\n\nexport type AudioStorageUnit = {\n  playingStatus: VoicePlayerStatusType;\n  audioFile: null | File;\n  playbackTime: number;\n  duration: number;\n};\nexport const AudioUnitDefaultValue = (): AudioStorageUnit => ({\n  audioFile: null,\n  playbackTime: 0,\n  duration: 1000,\n  playingStatus: VOICE_PLAYER_STATUS.IDLE,\n});\n\nexport interface VoicePlayerInitialState {\n  currentPlayer: null | HTMLAudioElement;\n  currentGroupKey: string;\n  audioStorage: Record<GroupKey, AudioStorageUnit>;\n}\n\nexport const voicePlayerInitialState: VoicePlayerInitialState = {\n  currentPlayer: null,\n  currentGroupKey: '',\n  audioStorage: {},\n};\n","import {\n  INITIALIZE_AUDIO_UNIT,\n  ON_CURRENT_TIME_UPDATE,\n  ON_VOICE_PLAYER_PAUSE,\n  ON_VOICE_PLAYER_PLAY,\n  SET_CURRENT_PLAYER,\n} from './actionTypes';\nimport {\n  AudioStorageUnit,\n  AudioUnitDefaultValue,\n  VoicePlayerInitialState,\n  VOICE_PLAYER_STATUS,\n} from './initialState';\n\ntype InitializeAudioUnitPayload = { groupKey: string };\ntype SetCurrentPlayerPayload = { audioPlayer: HTMLAudioElement, groupKey: string };\ntype OnVoicePlayerPlayPayload = { groupKey: string, audioFile: File };\ntype OnVoicePlayerPausePayload = { groupKey: string };\ntype OnCurrentTimeUpdatePayload = { groupKey: string };\ntype PayloadType = (\n  InitializeAudioUnitPayload\n  | SetCurrentPlayerPayload\n  | OnVoicePlayerPlayPayload\n  | OnVoicePlayerPausePayload\n  | OnCurrentTimeUpdatePayload\n);\ntype ActionType = {\n  type: string;\n  payload: PayloadType;\n};\n\nexport default function voicePlayerReducer(\n  state: VoicePlayerInitialState,\n  action: ActionType,\n): VoicePlayerInitialState {\n  switch (action.type) {\n    case INITIALIZE_AUDIO_UNIT: {\n      const { groupKey } = action.payload as InitializeAudioUnitPayload;\n      const audioUnit = (state.audioStorage?.[groupKey] ? state.audioStorage[groupKey] : AudioUnitDefaultValue()) as AudioStorageUnit;\n      audioUnit.playingStatus = VOICE_PLAYER_STATUS.PREPARING;\n      return {\n        ...state,\n        audioStorage: {\n          ...state.audioStorage,\n          [groupKey]: audioUnit,\n        },\n      };\n    }\n    case SET_CURRENT_PLAYER: {\n      const { audioPlayer, groupKey } = action.payload as SetCurrentPlayerPayload;\n      return {\n        ...state,\n        currentPlayer: audioPlayer,\n        currentGroupKey: groupKey,\n      };\n    }\n    case ON_VOICE_PLAYER_PLAY: {\n      const { groupKey, audioFile } = action.payload as OnVoicePlayerPlayPayload;\n      const audioUnit = (state.audioStorage?.[groupKey] ? state.audioStorage[groupKey] : AudioUnitDefaultValue()) as AudioStorageUnit;\n      audioUnit.audioFile = audioFile;\n      audioUnit.playingStatus = VOICE_PLAYER_STATUS.PLAYING;\n      return {\n        ...state,\n        audioStorage: {\n          ...state.audioStorage,\n          [groupKey]: audioUnit,\n        },\n      };\n    }\n    case ON_VOICE_PLAYER_PAUSE: {\n      const { groupKey } = action.payload as OnVoicePlayerPausePayload;\n      const audioUnit = (state.audioStorage?.[groupKey] ? state.audioStorage[groupKey] : AudioUnitDefaultValue()) as AudioStorageUnit;\n      audioUnit.playingStatus = VOICE_PLAYER_STATUS.PAUSED;\n      const { currentTime, duration } = state.currentPlayer as HTMLAudioElement;\n      if (audioUnit.playbackTime === audioUnit.duration) {\n        audioUnit.playbackTime = 0;\n      } else if (currentTime > 0 && duration > 0) {\n        audioUnit.playbackTime = currentTime;\n        audioUnit.duration = duration;\n      }\n      return {\n        ...state,\n        audioStorage: {\n          ...state.audioStorage,\n          [groupKey]: audioUnit,\n        },\n      };\n    }\n    case ON_CURRENT_TIME_UPDATE: {\n      const { groupKey } = action.payload as OnCurrentTimeUpdatePayload;\n      const { currentTime, duration } = state.currentPlayer as HTMLAudioElement;\n      const audioUnit = (state.audioStorage?.[groupKey] ? state.audioStorage[groupKey] : AudioUnitDefaultValue()) as AudioStorageUnit;\n      if (currentTime > 0 && duration > 0) {\n        audioUnit.playbackTime = currentTime;\n        audioUnit.duration = duration;\n      }\n      return {\n        ...state,\n        audioStorage: {\n          ...state.audioStorage,\n          [groupKey]: audioUnit,\n        },\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import React, { createContext, useContext, useReducer } from 'react';\nimport voicePlayerReducer from './dux/reducer';\nimport {\n  AudioStorageUnit,\n  AudioUnitDefaultValue,\n  VoicePlayerInitialState,\n  voicePlayerInitialState,\n} from './dux/initialState';\nimport {\n  INITIALIZE_AUDIO_UNIT,\n  ON_CURRENT_TIME_UPDATE,\n  ON_VOICE_PLAYER_PAUSE,\n  ON_VOICE_PLAYER_PLAY,\n  SET_CURRENT_PLAYER,\n} from './dux/actionTypes';\nimport {\n  VOICE_MESSAGE_FILE_NAME,\n  VOICE_MESSAGE_MIME_TYPE,\n  VOICE_PLAYER_AUDIO_ID,\n  VOICE_PLAYER_ROOT_ID,\n} from '../../utils/consts';\nimport useSendbirdStateContext from '../useSendbirdStateContext';\n\n// VoicePlayerProvider interface\nexport interface VoicePlayerProps {\n  children: React.ReactElement;\n}\nexport interface VoicePlayerPlayProps {\n  groupKey: string;\n  audioFile?: File;\n  audioFileUrl?: string;\n}\nexport interface VoicePlayerContext {\n  play: (props: VoicePlayerPlayProps) => void;\n  pause: (groupKey?: string) => void;\n  stop: (text?: string) => void;\n  voicePlayerStore: VoicePlayerInitialState;\n}\n\nconst noop = () => { /* noop */ };\nconst VoicePlayerStoreDefaultValue = {\n  currentGroupKey: '',\n  currentPlayer: null,\n  audioStorage: {},\n};\n\nconst Context = createContext<VoicePlayerContext>({\n  play: noop,\n  pause: noop,\n  stop: noop,\n  voicePlayerStore: VoicePlayerStoreDefaultValue,\n});\n\nexport const VoicePlayerProvider = ({\n  children,\n}: VoicePlayerProps): React.ReactElement => {\n  const [voicePlayerStore, voicePlayerDispatcher] = useReducer(voicePlayerReducer, voicePlayerInitialState);\n  const {\n    currentGroupKey,\n    currentPlayer,\n    audioStorage,\n  } = voicePlayerStore;\n  const { config } = useSendbirdStateContext();\n  const { logger } = config;\n\n  const stop = (text = '') => {\n    if (currentGroupKey.includes(text)) {\n      logger.info('VoicePlayer: Pause playing(by text).');\n      pause(currentGroupKey);\n    }\n  };\n\n  const pause = (groupKey: string) => {\n    if (currentGroupKey === groupKey && currentPlayer !== null) {\n      logger.info('VoicePlayer: Pause playing(by group key).');\n      currentPlayer?.pause();\n    }\n  };\n\n  const play = ({\n    groupKey,\n    audioFile = null,\n    audioFileUrl = '',\n  }: VoicePlayerPlayProps): void => {\n    if (groupKey !== currentGroupKey) {\n      pause(currentGroupKey);\n    }\n\n    // Clear the previous AudioPlayer element\n    const voicePlayerRoot = document.getElementById(VOICE_PLAYER_ROOT_ID);\n    const voicePlayerAudioElement = document.getElementById(VOICE_PLAYER_AUDIO_ID);\n    if (voicePlayerAudioElement) {\n      voicePlayerRoot.removeChild(voicePlayerAudioElement);\n    }\n\n    logger.info('VoicePlayer: Start getting audio file.');\n    new Promise((resolve) => {\n      if (audioFile) {\n        resolve(audioFile);\n        logger.info('VoicePlayer: Use the audioFile instance.');\n      }\n      if (audioStorage?.[groupKey]?.audioFile) {\n        resolve(audioStorage[groupKey].audioFile);\n        logger.info('VoicePlayer: Get from the audioStorage.');\n      }\n      voicePlayerDispatcher({\n        type: INITIALIZE_AUDIO_UNIT,\n        payload: { groupKey },\n      });\n      fetch(audioFileUrl)\n        .then((res) => res.blob())\n        .then((blob) => {\n          const audioFile = new File([blob], VOICE_MESSAGE_FILE_NAME, {\n            lastModified: new Date().getTime(),\n            type: VOICE_MESSAGE_MIME_TYPE,\n          });\n          resolve(audioFile);\n          logger.info('VoicePlayer: Get the audioFile from URL.');\n        });\n    }).then((audioFile: File) => {\n      logger.info('VoicePlayer: Succeeded getting audio file.', audioFile);\n      const currentAudioUnit = audioStorage[groupKey] || AudioUnitDefaultValue() as AudioStorageUnit;\n      const audioPlayer = new Audio(URL?.createObjectURL?.(audioFile));\n      audioPlayer.id = VOICE_PLAYER_AUDIO_ID;\n      audioPlayer.currentTime = currentAudioUnit.playbackTime;\n      audioPlayer.volume = 1;\n      audioPlayer.loop = false;\n      audioPlayer.onplaying = () => {\n        logger.info('VoicePlayer: OnPlaying event is called from audioPlayer', { groupKey, audioPlayer });\n        voicePlayerDispatcher({\n          type: ON_VOICE_PLAYER_PLAY,\n          payload: { groupKey, audioFile },\n        });\n      };\n      audioPlayer.onpause = () => {\n        logger.info('VoicePlayer: OnPause event is called from audioPlayer', { groupKey, audioPlayer });\n        voicePlayerDispatcher({\n          type: ON_VOICE_PLAYER_PAUSE,\n          payload: { groupKey },\n        });\n      };\n      audioPlayer.ontimeupdate = () => {\n        voicePlayerDispatcher({\n          type: ON_CURRENT_TIME_UPDATE,\n          payload: { groupKey },\n        });\n      };\n      audioPlayer?.play();\n      const voicePlayerRoot = document.getElementById(VOICE_PLAYER_ROOT_ID);\n      voicePlayerRoot.appendChild(audioPlayer);\n      voicePlayerDispatcher({\n        type: SET_CURRENT_PLAYER,\n        payload: { groupKey, audioPlayer },\n      });\n      logger.info('VoicePlayer: Succeeded playing audio player.', { groupKey, audioPlayer });\n    });\n  };\n\n  return (\n    <Context.Provider value={{\n      play,\n      pause,\n      stop,\n      voicePlayerStore,\n    }}>\n      <div id={VOICE_PLAYER_ROOT_ID} style={{ display: 'none' }} />\n      {children}\n    </Context.Provider>\n  );\n};\n\nexport const useVoicePlayerContext = (): VoicePlayerContext => useContext(Context);\n"],"names":["INITIALIZE_AUDIO_UNIT","SET_CURRENT_PLAYER","ON_VOICE_PLAYER_PLAY","ON_VOICE_PLAYER_PAUSE","ON_CURRENT_TIME_UPDATE","VOICE_PLAYER_STATUS","IDLE","PREPARING","PLAYING","PAUSED","COMPLETED","AudioUnitDefaultValue","audioFile","playbackTime","duration","playingStatus","voicePlayerInitialState","currentPlayer","currentGroupKey","audioStorage","voicePlayerReducer","state","action","type","_state$audioStorage","groupKey","payload","audioUnit","_objectSpread","audioPlayer","_state$audioStorage2","_state$audioStorage3","currentTime","_state$audioStorage4","noop","VoicePlayerStoreDefaultValue","Context","createContext","play","pause","stop","voicePlayerStore","VoicePlayerProvider","_ref","children","voicePlayerDispatcher","useReducer","config","useSendbirdStateContext","logger","text","arguments","length","undefined","includes","info","_ref2","audioFileUrl","voicePlayerRoot","document","getElementById","VOICE_PLAYER_ROOT_ID","voicePlayerAudioElement","VOICE_PLAYER_AUDIO_ID","removeChild","Promise","resolve","_audioStorage$groupKe","fetch","then","res","blob","File","VOICE_MESSAGE_FILE_NAME","lastModified","Date","getTime","VOICE_MESSAGE_MIME_TYPE","_URL","_URL$createObjectURL","currentAudioUnit","Audio","URL","createObjectURL","call","id","volume","loop","onplaying","onpause","ontimeupdate","appendChild","React","createElement","Provider","value","style","display","useVoicePlayerContext","useContext"],"mappings":";;;;;;;;;;;AAYO,MAAMA,qBAA4C,GAAG,uBAAuB,CAAA;AAC5E,MAAMC,kBAAyC,GAAG,oBAAoB,CAAA;AACtE,MAAMC,oBAA2C,GAAG,sBAAsB,CAAA;AAC1E,MAAMC,qBAA4C,GAAG,uBAAuB,CAAA;AAC5E,MAAMC,sBAA6C,GAAG,wBAAwB;;ACb9E,MAAMC,mBAAmB,GAAG;AACjCC,EAAAA,IAAI,EAAE,MAAM;AACZC,EAAAA,SAAS,EAAE,WAAW;AACtBC,EAAAA,OAAO,EAAE,SAAS;AAClBC,EAAAA,MAAM,EAAE,QAAQ;AAChBC,EAAAA,SAAS,EAAE,WAAA;AACb,EAAU;AAWGC,MAAAA,qBAAqB,GAAGA,OAAyB;AAC5DC,EAAAA,SAAS,EAAE,IAAI;AACfC,EAAAA,YAAY,EAAE,CAAC;AACfC,EAAAA,QAAQ,EAAE,IAAI;EACdC,aAAa,EAAEV,mBAAmB,CAACC,IAAAA;AACrC,CAAC,EAAC;AAQK,MAAMU,uBAAgD,GAAG;AAC9DC,EAAAA,aAAa,EAAE,IAAI;AACnBC,EAAAA,eAAe,EAAE,EAAE;AACnBC,EAAAA,YAAY,EAAE,EAAC;AACjB,CAAC;;ACNc,SAASC,kBAAkBA,CACxCC,KAA8B,EAC9BC,MAAkB,EACO;EACzB,QAAQA,MAAM,CAACC,IAAI;AACjB,IAAA,KAAKvB,qBAAqB;AAAE,MAAA;AAAA,QAAA,IAAAwB,mBAAA,CAAA;QAC1B,MAAM;AAAEC,UAAAA,QAAAA;SAAU,GAAGH,MAAM,CAACI,OAAqC,CAAA;QACjE,MAAMC,SAAS,GAAI,CAAAH,mBAAA,GAAAH,KAAK,CAACF,YAAY,MAAAK,IAAAA,IAAAA,mBAAA,KAAlBA,KAAAA,CAAAA,IAAAA,mBAAA,CAAqBC,QAAQ,CAAC,GAAGJ,KAAK,CAACF,YAAY,CAACM,QAAQ,CAAC,GAAGd,qBAAqB,EAAuB,CAAA;AAC/HgB,QAAAA,SAAS,CAACZ,aAAa,GAAGV,mBAAmB,CAACE,SAAS,CAAA;AACvD,QAAA,OAAAqB,wCAAA,CAAAA,wCAAA,CAAA,EAAA,EACKP,KAAK,CAAA,EAAA,EAAA,EAAA;AACRF,UAAAA,YAAY,EAAAS,wCAAA,CAAAA,wCAAA,CACPP,EAAAA,EAAAA,KAAK,CAACF,YAAY,CAAA,EAAA,EAAA,EAAA;AACrB,YAAA,CAACM,QAAQ,GAAGE,SAAAA;AAAS,WAAA,CAAA;AACtB,SAAA,CAAA,CAAA;AAEL,OAAA;AACA,IAAA,KAAK1B,kBAAkB;AAAE,MAAA;QACvB,MAAM;UAAE4B,WAAW;AAAEJ,UAAAA,QAAAA;SAAU,GAAGH,MAAM,CAACI,OAAkC,CAAA;AAC3E,QAAA,OAAAE,wCAAA,CAAAA,wCAAA,CAAA,EAAA,EACKP,KAAK,CAAA,EAAA,EAAA,EAAA;AACRJ,UAAAA,aAAa,EAAEY,WAAW;AAC1BX,UAAAA,eAAe,EAAEO,QAAAA;AAAQ,SAAA,CAAA,CAAA;AAE7B,OAAA;AACA,IAAA,KAAKvB,oBAAoB;AAAE,MAAA;AAAA,QAAA,IAAA4B,oBAAA,CAAA;QACzB,MAAM;UAAEL,QAAQ;AAAEb,UAAAA,SAAAA;SAAW,GAAGU,MAAM,CAACI,OAAmC,CAAA;QAC1E,MAAMC,SAAS,GAAI,CAAAG,oBAAA,GAAAT,KAAK,CAACF,YAAY,MAAAW,IAAAA,IAAAA,oBAAA,KAAlBA,KAAAA,CAAAA,IAAAA,oBAAA,CAAqBL,QAAQ,CAAC,GAAGJ,KAAK,CAACF,YAAY,CAACM,QAAQ,CAAC,GAAGd,qBAAqB,EAAuB,CAAA;QAC/HgB,SAAS,CAACf,SAAS,GAAGA,SAAS,CAAA;AAC/Be,QAAAA,SAAS,CAACZ,aAAa,GAAGV,mBAAmB,CAACG,OAAO,CAAA;AACrD,QAAA,OAAAoB,wCAAA,CAAAA,wCAAA,CAAA,EAAA,EACKP,KAAK,CAAA,EAAA,EAAA,EAAA;AACRF,UAAAA,YAAY,EAAAS,wCAAA,CAAAA,wCAAA,CACPP,EAAAA,EAAAA,KAAK,CAACF,YAAY,CAAA,EAAA,EAAA,EAAA;AACrB,YAAA,CAACM,QAAQ,GAAGE,SAAAA;AAAS,WAAA,CAAA;AACtB,SAAA,CAAA,CAAA;AAEL,OAAA;AACA,IAAA,KAAKxB,qBAAqB;AAAE,MAAA;AAAA,QAAA,IAAA4B,oBAAA,CAAA;QAC1B,MAAM;AAAEN,UAAAA,QAAAA;SAAU,GAAGH,MAAM,CAACI,OAAoC,CAAA;QAChE,MAAMC,SAAS,GAAI,CAAAI,oBAAA,GAAAV,KAAK,CAACF,YAAY,MAAAY,IAAAA,IAAAA,oBAAA,KAAlBA,KAAAA,CAAAA,IAAAA,oBAAA,CAAqBN,QAAQ,CAAC,GAAGJ,KAAK,CAACF,YAAY,CAACM,QAAQ,CAAC,GAAGd,qBAAqB,EAAuB,CAAA;AAC/HgB,QAAAA,SAAS,CAACZ,aAAa,GAAGV,mBAAmB,CAACI,MAAM,CAAA;QACpD,MAAM;UAAEuB,WAAW;AAAElB,UAAAA,QAAAA;SAAU,GAAGO,KAAK,CAACJ,aAAiC,CAAA;AACzE,QAAA,IAAIU,SAAS,CAACd,YAAY,KAAKc,SAAS,CAACb,QAAQ,EAAE;UACjDa,SAAS,CAACd,YAAY,GAAG,CAAC,CAAA;SAC3B,MAAM,IAAImB,WAAW,GAAG,CAAC,IAAIlB,QAAQ,GAAG,CAAC,EAAE;UAC1Ca,SAAS,CAACd,YAAY,GAAGmB,WAAW,CAAA;UACpCL,SAAS,CAACb,QAAQ,GAAGA,QAAQ,CAAA;AAC/B,SAAA;AACA,QAAA,OAAAc,wCAAA,CAAAA,wCAAA,CAAA,EAAA,EACKP,KAAK,CAAA,EAAA,EAAA,EAAA;AACRF,UAAAA,YAAY,EAAAS,wCAAA,CAAAA,wCAAA,CACPP,EAAAA,EAAAA,KAAK,CAACF,YAAY,CAAA,EAAA,EAAA,EAAA;AACrB,YAAA,CAACM,QAAQ,GAAGE,SAAAA;AAAS,WAAA,CAAA;AACtB,SAAA,CAAA,CAAA;AAEL,OAAA;AACA,IAAA,KAAKvB,sBAAsB;AAAE,MAAA;AAAA,QAAA,IAAA6B,oBAAA,CAAA;QAC3B,MAAM;AAAER,UAAAA,QAAAA;SAAU,GAAGH,MAAM,CAACI,OAAqC,CAAA;QACjE,MAAM;UAAEM,WAAW;AAAElB,UAAAA,QAAAA;SAAU,GAAGO,KAAK,CAACJ,aAAiC,CAAA;QACzE,MAAMU,SAAS,GAAI,CAAAM,oBAAA,GAAAZ,KAAK,CAACF,YAAY,MAAAc,IAAAA,IAAAA,oBAAA,KAAlBA,KAAAA,CAAAA,IAAAA,oBAAA,CAAqBR,QAAQ,CAAC,GAAGJ,KAAK,CAACF,YAAY,CAACM,QAAQ,CAAC,GAAGd,qBAAqB,EAAuB,CAAA;AAC/H,QAAA,IAAIqB,WAAW,GAAG,CAAC,IAAIlB,QAAQ,GAAG,CAAC,EAAE;UACnCa,SAAS,CAACd,YAAY,GAAGmB,WAAW,CAAA;UACpCL,SAAS,CAACb,QAAQ,GAAGA,QAAQ,CAAA;AAC/B,SAAA;AACA,QAAA,OAAAc,wCAAA,CAAAA,wCAAA,CAAA,EAAA,EACKP,KAAK,CAAA,EAAA,EAAA,EAAA;AACRF,UAAAA,YAAY,EAAAS,wCAAA,CAAAA,wCAAA,CACPP,EAAAA,EAAAA,KAAK,CAACF,YAAY,CAAA,EAAA,EAAA,EAAA;AACrB,YAAA,CAACM,QAAQ,GAAGE,SAAAA;AAAS,WAAA,CAAA;AACtB,SAAA,CAAA,CAAA;AAEL,OAAA;AACA,IAAA;AACE,MAAA,OAAON,KAAK,CAAA;AAAC,GAAA;AAEnB;;ACpFA;;AAgBA,MAAMa,IAAI,GAAGA,MAAM,YAAc,CAAA;AACjC,MAAMC,4BAA4B,GAAG;AACnCjB,EAAAA,eAAe,EAAE,EAAE;AACnBD,EAAAA,aAAa,EAAE,IAAI;AACnBE,EAAAA,YAAY,EAAE,EAAC;AACjB,CAAC,CAAA;AAED,MAAMiB,OAAO,gBAAGC,mBAAa,CAAqB;AAChDC,EAAAA,IAAI,EAAEJ,IAAI;AACVK,EAAAA,KAAK,EAAEL,IAAI;AACXM,EAAAA,IAAI,EAAEN,IAAI;AACVO,EAAAA,gBAAgB,EAAEN,4BAAAA;AACpB,CAAC,CAAC,CAAA;AAEWO,MAAAA,mBAAmB,GAAGC,IAAA,IAES;EAAA,IAFR;AAClCC,IAAAA,QAAAA;AACgB,GAAC,GAAAD,IAAA,CAAA;EACjB,MAAM,CAACF,gBAAgB,EAAEI,qBAAqB,CAAC,GAAGC,gBAAU,CAAC1B,kBAAkB,EAAEJ,uBAAuB,CAAC,CAAA;EACzG,MAAM;IACJE,eAAe;IACfD,aAAa;AACbE,IAAAA,YAAAA;AACF,GAAC,GAAGsB,gBAAgB,CAAA;EACpB,MAAM;AAAEM,IAAAA,MAAAA;GAAQ,GAAGC,uBAAuB,EAAE,CAAA;EAC5C,MAAM;AAAEC,IAAAA,MAAAA;AAAO,GAAC,GAAGF,MAAM,CAAA;AAEzB,EAAA,MAAMP,IAAI,GAAG,YAAe;AAAA,IAAA,IAAdU,IAAI,GAAAC,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;AACrB,IAAA,IAAIjC,eAAe,CAACoC,QAAQ,CAACJ,IAAI,CAAC,EAAE;AAClCD,MAAAA,MAAM,CAACM,IAAI,CAAC,sCAAsC,CAAC,CAAA;MACnDhB,KAAK,CAACrB,eAAe,CAAC,CAAA;AACxB,KAAA;GACD,CAAA;EAED,MAAMqB,KAAK,GAAId,QAAgB,IAAK;AAClC,IAAA,IAAIP,eAAe,KAAKO,QAAQ,IAAIR,aAAa,KAAK,IAAI,EAAE;AAC1DgC,MAAAA,MAAM,CAACM,IAAI,CAAC,2CAA2C,CAAC,CAAA;AACxDtC,MAAAA,aAAa,aAAbA,aAAa,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAbA,aAAa,CAAEsB,KAAK,EAAE,CAAA;AACxB,KAAA;GACD,CAAA;EAED,MAAMD,IAAI,GAAGkB,KAAA,IAIqB;IAAA,IAJpB;MACZ/B,QAAQ;AACRb,MAAAA,SAAS,GAAG,IAAI;AAChB6C,MAAAA,YAAY,GAAG,EAAA;AACK,KAAC,GAAAD,KAAA,CAAA;IACrB,IAAI/B,QAAQ,KAAKP,eAAe,EAAE;MAChCqB,KAAK,CAACrB,eAAe,CAAC,CAAA;AACxB,KAAA;;AAEA;AACA,IAAA,MAAMwC,eAAe,GAAGC,QAAQ,CAACC,cAAc,CAACC,2BAAoB,CAAC,CAAA;AACrE,IAAA,MAAMC,uBAAuB,GAAGH,QAAQ,CAACC,cAAc,CAACG,4BAAqB,CAAC,CAAA;AAC9E,IAAA,IAAID,uBAAuB,EAAE;AAC3BJ,MAAAA,eAAe,CAACM,WAAW,CAACF,uBAAuB,CAAC,CAAA;AACtD,KAAA;AAEAb,IAAAA,MAAM,CAACM,IAAI,CAAC,wCAAwC,CAAC,CAAA;IACrD,IAAIU,OAAO,CAAEC,OAAO,IAAK;AAAA,MAAA,IAAAC,qBAAA,CAAA;AACvB,MAAA,IAAIvD,SAAS,EAAE;QACbsD,OAAO,CAACtD,SAAS,CAAC,CAAA;AAClBqC,QAAAA,MAAM,CAACM,IAAI,CAAC,0CAA0C,CAAC,CAAA;AACzD,OAAA;AACA,MAAA,IAAIpC,YAAY,KAAZA,IAAAA,IAAAA,YAAY,KAAAgD,KAAAA,CAAAA,IAAAA,CAAAA,qBAAA,GAAZhD,YAAY,CAAGM,QAAQ,CAAC,cAAA0C,qBAAA,KAAA,KAAA,CAAA,IAAxBA,qBAAA,CAA0BvD,SAAS,EAAE;AACvCsD,QAAAA,OAAO,CAAC/C,YAAY,CAACM,QAAQ,CAAC,CAACb,SAAS,CAAC,CAAA;AACzCqC,QAAAA,MAAM,CAACM,IAAI,CAAC,yCAAyC,CAAC,CAAA;AACxD,OAAA;AACAV,MAAAA,qBAAqB,CAAC;AACpBtB,QAAAA,IAAI,EAAEvB,qBAAqB;AAC3B0B,QAAAA,OAAO,EAAE;AAAED,UAAAA,QAAAA;AAAS,SAAA;AACtB,OAAC,CAAC,CAAA;AACF2C,MAAAA,KAAK,CAACX,YAAY,CAAC,CAChBY,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEE,IAAI,IAAK;QACd,MAAM3D,SAAS,GAAG,IAAI4D,IAAI,CAAC,CAACD,IAAI,CAAC,EAAEE,8BAAuB,EAAE;AAC1DC,UAAAA,YAAY,EAAE,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE;AAClCrD,UAAAA,IAAI,EAAEsD,8BAAAA;AACR,SAAC,CAAC,CAAA;QACFX,OAAO,CAACtD,SAAS,CAAC,CAAA;AAClBqC,QAAAA,MAAM,CAACM,IAAI,CAAC,0CAA0C,CAAC,CAAA;AACzD,OAAC,CAAC,CAAA;AACN,KAAC,CAAC,CAACc,IAAI,CAAEzD,SAAe,IAAK;MAAA,IAAAkE,IAAA,EAAAC,oBAAA,CAAA;AAC3B9B,MAAAA,MAAM,CAACM,IAAI,CAAC,4CAA4C,EAAE3C,SAAS,CAAC,CAAA;MACpE,MAAMoE,gBAAgB,GAAG7D,YAAY,CAACM,QAAQ,CAAC,IAAId,qBAAqB,EAAsB,CAAA;MAC9F,MAAMkB,WAAW,GAAG,IAAIoD,KAAK,CAAA,CAAAH,IAAA,GAACI,GAAG,MAAA,IAAA,IAAAJ,IAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAAC,oBAAA,GAAHD,IAAA,CAAKK,eAAe,MAAA,IAAA,IAAAJ,oBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAApBA,oBAAA,CAAAK,IAAA,CAAAN,IAAA,EAAuBlE,SAAS,CAAC,CAAC,CAAA;MAChEiB,WAAW,CAACwD,EAAE,GAAGtB,4BAAqB,CAAA;AACtClC,MAAAA,WAAW,CAACG,WAAW,GAAGgD,gBAAgB,CAACnE,YAAY,CAAA;MACvDgB,WAAW,CAACyD,MAAM,GAAG,CAAC,CAAA;MACtBzD,WAAW,CAAC0D,IAAI,GAAG,KAAK,CAAA;MACxB1D,WAAW,CAAC2D,SAAS,GAAG,MAAM;AAC5BvC,QAAAA,MAAM,CAACM,IAAI,CAAC,yDAAyD,EAAE;UAAE9B,QAAQ;AAAEI,UAAAA,WAAAA;AAAY,SAAC,CAAC,CAAA;AACjGgB,QAAAA,qBAAqB,CAAC;AACpBtB,UAAAA,IAAI,EAAErB,oBAAoB;AAC1BwB,UAAAA,OAAO,EAAE;YAAED,QAAQ;AAAEb,YAAAA,SAAAA;AAAU,WAAA;AACjC,SAAC,CAAC,CAAA;OACH,CAAA;MACDiB,WAAW,CAAC4D,OAAO,GAAG,MAAM;AAC1BxC,QAAAA,MAAM,CAACM,IAAI,CAAC,uDAAuD,EAAE;UAAE9B,QAAQ;AAAEI,UAAAA,WAAAA;AAAY,SAAC,CAAC,CAAA;AAC/FgB,QAAAA,qBAAqB,CAAC;AACpBtB,UAAAA,IAAI,EAAEpB,qBAAqB;AAC3BuB,UAAAA,OAAO,EAAE;AAAED,YAAAA,QAAAA;AAAS,WAAA;AACtB,SAAC,CAAC,CAAA;OACH,CAAA;MACDI,WAAW,CAAC6D,YAAY,GAAG,MAAM;AAC/B7C,QAAAA,qBAAqB,CAAC;AACpBtB,UAAAA,IAAI,EAAEnB,sBAAsB;AAC5BsB,UAAAA,OAAO,EAAE;AAAED,YAAAA,QAAAA;AAAS,WAAA;AACtB,SAAC,CAAC,CAAA;OACH,CAAA;AACDI,MAAAA,WAAW,aAAXA,WAAW,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAXA,WAAW,CAAES,IAAI,EAAE,CAAA;AACnB,MAAA,MAAMoB,eAAe,GAAGC,QAAQ,CAACC,cAAc,CAACC,2BAAoB,CAAC,CAAA;AACrEH,MAAAA,eAAe,CAACiC,WAAW,CAAC9D,WAAW,CAAC,CAAA;AACxCgB,MAAAA,qBAAqB,CAAC;AACpBtB,QAAAA,IAAI,EAAEtB,kBAAkB;AACxByB,QAAAA,OAAO,EAAE;UAAED,QAAQ;AAAEI,UAAAA,WAAAA;AAAY,SAAA;AACnC,OAAC,CAAC,CAAA;AACFoB,MAAAA,MAAM,CAACM,IAAI,CAAC,8CAA8C,EAAE;QAAE9B,QAAQ;AAAEI,QAAAA,WAAAA;AAAY,OAAC,CAAC,CAAA;AACxF,KAAC,CAAC,CAAA;GACH,CAAA;AAED,EAAA,oBACE+D,yBAAA,CAAAC,aAAA,CAACzD,OAAO,CAAC0D,QAAQ,EAAA;AAACC,IAAAA,KAAK,EAAE;MACvBzD,IAAI;MACJC,KAAK;MACLC,IAAI;AACJC,MAAAA,gBAAAA;AACF,KAAA;GACEmD,eAAAA,yBAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;AAAKR,IAAAA,EAAE,EAAExB,2BAAqB;AAACmC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,MAAA;AAAO,KAAA;GAAK,CAAA,EAC5DrD,QAAQ,CACQ,CAAA;AAEvB,EAAC;AAEM,MAAMsD,qBAAqB,GAAGA,MAA0BC,gBAAU,CAAC/D,OAAO;;;;;;;"}