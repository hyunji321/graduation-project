{"version":3,"file":"MessageInput.js","sources":["../../../src/ui/MentionUserLabel/renderToString.ts","../../../src/ui/MessageInput/utils.js","../../../src/ui/MessageInput/hooks/usePaste/insertTemplate.ts","../../../src/ui/MessageInput/hooks/usePaste/consts.ts","../../../src/ui/MessageInput/hooks/usePaste/utils.ts","../../../src/ui/MessageInput/hooks/usePaste/index.ts","../../../src/ui/MessageInput/index.jsx"],"sourcesContent":["// cretes a sanitized string from a mention user label\nimport DOMPurify from 'dompurify';\nimport { MENTION_USER_LABEL_CLASSNAME } from './consts';\n\ntype renderToStringParams = {\n  userId: string;\n  nickname: string;\n};\n\nexport default function renderToString({ userId, nickname }: renderToStringParams): string {\n  // donot change this template, it wont work\n  const el = `<span data-userid=\"${userId}\" data-sb-mention=\"true\" class=\"${MENTION_USER_LABEL_CLASSNAME}\">${nickname}</span>`;\n  const purifier = DOMPurify(window);\n  const sanitized_ = purifier.sanitize(el);\n  const token = sanitized_.split(' ');\n  const [spanTag, ...rest] = token;\n  // we do this because DOMPurify removes the contenteditable attribute\n  const sanitized = [spanTag, 'contenteditable=\"false\"', ...rest].join(' ');\n  return sanitized;\n}\n","// https://davidwalsh.name/javascript-debounce-function\n// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\nexport function debounce(func, wait, immediate) {\n  let timeout;\n  return function _debounce() {\n    const context = this;\n    // eslint-disable-next-line prefer-rest-params\n    const args = arguments;\n    const later = () => {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n}\n\n// Sanitize that special characters of HTML tags cause XSS issue\nexport const sanitizeString = (str) => (\n  str?.replace(/[\\u00A0-\\u9999<>]/gim, (i) => ''.concat('&#', i.charCodeAt(0), ';'))\n);\n\n/**\n * NodeList cannot be used with Array methods\n * @param {childNodes} NodeList\n * @returns Array of child nodes\n */\nexport const nodeListToArray = (childNodes) => {\n  try {\n    return Array.from(childNodes);\n  } catch (error) {\n    return [];\n  }\n};\n\nexport default debounce;\n","import { Word } from './types';\nimport { sanitizeString } from '../../utils';\nimport renderMentionLabelToString from '../../../MentionUserLabel/renderToString';\n\nexport function inserTemplateToDOM(templateList: Word[]): void {\n  const nodes = templateList.map((template) => {\n    const { text, userId } = template;\n    if (userId) {\n      return renderMentionLabelToString({ userId, nickname: text });\n    }\n    return sanitizeString(text);\n  })\n    .join(' ')\n  // add a space at the end of the mention, else cursor/caret wont work\n    .concat(' ');\n  document.execCommand('insertHTML', false, nodes);\n}\n","export const PASTE_NODE = 'sendbird-uikit__paste-node';\nexport const TEXT_MESSAGE_CLASS = 'sendbird-word';\nexport const MENTION_CLASS = 'sendbird-word__mention';\nexport const MENTION_CLASS_IN_INPUT = 'sendbird-mention-user-label';\nexport const MENTION_CLASS_COMBINED_QUERY = `.${MENTION_CLASS}, .${MENTION_CLASS_IN_INPUT}`;\n","import { GroupChannel } from '@sendbird/chat/groupChannel';\nimport { User } from '@sendbird/chat';\n\nimport {\n  PASTE_NODE,\n  MENTION_CLASS,\n  TEXT_MESSAGE_CLASS,\n  MENTION_CLASS_COMBINED_QUERY,\n  MENTION_CLASS_IN_INPUT,\n} from './consts';\nimport { Word } from './types';\nimport { TEXT_MESSAGE_BODY_CLASSNAME } from '../../../TextMessageItemBody/consts';\nimport { OG_MESSAGE_BODY_CLASSNAME } from '../../../OGMessageItemBody/consts';\nimport { nodeListToArray } from '../../utils';\n\nexport function querySelectorIncludingSelf(\n  master: HTMLElement,\n  selector: string,\n): HTMLElement | null {\n  const result = [\n    master,\n    ...Array.from(master.querySelectorAll(selector)),\n  ].find((el) => el.matches(selector)) as HTMLElement | null;\n  return result;\n}\n\n// Pasted dom node can be OG_MESSAGE or partial message or full message\n// full messsage would have TEXT_MESSAGE_BODY_CLASSNAME and have childNodes\n// partial message would not have TEXT_MESSAGE_BODY_CLASSNAME\nexport function getLeafNodes(master: HTMLElement): ChildNode[] {\n  // og message\n  const ogMessage = querySelectorIncludingSelf(master, `.${OG_MESSAGE_BODY_CLASSNAME}`);\n  if (ogMessage) {\n    return nodeListToArray(ogMessage.childNodes);\n  }\n\n  const textMessageBody = querySelectorIncludingSelf(master, `.${TEXT_MESSAGE_BODY_CLASSNAME}`);\n  if (textMessageBody) {\n    return nodeListToArray(textMessageBody.childNodes);\n  }\n\n  return nodeListToArray(master.childNodes);\n}\n\nexport function createPasteNode(): HTMLDivElement | null {\n  const pasteNode = document.body.querySelector(`#${PASTE_NODE}`);\n  // remove existing paste node\n  if (pasteNode) {\n    pasteNode?.remove();\n  }\n\n  // create new paste node and return\n  const node = document.createElement('div');\n  node.id = PASTE_NODE;\n  node.style.display = 'none';\n  return node;\n}\n\nexport function hasMention(parent: HTMLDivElement): boolean {\n  return parent?.querySelector(MENTION_CLASS_COMBINED_QUERY) ? true : false;\n}\n\nexport const extractTextFromNodes = (nodes: HTMLSpanElement[]): string => {\n  let text = '';\n  nodes.forEach((node) => {\n    // to preserve space between words\n    const textNodes = node.querySelectorAll(`.${TEXT_MESSAGE_CLASS}`);\n    if (textNodes.length > 0) {\n      text += ((extractTextFromNodes(Array.from(textNodes) as HTMLSpanElement[])) + ' ');\n    }\n    text += (node.innerText + ' ');\n  });\n  return text;\n};\n\nexport function domToMessageTemplate(nodeArray: ChildNode[]): Word[] {\n  const templates: Word[] = nodeArray?.reduce((accumulator, currentValue) => {\n    // currentValue can be node(from messageBody or messageInput) or text\n    let mentionNode;\n    // this looks awkward, but it is a fallback to set default text\n    let text = (currentValue as HTMLSpanElement)?.innerText;\n\n    // if text node, set text\n    if (currentValue instanceof Text) {\n      mentionNode = false;\n      text = currentValue.textContent;\n    }\n\n    if (currentValue instanceof HTMLElement) {\n      mentionNode = (currentValue.classList.contains(MENTION_CLASS) || currentValue.classList.contains(MENTION_CLASS_IN_INPUT))\n        ? currentValue\n        : currentValue.querySelector(MENTION_CLASS_COMBINED_QUERY);\n    }\n\n    // if mentionNode is not null, it is a mention\n    if (mentionNode) {\n      const text = (currentValue as HTMLSpanElement)?.innerText;\n      const userId = mentionNode.dataset?.userid;\n      return [\n        ...accumulator,\n        {\n          text,\n          userId,\n        },\n      ];\n    }\n\n    return [\n      ...accumulator,\n      {\n        text,\n      },\n    ];\n  }, [] as Word[]);\n  return templates;\n}\n\nexport function getUsersFromWords(templates: Word[], channel: GroupChannel): User[] {\n  const userMap = {};\n  const users = channel.members;\n  templates.forEach((template) => {\n    if (template.userId) {\n      const mentionedMember = users.find((user) => user.userId === template.userId);\n      // Object.values would return array-> [undefined] if the user is not in the channel\n      if (mentionedMember) {\n        userMap[template.userId] = mentionedMember;\n      }\n    }\n  });\n  return Object.values(userMap);\n}\n","import { useCallback } from 'react';\nimport DOMPurify from 'dompurify';\n\nimport { inserTemplateToDOM } from './insertTemplate';\nimport { sanitizeString } from '../../utils';\nimport { DynamicProps } from './types';\nimport {\n  createPasteNode,\n  hasMention,\n  domToMessageTemplate,\n  getUsersFromWords,\n  extractTextFromNodes,\n  getLeafNodes,\n} from './utils';\n\n// conditions to test:\n// 1. paste simple text\n// 2. paste text with mention\n// 3. paste text with mention and text\n// 4. paste text with mention and text and paste again before and after\n// 5. copy message with mention(only one mention, no other text) and paste\n// 6. copy message with mention from input and paste(before and after)\nexport default function usePaste({\n  ref,\n  setIsInput,\n  setHeight,\n  channel,\n  setMentionedUsers,\n}: DynamicProps): (e: React.ClipboardEvent<HTMLDivElement>) => void {\n  return useCallback((e) => {\n    e.preventDefault();\n    const html = e?.clipboardData.getData('text/html');\n    // simple text, continue as normal\n    if (!html) {\n      const text = e?.clipboardData.getData('text');\n      document.execCommand('insertHTML', false, sanitizeString(text));\n      setIsInput(true);\n      setHeight();\n      return;\n    }\n\n    // has html, check if there are mentions, sanitize and insert\n    const purifier = DOMPurify(window);\n    const clean = purifier.sanitize(html);\n    const pasteNode = createPasteNode();\n    pasteNode.innerHTML = clean;\n    // does not have mention, continue as normal\n    if (!hasMention(pasteNode)) {\n      // to preserve space between words\n      const text = extractTextFromNodes(Array.from(pasteNode.children) as HTMLSpanElement[]);\n      document.execCommand('insertHTML', false, sanitizeString(text));\n      pasteNode.remove();\n      setIsInput(true);\n      setHeight();\n      return;\n    }\n\n    // has mention, collect leaf nodes and parse words\n    const leafNodes = getLeafNodes(pasteNode);\n    const words = domToMessageTemplate(leafNodes);\n    const mentionedUsers = getUsersFromWords(words, channel);\n\n    // side effects\n    setMentionedUsers(mentionedUsers);\n    inserTemplateToDOM(words);\n    pasteNode.remove();\n    setIsInput(true);\n    setHeight();\n  }, [ref, setIsInput, setHeight, channel, setMentionedUsers]);\n}\n","import React, {\n  useRef,\n  useMemo,\n  useState,\n  useEffect,\n  useCallback,\n  useContext,\n} from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport { MessageInputKeys, NodeNames, NodeTypes } from './const';\n\nimport { USER_MENTION_TEMP_CHAR } from '../../modules/Channel/context/const';\nimport IconButton from '../IconButton';\nimport Button, { ButtonTypes, ButtonSizes } from '../Button';\nimport renderMentionLabelToString from '../MentionUserLabel/renderToString';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport { nodeListToArray, sanitizeString } from './utils';\nimport {\n  arrayEqual,\n  getClassName,\n} from '../../utils';\nimport usePaste from './hooks/usePaste';\nimport { tokenizeMessage } from '../../modules/Message/utils/tokens/tokenize';\nimport { USER_MENTION_PREFIX } from '../../modules/Message/consts';\nimport { TOKEN_TYPES } from '../../modules/Message/utils/tokens/types';\n\nconst TEXT_FIELD_ID = 'sendbird-message-input-text-field';\nconst LINE_HEIGHT = 76;\nconst noop = () => { };\nconst handleUploadFile = (callback) => (event) => {\n  if (event.target.files && event.target.files[0]) {\n    callback(event.target.files[0]);\n  }\n  // eslint-disable-next-line no-param-reassign\n  event.target.value = '';\n};\n\nconst displayCaret = (element, position) => {\n  const range = document.createRange();\n  const sel = window.getSelection();\n  range.setStart(element.childNodes[0], position);\n  range.collapse(true);\n  sel.removeAllRanges();\n  sel.addRange(range);\n  element.focus();\n};\n\nconst resetInput = (ref) => {\n  try {\n    /* eslint-disable no-param-reassign */\n    ref.current.innerHTML = '';\n  } catch {\n    //\n  }\n};\n\nconst initialTargetStringInfo = {\n  targetString: '',\n  startNodeIndex: null,\n  startOffsetIndex: null,\n  endNodeIndex: null,\n  endOffsetIndex: null,\n};\n\nconst MessageInput = React.forwardRef((props, ref) => {\n  const {\n    className,\n    messageFieldId,\n    isEdit,\n    isMentionEnabled,\n    isVoiceMessageEnabled,\n    disabled,\n    message,\n    placeholder,\n    maxLength,\n    onFileUpload,\n    onSendMessage,\n    onUpdateMessage,\n    onCancelEdit,\n    onStartTyping,\n    channelUrl,\n    channel,\n    mentionSelectedUser,\n    onUserMentioned,\n    onMentionStringChange,\n    onMentionedUserIdsUpdated,\n    onVoiceMessageIconClick,\n    onKeyUp,\n    onKeyDown,\n    renderFileUploadIcon,\n    renderVoiceMessageIcon,\n    renderSendMessageIcon,\n    setMentionedUsers,\n  } = props;\n  const textFieldId = messageFieldId || TEXT_FIELD_ID;\n  const { stringSet } = useContext(LocalizationContext);\n  const fileInputRef = useRef(null);\n  const [isInput, setIsInput] = useState(false);\n  const [mentionedUserIds, setMentionedUserIds] = useState([]);\n  const [targetStringInfo, setTargetStringInfo] = useState({ ...initialTargetStringInfo });\n  const setHeight = useMemo(() => (\n    () => {\n      try {\n        const elem = ref?.current;\n        const MAX_HEIGHT = window.document.body.offsetHeight * 0.6;\n        if (elem && elem.scrollHeight >= LINE_HEIGHT) {\n          if (MAX_HEIGHT < elem.scrollHeight) {\n            elem.style.height = 'auto';\n            elem.style.height = `${MAX_HEIGHT}px`;\n          } else {\n            elem.style.height = 'auto';\n            elem.style.height = `${elem.scrollHeight}px`;\n          }\n        } else {\n          elem.style.height = '';\n        }\n      } catch (error) {\n        // error\n      }\n    }\n  ), []);\n\n  // #Edit mode\n  // for easilly initialize input value from outside, but\n  // useEffect(_, [channelUrl]) erase it\n  const initialValue = props?.value;\n  useEffect(() => {\n    const textField = ref?.current;\n    try {\n      textField.innerHTML = initialValue;\n      displayCaret(textField, initialValue?.length);\n    } catch {\n      //\n    }\n    setMentionedUserIds([]);\n    setIsInput(textField?.textContent?.trim().length > 0);\n    setHeight();\n  }, [initialValue]);\n\n  // #Mention | Clear input value when channel changes\n  useEffect(() => {\n    if (!isEdit) {\n      setIsInput(false);\n      resetInput(ref);\n    }\n  }, [channelUrl]);\n\n  // #Mention & #Edit | Fill message input values\n  useEffect(() => {\n    if (isEdit && message?.messageId) {\n      // const textField = document.getElementById(textFieldId);\n      const textField = ref?.current;\n      if (isMentionEnabled\n        && message?.mentionedUsers?.length > 0\n        && message?.mentionedMessageTemplate?.length > 0\n      ) {\n        /* mention enabled */\n        const { mentionedUsers = [] } = message;\n        const tokens = tokenizeMessage({\n          messageText: message?.mentionedMessageTemplate,\n          mentionedUsers,\n        });\n        textField.innerHTML = tokens.map((token) => {\n          if (token.type === TOKEN_TYPES.mention) {\n            const mentionedUser = mentionedUsers.find((user) => user.userId === token.userId);\n            const nickname = `${USER_MENTION_PREFIX}${mentionedUser?.nickname || token.value || stringSet.MENTION_NAME__NO_NAME}`;\n            return renderMentionLabelToString({\n              userId: token.userId,\n              nickname,\n            });\n          }\n          return sanitizeString(token.value);\n        }).join(' ');\n      } else {\n        /* mention disabled */\n        try {\n          textField.innerHTML = sanitizeString(message?.message);\n        } catch {\n          //\n        }\n        setMentionedUserIds([]);\n      }\n      setIsInput(textField?.textContent?.trim().length > 0);\n      setHeight();\n    }\n  }, [isEdit, message]);\n\n  // #Mention | Detect MentionedLabel modified\n  const useMentionedLabelDetection = useCallback(() => {\n    const textField = ref?.current;\n    if (isMentionEnabled) {\n      const newMentionedUserIds = [...textField.getElementsByClassName('sendbird-mention-user-label')].map((node) => node?.dataset?.userid);\n      if (!arrayEqual(mentionedUserIds, newMentionedUserIds) || newMentionedUserIds.length === 0) {\n        onMentionedUserIdsUpdated(newMentionedUserIds);\n        setMentionedUserIds(newMentionedUserIds);\n      }\n    }\n    setIsInput(textField.textContent?.trim().length > 0);\n  }, [targetStringInfo, isMentionEnabled]);\n\n  // #Mention | Replace selected user nickname to the MentionedUserLabel\n  useEffect(() => {\n    if (isMentionEnabled && mentionSelectedUser) {\n      const {\n        targetString,\n        startNodeIndex,\n        startOffsetIndex,\n        endNodeIndex,\n        endOffsetIndex,\n      } = targetStringInfo;\n      if (targetString && startNodeIndex !== null && startOffsetIndex !== null) {\n        // const textField = document.getElementById(textFieldId);\n        const textField = ref?.current;\n        const childNodes = nodeListToArray(textField?.childNodes);\n        const frontTextNode = document?.createTextNode(\n          childNodes[startNodeIndex]?.textContent.slice(0, startOffsetIndex),\n        );\n        const backTextNode = document?.createTextNode(\n          `\\u00A0${childNodes[endNodeIndex]?.textContent.slice(endOffsetIndex)}`,\n        );\n        const mentionLabel = renderMentionLabelToString({\n          userId: mentionSelectedUser?.userId,\n          nickname: `${USER_MENTION_TEMP_CHAR}${mentionSelectedUser?.nickname || stringSet.MENTION_NAME__NO_NAME}`,\n        });\n        const div = document.createElement('div');\n        div.innerHTML = mentionLabel;\n        const newNodes = [\n          ...childNodes.slice(0, startNodeIndex),\n          frontTextNode,\n          div.childNodes[0],\n          backTextNode,\n          ...childNodes.slice(endNodeIndex + 1),\n        ];\n        textField.innerHTML = '';\n        newNodes.forEach((newNode) => {\n          textField.appendChild(newNode);\n        });\n        onUserMentioned(mentionSelectedUser);\n        if (window.getSelection || document.getSelection) {\n          // set caret postion\n          const selection = window.getSelection() || document.getSelection();\n          selection.removeAllRanges();\n          const range = new Range();\n          range.selectNodeContents(textField);\n          range.setStart(textField.childNodes[startNodeIndex + 2], 1);\n          range.setEnd(textField.childNodes[startNodeIndex + 2], 1);\n          range.collapse(false);\n          selection.addRange(range);\n          textField.focus();\n        }\n        setTargetStringInfo({ ...initialTargetStringInfo });\n        setHeight();\n        useMentionedLabelDetection();\n      }\n    }\n  }, [mentionSelectedUser, isMentionEnabled]);\n\n  // #Mention | Detect mentioning user nickname\n  const useMentionInputDetection = useCallback(() => {\n    const selection = window?.getSelection?.() || document?.getSelection?.();\n    const textField = ref?.current;\n    if (selection.anchorNode === textField) {\n      onMentionStringChange('');\n    }\n    if (isMentionEnabled && selection\n      && selection.anchorNode === selection.focusNode\n      && selection.anchorOffset === selection.focusOffset\n    ) {\n      let textStack = '';\n      let startNodeIndex = null;\n      let startOffsetIndex = null;\n      for (let index = 0; index < textField.childNodes.length; index += 1) {\n        const currentNode = textField.childNodes[index];\n        if (currentNode.nodeType === NodeTypes.TextNode) {\n          /* text node */\n          const textContent = (currentNode === selection.anchorNode)\n            ? currentNode?.textContent.slice(0, selection.anchorOffset) || ''\n            : currentNode?.textContent || '';\n          if (textStack.length > 0) {\n            textStack += textContent;\n          } else {\n            let charLastIndex = textContent.lastIndexOf(USER_MENTION_TEMP_CHAR);\n            for (let i = charLastIndex - 1; i > -1; i -= 1) {\n              if (textContent[i] === USER_MENTION_TEMP_CHAR) {\n                charLastIndex = i;\n              } else {\n                break;\n              }\n            }\n            if (charLastIndex > -1) {\n              textStack = textContent;\n              startNodeIndex = index;\n              startOffsetIndex = charLastIndex;\n            }\n          }\n        } else {\n          /* other nodes */\n          textStack = '';\n          startNodeIndex = null;\n          startOffsetIndex = null;\n        }\n        if (currentNode === selection.anchorNode) {\n          /**\n           * targetString could be ''\n           * startNodeIndex and startOffsetIndex could be null\n           */\n          const targetString = textStack ? textStack.slice(startOffsetIndex) : '';// include template character\n          setTargetStringInfo({\n            targetString,\n            startNodeIndex,\n            startOffsetIndex,\n            endNodeIndex: index,\n            endOffsetIndex: selection.anchorOffset,\n          });\n          onMentionStringChange(targetString);\n          return;\n        }\n      }\n    }\n  }, [isMentionEnabled]);\n\n  const sendMessage = () => {\n    const textField = ref?.current;\n    if (!isEdit && textField?.textContent) {\n      let messageText = '';\n      let mentionTemplate = '';\n      textField.childNodes.forEach((node) => {\n        if (node.nodeType === NodeTypes.ElementNode && node.nodeName === NodeNames.Span) {\n          const { innerText, dataset = {} } = node;\n          const { userid = '' } = dataset;\n          messageText += innerText;\n          mentionTemplate += `${USER_MENTION_TEMP_CHAR}{${userid}}`;\n        } else if (node.nodeType === NodeTypes.ElementNode && node.nodeName === NodeNames.Br) {\n          messageText += '\\n';\n          mentionTemplate += '\\n';\n        } else if (node?.nodeType === NodeTypes.ElementNode && node?.nodeName === NodeNames.Div) {\n          // handles newline in safari\n          const { textContent = '' } = node;\n          messageText += `\\n${textContent}`;\n          mentionTemplate += `\\n${textContent}`;\n        } else { // other nodes including text node\n          const { textContent = '' } = node;\n          messageText += textContent;\n          mentionTemplate += textContent;\n        }\n      });\n      const params = { message: messageText, mentionTemplate };\n      onSendMessage(params);\n      resetInput(ref);\n      setIsInput(false);\n      setHeight();\n    }\n  };\n  const isEditDisabled = !(ref?.current?.textContent?.trim());\n  const editMessage = () => {\n    const textField = ref?.current;\n    const messageId = message?.messageId;\n    if (isEdit && messageId) {\n      let messageText = '';\n      let mentionTemplate = '';\n      textField.childNodes.forEach((node) => {\n        if (node.nodeType === NodeTypes.ElementNode && node.nodeName === NodeNames.Span) {\n          const { innerText, dataset = {} } = node;\n          const { userid = '' } = dataset;\n          messageText += innerText;\n          mentionTemplate += `${USER_MENTION_TEMP_CHAR}{${userid}}`;\n          messageText += '\\n';\n          mentionTemplate += '\\n';\n        } else { // other nodes including text node\n          const { textContent = '' } = node;\n          messageText += textContent;\n          mentionTemplate += textContent;\n        }\n      });\n      const params = { messageId, message: messageText, mentionTemplate };\n      onUpdateMessage(params);\n      resetInput(ref);\n    }\n  };\n  const onPaste = usePaste({\n    ref,\n    setMentionedUserIds,\n    setMentionedUsers,\n    channel,\n    setIsInput,\n    setHeight,\n  });\n\n  const textField = ref?.current;\n  return (\n    <form\n      className={getClassName([\n        className,\n        isEdit ? 'sendbird-message-input__edit' : '',\n        disabled ? 'sendbird-message-input-form__disabled' : '',\n      ])}\n    >\n      <div\n        className={getClassName([\n          'sendbird-message-input',\n          disabled ? 'sendbird-message-input__disabled' : '',\n        ])}\n      >\n        <div\n          id={`${textFieldId}${isEdit ? message?.messageId : ''}`}\n          className={`sendbird-message-input--textarea ${textFieldId}`}\n          contentEditable={!disabled}\n          role=\"textbox\"\n          aria-label=\"Text Input\"\n          disabled={disabled}\n          ref={ref}\n          maxLength={maxLength}\n          onKeyDown={(e) => {\n            const preventEvent = onKeyDown(e);\n            if (preventEvent) {\n              e.preventDefault();\n            } else {\n              if (!e.shiftKey && e.key === MessageInputKeys.Enter\n                && textField?.textContent?.trim().length > 0\n                && e?.nativeEvent?.isComposing !== true\n              ) {\n                e.preventDefault();\n                sendMessage();\n              }\n              if (e.key === MessageInputKeys.Backspace\n                && ref?.current?.childNodes?.length === 2\n                && !ref?.current?.childNodes?.[0]?.textContent\n                && ref?.current.childNodes?.[1]?.nodeType === NodeTypes.ElementNode\n              ) {\n                ref?.current.removeChild(ref?.current.childNodes[1]);\n              }\n            }\n          }}\n          onKeyUp={(e) => {\n            const preventEvent = onKeyUp(e);\n            if (preventEvent) {\n              e.preventDefault();\n            } else {\n              useMentionInputDetection();\n            }\n          }}\n          onClick={() => {\n            useMentionInputDetection();\n          }}\n          onInput={() => {\n            setHeight();\n            onStartTyping();\n            setIsInput(textField?.textContent?.trim().length > 0);\n            useMentionedLabelDetection();\n          }}\n          onPaste={onPaste}\n        />\n        {/* placeholder */}\n        {textField?.innerText?.length === 0 && (\n          <Label\n            className=\"sendbird-message-input--placeholder\"\n            type={LabelTypography.BODY_1}\n            color={disabled ? LabelColors.ONBACKGROUND_4 : LabelColors.ONBACKGROUND_3}\n          >\n            {placeholder || stringSet.MESSAGE_INPUT__PLACE_HOLDER}\n          </Label>\n        )}\n        {/* send icon */}\n        {\n          (!isEdit && isInput) && (\n            <IconButton\n              className=\"sendbird-message-input--send\"\n              height=\"32px\"\n              width=\"32px\"\n              onClick={() => sendMessage()}\n            >\n              {\n                renderSendMessageIcon?.() || (\n                  <Icon\n                    type={IconTypes.SEND}\n                    fillColor={disabled ? IconColors.ON_BACKGROUND_4 : IconColors.PRIMARY}\n                    width=\"20px\"\n                    height=\"20px\"\n                  />\n                )\n              }\n            </IconButton>\n          )\n        }\n        {/* file upload icon */}\n        {\n          (!isEdit && !isInput) && (\n            (renderFileUploadIcon?.() || (\n              <IconButton\n                className={`sendbird-message-input--attach ${isVoiceMessageEnabled ? 'is-voice-message-enabled' : ''}`}\n                height=\"32px\"\n                width=\"32px\"\n                onClick={() => {\n                  // todo: clear previous input\n                  fileInputRef?.current?.click?.();\n                }}\n              >\n                <Icon\n                  type={IconTypes.ATTACH}\n                  fillColor={disabled ? IconColors.ON_BACKGROUND_4 : IconColors.CONTENT_INVERSE}\n                  width=\"20px\"\n                  height=\"20px\"\n                />\n                <input\n                  className=\"sendbird-message-input--attach-input\"\n                  type=\"file\"\n                  ref={fileInputRef}\n                  onChange={handleUploadFile(onFileUpload)}\n                />\n              </IconButton>\n            ))\n          )\n        }\n        {/* voice message input trigger */}\n        {(isVoiceMessageEnabled && !isEdit && !isInput) && (\n          <IconButton\n            className=\"sendbird-message-input--voice-message\"\n            width=\"32px\"\n            height=\"32px\"\n            onClick={onVoiceMessageIconClick}\n          >\n            {\n              renderVoiceMessageIcon?.() || (\n                <Icon\n                  type={IconTypes.AUDIO_ON_LINED}\n                  fillColor={disabled ? IconColors.ON_BACKGROUND_4 : IconColors.CONTENT_INVERSE}\n                  width=\"20px\"\n                  height=\"20px\"\n                />\n              )\n            }\n          </IconButton>\n        )}\n      </div>\n      {/* Edit */}\n      {\n        isEdit && (\n          <div className=\"sendbird-message-input--edit-action\">\n            <Button\n              className=\"sendbird-message-input--edit-action__cancel\"\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={onCancelEdit}\n            >\n              {stringSet.BUTTON__CANCEL}\n            </Button>\n            <Button\n              className=\"sendbird-message-input--edit-action__save\"\n              type={ButtonTypes.PRIMARY}\n              size={ButtonSizes.SMALL}\n              disabled={isEditDisabled}\n              onClick={() => editMessage()}\n            >\n              {stringSet.BUTTON__SAVE}\n            </Button>\n          </div>\n        )\n      }\n    </form>\n  );\n});\n\nMessageInput.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  messageFieldId: PropTypes.string,\n  placeholder: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.bool,\n  ]),\n  value: PropTypes.string,\n  isEdit: PropTypes.bool,\n  isMentionEnabled: PropTypes.bool,\n  isVoiceMessageEnabled: PropTypes.bool,\n  onVoiceMessageIconClick: PropTypes.func,\n  message: PropTypes.shape({\n    messageId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    message: PropTypes.string,\n    mentionedMessageTemplate: PropTypes.string,\n    mentionedUsers: PropTypes.arrayOf(PropTypes.shape({})),\n  }),\n  disabled: PropTypes.bool,\n  maxLength: PropTypes.number,\n  onFileUpload: PropTypes.func,\n  onSendMessage: PropTypes.func,\n  onUpdateMessage: PropTypes.func,\n  onStartTyping: PropTypes.func,\n  onCancelEdit: PropTypes.func,\n  channelUrl: PropTypes.string,\n  mentionSelectedUser: PropTypes.shape({\n    userId: PropTypes.string,\n    nickname: PropTypes.string,\n  }),\n  setMentionedUsers: PropTypes.func,\n  onUserMentioned: PropTypes.func,\n  onMentionStringChange: PropTypes.func,\n  onMentionedUserIdsUpdated: PropTypes.func,\n  onKeyUp: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  renderVoiceMessageIcon: PropTypes.func,\n  renderSendMessageIcon: PropTypes.func,\n  renderFileUploadIcon: PropTypes.func,\n  channel: PropTypes.shape({}),\n};\n\nMessageInput.defaultProps = {\n  className: '',\n  messageFieldId: '',\n  channelUrl: '',\n  onSendMessage: noop,\n  onUpdateMessage: noop,\n  value: null,\n  message: null,\n  isEdit: false,\n  isMentionEnabled: false,\n  isVoiceMessageEnabled: true,\n  onVoiceMessageIconClick: noop,\n  disabled: false,\n  placeholder: '',\n  maxLength: 5000,\n  onFileUpload: noop,\n  onCancelEdit: noop,\n  onStartTyping: noop,\n  mentionSelectedUser: null,\n  onUserMentioned: noop,\n  onMentionStringChange: noop,\n  onMentionedUserIdsUpdated: noop,\n  onKeyUp: noop,\n  onKeyDown: noop,\n  setMentionedUsers: noop,\n  renderVoiceMessageIcon: noop,\n  renderFileUploadIcon: noop,\n  renderSendMessageIcon: noop,\n  channel: {},\n};\n\nexport default MessageInput;\n"],"names":["renderToString","_ref","userId","nickname","el","MENTION_USER_LABEL_CLASSNAME","purifier","DOMPurify","window","sanitized_","sanitize","token","split","spanTag","rest","sanitized","join","sanitizeString","str","replace","i","concat","charCodeAt","nodeListToArray","childNodes","Array","from","error","inserTemplateToDOM","templateList","nodes","map","template","text","renderMentionLabelToString","document","execCommand","PASTE_NODE","TEXT_MESSAGE_CLASS","MENTION_CLASS","MENTION_CLASS_IN_INPUT","MENTION_CLASS_COMBINED_QUERY","querySelectorIncludingSelf","master","selector","result","querySelectorAll","find","matches","getLeafNodes","ogMessage","OG_MESSAGE_BODY_CLASSNAME","textMessageBody","TEXT_MESSAGE_BODY_CLASSNAME","createPasteNode","pasteNode","body","querySelector","remove","node","createElement","id","style","display","hasMention","parent","extractTextFromNodes","forEach","textNodes","length","innerText","domToMessageTemplate","nodeArray","templates","reduce","accumulator","currentValue","mentionNode","Text","textContent","HTMLElement","classList","contains","_mentionNode$dataset","dataset","userid","getUsersFromWords","channel","userMap","users","members","mentionedMember","user","Object","values","usePaste","ref","setIsInput","setHeight","setMentionedUsers","useCallback","e","preventDefault","html","clipboardData","getData","clean","innerHTML","children","leafNodes","words","mentionedUsers","TEXT_FIELD_ID","LINE_HEIGHT","noop","handleUploadFile","callback","event","target","files","value","displayCaret","element","position","range","createRange","sel","getSelection","setStart","collapse","removeAllRanges","addRange","focus","resetInput","current","_unused","initialTargetStringInfo","targetString","startNodeIndex","startOffsetIndex","endNodeIndex","endOffsetIndex","MessageInput","React","forwardRef","props","_ref$current","_ref$current$textCont","_textField$innerText","className","messageFieldId","isEdit","isMentionEnabled","isVoiceMessageEnabled","disabled","message","placeholder","maxLength","onFileUpload","onSendMessage","onUpdateMessage","onCancelEdit","onStartTyping","channelUrl","mentionSelectedUser","onUserMentioned","onMentionStringChange","onMentionedUserIdsUpdated","onVoiceMessageIconClick","onKeyUp","onKeyDown","renderFileUploadIcon","renderVoiceMessageIcon","renderSendMessageIcon","textFieldId","stringSet","useContext","LocalizationContext","fileInputRef","useRef","isInput","useState","mentionedUserIds","setMentionedUserIds","targetStringInfo","setTargetStringInfo","_objectSpread","useMemo","elem","MAX_HEIGHT","offsetHeight","scrollHeight","height","initialValue","useEffect","_textField$textConten","textField","_unused2","trim","messageId","_message$mentionedUse","_message$mentionedMes","_textField$textConten2","mentionedMessageTemplate","tokens","tokenizeMessage","messageText","type","TOKEN_TYPES","mention","mentionedUser","USER_MENTION_PREFIX","MENTION_NAME__NO_NAME","_unused3","useMentionedLabelDetection","_textField$textConten3","newMentionedUserIds","getElementsByClassName","_node$dataset","arrayEqual","_document","_childNodes$startNode","_document2","_childNodes$endNodeIn","frontTextNode","createTextNode","slice","backTextNode","mentionLabel","USER_MENTION_TEMP_CHAR","div","newNodes","newNode","appendChild","selection","Range","selectNodeContents","setEnd","useMentionInputDetection","_window","_window$getSelection","_document3","_document3$getSelecti","call","anchorNode","focusNode","anchorOffset","focusOffset","textStack","index","currentNode","nodeType","NodeTypes","TextNode","charLastIndex","lastIndexOf","sendMessage","mentionTemplate","ElementNode","nodeName","NodeNames","Span","Br","Div","params","isEditDisabled","editMessage","onPaste","getClassName","contentEditable","role","preventEvent","_textField$textConten4","_e$nativeEvent","_ref$current2","_ref$current2$childNo","_ref$current3","_ref$current3$childNo","_ref$current3$childNo2","_ref$current$childNod","_ref$current$childNod2","shiftKey","key","MessageInputKeys","Enter","nativeEvent","isComposing","Backspace","removeChild","onClick","onInput","_textField$textConten5","Label","LabelTypography","BODY_1","color","LabelColors","ONBACKGROUND_4","ONBACKGROUND_3","MESSAGE_INPUT__PLACE_HOLDER","IconButton","width","Icon","IconTypes","SEND","fillColor","IconColors","ON_BACKGROUND_4","PRIMARY","_fileInputRef$current","_fileInputRef$current2","click","ATTACH","CONTENT_INVERSE","onChange","AUDIO_ON_LINED","Button","ButtonTypes","SECONDARY","size","ButtonSizes","SMALL","BUTTON__CANCEL","BUTTON__SAVE","propTypes","PropTypes","oneOfType","string","arrayOf","bool","func","shape","number","defaultProps"],"mappings":"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"}