{"version":3,"file":"OpenchannelThumbnailMessage.js","sources":["../../../src/ui/OpenchannelThumbnailMessage/utils.ts","../../../src/ui/OpenchannelThumbnailMessage/index.tsx"],"sourcesContent":["export const SUPPORTING_TYPES = {\n  IMAGE: 'IMAGE',\n  VIDEO: 'VIDEO',\n  UNSUPPORTED: 'UNSUPPORTED',\n};\n\nconst SUPPORTED_MIMES = {\n  IMAGE: [\n    'image/jpeg',\n    'image/jpg',\n    'image/png',\n    'image/gif',\n    'image/webp',\n  ],\n  VIDEO: [\n    'video/mpeg',\n    'video/ogg',\n    'video/webm',\n    'video/mp4',\n  ],\n};\n\nexport const getSupportingFileType = (type: string): string => {\n  if (SUPPORTED_MIMES.IMAGE.indexOf(type) >= 0) {\n    return SUPPORTING_TYPES.IMAGE;\n  }\n  if (SUPPORTED_MIMES.VIDEO.indexOf(type) >= 0) {\n    return SUPPORTING_TYPES.VIDEO;\n  }\n  return SUPPORTING_TYPES.UNSUPPORTED;\n};\n","import React, {\n  useRef,\n  useMemo,\n  useState,\n  useEffect,\n  useContext,\n} from 'react';\nimport { FileMessage } from '@sendbird/chat/message';\nimport format from 'date-fns/format';\nimport './index.scss';\nimport { SUPPORTING_TYPES, getSupportingFileType } from './utils';\nimport { useLocalization } from '../../lib/LocalizationContext';\n\nimport Avatar from '../Avatar';\nimport ContextMenu, { MenuItems, MenuItem } from '../ContextMenu';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport ImageRenderer from '../ImageRenderer';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport Loader from '../Loader';\nimport UserProfile from '../UserProfile';\nimport { UserProfileContext } from '../../lib/UserProfileContext';\nimport {\n  checkIsSent,\n  checkIsPending,\n  checkIsFailed,\n  isFineResend,\n  isFineDelete,\n  showMenuTrigger,\n  getSenderFromMessage,\n} from '../../utils/openChannelUtils';\nimport { useMediaQueryContext } from '../../lib/MediaQueryContext';\nimport OpenChannelMobileMenu from '../OpenChannelMobileMenu';\nimport useLongPress from '../../hooks/useLongPress';\n\ninterface LocalUrl {\n  localUrl?: string;\n}\ninterface OpenChannelThumbnailMessageProps {\n  className?: string | Array<string>;\n  message: FileMessage;\n  isOperator?: boolean;\n  isEphemeral?: boolean;\n  disabled: boolean;\n  userId: string;\n  chainTop: boolean;\n  chainBottom: boolean;\n  onClick(bool: boolean): void,\n  showRemove(bool: boolean): void,\n  resendMessage(message: FileMessage): void;\n}\n\nexport default function OpenchannelThumbnailMessage({\n  className,\n  message,\n  isOperator,\n  isEphemeral = false,\n  disabled,\n  userId,\n  chainTop,\n  onClick,\n  showRemove,\n  resendMessage,\n}: OpenChannelThumbnailMessageProps): JSX.Element {\n  const {\n    type,\n    url,\n    thumbnails,\n    localUrl,\n  }: FileMessage & LocalUrl = message;\n  const status = message?.sendingStatus;\n  const thumbnailUrl = (thumbnails && thumbnails.length > 0 && thumbnails[0].url) || null;\n  const { stringSet, dateLocale } = useLocalization();\n  const { disableUserProfile, renderUserProfile } = useContext<UserProfileContext>(UserProfileContext);\n  const [messageWidth, setMessageWidth] = useState(360);\n  const [contextMenu, setContextMenu] = useState(false);\n  const messageRef = useRef<HTMLDivElement>(null);\n  const mobileMenuRef = useRef(null);\n  const contextMenuRef = useRef(null);\n  const avatarRef = useRef(null);\n  const onLongPress = useLongPress({\n    onLongPress: () => { setContextMenu(true); },\n    onClick: () => { onClick(true); },\n  });\n  const { isMobile } = useMediaQueryContext();\n\n  const memorizedThumbnailPlaceHolder = useMemo(() => (type) => ({ style }) => ( // eslint-disable-line\n    <div style={style}>\n      <Icon\n        type={type}\n        fillColor={IconColors.ON_BACKGROUND_2}\n        width=\"56px\"\n        height=\"56px\"\n      />\n    </div>\n  ), []);\n\n  const isMessageSent = checkIsSent(status);\n  const isPending = checkIsPending(status);\n  const isFailed = checkIsFailed(status);\n  const sender = getSenderFromMessage(message);\n\n  useEffect(() => {\n    const thumbnailWidth = (messageRef?.current?.clientWidth ?? 0) - 80;\n    setMessageWidth(thumbnailWidth > 360 ? 360 : thumbnailWidth);\n  }, []);\n\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-openchannel-thumbnail-message',\n      ].join(' ')}\n      ref={messageRef}\n    >\n      <div className=\"sendbird-openchannel-thumbnail-message__left\">\n        {\n          !chainTop && (\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                <Avatar\n                  className=\"sendbird-openchannel-thumbnail-message__left__avatar\"\n                  src={sender.profileUrl || ''}\n                  ref={avatarRef}\n                  width=\"28px\"\n                  height=\"28px\"\n                  onClick={() => {\n                    if (!disableUserProfile) {\n                      toggleDropdown();\n                    }\n                  }}\n                />\n              )}\n              menuItems={(closeDropdown) => (\n                <MenuItems\n                  parentRef={avatarRef}\n                  parentContainRef={avatarRef}\n                  closeDropdown={closeDropdown}\n                  style={{ paddingTop: '0px', paddingBottom: '0px' }}\n                >\n                  {\n                    renderUserProfile\n                      ? (\n                        renderUserProfile({\n                          user: sender,\n                          close: closeDropdown,\n                        })\n                      )\n                      : (\n                        <UserProfile\n                          user={sender}\n                          onSuccess={closeDropdown}\n                          disableMessaging\n                        />\n                      )\n                  }\n                </MenuItems>\n              )}\n            />\n          )\n        }\n      </div>\n      <div className=\"sendbird-openchannel-thumbnail-message__right\">\n        {\n          !chainTop && (\n            <div className=\"sendbird-openchannel-thumbnail-message__right__title\">\n              <Label\n                className=\"sendbird-openchannel-thumbnail-message__right__title__sender-name\"\n                type={LabelTypography.CAPTION_2}\n                color={isOperator ? LabelColors.SECONDARY_3 : LabelColors.ONBACKGROUND_2}\n              >\n                {\n                  sender && (\n                    sender.friendName\n                    || sender.nickname\n                    || sender.userId\n                  )\n                }\n              </Label>\n              <Label\n                className=\"sendbird-openchannel-thumbnail-message__right__title__sent-at\"\n                type={LabelTypography.CAPTION_3}\n                color={LabelColors.ONBACKGROUND_3}\n              >\n                {\n                  message?.createdAt && (\n                    format(message.createdAt, 'p', {\n                      locale: dateLocale,\n                    })\n                  )\n                }\n              </Label>\n            </div>\n          )\n        }\n        <div className=\"sendbird-openchannel-thumbnail-message__right__body\" ref={mobileMenuRef}>\n          <div\n            className=\"sendbird-openchannel-thumbnail-message__right__body__wrap\"\n            role=\"button\"\n            onClick={() => {\n              if (isMessageSent) {\n                onClick(true);\n              }\n            }}\n            onKeyDown={() => {\n              if (isMessageSent) {\n                onClick(true);\n              }\n            }}\n            tabIndex={0}\n            {...(isMobile ? { ...onLongPress } : {})}\n          >\n            <div className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__overlay\" />\n            {\n              {\n                [SUPPORTING_TYPES.VIDEO]: (\n                  (url || localUrl)\n                    ? (\n                      <div className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__video\" >\n                        {\n                          (thumbnailUrl)\n                            ? (\n                              <ImageRenderer\n                                className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__video\"\n                                url={thumbnailUrl}\n                                width={messageWidth}\n                                height=\"270px\"\n                                alt=\"image\"\n                                placeHolder={memorizedThumbnailPlaceHolder(IconTypes.PLAY)}\n                              />\n                            )\n                            : (\n                              <video className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__video__video\">\n                                <source src={url || localUrl} type={type} />\n                              </video>\n                            )\n                        }\n                        <Icon\n                          className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__video__icon\"\n                          type={IconTypes.PLAY}\n                          fillColor={IconColors.ON_BACKGROUND_2}\n                          width=\"56px\"\n                          height=\"56px\"\n                        />\n                      </div>\n                    )\n                    : (\n                      <Icon\n                        className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__video--icon\"\n                        type={IconTypes.PHOTO}\n                        fillColor={IconColors.ON_BACKGROUND_2}\n                        width=\"56px\"\n                        height=\"56px\"\n                      />\n                    )\n                ),\n                [SUPPORTING_TYPES.IMAGE]: (\n                  (url || localUrl)\n                    ? (\n                      <ImageRenderer\n                        className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__image\"\n                        url={thumbnailUrl || url || localUrl}\n                        alt=\"image\"\n                        width={messageWidth}\n                        height=\"270px\"\n                        placeHolder={memorizedThumbnailPlaceHolder(IconTypes.PHOTO)}\n                      />\n                    )\n                    : (\n                      <Icon\n                        className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__image--icon\"\n                        type={IconTypes.PHOTO}\n                        fillColor={IconColors.ON_BACKGROUND_2}\n                        width=\"56px\"\n                        height=\"56px\"\n                      />\n                    )\n                ),\n                [SUPPORTING_TYPES.UNSUPPORTED]: (\n                  <Icon\n                    className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__unknown\"\n                    type={IconTypes.PHOTO}\n                    fillColor={IconColors.ON_BACKGROUND_2}\n                    width=\"56px\"\n                    height=\"56px\"\n                  />\n                ),\n              }[getSupportingFileType(type)]\n            }\n          </div>\n        </div>\n        {\n          (isPending || isFailed) && (\n            <div className=\"sendbird-openchannel-thumbnail-message__right__tail\">\n              {\n                isPending && (\n                  <Loader\n                    width=\"16px\"\n                    height=\"16px\"\n                  >\n                    <Icon\n                      className=\"sendbird-openchannel-thumbnail-message__right__tail__pending\"\n                      type={IconTypes.SPINNER}\n                      fillColor={IconColors.PRIMARY}\n                      width=\"16px\"\n                      height=\"16px\"\n                    />\n                  </Loader>\n                )\n              }\n              {\n                isFailed && (\n                  <Icon\n                    className=\"sendbird-openchannel-thumbnail-message__right__tail__failed\"\n                    type={IconTypes.ERROR}\n                    fillColor={IconColors.ERROR}\n                    width=\"16px\"\n                    height=\"16px\"\n                  />\n                )\n              }\n            </div>\n          )\n        }\n      </div>\n      {\n        !isMobile && (\n          <div\n            className=\"sendbird-openchannel-thumbnail-message__context-menu\"\n            ref={contextMenuRef}\n          >\n            {\n              (isFineResend({ message, userId, status }) || !isEphemeral) && (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    showMenuTrigger({ message, userId, status }) && (\n                      <IconButton\n                        className=\"sendbird-openchannel-thumbnail-message__context-menu--icon\"\n                        width=\"32px\"\n                        height=\"32px\"\n                        onClick={toggleDropdown}\n                      >\n                        <Icon\n                          type={IconTypes.MORE}\n                          fillColor={IconColors.CONTENT_INVERSE}\n                          width=\"24px\"\n                          height=\"24px\"\n                        />\n                      </IconButton>\n                    )\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentRef={contextMenuRef}\n                      parentContainRef={contextMenuRef}\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      {\n                        isFineResend({ message, userId, status }) && (\n                          <MenuItem\n                            onClick={() => {\n                              resendMessage(message);\n                              closeDropdown();\n                            }}\n                            dataSbId=\"open_channel_thumbnail_message_menu_resend\"\n                          >\n                            {stringSet.CONTEXT_MENU_DROPDOWN__RESEND}\n                          </MenuItem>\n                        )\n                      }\n                      {\n                        (!isEphemeral && isFineDelete({ message, userId, status })) && (\n                          <MenuItem\n                            onClick={() => {\n                              if (disabled) {\n                                return;\n                              }\n                              showRemove(true);\n                              closeDropdown();\n                            }}\n                            dataSbId=\"open_channel_thumbnail_message_menu_delete\"\n                          >\n                            {stringSet.CONTEXT_MENU_DROPDOWN__DELETE}\n                          </MenuItem>\n                        )\n                      }\n                    </MenuItems>\n                  )}\n                />\n              )\n            }\n          </div>\n        )\n      }\n      {\n        contextMenu && (\n          <OpenChannelMobileMenu\n            message={message}\n            parentRef={mobileMenuRef}\n            hideMenu={() => {\n              setContextMenu(false);\n            }}\n            showRemove={() => {\n              setContextMenu(false);\n              showRemove(true);\n            }}\n            resendMessage={() => {\n              setContextMenu(false);\n              resendMessage(message);\n            }}\n          />\n        )\n      }\n    </div>\n  );\n}\n"],"names":["SUPPORTING_TYPES","IMAGE","VIDEO","UNSUPPORTED","SUPPORTED_MIMES","getSupportingFileType","type","indexOf","OpenchannelThumbnailMessage","_ref","className","message","isOperator","isEphemeral","disabled","userId","chainTop","onClick","showRemove","resendMessage","url","thumbnails","localUrl","status","sendingStatus","thumbnailUrl","length","stringSet","dateLocale","useLocalization","disableUserProfile","renderUserProfile","useContext","UserProfileContext","messageWidth","setMessageWidth","useState","contextMenu","setContextMenu","messageRef","useRef","mobileMenuRef","contextMenuRef","avatarRef","onLongPress","useLongPress","isMobile","useMediaQueryContext","memorizedThumbnailPlaceHolder","useMemo","_ref2","style","React","createElement","Icon","fillColor","IconColors","ON_BACKGROUND_2","width","height","isMessageSent","checkIsSent","isPending","checkIsPending","isFailed","checkIsFailed","sender","getSenderFromMessage","useEffect","_messageRef$current$c","_messageRef$current","thumbnailWidth","current","clientWidth","Array","isArray","join","ref","ContextMenu","menuTrigger","toggleDropdown","Avatar","src","profileUrl","menuItems","closeDropdown","MenuItems","parentRef","parentContainRef","paddingTop","paddingBottom","user","close","UserProfile","onSuccess","disableMessaging","Label","LabelTypography","CAPTION_2","color","LabelColors","SECONDARY_3","ONBACKGROUND_2","friendName","nickname","CAPTION_3","ONBACKGROUND_3","createdAt","format","locale","_extends","role","onKeyDown","tabIndex","_objectSpread","ImageRenderer","alt","placeHolder","IconTypes","PLAY","PHOTO","Loader","SPINNER","PRIMARY","ERROR","isFineResend","showMenuTrigger","IconButton","MORE","CONTENT_INVERSE","openLeft","MenuItem","dataSbId","CONTEXT_MENU_DROPDOWN__RESEND","isFineDelete","CONTEXT_MENU_DROPDOWN__DELETE","OpenChannelMobileMenu","hideMenu"],"mappings":"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"}