{"version":3,"file":"MessageContent.js","sources":["../../../src/ui/MessageContent/index.tsx"],"sourcesContent":["import React, {\n  ReactElement,\n  useContext,\n  useRef,\n  useState,\n} from 'react';\nimport format from 'date-fns/format';\nimport './index.scss';\n\nimport Avatar from '../Avatar';\nimport UserProfile from '../UserProfile';\nimport MessageStatus from '../MessageStatus';\nimport MessageItemMenu from '../MessageItemMenu';\nimport MessageItemReactionMenu from '../MessageItemReactionMenu';\nimport ContextMenu, { MenuItems } from '../ContextMenu';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport EmojiReactions from '../EmojiReactions';\n\nimport ClientAdminMessage from '../AdminMessage';\nimport TextMessageItemBody from '../TextMessageItemBody';\nimport FileMessageItemBody from '../FileMessageItemBody';\nimport ThumbnailMessageItemBody from '../ThumbnailMessageItemBody';\nimport OGMessageItemBody from '../OGMessageItemBody';\nimport UnknownMessageItemBody from '../UnknownMessageItemBody';\nimport QuoteMessage from '../QuoteMessage';\n\nimport {\n  getClassName,\n  getUIKitMessageTypes,\n  getUIKitMessageType,\n  isTextMessage,\n  isOGMessage,\n  isThumbnailMessage,\n  getSenderName,\n  isVoiceMessage,\n} from '../../utils';\nimport { UserProfileContext } from '../../lib/UserProfileContext';\nimport { ReplyType } from '../../index';\nimport { useLocalization } from '../../lib/LocalizationContext';\nimport useSendbirdStateContext from '../../hooks/useSendbirdStateContext';\nimport { GroupChannel } from '@sendbird/chat/groupChannel';\nimport { EmojiContainer } from '@sendbird/chat';\nimport { AdminMessage, FileMessage, Sender, UserMessage } from '@sendbird/chat/message';\nimport useLongPress from '../../hooks/useLongPress';\nimport MobileMenu from '../MobileMenu';\nimport { useMediaQueryContext } from '../../lib/MediaQueryContext';\nimport ThreadReplies from '../ThreadReplies';\nimport { ThreadReplySelectType } from '../../modules/Channel/context/const';\nimport VoiceMessageItemBody from '../VoiceMessageItemBody';\nimport { Nullable } from '../../types';\nimport { noop } from '../../utils/utils';\n\n// should initialize in UserProfileContext.jsx\nexport interface UserProfileContextInterface {\n  disableUserProfile: boolean;\n  isOpenChannel: boolean;\n  renderUserProfile?: (props: { user: Sender, close: () => void }) => React.ReactElement,\n}\n\ninterface Props {\n  className?: string | Array<string>;\n  userId: string;\n  channel: Nullable<GroupChannel>;\n  message: AdminMessage | UserMessage | FileMessage;\n  disabled?: boolean;\n  chainTop?: boolean;\n  chainBottom?: boolean;\n  isReactionEnabled?: boolean;\n  disableQuoteMessage?: boolean;\n  replyType?: ReplyType;\n  threadReplySelectType?: ThreadReplySelectType;\n  nicknamesMap?: Map<string, string>;\n  emojiContainer?: EmojiContainer;\n  scrollToMessage?: (createdAt: number, messageId: number) => void;\n  showEdit?: (bool: boolean) => void;\n  showRemove?: (bool: boolean) => void;\n  showFileViewer?: (bool: boolean) => void;\n  resendMessage?: (message: UserMessage | FileMessage) => Promise<UserMessage | FileMessage>;\n  toggleReaction?: (message: UserMessage | FileMessage, reactionKey: string, isReacted: boolean) => void;\n  setQuoteMessage?: (message: UserMessage | FileMessage) => void;\n  onReplyInThread?: (props: { message: UserMessage | FileMessage }) => void;\n  onQuoteMessageClick?: (props: { message: UserMessage | FileMessage }) => void;\n  onMessageHeightChange?: () => void;\n}\nexport default function MessageContent({\n  className,\n  userId,\n  channel,\n  message,\n  disabled = false,\n  chainTop = false,\n  chainBottom = false,\n  isReactionEnabled = false,\n  disableQuoteMessage = false,\n  replyType,\n  threadReplySelectType,\n  nicknamesMap,\n  emojiContainer,\n  scrollToMessage,\n  showEdit,\n  showRemove,\n  showFileViewer,\n  resendMessage,\n  toggleReaction,\n  setQuoteMessage,\n  onReplyInThread,\n  onQuoteMessageClick,\n  onMessageHeightChange,\n}: Props): ReactElement {\n  const messageTypes = getUIKitMessageTypes();\n  const { dateLocale } = useLocalization();\n  const { config } = useSendbirdStateContext?.() || {};\n  const { disableUserProfile, renderUserProfile }: UserProfileContextInterface = useContext(UserProfileContext);\n  const avatarRef = useRef(null);\n  const contentRef = useRef(null);\n  const { isMobile } = useMediaQueryContext();\n  const [showMenu, setShowMenu] = useState(false);\n  const [mouseHover, setMouseHover] = useState(false);\n  const [supposedHover, setSupposedHover] = useState(false);\n\n  const isByMe = (userId === (message as UserMessage | FileMessage)?.sender?.userId)\n    || ((message as UserMessage | FileMessage)?.sendingStatus === 'pending')\n    || ((message as UserMessage | FileMessage)?.sendingStatus === 'failed');\n  const isByMeClassName = isByMe ? 'outgoing' : 'incoming';\n  const chainTopClassName = chainTop ? 'chain-top' : '';\n  const isReactionEnabledInChannel = isReactionEnabled && !channel?.isEphemeral;\n  const isReactionEnabledClassName = isReactionEnabledInChannel ? 'use-reactions' : '';\n  const supposedHoverClassName = supposedHover ? 'sendbird-mouse-hover' : '';\n  const useReplying = !!((replyType === 'QUOTE_REPLY' || replyType === 'THREAD')\n    && message?.parentMessageId && message?.parentMessage\n    && !disableQuoteMessage\n  );\n  const useReplyingClassName = useReplying ? 'use-quote' : '';\n\n  // Thread replies\n  const displayThreadReplies = message?.threadInfo?.replyCount > 0 && replyType === 'THREAD';\n\n  // onMouseDown: (e: React.MouseEvent<T>) => void;\n  // onTouchStart: (e: React.TouchEvent<T>) => void;\n  // onMouseUp: (e: React.MouseEvent<T>) => void;\n  // onMouseLeave: (e: React.MouseEvent<T>) => void;\n  // onTouchEnd: (e: React.TouchEvent<T>) => void;\n  const longPress = useLongPress({\n    onLongPress: () => {\n      if (isMobile) {\n        setShowMenu(true);\n      }\n    },\n    onClick: noop,\n  }, {\n    delay: 300,\n    shouldPreventDefault: false,\n  });\n\n  if (message?.isAdminMessage?.() || message?.messageType === 'admin') {\n    return (<ClientAdminMessage message={message as AdminMessage} />);\n  }\n  return (\n    <div\n      className={getClassName([className, 'sendbird-message-content', isByMeClassName])}\n      onMouseOver={() => setMouseHover(true)}\n      onMouseLeave={() => setMouseHover(false)}\n    >\n      {/* left */}\n      <div className={getClassName(['sendbird-message-content__left', isReactionEnabledClassName, isByMeClassName, useReplyingClassName])}>\n        {(!isByMe && !chainBottom) && (\n          /** user profile */\n          <ContextMenu\n            menuTrigger={(toggleDropdown: () => void): ReactElement => (\n              <Avatar\n                className={`sendbird-message-content__left__avatar ${displayThreadReplies ? 'use-thread-replies' : ''}`}\n                // @ts-ignore\n                src={channel?.members?.find((member) => member?.userId === message?.sender?.userId)?.profileUrl || message?.sender?.profileUrl || ''}\n                // TODO: Divide getting profileUrl logic to utils\n                ref={avatarRef}\n                width=\"28px\"\n                height=\"28px\"\n                onClick={(): void => { if (!disableUserProfile) toggleDropdown(); }}\n              />\n            )}\n            menuItems={(closeDropdown: () => void): ReactElement => (\n              <MenuItems\n                /**\n                * parentRef: For catching location(x, y) of MenuItems\n                * parentContainRef: For toggling more options(menus & reactions)\n                */\n                parentRef={avatarRef}\n                parentContainRef={avatarRef}\n                closeDropdown={closeDropdown}\n                style={{ paddingTop: '0px', paddingBottom: '0px' }}\n              >\n                {renderUserProfile\n                  // @ts-ignore\n                  ? renderUserProfile({ user: message?.sender, close: closeDropdown })\n                  // @ts-ignore\n                  : (<UserProfile user={message.sender} onSuccess={closeDropdown} />)\n                }\n              </MenuItems>\n            )}\n          />\n        )}\n        {/* outgoing menu */}\n        {isByMe && !isMobile && (\n          <div className={getClassName(['sendbird-message-content-menu', isReactionEnabledClassName, supposedHoverClassName, isByMeClassName])}>\n            <MessageItemMenu\n              className=\"sendbird-message-content-menu__normal-menu\"\n              channel={channel}\n              message={message as UserMessage | FileMessage}\n              isByMe={isByMe}\n              replyType={replyType}\n              disabled={disabled}\n              showEdit={showEdit}\n              showRemove={showRemove}\n              resendMessage={resendMessage}\n              setQuoteMessage={setQuoteMessage}\n              setSupposedHover={setSupposedHover}\n              onReplyInThread={({ message }) => {\n                if (threadReplySelectType === ThreadReplySelectType.THREAD) {\n                  onReplyInThread({ message });\n                } else if (threadReplySelectType === ThreadReplySelectType.PARENT) {\n                  scrollToMessage(message.parentMessage.createdAt, message.parentMessageId);\n                }\n              }}\n            />\n            {isReactionEnabledInChannel && (\n              <MessageItemReactionMenu\n                className=\"sendbird-message-content-menu__reaction-menu\"\n                message={message as UserMessage | FileMessage}\n                userId={userId}\n                spaceFromTrigger={{}}\n                emojiContainer={emojiContainer}\n                toggleReaction={toggleReaction}\n                setSupposedHover={setSupposedHover}\n              />\n            )}\n          </div>\n        )}\n      </div>\n      {/* middle */}\n      <div\n        className=\"sendbird-message-content__middle\"\n        {...(isMobile ? { ...longPress } : {})}\n        ref={contentRef}\n      >\n        {(!isByMe && !chainTop && !useReplying) && (\n          <Label\n            className=\"sendbird-message-content__middle__sender-name\"\n            type={LabelTypography.CAPTION_2}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {\n              // @ts-ignore\n              channel?.members?.find((member) => member?.userId === message?.sender?.userId)?.nickname\n              || getSenderName(message as UserMessage | FileMessage)\n              // TODO: Divide getting profileUrl logic to utils\n            }\n          </Label>\n        )}\n        {/* quote message */}\n        {(useReplying) ? (\n          <div className={getClassName(['sendbird-message-content__middle__quote-message', isByMe ? 'outgoing' : 'incoming', useReplyingClassName])}>\n            <QuoteMessage\n              className=\"sendbird-message-content__middle__quote-message__quote\"\n              message={message as UserMessage | FileMessage}\n              userId={userId}\n              isByMe={isByMe}\n              isUnavailable={(replyType === 'THREAD' && (channel?.joinedAt ?? 0 * 1000) > (message.parentMessage?.createdAt ?? 0))}\n              onClick={() => {\n                if (replyType === 'THREAD' && threadReplySelectType === ThreadReplySelectType.THREAD) {\n                  onQuoteMessageClick?.({ message: message as UserMessage | FileMessage });\n                }\n                if (\n                  (replyType === 'QUOTE_REPLY' || (replyType === 'THREAD' && threadReplySelectType === ThreadReplySelectType.PARENT))\n                  && message?.parentMessage?.createdAt && message?.parentMessageId\n                ) {\n                  scrollToMessage(message.parentMessage.createdAt, message.parentMessageId);\n                }\n              }}\n            />\n          </div>\n        ) : null}\n        {/* container: message item body + emoji reactions */}\n        <div className={getClassName(['sendbird-message-content__middle__body-container'])} >\n          {/* message status component */}\n          {(isByMe && !chainBottom) && (\n            <div className={getClassName(['sendbird-message-content__middle__body-container__created-at', 'left', supposedHoverClassName])}>\n              <div className=\"sendbird-message-content__middle__body-container__created-at__component-container\">\n                <MessageStatus\n                  message={message as UserMessage | FileMessage}\n                  channel={channel}\n                />\n              </div>\n            </div>\n          )}\n          {/* message item body components */}\n          {isTextMessage(message as UserMessage) && (\n            <TextMessageItemBody\n              className=\"sendbird-message-content__middle__message-item-body\"\n              message={message as UserMessage}\n              isByMe={isByMe}\n              mouseHover={mouseHover}\n              isMentionEnabled={config?.isMentionEnabled || false}\n              isReactionEnabled={isReactionEnabledInChannel}\n            />\n          )}\n          {(isOGMessage(message as UserMessage)) && (\n            <OGMessageItemBody\n              className=\"sendbird-message-content__middle__message-item-body\"\n              message={message as UserMessage}\n              isByMe={isByMe}\n              mouseHover={mouseHover}\n              isMentionEnabled={config?.isMentionEnabled || false}\n              isReactionEnabled={isReactionEnabledInChannel}\n              onMessageHeightChange={onMessageHeightChange}\n            />\n          )}\n          {(getUIKitMessageType((message as FileMessage)) === messageTypes.FILE) && (\n            <FileMessageItemBody\n              className=\"sendbird-message-content__middle__message-item-body\"\n              message={message as FileMessage}\n              isByMe={isByMe}\n              mouseHover={mouseHover}\n              isReactionEnabled={isReactionEnabledInChannel}\n            />\n          )}\n          {isVoiceMessage(message as FileMessage) && (\n            <VoiceMessageItemBody\n              className=\"sendbird-message-content__middle__message-item-body\"\n              message={message as FileMessage}\n              channelUrl={channel?.url ?? ''}\n              isByMe={isByMe}\n              isReactionEnabled={isReactionEnabledInChannel}\n            />\n          )}\n          {(isThumbnailMessage(message as FileMessage)) && (\n            <ThumbnailMessageItemBody\n              className=\"sendbird-message-content__middle__message-item-body\"\n              message={message as FileMessage}\n              isByMe={isByMe}\n              mouseHover={mouseHover}\n              isReactionEnabled={isReactionEnabledInChannel}\n              showFileViewer={showFileViewer}\n              style={isMobile ? { width: '100%' } : {}}\n            />\n          )}\n          {(getUIKitMessageType((message as FileMessage)) === messageTypes.UNKNOWN) && (\n            <UnknownMessageItemBody\n              className=\"sendbird-message-content__middle__message-item-body\"\n              message={message}\n              isByMe={isByMe}\n              mouseHover={mouseHover}\n              isReactionEnabled={isReactionEnabledInChannel}\n            />\n          )}\n          {/* reactions */}\n          {(isReactionEnabledInChannel && message?.reactions?.length > 0) && (\n            <div className={getClassName([\n              'sendbird-message-content-reactions',\n              (!isByMe || isThumbnailMessage(message as FileMessage) || isOGMessage(message as UserMessage)) ? '' : 'primary',\n              mouseHover ? 'mouse-hover' : '',\n            ])}>\n              <EmojiReactions\n                userId={userId}\n                message={message as UserMessage | FileMessage}\n                channel={channel}\n                isByMe={isByMe}\n                emojiContainer={emojiContainer}\n                memberNicknamesMap={nicknamesMap}\n                toggleReaction={toggleReaction}\n              />\n            </div>\n          )}\n          {(!isByMe && !chainBottom) && (\n            <Label\n              className={getClassName(['sendbird-message-content__middle__body-container__created-at', 'right', supposedHoverClassName])}\n              type={LabelTypography.CAPTION_3}\n              color={LabelColors.ONBACKGROUND_2}\n            >\n              {format(message?.createdAt || 0, 'p', {\n                locale: dateLocale,\n              })}\n            </Label>\n          )}\n        </div>\n        {/* thread replies */}\n        {displayThreadReplies && (\n          <ThreadReplies\n            className=\"sendbird-message-content__middle__thread-replies\"\n            threadInfo={message?.threadInfo}\n            onClick={() => onReplyInThread?.({ message: message as UserMessage | FileMessage })}\n          />\n        )}\n      </div>\n      {/* right */}\n      <div className={getClassName(['sendbird-message-content__right', chainTopClassName, isReactionEnabledClassName, useReplyingClassName])}>\n        {/* incoming menu */}\n        {!isByMe && !isMobile && (\n          <div className={getClassName(['sendbird-message-content-menu', chainTopClassName, supposedHoverClassName, isByMeClassName])}>\n            {isReactionEnabledInChannel && (\n              <MessageItemReactionMenu\n                className=\"sendbird-message-content-menu__reaction-menu\"\n                message={message as UserMessage | FileMessage}\n                userId={userId}\n                spaceFromTrigger={{}}\n                emojiContainer={emojiContainer}\n                toggleReaction={toggleReaction}\n                setSupposedHover={setSupposedHover}\n              />\n            )}\n            <MessageItemMenu\n              className=\"sendbird-message-content-menu__normal-menu\"\n              channel={channel}\n              message={message as UserMessage | FileMessage}\n              isByMe={isByMe}\n              replyType={replyType}\n              disabled={disabled}\n              showRemove={showRemove}\n              resendMessage={resendMessage}\n              setQuoteMessage={setQuoteMessage}\n              setSupposedHover={setSupposedHover}\n              onReplyInThread={({ message }) => {\n                if (threadReplySelectType === ThreadReplySelectType.THREAD) {\n                  onReplyInThread({ message });\n                } else if (threadReplySelectType === ThreadReplySelectType.PARENT) {\n                  scrollToMessage(message.parentMessage.createdAt, message.parentMessageId);\n                }\n              }}\n            />\n          </div>\n        )}\n      </div>\n      {\n        showMenu && (\n          message?.isUserMessage?.() || message?.isFileMessage?.()\n        ) && (\n          <MobileMenu\n            parentRef={contentRef}\n            channel={channel}\n            hideMenu={() => { setShowMenu(false); }}\n            message={message}\n            isReactionEnabled={isReactionEnabledInChannel}\n            isByMe={isByMe}\n            userId={userId}\n            replyType={replyType}\n            disabled={disabled}\n            showRemove={showRemove}\n            emojiContainer={emojiContainer}\n            resendMessage={resendMessage}\n            setQuoteMessage={setQuoteMessage}\n            toggleReaction={toggleReaction}\n            showEdit={showEdit}\n            onReplyInThread={({ message }) => {\n              if (threadReplySelectType === ThreadReplySelectType.THREAD) {\n                onReplyInThread?.({ message });\n              } else if (threadReplySelectType === ThreadReplySelectType.PARENT) {\n                scrollToMessage?.(message?.parentMessage?.createdAt || 0, message?.parentMessageId || 0);\n              }\n            }}\n          />\n        )\n      }\n    </div>\n  );\n}\n"],"names":["MessageContent","_ref","_sender","_message$threadInfo","_message$isAdminMessa","_channel$members2","_channel$members2$fin","_channel$joinedAt","_message$parentMessag","_message$parentMessag2","_channel$url","_message$reactions","_message$isUserMessag","_message$isFileMessag","className","userId","channel","message","disabled","chainTop","chainBottom","isReactionEnabled","disableQuoteMessage","replyType","threadReplySelectType","nicknamesMap","emojiContainer","scrollToMessage","showEdit","showRemove","showFileViewer","resendMessage","toggleReaction","setQuoteMessage","onReplyInThread","onQuoteMessageClick","onMessageHeightChange","messageTypes","getUIKitMessageTypes","dateLocale","useLocalization","config","useSendbirdStateContext","disableUserProfile","renderUserProfile","useContext","UserProfileContext","avatarRef","useRef","contentRef","isMobile","useMediaQueryContext","showMenu","setShowMenu","useState","mouseHover","setMouseHover","supposedHover","setSupposedHover","isByMe","sender","sendingStatus","isByMeClassName","chainTopClassName","isReactionEnabledInChannel","isEphemeral","isReactionEnabledClassName","supposedHoverClassName","useReplying","parentMessageId","parentMessage","useReplyingClassName","displayThreadReplies","threadInfo","replyCount","longPress","useLongPress","onLongPress","onClick","noop","delay","shouldPreventDefault","isAdminMessage","call","messageType","React","createElement","ClientAdminMessage","getClassName","onMouseOver","onMouseLeave","ContextMenu","menuTrigger","toggleDropdown","_channel$members","_channel$members$find","_message$sender2","Avatar","src","members","find","member","_message$sender","profileUrl","ref","width","height","menuItems","closeDropdown","MenuItems","parentRef","parentContainRef","style","paddingTop","paddingBottom","user","close","UserProfile","onSuccess","MessageItemMenu","_ref2","ThreadReplySelectType","THREAD","PARENT","createdAt","MessageItemReactionMenu","spaceFromTrigger","_extends","_objectSpread","Label","type","LabelTypography","CAPTION_2","color","LabelColors","ONBACKGROUND_2","_message$sender3","nickname","getSenderName","QuoteMessage","isUnavailable","joinedAt","_message$parentMessag3","MessageStatus","isTextMessage","TextMessageItemBody","isMentionEnabled","isOGMessage","OGMessageItemBody","getUIKitMessageType","FILE","FileMessageItemBody","isVoiceMessage","VoiceMessageItemBody","channelUrl","url","isThumbnailMessage","ThumbnailMessageItemBody","UNKNOWN","UnknownMessageItemBody","reactions","length","EmojiReactions","memberNicknamesMap","CAPTION_3","format","locale","ThreadReplies","_ref3","isUserMessage","isFileMessage","MobileMenu","hideMenu","_ref4","_message$parentMessag4"],"mappings":"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"}